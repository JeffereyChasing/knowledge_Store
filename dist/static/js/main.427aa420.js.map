{"version":3,"file":"static/js/main.427aa420.js","mappings":"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AY,CAEhB,CACE7e,GAAI,EACJqB,MAAO,aACP2G,YAAa,yBACbnL,SAAU,OACViU,IAAK,oBACLgO,KAAM,MAER,CACE9e,GAAI,EACJqB,MAAO,YACP2G,YAAa,oBACbnL,SAAU,OACViU,IAAK,oBACLgO,KAAM,MAER,CACE9e,GAAI,EACJqB,MAAO,aACP2G,YAAa,iBACbnL,SAAU,OACViU,IAAK,qBACLgO,KAAM,OAER,CACE9e,GAAI,EACJqB,MAAO,YACP2G,YAAa,eACbnL,SAAU,OACViU,IAAK,qBACLgO,KAAM,KAER,CACE9e,GAAI,EACJqB,MAAO,aACP2G,YAAa,4BACbnL,SAAU,OACViU,IAAK,sBACLgO,KAAM,MAER,CACE9e,GAAI,EACJqB,MAAO,aACP2G,YAAa,aACbnL,SAAU,OACViU,IAAK,qBACLgO,KAAM,MAER,CACE9e,GAAI,EACJqB,MAAO,aACP2G,YAAa,cACbnL,SAAU,OACViU,IAAK,qBACLgO,KAAM,MAIR,CACE9e,GAAI,EACJqB,MAAO,WACP2G,YAAa,oBACbnL,SAAU,SACViU,IAAK,uBACLgO,KAAM,MAER,CACE9e,GAAI,EACJqB,MAAO,aACP2G,YAAa,iBACbnL,SAAU,SACViU,IAAK,oCACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,UACP2G,YAAa,cACbnL,SAAU,SACViU,IAAK,sBACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,UACP2G,YAAa,gBACbnL,SAAU,SACViU,IAAK,yBACLgO,KAAM,MAIR,CACE9e,GAAI,GACJqB,MAAO,kBACP2G,YAAa,eACbnL,SAAU,SACViU,IAAK,0BACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,eACP2G,YAAa,WACbnL,SAAU,SACViU,IAAK,2BACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,UACP2G,YAAa,eACbnL,SAAU,SACViU,IAAK,wBACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,UACP2G,YAAa,WACbnL,SAAU,SACViU,IAAK,qBACLgO,KAAM,KAER,CACE9e,GAAI,GACJqB,MAAO,oBACP2G,YAAa,gBACbnL,SAAU,SACViU,IAAK,gCACLgO,KAAM,MAIR,CACE9e,GAAI,GACJqB,MAAO,aACP2G,YAAa,SACbnL,SAAU,SACViU,IAAK,yBACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,UACP2G,YAAa,YACbnL,SAAU,SACViU,IAAK,qBACLgO,KAAM,KAER,CACE9e,GAAI,GACJqB,MAAO,YACP2G,YAAa,UACbnL,SAAU,SACViU,IAAK,uBACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,YACP2G,YAAa,mBACbnL,SAAU,SACViU,IAAK,uBACLgO,KAAM,MAIR,CACE9e,GAAI,GACJqB,MAAO,UACP2G,YAAa,kBACbnL,SAAU,OACViU,IAAK,oBACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,aACP2G,YAAa,UACbnL,SAAU,OACViU,IAAK,0BACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,kBACP2G,YAAa,YACbnL,SAAU,OACViU,IAAK,8BACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,YACP2G,YAAa,gBACbnL,SAAU,OACViU,IAAK,qBACLgO,KAAM,KAIR,CACE9e,GAAI,GACJqB,MAAO,gBACP2G,YAAa,mBACbnL,SAAU,OACViU,IAAK,wBACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,SACP2G,YAAa,iBACbnL,SAAU,OACViU,IAAK,oBACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,YACP2G,YAAa,oBACbnL,SAAU,OACViU,IAAK,qBACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,aACP2G,YAAa,iBACbnL,SAAU,OACViU,IAAK,qBACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,UACP2G,YAAa,iBACbnL,SAAU,OACViU,IAAK,mBACLgO,KAAM,MAIR,CACE9e,GAAI,GACJqB,MAAO,YACP2G,YAAa,gBACbnL,SAAU,OACViU,IAAK,iCACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,WACP2G,YAAa,aACbnL,SAAU,OACViU,IAAK,oCACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,aACP2G,YAAa,uBACbnL,SAAU,OACViU,IAAK,+BACLgO,KAAM,KAIR,CACE9e,GAAI,GACJqB,MAAO,YACP2G,YAAa,YACbnL,SAAU,OACViU,IAAK,yBACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,iBACP2G,YAAa,iBACbnL,SAAU,OACViU,IAAK,yCACLgO,KAAM,MAIR,CACE9e,GAAI,GACJqB,MAAO,aACP2G,YAAa,eACbnL,SAAU,OACViU,IAAK,2BACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,mBACP2G,YAAa,gBACbnL,SAAU,OACViU,IAAK,0BACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,kBACP2G,YAAa,cACbnL,SAAU,OACViU,IAAK,yCACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,SACP2G,YAAa,eACbnL,SAAU,OACViU,IAAK,wBACLgO,KAAM,MAIR,CACE9e,GAAI,GACJqB,MAAO,WACP2G,YAAa,gBACbnL,SAAU,MACViU,IAAK,4BACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,gBACP2G,YAAa,mBACbnL,SAAU,MACViU,IAAK,kCACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,aACP2G,YAAa,sBACbnL,SAAU,MACViU,IAAK,2BACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,WACP2G,YAAa,iBACbnL,SAAU,MACViU,IAAK,iCACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,YACP2G,YAAa,6BACbnL,SAAU,MACViU,IAAK,wBACLgO,KAAM,OAER,CACE9e,GAAI,GACJqB,MAAO,eACP2G,YAAa,gBACbnL,SAAU,MACViU,IAAK,wBACLgO,KAAM,OAER,CACE9e,GAAI,GACJqB,MAAO,cACP2G,YAAa,iBACbnL,SAAU,MACViU,IAAK,yBACLgO,KAAM,MAIR,CACE9e,GAAI,GACJqB,MAAO,aACP2G,YAAa,WACbnL,SAAU,WACViU,IAAK,sBACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,YACP2G,YAAa,aACbnL,SAAU,WACViU,IAAK,gCACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,aACP2G,YAAa,cACbnL,SAAU,WACViU,IAAK,qBACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,UACP2G,YAAa,aACbnL,SAAU,WACViU,IAAK,kBACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,iBACP2G,YAAa,gBACbnL,SAAU,WACViU,IAAK,yBACLgO,KAAM,MAIR,CACE9e,GAAI,GACJqB,MAAO,SACP2G,YAAa,uBACbnL,SAAU,QACViU,IAAK,iBACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,eACP2G,YAAa,iBACbnL,SAAU,QACViU,IAAK,sBACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,iBACP2G,YAAa,gBACbnL,SAAU,QACViU,IAAK,4BACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,WACP2G,YAAa,YACbnL,SAAU,QACViU,IAAK,yBACLgO,KAAM,MAIR,CACE9e,GAAI,GACJqB,MAAO,YACP2G,YAAa,UACbnL,SAAU,aACViU,IAAK,0BACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,gBACP2G,YAAa,WACbnL,SAAU,aACViU,IAAK,6BACLgO,KAAM,KAER,CACE9e,GAAI,GACJqB,MAAO,SACP2G,YAAa,gBACbnL,SAAU,aACViU,IAAK,4BACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,WACP2G,YAAa,eACbnL,SAAU,aACViU,IAAK,4BACLgO,KAAM,MAIR,CACE9e,GAAI,GACJqB,MAAO,gBACP2G,YAAa,kBACbnL,SAAU,OACViU,IAAK,iCACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,iBACP2G,YAAa,oBACbnL,SAAU,OACViU,IAAK,2CACLgO,KAAM,MAER,CACE9e,GAAI,GACJqB,MAAO,cACP2G,YAAa,kBACbnL,SAAU,OACViU,IAAK,0BA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","sources":["webpack://bagu/./src/services/dialogflowService.js","webpack://bagu/./src/components/Chatbox.jsx","webpack://bagu/./src/services/offlineService.js","webpack://bagu/./src/services/categoryService.js","webpack://bagu/./src/services/cacheService.js","webpack://bagu/./src/services/questionService.js","webpack://bagu/./src/components/OfflineIndicator.jsx","webpack://bagu/./src/components/CacheManagementTab.jsx","webpack://bagu/./src/components/ReviewReminderSection.jsx","webpack://bagu/./src/components/CalendarTooltip.jsx","webpack://bagu/./src/components/Documents.jsx","webpack://bagu/./src/services/communityService.js","webpack://bagu/./src/components/community/CreatePostModal.jsx","webpack://bagu/./src/components/community/SearchBar.jsx","webpack://bagu/./src/components/community/TagCloud.jsx","webpack://bagu/./src/components/community/CommunityStats.jsx","webpack://bagu/./src/components/community/CommentItem.jsx","webpack://bagu/./src/components/community/CommentSection.jsx","webpack://bagu/./src/components/community/PostCard.jsx","webpack://bagu/./src/components/community/CommunityPage.jsx","webpack://bagu/./src/pages/HomePage.jsx","webpack://bagu/./src/services/initClasses.js","webpack://bagu/./src/components/InitPage.jsx","webpack://bagu/./src/components/QuestionForm.jsx","webpack://bagu/./src/components/QuestionDetailCard.jsx","webpack://bagu/./src/pages/CategoryDetailPage.jsx","webpack://bagu/./src/services/userService.js","webpack://bagu/./src/components/UserTestPanel.jsx","webpack://bagu/./src/services/dataMigrationService.js","webpack://bagu/./src/components/DataMigrationPanel.jsx","webpack://bagu/./src/pages/TestPage.jsx","webpack://bagu/./src/components/Navigation.jsx","webpack://bagu/./src/components/AuthModal.jsx","webpack://bagu/./src/components/UserSettingsModal.jsx","webpack://bagu/./src/pages/ReviewPage.jsx","webpack://bagu/./src/components/PWAInstallPrompt.jsx","webpack://bagu/./src/pages/OfflineQuestionsPage.jsx","webpack://bagu/./src/App.js","webpack://bagu/./src/index.js"],"sourcesContent":["// services/dialogflowService.js\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\n// 环境变量配置\r\nconst PROJECT_ID = process.env.REACT_APP_DIALOGFLOW_PROJECT_ID;\r\nconst CLIENT_EMAIL = process.env.REACT_APP_DIALOGFLOW_CLIENT_EMAIL;\r\nconst PRIVATE_KEY = process.env.REACT_APP_DIALOGFLOW_PRIVATE_KEY?.replace(/\\\\n/g, '\\n');\r\n\r\n/**\r\n * 生成 JWT Token\r\n */\r\nconst generateJWT = async () => {\r\n  const header = {\r\n    alg: 'RS256',\r\n    typ: 'JWT'\r\n  };\r\n\r\n  const now = Math.floor(Date.now() / 1000);\r\n  const payload = {\r\n    iss: CLIENT_EMAIL,\r\n    scope: 'https://www.googleapis.com/auth/cloud-platform',\r\n    aud: 'https://oauth2.googleapis.com/token',\r\n    exp: now + 3600,\r\n    iat: now\r\n  };\r\n\r\n  // 编码 header 和 payload\r\n  const encodedHeader = btoa(JSON.stringify(header)).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\r\n  const encodedPayload = btoa(JSON.stringify(payload)).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\r\n  \r\n  const signatureInput = `${encodedHeader}.${encodedPayload}`;\r\n  \r\n  // 使用 Web Crypto API 进行签名\r\n  const privateKey = await crypto.subtle.importKey(\r\n    'pkcs8',\r\n    str2ab(atob(PRIVATE_KEY.replace('-----BEGIN PRIVATE KEY-----', '').replace('-----END PRIVATE KEY-----', '').replace(/\\n/g, ''))),\r\n    {\r\n      name: 'RSASSA-PKCS1-v1_5',\r\n      hash: { name: 'SHA-256' }\r\n    },\r\n    false,\r\n    ['sign']\r\n  );\r\n\r\n  const signature = await crypto.subtle.sign(\r\n    'RSASSA-PKCS1-v1_5',\r\n    privateKey,\r\n    new TextEncoder().encode(signatureInput)\r\n  );\r\n\r\n  const encodedSignature = btoa(String.fromCharCode(...new Uint8Array(signature)))\r\n    .replace(/=/g, '')\r\n    .replace(/\\+/g, '-')\r\n    .replace(/\\//g, '_');\r\n\r\n  return `${signatureInput}.${encodedSignature}`;\r\n};\r\n\r\n/**\r\n * 获取访问令牌\r\n */\r\nconst getAccessToken = async () => {\r\n  try {\r\n    const jwt = await generateJWT();\r\n    \r\n    const response = await fetch('https://oauth2.googleapis.com/token', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: `grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer&assertion=${jwt}`\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Token request failed: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.access_token;\r\n  } catch (error) {\r\n    console.error('获取访问令牌失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 从响应中提取动作 - 增强版\r\n */\r\nconst extractActions = (queryResult) => {\r\n  const actions = [];\r\n  const parameters = queryResult.parameters || {};\r\n  \r\n  console.log('🔍 extractActions 被调用:', {\r\n    intent: queryResult.intent?.displayName,\r\n    parameters: parameters\r\n  });\r\n\r\n  // 根据意图类型返回不同的动作\r\n  switch (queryResult.intent?.displayName) {\r\n    case 'CategoryView':\r\n      console.log('🎯 识别到 CategoryView 意图，参数:', parameters);\r\n      // 如果有具体的分类参数，提供查看该分类的按钮\r\n      if (parameters.category) {\r\n        const categoryName = parameters.category;\r\n        console.log(`📂 找到分类参数: ${categoryName}`);\r\n        actions.push({\r\n          type: 'triggerCategory',\r\n          target: 'viewSpecificCategory',\r\n          label: `查看 ${categoryName} 题目`,\r\n          buttonId: `category-${categoryName.toLowerCase().replace(/\\s+/g, '-')}`,\r\n          categoryName: categoryName\r\n        });\r\n      } else {\r\n        // 没有具体分类，显示查看所有分类\r\n        console.log('📚 没有具体分类，显示所有分类');\r\n        actions.push({\r\n          type: 'triggerButton',\r\n          target: 'viewCategoriesBtn',\r\n          label: '📚 查看所有分类',\r\n          buttonId: 'categories-button'\r\n        });\r\n      }\r\n      break;\r\n      \r\n    case 'SearchQuestions':\r\n      actions.push({\r\n        type: 'function',\r\n        target: 'searchQuestions',\r\n        label: '🔍 开始搜索'\r\n      });\r\n      break;\r\n      \r\n    case 'StartReview':\r\n      actions.push({\r\n        type: 'triggerButton', \r\n        target: 'startReviewBtn',\r\n        label: '🔄 开始复习',\r\n        buttonId: 'review-button'\r\n      });\r\n      break;\r\n      \r\n    case 'ViewStatistics':\r\n      actions.push({\r\n        type: 'triggerButton',\r\n        target: 'viewStatsBtn', \r\n        label: '📊 学习统计',\r\n        buttonId: 'stats-button'\r\n      });\r\n      break;\r\n      \r\n    case 'CreateCategory':\r\n      actions.push({\r\n        type: 'triggerButton',\r\n        target: 'createCategoryBtn',\r\n        label: '➕ 创建分类',\r\n        buttonId: 'create-category-button'\r\n      });\r\n      break;\r\n      \r\n    default:\r\n      console.log('🔍 默认情况，参数:', parameters);\r\n      // 如果参数中有分类信息，也提供查看按钮\r\n      if (parameters.category) {\r\n        const categoryName = parameters.category;\r\n        console.log(`📂 默认情况找到分类: ${categoryName}`);\r\n        actions.push({\r\n          type: 'triggerCategory',\r\n          target: 'viewSpecificCategory',\r\n          label: `查看 ${categoryName} 题目`,\r\n          buttonId: `category-${categoryName.toLowerCase().replace(/\\s+/g, '-')}`,\r\n          categoryName: categoryName\r\n        });\r\n      }\r\n      \r\n      // 默认提供常用按钮\r\n      actions.push(\r\n        {\r\n          type: 'triggerButton',\r\n          target: 'viewCategoriesBtn',\r\n          label: '📚 查看分类',\r\n          buttonId: 'categories-button'\r\n        },\r\n        {\r\n          type: 'triggerButton', \r\n          target: 'startReviewBtn',\r\n          label: '🔄 开始复习',\r\n          buttonId: 'review-button'\r\n        }\r\n      );\r\n  }\r\n  \r\n  console.log('🎯 最终生成的动作:', actions);\r\n  return actions;\r\n};\r\n\r\n/**\r\n * 基础 detectIntent 方法\r\n */\r\nexport const detectIntent = async (text, sessionId = 'react-client-session') => {\r\n  if (!text.trim()) {\r\n    throw new Error('Query text cannot be empty');\r\n  }\r\n\r\n  try {\r\n    const accessToken = await getAccessToken();\r\n    const sessionPath = `projects/${PROJECT_ID}/agent/sessions/${sessionId}`;\r\n\r\n    const request = {\r\n      queryInput: {\r\n        text: {\r\n          text: text,\r\n          languageCode: 'zh-CN',\r\n        },\r\n      },\r\n    };\r\n\r\n    const API_URL = `https://dialogflow.googleapis.com/v2/${sessionPath}:detectIntent`;\r\n    const response = await fetch(API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n      },\r\n      body: JSON.stringify(request),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorDetails = await response.text();\r\n      throw new Error(`Dialogflow API request failed: ${response.status} ${response.statusText}. ${errorDetails}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    \r\n    return {\r\n      text: data.queryResult.fulfillmentText || '抱歉，我没有理解您的意思。',\r\n      actions: extractActions(data.queryResult),\r\n      quickReplies: ['查看分类', '搜索题目', '开始复习', '学习统计']\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('Dialogflow 请求失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 增强的 detectIntent 方法，返回更多上下文信息\r\n */\r\nexport const detectIntentWithActions = async (text, sessionId = 'react-client-session') => {\r\n  try {\r\n    const accessToken = await getAccessToken();\r\n    const sessionPath = `projects/${PROJECT_ID}/agent/sessions/${sessionId}`;\r\n\r\n    const request = {\r\n      queryInput: {\r\n        text: {\r\n          text: text,\r\n          languageCode: 'zh-CN',\r\n        },\r\n      },\r\n    };\r\n\r\n    const API_URL = `https://dialogflow.googleapis.com/v2/${sessionPath}:detectIntent`;\r\n    const response = await fetch(API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n      },\r\n      body: JSON.stringify(request),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Dialogflow API request failed: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    \r\n    // 调试信息\r\n    console.log('🔍 Dialogflow 完整响应:', data);\r\n    console.log('📝 Dialogflow Response 详情:', {\r\n      intent: data.queryResult.intent?.displayName,\r\n      parameters: data.queryResult.parameters,\r\n      text: data.queryResult.fulfillmentText,\r\n      hasFulfillmentText: !!data.queryResult.fulfillmentText\r\n    });\r\n    \r\n    // 生成响应文本\r\n    let responseText = data.queryResult.fulfillmentText;\r\n    if (!responseText) {\r\n      // 如果没有响应文本，根据意图生成默认文本\r\n      const parameters = data.queryResult.parameters || {};\r\n      if (data.queryResult.intent?.displayName === 'CategoryView' && parameters.category) {\r\n        responseText = `正在为您打开 ${parameters.category} 分类...`;\r\n      } else {\r\n        responseText = '请问您需要什么帮助？';\r\n      }\r\n    }\r\n    \r\n    const result = {\r\n      text: responseText,\r\n      actions: extractActions(data.queryResult),\r\n      quickReplies: ['查看分类', '搜索题目', '开始复习', '学习统计'],\r\n      parameters: data.queryResult.parameters || {},\r\n      intent: data.queryResult.intent?.displayName\r\n    };\r\n\r\n    console.log('🚀 最终返回的结果:', result);\r\n    return result;\r\n\r\n  } catch (error) {\r\n    console.error('Dialogflow 请求失败:', error);\r\n    // 返回降级响应\r\n    return {\r\n      text: '网络连接出现问题，但我仍然可以帮您：',\r\n      actions: [\r\n        {\r\n          type: 'triggerButton',\r\n          target: 'viewCategoriesBtn',\r\n          label: '📚 查看分类',\r\n          buttonId: 'categories-button'\r\n        },\r\n        {\r\n          type: 'triggerButton', \r\n          target: 'startReviewBtn',\r\n          label: '🔄 开始复习',\r\n          buttonId: 'review-button'\r\n        }\r\n      ],\r\n      quickReplies: ['查看分类', '开始复习', '学习统计'],\r\n      parameters: {},\r\n      intent: 'Fallback'\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 发送欢迎消息\r\n */\r\nexport const sendWelcome = async (userId) => {\r\n  try {\r\n    const response = await detectIntentWithActions('你好', `user-${userId || 'anonymous'}`);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Welcome message failed, using fallback:', error);\r\n    return {\r\n      text: `👋 你好！我是你的学习助手，我可以帮你：\\n\\n• 导航到不同功能页面\\n• 查找分类和题目\\n• 管理复习计划\\n• 查看学习统计\\n\\n请问需要什么帮助？`,\r\n      quickReplies: ['查看所有分类', '需要复习的题目', '学习统计', '创建新分类'],\r\n      actions: [\r\n        {\r\n          type: 'triggerButton',\r\n          target: 'viewCategoriesBtn',\r\n          label: '📚 查看分类',\r\n          buttonId: 'categories-button'\r\n        }\r\n      ],\r\n      parameters: {},\r\n      intent: 'WelcomeFallback'\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 字符串转 ArrayBuffer\r\n */\r\nconst str2ab = (str) => {\r\n  const buf = new ArrayBuffer(str.length);\r\n  const bufView = new Uint8Array(buf);\r\n  for (let i = 0; i < str.length; i++) {\r\n    bufView[i] = str.charCodeAt(i);\r\n  }\r\n  return buf;\r\n};\r\n\r\n// 默认导出所有方法\r\nconst DialogflowService = {\r\n  detectIntent,\r\n  detectIntentWithActions,\r\n  sendWelcome\r\n};\r\n\r\nexport default DialogflowService;","// components/Chatbox.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport DialogflowService from '../services/dialogflowService';\r\nimport './Chatbox.css';\r\n\r\nconst Chatbox = ({ onNavigate, onTriggerCategory, categories, questions, currentUser }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // 初始欢迎消息\r\n  useEffect(() => {\r\n    if (isOpen && messages.length === 0) {\r\n      sendWelcomeMessage();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const sendWelcomeMessage = async () => {\r\n    setIsTyping(true);\r\n    \r\n    try {\r\n      // 使用正确的 DialogflowService 方法\r\n      const response = await DialogflowService.sendWelcome(currentUser?.id);\r\n      \r\n      const welcomeMessage = {\r\n        id: Date.now(),\r\n        text: response.text,\r\n        isBot: true,\r\n        timestamp: new Date(),\r\n        quickReplies: response.quickReplies || [\r\n          '查看所有分类',\r\n          '需要复习的题目',\r\n          '学习统计',\r\n          '创建新分类'\r\n        ],\r\n        actions: response.actions || []\r\n      };\r\n\r\n      setMessages([welcomeMessage]);\r\n    } catch (error) {\r\n      console.error('Welcome message error:', error);\r\n      // 回退到本地欢迎消息\r\n      const fallbackMessage = {\r\n        id: 1,\r\n        text: `👋 你好${currentUser ? ` ${currentUser.getUsername()}` : ''}！我是你的学习助手，我可以帮你：\\n\\n• 导航到不同功能页面\\n• 查找分类和题目\\n• 管理复习计划\\n• 查看学习统计\\n\\n请问需要什么帮助？`,\r\n        isBot: true,\r\n        timestamp: new Date(),\r\n        quickReplies: [\r\n          '查看所有分类',\r\n          '需要复习的题目',\r\n          '学习统计',\r\n          '创建新分类'\r\n        ],\r\n        actions: [\r\n          {\r\n            type: 'triggerButton',\r\n            target: 'viewCategoriesBtn',\r\n            label: '📚 查看分类',\r\n            buttonId: 'categories-button'\r\n          }\r\n        ]\r\n      };\r\n      setMessages([fallbackMessage]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // 使用新的代理服务器处理消息\r\n  const processMessage = async (userMessage) => {\r\n    setIsTyping(true);\r\n    \r\n    try {\r\n      // 使用增强版的 detectIntent\r\n      const response = await DialogflowService.detectIntentWithActions(userMessage, currentUser?.id);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Message processing error:', error);\r\n      return {\r\n        text: '网络错误，请稍后重试。',\r\n        quickReplies: ['查看分类', '搜索题目', '开始复习', '学习统计'],\r\n        actions: [\r\n          {\r\n            type: 'triggerButton',\r\n            target: 'viewCategoriesBtn',\r\n            label: '📚 查看分类',\r\n            buttonId: 'categories-button'\r\n          }\r\n        ],\r\n        parameters: {},\r\n        intent: 'Fallback'\r\n      };\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputText.trim()) return;\r\n\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      text: inputText,\r\n      isBot: false,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputText('');\r\n\r\n    // 处理消息并获取回复\r\n    const botResponse = await processMessage(inputText);\r\n    \r\n    const botMessage = {\r\n      id: Date.now() + 1,\r\n      text: botResponse.text,\r\n      isBot: true,\r\n      timestamp: new Date(),\r\n      actions: botResponse.actions,\r\n      quickReplies: botResponse.quickReplies\r\n    };\r\n\r\n    setMessages(prev => [...prev, botMessage]);\r\n  };\r\n\r\n  const handleQuickReply = (text) => {\r\n    setInputText(text);\r\n    setTimeout(() => {\r\n      handleSendMessage();\r\n    }, 100);\r\n  };\r\n\r\n  // 在 Chatbox.jsx 的 handleActionClick 函数中添加调试\r\n\r\nconst handleActionClick = (action) => {\r\n  console.log('🖱️ 动作被点击:', action);\r\n  \r\n  if (action.type === 'navigate' && onNavigate) {\r\n    console.log(`📍 导航到: ${action.target}`);\r\n    onNavigate(action.target);\r\n    \r\n    const confirmMessage = {\r\n      id: Date.now(),\r\n      text: `✅ 正在为你跳转到 ${action.label}...`,\r\n      isBot: true,\r\n      timestamp: new Date()\r\n    };\r\n    setMessages(prev => [...prev, confirmMessage]);\r\n    \r\n  } else if (action.type === 'triggerButton' && onNavigate) {\r\n    console.log(`🔘 触发按钮: ${action.buttonId}`);\r\n    onNavigate(action.target);\r\n    \r\n    const confirmMessage = {\r\n      id: Date.now(),\r\n      text: `✅ 正在为你打开 ${action.label}...`,\r\n      isBot: true,\r\n      timestamp: new Date()\r\n    };\r\n    setMessages(prev => [...prev, confirmMessage]);\r\n    \r\n  } else if (action.type === 'triggerCategory' && onTriggerCategory) {\r\n    console.log(`📂 触发分类: ${action.categoryName}`);\r\n    onTriggerCategory(action.categoryName, action.buttonId);\r\n    \r\n    const confirmMessage = {\r\n      id: Date.now(),\r\n      text: `✅ 正在为你打开 ${action.categoryName} 分类...`,\r\n      isBot: true,\r\n      timestamp: new Date()\r\n    };\r\n    setMessages(prev => [...prev, confirmMessage]);\r\n    \r\n  } else if (action.type === 'function') {\r\n    console.log(`⚙️ 执行功能: ${action.target}`);\r\n    handleFunctionAction(action);\r\n  } else {\r\n    console.warn('❌ 未知的动作类型或缺少处理器:', action);\r\n  }\r\n};\r\n\r\n  const handleFunctionAction = (action) => {\r\n    switch (action.target) {\r\n      case 'searchQuestions':\r\n        // 触发搜索功能\r\n        const searchMessage = {\r\n          id: Date.now(),\r\n          text: '请告诉我你想搜索题目的关键词：',\r\n          isBot: true,\r\n          timestamp: new Date()\r\n        };\r\n        setMessages(prev => [...prev, searchMessage]);\r\n        break;\r\n      default:\r\n        console.log('Function action:', action);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  // 清除对话历史\r\n  const clearConversation = () => {\r\n    setMessages([]);\r\n    sendWelcomeMessage();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* 悬浮按钮 */}\r\n      {!isOpen && (\r\n        <button \r\n          className=\"chatbox-floating-btn\"\r\n          onClick={() => setIsOpen(true)}\r\n          title=\"AI学习助手\"\r\n        >\r\n          <span className=\"chatbot-icon\">🤖</span>\r\n          <span className=\"pulse-dot\"></span>\r\n        </button>\r\n      )}\r\n\r\n      {/* 聊天窗口 */}\r\n      {isOpen && (\r\n        <div className=\"chatbox-container\">\r\n          <div className=\"chatbox-header\">\r\n            <div className=\"chatbox-title\">\r\n              <span className=\"bot-avatar\">🤖</span>\r\n              <div className=\"title-text\">\r\n                <h4>AI学习助手</h4>\r\n                <span className=\"status\">AI在线</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"header-actions\">\r\n              <button \r\n                className=\"clear-btn\"\r\n                onClick={clearConversation}\r\n                title=\"清除对话\"\r\n              >\r\n                🗑️\r\n              </button>\r\n              <button \r\n                className=\"close-btn\"\r\n                onClick={() => setIsOpen(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chatbox-messages\">\r\n            {messages.map((message) => (\r\n              <div\r\n                key={message.id}\r\n                className={`message ${message.isBot ? 'bot-message' : 'user-message'}`}\r\n              >\r\n                <div className=\"message-content\">\r\n                  <div className=\"message-text\">\r\n                    {message.text.split('\\n').map((line, i) => (\r\n                      <span key={i}>\r\n                        {line}\r\n                        <br />\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"message-time\">\r\n                    {message.timestamp.toLocaleTimeString('zh-CN', { \r\n                      hour: '2-digit', \r\n                      minute: '2-digit' \r\n                    })}\r\n                  </div>\r\n                  \r\n                  {/* 快速回复按钮 */}\r\n                  {message.quickReplies && (\r\n                    <div className=\"quick-replies\">\r\n                      {message.quickReplies.map((reply, index) => (\r\n                        <button\r\n                          key={index}\r\n                          className=\"quick-reply-btn\"\r\n                          onClick={() => handleQuickReply(reply)}\r\n                        >\r\n                          {reply}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {/* 操作按钮 */}\r\n                  {message.actions && (\r\n                    <div className=\"action-buttons\">\r\n                      {message.actions.map((action, index) => (\r\n                        <button\r\n                          key={index}\r\n                          className=\"action-btn\"\r\n                          onClick={() => handleActionClick(action)}\r\n                        >\r\n                          {action.label}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            \r\n            {isTyping && (\r\n              <div className=\"message bot-message\">\r\n                <div className=\"message-content\">\r\n                  <div className=\"typing-indicator\">\r\n                    <span>AI正在思考</span>\r\n                    <div className=\"typing-dots\">\r\n                      <span></span>\r\n                      <span></span>\r\n                      <span></span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n\r\n          <div className=\"chatbox-input\">\r\n            <div className=\"input-container\">\r\n              <textarea\r\n                value={inputText}\r\n                onChange={(e) => setInputText(e.target.value)}\r\n                onKeyPress={handleKeyPress}\r\n                placeholder=\"向AI助手提问...\"\r\n                rows=\"1\"\r\n                className=\"message-input\"\r\n              />\r\n              <button \r\n                onClick={handleSendMessage}\r\n                disabled={!inputText.trim() || isTyping}\r\n                className=\"send-btn\"\r\n              >\r\n                {isTyping ? '⏳' : '📤'}\r\n              </button>\r\n            </div>\r\n            <div className=\"input-hint\">\r\n              按 Enter 发送，Shift + Enter 换行\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatbox;","// services/offlineService.js\r\nexport class OfflineService {\r\n  constructor() {\r\n    this.isOnline = true;\r\n    this.setupOnlineListeners();\r\n  }\r\n\r\n  // 设置网络状态监听\r\n  setupOnlineListeners() {\r\n    if (typeof window === 'undefined') return;\r\n\r\n    window.addEventListener('online', () => {\r\n      console.log('🌐 网络已连接');\r\n      this.isOnline = true;\r\n      this.dispatchEvent('online');\r\n    });\r\n\r\n    window.addEventListener('offline', () => {\r\n      console.log('📶 网络已断开');\r\n      this.isOnline = false;\r\n      this.dispatchEvent('offline');\r\n    });\r\n\r\n    // 初始状态\r\n    this.isOnline = navigator.onLine;\r\n  }\r\n\r\n  // 检查网络状态\r\n  isOnlineMode() {\r\n    return this.isOnline;\r\n  }\r\n\r\n  // 检查是否应该使用离线数据\r\n  shouldUseOfflineData() {\r\n    // 如果明确是离线模式，或者网络不可用\r\n    return !this.isOnline;\r\n  }\r\n\r\n  // 模拟网络请求 - 在离线模式下返回假数据\r\n  simulateNetworkRequest() {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.shouldUseOfflineData()) {\r\n        reject(new Error('网络不可用，当前处于离线模式'));\r\n      } else {\r\n        resolve();\r\n      }\r\n    });\r\n  }\r\n\r\n  // 事件分发\r\n  dispatchEvent(eventName, data) {\r\n    if (typeof window !== 'undefined') {\r\n      window.dispatchEvent(new CustomEvent(`offline:${eventName}`, { detail: data }));\r\n    }\r\n  }\r\n\r\n  // 添加事件监听\r\n  addEventListener(eventName, callback) {\r\n    if (typeof window !== 'undefined') {\r\n      window.addEventListener(`offline:${eventName}`, callback);\r\n    }\r\n  }\r\n\r\n  // 移除事件监听\r\n  removeEventListener(eventName, callback) {\r\n    if (typeof window !== 'undefined') {\r\n      window.removeEventListener(`offline:${eventName}`, callback);\r\n    }\r\n  }\r\n}\r\n\r\nexport const offlineService = new OfflineService();","// services/categoryService.js\r\nimport AV from 'leancloud-storage';\r\nimport { offlineService } from './offlineService';\r\n\r\n// 初始化\r\nexport const initAV = () => {\r\n  // 在离线模式下不初始化 LeanCloud\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：跳过 LeanCloud 初始化');\r\n    return;\r\n  }\r\n  \r\n  AV.init({\r\n    appId: process.env.REACT_APP_LC_APP_ID,\r\n    appKey: process.env.REACT_APP_LC_APP_KEY,\r\n    serverURL: process.env.REACT_APP_LC_SERVER_URL\r\n  });\r\n};\r\n\r\n/**\r\n * 查询选项\r\n */\r\nexport const QueryOptions = {\r\n  SORT_BY_NAME: 'name',\r\n  SORT_BY_QUESTION_COUNT: 'questionCount',\r\n  SORT_BY_UPDATED_AT: 'updatedAt'\r\n};\r\n\r\n// 缓存配置\r\nconst cacheConfig = {\r\n  // 分类列表缓存（5分钟）\r\n  categories: {\r\n    data: null,\r\n    timestamp: 0,\r\n    ttl: 5 * 60 * 1000\r\n  },\r\n  // 分类详情缓存（3分钟）\r\n  categoryDetails: new Map(),\r\n  categoryDetailTtl: 3 * 60 * 1000,\r\n  // 题目数量统计缓存（2分钟）\r\n  questionCounts: new Map(),\r\n  questionCountTtl: 2 * 60 * 1000\r\n};\r\n\r\n// 离线数据存储键\r\nconst OFFLINE_CATEGORIES_KEY = 'offline_categories';\r\n\r\n/**\r\n * 清除所有缓存\r\n */\r\nexport const clearCategoryCache = () => {\r\n  cacheConfig.categories.data = null;\r\n  cacheConfig.categories.timestamp = 0;\r\n  cacheConfig.categoryDetails.clear();\r\n  cacheConfig.questionCounts.clear();\r\n};\r\n\r\n/**\r\n * 清除特定分类的缓存\r\n */\r\nexport const clearCategoryCacheById = (categoryId) => {\r\n  if (categoryId) {\r\n    cacheConfig.categoryDetails.delete(categoryId);\r\n    cacheConfig.questionCounts.delete(categoryId);\r\n  }\r\n  // 同时清除分类列表缓存\r\n  cacheConfig.categories.data = null;\r\n  cacheConfig.categories.timestamp = 0;\r\n};\r\n\r\n/**\r\n * 检查缓存是否有效\r\n */\r\nconst isCacheValid = (timestamp, ttl) => {\r\n  return timestamp && (Date.now() - timestamp < ttl);\r\n};\r\n\r\n/**\r\n * 获取离线分类数据\r\n */\r\nconst getOfflineCategories = () => {\r\n  try {\r\n    const cached = localStorage.getItem(OFFLINE_CATEGORIES_KEY);\r\n    if (cached) {\r\n      const data = JSON.parse(cached);\r\n      console.log('📦 从离线存储加载分类数据:', data.data.length, '个分类');\r\n      return data;\r\n    }\r\n    \r\n    // 如果没有离线数据，返回空数据\r\n    return {\r\n      data: [],\r\n      total: 0,\r\n      page: 1,\r\n      pageSize: 50\r\n    };\r\n  } catch (error) {\r\n    console.error('获取离线分类数据失败:', error);\r\n    return {\r\n      data: [],\r\n      total: 0,\r\n      page: 1,\r\n      pageSize: 50\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 保存分类数据到离线存储\r\n */\r\nconst saveCategoriesToOffline = (categories) => {\r\n  try {\r\n    const data = {\r\n      data: categories,\r\n      total: categories.length,\r\n      page: 1,\r\n      pageSize: 50,\r\n      timestamp: Date.now()\r\n    };\r\n    localStorage.setItem(OFFLINE_CATEGORIES_KEY, JSON.stringify(data));\r\n  } catch (error) {\r\n    console.error('保存分类数据到离线存储失败:', error);\r\n  }\r\n};\r\n\r\n/**\r\n * 批量获取分类题目数量（修复版本）\r\n */\r\nconst getCategoriesQuestionCounts = async (categories) => {\r\n  // 离线模式下返回空计数\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：跳过题目数量统计');\r\n    const counts = {};\r\n    categories.forEach(cat => {\r\n      counts[cat.id] = 0;\r\n    });\r\n    return counts;\r\n  }\r\n\r\n  try {\r\n    const categoryIds = categories.map(cat => cat.id);\r\n    const questionCounts = {};\r\n    const now = Date.now();\r\n    \r\n    // 初始化所有分类的计数为0\r\n    categoryIds.forEach(categoryId => {\r\n      questionCounts[categoryId] = 0;\r\n    });\r\n    \r\n    // 检查缓存中已有的数据\r\n    const uncachedCategoryIds = [];\r\n    \r\n    categoryIds.forEach(categoryId => {\r\n      const cached = cacheConfig.questionCounts.get(categoryId);\r\n      if (cached && isCacheValid(cached.timestamp, cacheConfig.questionCountTtl)) {\r\n        questionCounts[categoryId] = cached.count;\r\n      } else {\r\n        uncachedCategoryIds.push(categoryId);\r\n      }\r\n    });\r\n    \r\n    // 如果有未缓存的分类，批量查询\r\n    if (uncachedCategoryIds.length > 0) {\r\n      try {\r\n        // 方法1: 分别查询每个分类的题目数量（更准确）\r\n        const countPromises = uncachedCategoryIds.map(async (categoryId) => {\r\n          try {\r\n            const categoryPointer = AV.Object.createWithoutData('Category', categoryId);\r\n            const questionQuery = new AV.Query('Question');\r\n            questionQuery.equalTo('category', categoryPointer);\r\n            const count = await questionQuery.count();\r\n            return { categoryId, count };\r\n          } catch (error) {\r\n            console.warn(`获取分类 ${categoryId} 题目数量失败:`, error);\r\n            return { categoryId, count: 0 };\r\n          }\r\n        });\r\n        \r\n        const countResults = await Promise.all(countPromises);\r\n        \r\n        // 更新计数\r\n        countResults.forEach(({ categoryId, count }) => {\r\n          questionCounts[categoryId] = count;\r\n        });\r\n        \r\n        // 更新缓存\r\n        countResults.forEach(({ categoryId, count }) => {\r\n          cacheConfig.questionCounts.set(categoryId, {\r\n            count,\r\n            timestamp: now\r\n          });\r\n        });\r\n        \r\n      } catch (batchError) {\r\n        console.warn('批量获取题目数量失败，尝试备用方案:', batchError);\r\n        \r\n        // 备用方案：使用 containedIn 查询\r\n        try {\r\n          const categoryPointers = uncachedCategoryIds.map(id => \r\n            AV.Object.createWithoutData('Category', id)\r\n          );\r\n          \r\n          const questionQuery = new AV.Query('Question');\r\n          questionQuery.containedIn('category', categoryPointers);\r\n          questionQuery.select(['category']);\r\n          \r\n          const questions = await questionQuery.find();\r\n          \r\n          // 统计题目数量\r\n          questions.forEach(question => {\r\n            const category = question.get('category');\r\n            if (category) {\r\n              const categoryId = category.id;\r\n              questionCounts[categoryId] = (questionCounts[categoryId] || 0) + 1;\r\n            }\r\n          });\r\n          \r\n          // 更新缓存\r\n          uncachedCategoryIds.forEach(categoryId => {\r\n            const count = questionCounts[categoryId] || 0;\r\n            cacheConfig.questionCounts.set(categoryId, {\r\n              count,\r\n              timestamp: now\r\n            });\r\n          });\r\n        } catch (fallbackError) {\r\n          console.warn('备用方案也失败:', fallbackError);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return questionCounts;\r\n  } catch (error) {\r\n    console.warn('批量获取题目数量失败:', error);\r\n    return {};\r\n  }\r\n};\r\n\r\n/**\r\n * 获取所有类别（不分页）- 带缓存\r\n */\r\nexport const getAllCategories = async () => {\r\n  // 离线模式处理\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从本地存储获取分类数据');\r\n    const offlineData = getOfflineCategories();\r\n    return offlineData.data || [];\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    // 检查缓存\r\n    const now = Date.now();\r\n    if (cacheConfig.categories.data && \r\n        isCacheValid(cacheConfig.categories.timestamp, cacheConfig.categories.ttl)) {\r\n      return cacheConfig.categories.data;\r\n    }\r\n\r\n    const query = new AV.Query('Category');\r\n    query.equalTo('createdBy', currentUser);\r\n    query.include('createdBy');\r\n    query.descending('updatedAt');\r\n    \r\n    const categories = await query.find();\r\n    \r\n    // 批量获取题目数量\r\n    const questionCounts = await getCategoriesQuestionCounts(categories);\r\n    \r\n    const result = categories.map(category => ({\r\n      id: category.id,\r\n      name: category.get('name'),\r\n      description: category.get('description'),\r\n      questionCount: questionCounts[category.id] !== undefined \r\n        ? questionCounts[category.id] \r\n        : category.get('questionCount') || 0,\r\n      createdAt: category.get('createdAt'),\r\n      updatedAt: category.get('updatedAt'),\r\n      createdBy: category.get('createdBy')\r\n    }));\r\n\r\n    // 更新缓存和离线存储\r\n    cacheConfig.categories.data = result;\r\n    cacheConfig.categories.timestamp = now;\r\n    saveCategoriesToOffline(result);\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取所有分类失败:', error);\r\n    \r\n    // 网络请求失败时，尝试使用离线数据\r\n    if (error.message.includes('offline') || error.message.includes('network') || error.message.includes('CORS')) {\r\n      console.log('🌐 网络请求失败，尝试使用离线数据');\r\n      const offlineData = getOfflineCategories();\r\n      return offlineData.data || [];\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 分页获取类别列表 - 带缓存\r\n */\r\nexport const getCategories = async (options = {}) => {\r\n  // 离线模式处理\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从本地存储获取分类数据');\r\n    return getOfflineCategories();\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    // 检查缓存（仅对默认查询使用缓存）\r\n    const isDefaultQuery = !options.page && !options.pageSize && \r\n                          (!options.sortBy || options.sortBy === QueryOptions.SORT_BY_UPDATED_AT);\r\n    \r\n    const now = Date.now();\r\n    if (isDefaultQuery && cacheConfig.categories.data && \r\n        isCacheValid(cacheConfig.categories.timestamp, cacheConfig.categories.ttl)) {\r\n      return {\r\n        data: cacheConfig.categories.data,\r\n        total: cacheConfig.categories.data.length,\r\n        page: 1,\r\n        pageSize: cacheConfig.categories.data.length\r\n      };\r\n    }\r\n\r\n    const query = new AV.Query('Category');\r\n    query.equalTo('createdBy', currentUser);\r\n    \r\n    // 设置排序\r\n    if (options.sortBy === QueryOptions.SORT_BY_UPDATED_AT) {\r\n      query.descending('updatedAt');\r\n    } else if (options.sortBy === QueryOptions.SORT_BY_CREATED_AT) {\r\n      query.descending('createdAt');\r\n    } else {\r\n      query.descending('updatedAt');\r\n    }\r\n\r\n    // 设置分页\r\n    if (options.page && options.pageSize) {\r\n      const skip = (options.page - 1) * options.pageSize;\r\n      query.limit(options.pageSize);\r\n      query.skip(skip);\r\n    }\r\n\r\n    const categories = await query.find();\r\n    \r\n    // 批量获取题目数量\r\n    const questionCounts = await getCategoriesQuestionCounts(categories);\r\n\r\n    const categoriesWithCount = categories.map((category) => ({\r\n      id: category.id,\r\n      name: category.get('name'),\r\n      description: category.get('description'),\r\n      questionCount: questionCounts[category.id] !== undefined \r\n        ? questionCounts[category.id] \r\n        : category.get('questionCount') || 0,\r\n      createdAt: category.get('createdAt'),\r\n      updatedAt: category.get('updatedAt'),\r\n      createdBy: category.get('createdBy')\r\n    }));\r\n\r\n    const result = {\r\n      data: categoriesWithCount,\r\n      total: categoriesWithCount.length,\r\n      page: options.page || 1,\r\n      pageSize: options.pageSize || categoriesWithCount.length\r\n    };\r\n\r\n    // 如果是默认查询，更新缓存和离线存储\r\n    if (isDefaultQuery) {\r\n      cacheConfig.categories.data = categoriesWithCount;\r\n      cacheConfig.categories.timestamp = now;\r\n      saveCategoriesToOffline(categoriesWithCount);\r\n    }\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取分类失败:', error);\r\n    \r\n    // 网络请求失败时，尝试使用离线数据\r\n    if (error.message.includes('offline') || error.message.includes('network') || error.message.includes('CORS')) {\r\n      console.log('🌐 网络请求失败，尝试使用离线数据');\r\n      return getOfflineCategories();\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 根据ID获取单个类别详情 - 带缓存\r\n */\r\nexport const getCategoryById = async (categoryId) => {\r\n  // 离线模式下返回空数据\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法获取单个分类详情');\r\n    throw new Error('离线模式下无法获取分类详情');\r\n  }\r\n\r\n  try {\r\n    // 检查缓存\r\n    const cached = cacheConfig.categoryDetails.get(categoryId);\r\n    const now = Date.now();\r\n    if (cached && isCacheValid(cached.timestamp, cacheConfig.categoryDetailTtl)) {\r\n      return cached.data;\r\n    }\r\n\r\n    const query = new AV.Query('Category');\r\n    const category = await query.get(categoryId);\r\n    \r\n    if (!category) {\r\n      throw new Error('未找到该类别');\r\n    }\r\n    \r\n    // 获取准确的题目数量\r\n    let questionCount = category.get('questionCount') || 0;\r\n    try {\r\n      const questionQuery = new AV.Query('Question');\r\n      questionQuery.equalTo('category', category);\r\n      questionCount = await questionQuery.count();\r\n    } catch (countError) {\r\n      console.warn('获取题目数量失败，使用缓存值:', countError);\r\n    }\r\n    \r\n    const result = {\r\n      id: category.id,\r\n      name: category.get('name'),\r\n      questionCount,\r\n      updatedAt: category.updatedAt,\r\n      createdAt: category.createdAt\r\n    };\r\n\r\n    // 更新缓存\r\n    cacheConfig.categoryDetails.set(categoryId, {\r\n      data: result,\r\n      timestamp: now\r\n    });\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取类别详情失败:', error);\r\n    throw new Error(`获取详情失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取分类及其题目列表 - 带缓存\r\n */\r\nexport const getCategoryWithQuestions = async (categoryId) => {\r\n  // 离线模式下返回空数据\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法获取分类题目列表');\r\n    throw new Error('离线模式下无法获取分类题目列表');\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    // 获取分类\r\n    const categoryQuery = new AV.Query('Category');\r\n    const category = await categoryQuery.get(categoryId);\r\n    \r\n    // 验证分类是否属于当前用户\r\n    const categoryCreator = category.get('createdBy');\r\n    if (categoryCreator.id !== currentUser.id) {\r\n      throw new Error('无权访问此分类');\r\n    }\r\n\r\n    // 获取该分类下的题目\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    questionQuery.equalTo('createdBy', currentUser);\r\n    questionQuery.include('category');\r\n    questionQuery.descending('updatedAt');\r\n    \r\n    const questions = await questionQuery.find();\r\n    \r\n    const formattedQuestions = questions.map(question => ({\r\n      id: question.id,\r\n      title: question.get('title'),\r\n      detailedAnswer: question.get('detailedAnswer'),\r\n      oralAnswer: question.get('oralAnswer'),\r\n      code: question.get('code'),\r\n      difficulty: question.get('difficulty'),\r\n      appearanceLevel: question.get('appearanceLevel'),\r\n      proficiency: question.get('proficiency'),\r\n      tags: question.get('tags') || [],\r\n      category: {\r\n        id: question.get('category').id,\r\n        name: question.get('category').get('name')\r\n      },\r\n      createdAt: question.get('createdAt'),\r\n      updatedAt: question.get('updatedAt')\r\n    }));\r\n\r\n    const result = {\r\n      category: {\r\n        id: category.id,\r\n        name: category.get('name'),\r\n        description: category.get('description'),\r\n        questionCount: questions.length,\r\n        createdAt: category.get('createdAt'),\r\n        updatedAt: category.get('updatedAt')\r\n      },\r\n      questions: formattedQuestions\r\n    };\r\n\r\n    // 更新题目数量缓存\r\n    const now = Date.now();\r\n    cacheConfig.questionCounts.set(categoryId, {\r\n      count: questions.length,\r\n      timestamp: now\r\n    });\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取分类详情失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 创建新类别 - 清除相关缓存\r\n */\r\nexport const createCategory = async (categoryData) => {\r\n  // 离线模式下不允许创建分类\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    throw new Error('离线模式下无法创建分类');\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    const Category = AV.Object.extend('Category');\r\n    const category = new Category();\r\n    \r\n    category.set('name', categoryData.name);\r\n    category.set('description', categoryData.description || '');\r\n    category.set('createdBy', currentUser);\r\n\r\n    // 设置 ACL 权限\r\n    const acl = new AV.ACL();\r\n    acl.setReadAccess(currentUser, true);\r\n    acl.setWriteAccess(currentUser, true);\r\n    acl.setPublicReadAccess(false);\r\n    category.setACL(acl);\r\n\r\n    await category.save();\r\n    \r\n    // 清除分类列表缓存\r\n    clearCategoryCache();\r\n\r\n    return {\r\n      id: category.id,\r\n      name: category.get('name'),\r\n      description: category.get('description'),\r\n      questionCount: 0,\r\n      createdAt: category.get('createdAt'),\r\n      updatedAt: category.get('updatedAt')\r\n    };\r\n  } catch (error) {\r\n    console.error('创建分类失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新类别 - 清除相关缓存\r\n */\r\nexport const updateCategory = async (categoryId, updateData) => {\r\n  // 离线模式下不允许更新分类\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    throw new Error('离线模式下无法更新分类');\r\n  }\r\n\r\n  try {\r\n    if (updateData.name && updateData.name.trim() === '') {\r\n      throw new Error('类别名不能为空');\r\n    }\r\n\r\n    const category = AV.Object.createWithoutData('Category', categoryId);\r\n    \r\n    if (updateData.name) {\r\n      category.set('name', updateData.name.trim());\r\n    }\r\n    \r\n    const updatedCategory = await category.save();\r\n    \r\n    // 清除相关缓存\r\n    clearCategoryCacheById(categoryId);\r\n\r\n    return {\r\n      id: updatedCategory.id,\r\n      name: updatedCategory.get('name'),\r\n      questionCount: updatedCategory.get('questionCount'),\r\n      updatedAt: updatedCategory.updatedAt\r\n    };\r\n  } catch (error) {\r\n    console.error('更新类别失败:', error);\r\n    throw new Error(`更新失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 更新类别题目计数 - 清除相关缓存\r\n */\r\nexport const updateCategoryQuestionCount = async (categoryId) => {\r\n  // 离线模式下不允许更新计数\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    throw new Error('离线模式下无法更新题目计数');\r\n  }\r\n\r\n  try {\r\n    const category = AV.Object.createWithoutData('Category', categoryId);\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    \r\n    const count = await questionQuery.count();\r\n    \r\n    category.set('questionCount', count);\r\n    await category.save();\r\n    \r\n    // 清除相关缓存\r\n    clearCategoryCacheById(categoryId);\r\n\r\n    return count;\r\n  } catch (error) {\r\n    console.error('更新题目计数失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 删除类别 - 清除相关缓存\r\n */\r\nexport const deleteCategory = async (categoryId) => {\r\n  // 离线模式下不允许删除分类\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    throw new Error('离线模式下无法删除分类');\r\n  }\r\n\r\n  try {\r\n    const category = AV.Object.createWithoutData('Category', categoryId);\r\n    \r\n    // 先删除该类别下的所有题目\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    const questions = await questionQuery.find();\r\n    \r\n    let deletedQuestions = 0;\r\n    if (questions.length > 0) {\r\n      await AV.Object.destroyAll(questions);\r\n      deletedQuestions = questions.length;\r\n    }\r\n    \r\n    // 再删除类别本身\r\n    await category.destroy();\r\n    \r\n    // 清除相关缓存\r\n    clearCategoryCacheById(categoryId);\r\n\r\n    return { \r\n      success: true, \r\n      message: `类别及关联的 ${deletedQuestions} 个题目已删除`,\r\n      deletedQuestions\r\n    };\r\n  } catch (error) {\r\n    console.error('删除类别失败:', error);\r\n    throw new Error(`删除失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 批量获取类别统计信息 - 带缓存\r\n */\r\nexport const getCategoriesStats = async () => {\r\n  try {\r\n    const categories = await getAllCategories(); // 使用带缓存的函数\r\n    \r\n    const stats = {\r\n      totalCategories: categories.length,\r\n      totalQuestions: categories.reduce((sum, cat) => sum + (cat.questionCount || 0), 0),\r\n      averageQuestionsPerCategory: categories.length > 0 \r\n        ? (categories.reduce((sum, cat) => sum + (cat.questionCount || 0), 0) / categories.length).toFixed(1)\r\n        : 0,\r\n      categoriesWithQuestions: categories.filter(cat => (cat.questionCount || 0) > 0).length,\r\n      emptyCategories: categories.filter(cat => (cat.questionCount || 0) === 0).length\r\n    };\r\n    \r\n    return stats;\r\n  } catch (error) {\r\n    console.error('获取类别统计失败:', error);\r\n    throw new Error(`获取统计失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 搜索类别 - 不使用缓存\r\n */\r\nexport const searchCategories = async (searchTerm, options = {}) => {\r\n  // 离线模式下返回空结果\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法搜索分类');\r\n    return {\r\n      data: [],\r\n      pagination: {\r\n        current: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        totalPages: 0\r\n      }\r\n    };\r\n  }\r\n\r\n  try {\r\n    const { page = 1, pageSize = 10 } = options;\r\n    \r\n    const query = new AV.Query('Category');\r\n    query.contains('name', searchTerm);\r\n    query.addDescending('updatedAt');\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    \r\n    const results = await query.find();\r\n    const totalCount = await query.count();\r\n    \r\n    return {\r\n      data: results.map(result => ({\r\n        id: result.id,\r\n        name: result.get('name'),\r\n        questionCount: result.get('questionCount') || 0,\r\n        updatedAt: result.updatedAt,\r\n        createdAt: result.createdAt\r\n      })),\r\n      pagination: {\r\n        current: page,\r\n        pageSize,\r\n        total: totalCount,\r\n        totalPages: Math.ceil(totalCount / pageSize)\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.error('搜索类别失败:', error);\r\n    throw new Error(`搜索失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取分类下的题目 - 不使用缓存（因为题目经常变动）\r\n */\r\nexport const getQuestionsByCategory = async (categoryId, options = {}) => {\r\n  // 离线模式下返回空结果\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法获取分类题目');\r\n    return {\r\n      data: []\r\n    };\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    const { \r\n      page = 1, \r\n      pageSize = 20,\r\n      sortBy = 'updatedAt',\r\n      sortOrder = 'desc'\r\n    } = options;\r\n    \r\n    const categoryPointer = AV.Object.createWithoutData('Category', categoryId);\r\n    const query = new AV.Query('Question');\r\n    \r\n    query.equalTo('category', categoryPointer);\r\n    query.equalTo('createdBy', currentUser);\r\n    query.include('category');\r\n    \r\n    // 排序\r\n    if (sortOrder === 'asc') {\r\n      query.addAscending(sortBy);\r\n    } else {\r\n      query.addDescending(sortBy);\r\n    }\r\n    \r\n    // 分页\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    \r\n    const results = await query.find();\r\n    \r\n    return {\r\n      data: results.map(question => {\r\n        const category = question.get('category');\r\n        return {\r\n          id: question.id,\r\n          title: question.get('title'),\r\n          detailedAnswer: question.get('detailedAnswer'),\r\n          oralAnswer: question.get('oralAnswer'),\r\n          code: question.get('code'),\r\n          url: question.get('url'),\r\n          tags: question.get('tags') || [],\r\n          difficulty: question.get('difficulty'),\r\n          proficiency: question.get('proficiency'),\r\n          appearanceLevel: question.get('appearanceLevel') || 50,\r\n          category: category ? {\r\n            id: category.id,\r\n            objectId: category.id,\r\n            name: category.get('name'),\r\n            description: category.get('description'),\r\n            questionCount: category.get('questionCount') || 0\r\n          } : null,\r\n          createdAt: question.get('createdAt'),\r\n          updatedAt: question.get('updatedAt'),\r\n          lastReviewedAt: question.get('lastReviewedAt')\r\n        };\r\n      })\r\n    };\r\n  } catch (error) {\r\n    console.error('获取分类题目失败:', error);\r\n    throw new Error(`获取题目失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n// 获取所有题目（分页方式）\r\nexport const getAllQuestionsPaginated = async (options = {}) => {\r\n  // 离线模式下返回空结果\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法获取分页题目');\r\n    return {\r\n      data: [],\r\n      total: 0,\r\n      hasMore: false\r\n    };\r\n  }\r\n\r\n  const {\r\n    page = 0,\r\n    pageSize = 50,\r\n    sortBy = 'updatedAt',\r\n    sortOrder = 'desc'\r\n  } = options;\r\n\r\n  try {\r\n    const query = new AV.Query('Question');\r\n    \r\n    // 包含分类信息\r\n    query.include('category');\r\n    \r\n    // 排序\r\n    if (sortBy === 'title') {\r\n      query.addAscending('title');\r\n    } else if (sortBy === 'difficulty') {\r\n      query.addAscending('difficulty');\r\n    } else if (sortBy === 'appearanceLevel') {\r\n      query.addDescending('appearanceLevel');\r\n    } else {\r\n      query.addDescending('updatedAt');\r\n    }\r\n    \r\n    // 分页\r\n    query.limit(pageSize);\r\n    query.skip(page * pageSize);\r\n    \r\n    const results = await query.find();\r\n    \r\n    const questions = results.map(item => ({\r\n      id: item.id,\r\n      title: item.get('title'),\r\n      detailedAnswer: item.get('detailedAnswer'),\r\n      oralAnswer: item.get('oralAnswer'),\r\n      code: item.get('code'),\r\n      difficulty: item.get('difficulty'),\r\n      proficiency: item.get('proficiency'),\r\n      appearanceLevel: item.get('appearanceLevel'),\r\n      tags: item.get('tags') || [],\r\n      lastReviewedAt: item.get('lastReviewedAt'),\r\n      createdAt: item.get('createdAt'),\r\n      updatedAt: item.get('updatedAt'),\r\n      category: item.get('category') ? {\r\n        id: item.get('category').id,\r\n        name: item.get('category').get('name'),\r\n        description: item.get('category').get('description')\r\n      } : null\r\n    }));\r\n    \r\n    return {\r\n      data: questions,\r\n      total: questions.length,\r\n      hasMore: questions.length === pageSize\r\n    };\r\n  } catch (error) {\r\n    console.error('获取题目失败:', error);\r\n    throw error;\r\n  }\r\n};","// src/services/cacheService.js\r\nimport { offlineService } from './offlineService';\r\n\r\n/**\r\n * 缓存服务 - 双缓存策略实现\r\n * 同时使用 Service Worker Cache API 和 localStorage 进行数据缓存\r\n * 提供更好的离线体验和缓存可靠性\r\n */\r\nexport class CacheService {\r\n  constructor() {\r\n    this.isSupported = this.checkSupport();\r\n    this.cacheLimit = 30; // 默认缓存30题\r\n    this.cacheVersion = '2.0.0'; // 缓存版本号\r\n    this.cacheExpiry = 7 * 24 * 60 * 60 * 1000; // 7天过期时间\r\n    \r\n    // 缓存键名常量\r\n    this.CACHE_KEYS = {\r\n      SW_CACHE: 'questions-data-v2',\r\n      LOCAL_STORAGE: 'offline_questions_v2',\r\n      FALLBACK: 'offline_questions_fallback_v2',\r\n      META: 'cache_metadata_v2'\r\n    };\r\n    \r\n    // 初始化缓存状态\r\n    this.cacheState = {\r\n      swAvailable: false,\r\n      localStorageAvailable: false,\r\n      lastSync: null,\r\n      strategy: 'dual' // dual, sw-only, ls-only, none\r\n    };\r\n    \r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * 初始化缓存服务\r\n   */\r\n  async init() {\r\n    try {\r\n      // 检测支持情况\r\n      this.cacheState.swAvailable = await this.checkSWCacheSupport();\r\n      this.cacheState.localStorageAvailable = this.checkLocalStorageSupport();\r\n      \r\n      // 确定缓存策略\r\n      this.determineCacheStrategy();\r\n      \r\n      console.log(`🔄 缓存服务初始化完成 - 策略: ${this.cacheState.strategy}`, {\r\n        sw: this.cacheState.swAvailable,\r\n        ls: this.cacheState.localStorageAvailable\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('❌ 缓存服务初始化失败:', error);\r\n      this.cacheState.strategy = 'none';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检查浏览器支持情况\r\n   */\r\n  checkSupport() {\r\n    return typeof window !== 'undefined' && \r\n           ('serviceWorker' in navigator || 'caches' in window);\r\n  }\r\n\r\n  /**\r\n   * 检查 Service Worker Cache API 支持\r\n   */\r\n  async checkSWCacheSupport() {\r\n    try {\r\n      if (!('caches' in window)) return false;\r\n      \r\n      // 测试缓存操作\r\n      const testCache = await caches.open('test-cache-support');\r\n      await testCache.put(\r\n        new Request('/test-support'), \r\n        new Response('test')\r\n      );\r\n      await testCache.delete('/test-support');\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检查 localStorage 支持\r\n   */\r\n  checkLocalStorageSupport() {\r\n    try {\r\n      const testKey = 'test_local_storage_support';\r\n      localStorage.setItem(testKey, 'test');\r\n      localStorage.removeItem(testKey);\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 确定最佳缓存策略\r\n   */\r\n  determineCacheStrategy() {\r\n    if (this.cacheState.swAvailable && this.cacheState.localStorageAvailable) {\r\n      this.cacheState.strategy = 'dual';\r\n    } else if (this.cacheState.swAvailable) {\r\n      this.cacheState.strategy = 'sw-only';\r\n    } else if (this.cacheState.localStorageAvailable) {\r\n      this.cacheState.strategy = 'ls-only';\r\n    } else {\r\n      this.cacheState.strategy = 'none';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置缓存题目数量限制\r\n   */\r\n  setCacheLimit(limit) {\r\n    if (limit > 0 && limit <= 500) {\r\n      this.cacheLimit = limit;\r\n      console.log(`🔄 缓存题目数量限制设置为: ${limit}`);\r\n      \r\n      // 更新元数据\r\n      this.updateCacheMetadata();\r\n      return true;\r\n    }\r\n    console.warn('❌ 缓存数量限制必须在 1-500 之间');\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * 获取当前缓存限制\r\n   */\r\n  getCacheLimit() {\r\n    return this.cacheLimit;\r\n  }\r\n\r\n  /**\r\n   * 双缓存策略：同时缓存到 Service Worker Cache 和 localStorage\r\n   */\r\n  async cacheQuestions(questions) {\r\n    if (offlineService.shouldUseOfflineData()) {\r\n      console.log('📦 离线模式下跳过缓存操作');\r\n      return false;\r\n    }\r\n\r\n    if (this.cacheState.strategy === 'none') {\r\n      console.warn('❌ 当前环境不支持任何缓存策略');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const cacheData = {\r\n        questions: questions.slice(0, this.cacheLimit),\r\n        timestamp: Date.now(),\r\n        version: this.cacheVersion,\r\n        count: Math.min(questions.length, this.cacheLimit),\r\n        cacheLimit: this.cacheLimit,\r\n        strategy: this.cacheState.strategy\r\n      };\r\n\r\n      // 并行执行多种缓存策略\r\n      const cachePromises = [];\r\n\r\n      // Service Worker Cache 缓存\r\n      if (this.cacheState.swAvailable) {\r\n        cachePromises.push(this.cacheToServiceWorker(cacheData));\r\n      }\r\n\r\n      // localStorage 缓存\r\n      if (this.cacheState.localStorageAvailable) {\r\n        cachePromises.push(this.cacheToLocalStorage(cacheData));\r\n      }\r\n\r\n      // 等待所有缓存操作完成\r\n      await Promise.allSettled(cachePromises);\r\n      \r\n      // 更新缓存状态\r\n      this.cacheState.lastSync = Date.now();\r\n      this.updateCacheMetadata(cacheData);\r\n      \r\n      console.log(`✅ 题目数据双缓存成功: ${cacheData.count} 道题目`, {\r\n        strategy: this.cacheState.strategy,\r\n        limit: this.cacheLimit\r\n      });\r\n      \r\n      // 通知缓存更新\r\n      this.dispatchEvent('cacheUpdated', {\r\n        count: cacheData.count,\r\n        timestamp: cacheData.timestamp,\r\n        cacheLimit: this.cacheLimit,\r\n        strategy: this.cacheState.strategy\r\n      });\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('❌ 双缓存策略失败:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 缓存到 Service Worker Cache API\r\n   */\r\n  async cacheToServiceWorker(cacheData) {\r\n    try {\r\n      const cache = await caches.open(this.CACHE_KEYS.SW_CACHE);\r\n      \r\n      // 创建缓存请求和响应\r\n      const cacheRequest = new Request('/api/cached/questions');\r\n      const cacheResponse = new Response(JSON.stringify(cacheData), {\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n\r\n      // 存储到缓存\r\n      await cache.put(cacheRequest, cacheResponse);\r\n      \r\n      console.log('✅ Service Worker 缓存成功');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('❌ Service Worker 缓存失败:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 缓存到 localStorage\r\n   */\r\n  async cacheToLocalStorage(cacheData) {\r\n    try {\r\n      localStorage.setItem(this.CACHE_KEYS.LOCAL_STORAGE, JSON.stringify(cacheData));\r\n      console.log('✅ localStorage 缓存成功');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('❌ localStorage 缓存失败:', error);\r\n      \r\n      // 尝试使用回退方案\r\n      try {\r\n        const fallbackData = {\r\n          ...cacheData,\r\n          version: cacheData.version + '-fallback'\r\n        };\r\n        localStorage.setItem(this.CACHE_KEYS.FALLBACK, JSON.stringify(fallbackData));\r\n        console.log('✅ 使用回退方案缓存成功');\r\n        return true;\r\n      } catch (fallbackError) {\r\n        console.error('❌ 回退方案也失败:', fallbackError);\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取缓存的题目数据 - 智能读取策略\r\n   */\r\n  async getCachedQuestions() {\r\n    if (this.cacheState.strategy === 'none') {\r\n      return this.getEmptyCacheData();\r\n    }\r\n\r\n    try {\r\n      let cacheData = null;\r\n      \r\n      // 根据策略优先级读取数据\r\n      if (this.cacheState.strategy === 'dual' || this.cacheState.strategy === 'sw-only') {\r\n        cacheData = await this.getFromServiceWorker();\r\n      }\r\n      \r\n      // 如果 Service Worker 缓存失败或没有数据，尝试 localStorage\r\n      if (!cacheData && (this.cacheState.strategy === 'dual' || this.cacheState.strategy === 'ls-only')) {\r\n        cacheData = this.getFromLocalStorage();\r\n      }\r\n      \r\n      // 如果都没有数据，返回空数据\r\n      if (!cacheData) {\r\n        return this.getEmptyCacheData();\r\n      }\r\n\r\n      // 检查缓存是否过期\r\n      if (this.isCacheExpired(cacheData.timestamp)) {\r\n        console.log('🕒 缓存已过期，清理旧数据');\r\n        await this.clearCache();\r\n        return this.getEmptyCacheData();\r\n      }\r\n\r\n      return cacheData;\r\n    } catch (error) {\r\n      console.error('❌ 获取缓存数据失败:', error);\r\n      return this.getEmptyCacheData();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 从 Service Worker Cache 读取数据\r\n   */\r\n  async getFromServiceWorker() {\r\n    try {\r\n      const cache = await caches.open(this.CACHE_KEYS.SW_CACHE);\r\n      const response = await cache.match('/api/cached/questions');\r\n      \r\n      if (response) {\r\n        const data = await response.json();\r\n        console.log('✅ 从 Service Worker 缓存读取数据');\r\n        return data;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error('❌ 从 Service Worker 读取失败:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 从 localStorage 读取数据 - 同步方法\r\n   */\r\n  getFromLocalStorage() {\r\n    try {\r\n      // 尝试主存储\r\n      const cached = localStorage.getItem(this.CACHE_KEYS.LOCAL_STORAGE);\r\n      if (cached) {\r\n        const data = JSON.parse(cached);\r\n        console.log('✅ 从 localStorage 读取数据');\r\n        return data;\r\n      }\r\n      \r\n      // 尝试回退存储\r\n      const fallback = localStorage.getItem(this.CACHE_KEYS.FALLBACK);\r\n      if (fallback) {\r\n        const data = JSON.parse(fallback);\r\n        console.log('✅ 从回退存储读取数据');\r\n        return data;\r\n      }\r\n      \r\n      return null;\r\n    } catch (error) {\r\n      console.error('❌ 从 localStorage 读取失败:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检查缓存是否过期\r\n   */\r\n  isCacheExpired(timestamp) {\r\n    return Date.now() - timestamp > this.cacheExpiry;\r\n  }\r\n\r\n  /**\r\n   * 获取空缓存数据结构\r\n   */\r\n  getEmptyCacheData() {\r\n    return {\r\n      questions: [],\r\n      timestamp: null,\r\n      version: null,\r\n      count: 0,\r\n      cacheLimit: this.cacheLimit,\r\n      strategy: this.cacheState.strategy\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取缓存状态信息 - 同步方法\r\n   */\r\n  getCacheStatus() {\r\n    if (this.cacheState.strategy === 'none') {\r\n      return this.getDefaultCacheStatus();\r\n    }\r\n\r\n    try {\r\n      let cacheData = null;\r\n      \r\n      // 根据策略优先级读取数据\r\n      if (this.cacheState.strategy === 'dual' || this.cacheState.strategy === 'sw-only') {\r\n        // 对于 Service Worker，我们无法同步获取，使用 localStorage 作为后备\r\n        cacheData = this.getFromLocalStorage();\r\n      } else if (this.cacheState.strategy === 'ls-only') {\r\n        cacheData = this.getFromLocalStorage();\r\n      }\r\n      \r\n      if (!cacheData) {\r\n        return this.getDefaultCacheStatus();\r\n      }\r\n\r\n      // 检查缓存是否过期\r\n      const isExpired = this.isCacheExpired(cacheData.timestamp);\r\n      \r\n      if (isExpired) {\r\n        console.log('🕒 缓存状态：已过期');\r\n        return {\r\n          ...this.getDefaultCacheStatus(),\r\n          isExpired: true\r\n        };\r\n      }\r\n\r\n      const metadata = this.getCacheMetadata();\r\n      \r\n      return {\r\n        supported: this.cacheState.strategy !== 'none',\r\n        hasCache: true,\r\n        count: cacheData.questions.length,\r\n        timestamp: cacheData.timestamp,\r\n        cacheLimit: this.cacheLimit,\r\n        strategy: this.cacheState.strategy,\r\n        swAvailable: this.cacheState.swAvailable,\r\n        lsAvailable: this.cacheState.localStorageAvailable,\r\n        isExpired: false,\r\n        lastSync: this.cacheState.lastSync,\r\n        metadata: metadata\r\n      };\r\n    } catch (error) {\r\n      console.error('❌ 获取缓存状态失败:', error);\r\n      return this.getDefaultCacheStatus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取默认缓存状态\r\n   */\r\n  getDefaultCacheStatus() {\r\n    return {\r\n      supported: this.cacheState.strategy !== 'none',\r\n      hasCache: false,\r\n      count: 0,\r\n      timestamp: null,\r\n      cacheLimit: this.cacheLimit,\r\n      strategy: this.cacheState.strategy,\r\n      swAvailable: this.cacheState.swAvailable,\r\n      lsAvailable: this.cacheState.localStorageAvailable,\r\n      isExpired: false,\r\n      lastSync: this.cacheState.lastSync,\r\n      metadata: this.getCacheMetadata()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 更新缓存元数据\r\n   */\r\n  updateCacheMetadata(cacheData = null) {\r\n    try {\r\n      const metadata = {\r\n        version: this.cacheVersion,\r\n        cacheLimit: this.cacheLimit,\r\n        lastUpdated: Date.now(),\r\n        strategy: this.cacheState.strategy,\r\n        dataInfo: cacheData ? {\r\n          count: cacheData.count,\r\n          timestamp: cacheData.timestamp\r\n        } : null\r\n      };\r\n      \r\n      if (this.cacheState.localStorageAvailable) {\r\n        localStorage.setItem(this.CACHE_KEYS.META, JSON.stringify(metadata));\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ 更新缓存元数据失败:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取缓存元数据 - 同步方法\r\n   */\r\n  getCacheMetadata() {\r\n    try {\r\n      if (this.cacheState.localStorageAvailable) {\r\n        const metadata = localStorage.getItem(this.CACHE_KEYS.META);\r\n        return metadata ? JSON.parse(metadata) : null;\r\n      }\r\n      return null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清理所有缓存\r\n   */\r\n  async clearCache() {\r\n    try {\r\n      const clearPromises = [];\r\n\r\n      // 清理 Service Worker 缓存\r\n      if (this.cacheState.swAvailable) {\r\n        clearPromises.push(\r\n          caches.delete(this.CACHE_KEYS.SW_CACHE).catch(() => {})\r\n        );\r\n      }\r\n\r\n      // 清理 localStorage\r\n      if (this.cacheState.localStorageAvailable) {\r\n        Object.values(this.CACHE_KEYS).forEach(key => {\r\n          localStorage.removeItem(key);\r\n        });\r\n      }\r\n\r\n      await Promise.allSettled(clearPromises);\r\n      \r\n      // 重置状态\r\n      this.cacheState.lastSync = null;\r\n      \r\n      console.log('🗑️ 所有缓存已清理');\r\n      \r\n      // 通知缓存清理\r\n      this.dispatchEvent('cacheCleared', {\r\n        strategy: this.cacheState.strategy\r\n      });\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('❌ 清理缓存失败:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取缓存配置信息\r\n   */\r\n  getCacheConfig() {\r\n    return {\r\n      cacheLimit: this.cacheLimit,\r\n      strategy: this.cacheState.strategy,\r\n      swAvailable: this.cacheState.swAvailable,\r\n      lsAvailable: this.cacheState.localStorageAvailable,\r\n      maxLimit: 500,\r\n      minLimit: 1,\r\n      defaultLimit: 30,\r\n      expiryDays: 7,\r\n      version: this.cacheVersion\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 重置为默认配置\r\n   */\r\n  resetToDefault() {\r\n    this.cacheLimit = 30;\r\n    this.updateCacheMetadata();\r\n    console.log('🔄 缓存配置已重置为默认值');\r\n    return this.cacheLimit;\r\n  }\r\n\r\n  /**\r\n   * 测试缓存性能\r\n   */\r\n  async testCachePerformance() {\r\n    const testData = {\r\n      questions: Array.from({ length: 10 }, (_, i) => ({\r\n        id: i,\r\n        question: `测试问题 ${i}`,\r\n        answer: `测试答案 ${i}`\r\n      })),\r\n      timestamp: Date.now(),\r\n      count: 10\r\n    };\r\n\r\n    const startTime = performance.now();\r\n    \r\n    try {\r\n      await this.cacheQuestions(testData.questions);\r\n      const retrievedData = await this.getCachedQuestions();\r\n      const endTime = performance.now();\r\n      \r\n      const success = retrievedData.questions.length === testData.questions.length;\r\n      const duration = endTime - startTime;\r\n      \r\n      console.log(`📊 缓存性能测试: ${success ? '成功' : '失败'}`, {\r\n        耗时: `${duration.toFixed(2)}ms`,\r\n        策略: this.cacheState.strategy,\r\n        数据量: testData.questions.length\r\n      });\r\n      \r\n      return { success, duration, strategy: this.cacheState.strategy };\r\n    } catch (error) {\r\n      console.error('❌ 缓存性能测试失败:', error);\r\n      return { success: false, duration: 0, strategy: this.cacheState.strategy };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 事件分发\r\n   */\r\n  dispatchEvent(eventName, data) {\r\n    if (typeof window !== 'undefined') {\r\n      window.dispatchEvent(new CustomEvent(`cache:${eventName}`, { \r\n        detail: {\r\n          ...data,\r\n          timestamp: Date.now(),\r\n          service: 'CacheService'\r\n        }\r\n      }));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 添加事件监听\r\n   */\r\n  addEventListener(eventName, callback) {\r\n    if (typeof window !== 'undefined') {\r\n      window.addEventListener(`cache:${eventName}`, callback);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 移除事件监听\r\n   */\r\n  removeEventListener(eventName, callback) {\r\n    if (typeof window !== 'undefined') {\r\n      window.removeEventListener(`cache:${eventName}`, callback);\r\n    }\r\n  }\r\n}\r\n\r\n// 创建单例实例\r\nexport const cacheService = new CacheService();","// services/questionService.js\r\nimport AV from 'leancloud-storage';\r\nimport { offlineService } from './offlineService';\r\nimport { cacheService } from './cacheService';\r\n\r\n/**\r\n * 难度选项\r\n */\r\nexport const DifficultyOptions = {\r\n  EASY: 'easy',\r\n  MEDIUM: 'medium',\r\n  HARD: 'hard'\r\n};\r\n\r\n/**\r\n * 掌握程度选项\r\n */\r\nexport const ProficiencyOptions = {\r\n  BEGINNER: 'beginner',\r\n  INTERMEDIATE: 'intermediate',\r\n  ADVANCED: 'advanced',\r\n  MASTER: 'master'\r\n};\r\n\r\n// 请求配置\r\nconst REQUEST_DELAY = 1000; // 1秒延迟\r\nconst BATCH_SIZE = 10; // 批量请求大小\r\n\r\n/**\r\n * 获取分类ID的辅助函数\r\n */\r\nconst getCategoryId = (category) => {\r\n  if (category && category.objectId) return category.objectId;\r\n  if (typeof category === 'string') return category;\r\n  if (category && category.id) return category.id;\r\n  return null;\r\n};\r\n\r\n/**\r\n * 创建分类 Pointer 对象的辅助函数\r\n */\r\nconst createCategoryPointer = (categoryId) => {\r\n  if (!categoryId) return null;\r\n  return AV.Object.createWithoutData('Category', categoryId);\r\n};\r\n\r\n/**\r\n * 批量更新分类题目数量的辅助函数\r\n */\r\nconst batchUpdateCategoryCounts = async (updates) => {\r\n  // 离线模式下跳过分类计数更新\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：跳过分类计数更新');\r\n    return;\r\n  }\r\n\r\n  if (updates.length === 0) return;\r\n\r\n  try {\r\n    // 按分类分组更新\r\n    const categoryUpdates = {};\r\n    updates.forEach(({ categoryId, change }) => {\r\n      if (categoryId && !categoryUpdates[categoryId]) {\r\n        categoryUpdates[categoryId] = 0;\r\n      }\r\n      if (categoryId) {\r\n        categoryUpdates[categoryId] += change;\r\n      }\r\n    });\r\n\r\n    // 批量更新分类\r\n    const updatePromises = Object.entries(categoryUpdates).map(async ([categoryId, totalChange]) => {\r\n      try {\r\n        const categoryQuery = new AV.Query('Category');\r\n        const freshCategory = await categoryQuery.get(categoryId);\r\n        \r\n        const currentCount = freshCategory.get('questionCount') || 0;\r\n        const newCount = Math.max(0, currentCount + totalChange);\r\n        \r\n        freshCategory.set('questionCount', newCount);\r\n        await freshCategory.save();\r\n        \r\n        console.log(`分类 ${freshCategory.get('name')} 题目数量批量更新: ${currentCount} -> ${newCount}`);\r\n      } catch (error) {\r\n        console.error(`更新分类 ${categoryId} 题目数量失败:`, error);\r\n      }\r\n    });\r\n\r\n    await Promise.all(updatePromises);\r\n  } catch (error) {\r\n    console.error('批量更新分类题目数量失败:', error);\r\n  }\r\n};\r\n\r\n// 批量更新队列\r\nlet batchUpdateQueue = [];\r\nlet batchUpdateTimer = null;\r\n\r\n/**\r\n * 调度批量更新\r\n */\r\nconst scheduleBatchUpdate = (category, change) => {\r\n  // 离线模式下跳过批量更新\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    return;\r\n  }\r\n\r\n  const categoryId = getCategoryId(category);\r\n  if (!categoryId) return;\r\n\r\n  batchUpdateQueue.push({ categoryId, change });\r\n\r\n  if (batchUpdateTimer) {\r\n    clearTimeout(batchUpdateTimer);\r\n  }\r\n\r\n  batchUpdateTimer = setTimeout(() => {\r\n    const updates = [...batchUpdateQueue];\r\n    batchUpdateQueue = [];\r\n    batchUpdateTimer = null;\r\n    \r\n    batchUpdateCategoryCounts(updates);\r\n  }, 2000); // 2秒后执行批量更新\r\n};\r\n\r\n/**\r\n * 格式化题目响应\r\n */\r\nconst formatQuestionResponse = (question) => {\r\n  const category = question.get('category');\r\n  return {\r\n    id: question.id,\r\n    objectId: question.id,\r\n    title: question.get('title'),\r\n    detailedAnswer: question.get('detailedAnswer'),\r\n    oralAnswer: question.get('oralAnswer'),\r\n    code: question.get('code'),\r\n    url: question.get('url'),\r\n    tags: question.get('tags') || [],\r\n    difficulty: question.get('difficulty'),\r\n    proficiency: question.get('proficiency'),\r\n    appearanceLevel: question.get('appearanceLevel') || 50,\r\n    category: category ? {\r\n      id: category.id,\r\n      objectId: category.id,\r\n      name: category.get('name'),\r\n      description: category.get('description'),\r\n      questionCount: category.get('questionCount') || 0\r\n    } : null,\r\n    createdAt: question.get('createdAt'),\r\n    updatedAt: question.get('updatedAt'),\r\n    lastReviewedAt: question.get('lastReviewedAt')\r\n  };\r\n};\r\n\r\n/**\r\n * 延迟函数\r\n */\r\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n/**\r\n * 检查用户登录状态\r\n */\r\nconst checkUserAuth = () => {\r\n  const currentUser = AV.User.current();\r\n  if (!currentUser) {\r\n    throw new Error('用户未登录');\r\n  }\r\n  return currentUser;\r\n};\r\n\r\n/**\r\n * 检查离线模式\r\n */\r\nconst checkOfflineMode = (operation = '操作') => {\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log(`📦 离线模式：无法${operation}`);\r\n    throw new Error(`离线模式下无法${operation}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建题目\r\n */\r\nexport const createQuestion = async (questionData) => {\r\n  checkOfflineMode('创建题目');\r\n\r\n  try {\r\n    const currentUser = checkUserAuth();\r\n\r\n    const Question = AV.Object.extend('Question');\r\n    const question = new Question();\r\n    \r\n    // 设置题目字段\r\n    question.set('title', questionData.title || '');\r\n    question.set('detailedAnswer', questionData.detailedAnswer || '');\r\n    question.set('oralAnswer', questionData.oralAnswer || '');\r\n    question.set('code', questionData.code || '');\r\n    question.set('url', questionData.url || '');\r\n    question.set('tags', questionData.tags || []);\r\n    question.set('difficulty', questionData.difficulty || DifficultyOptions.MEDIUM);\r\n    question.set('proficiency', questionData.proficiency || ProficiencyOptions.BEGINNER);\r\n    question.set('appearanceLevel', questionData.appearanceLevel || 50);\r\n    question.set('createdBy', currentUser);\r\n\r\n    // 设置分类\r\n    if (questionData.categoryId) {\r\n      const categoryPointer = createCategoryPointer(questionData.categoryId);\r\n      question.set('category', categoryPointer);\r\n    }\r\n\r\n    // 设置 ACL 权限\r\n    const acl = new AV.ACL();\r\n    acl.setReadAccess(currentUser, true);\r\n    acl.setWriteAccess(currentUser, true);\r\n    acl.setPublicReadAccess(false);\r\n    question.setACL(acl);\r\n\r\n    await question.save();\r\n    \r\n    // 立即更新分类计数\r\n    if (questionData.categoryId) {\r\n      await updateCategoryCountImmediately(questionData.categoryId, 1);\r\n    }\r\n    \r\n    return formatQuestionResponse(question);\r\n  } catch (error) {\r\n    console.error('创建题目失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取类别的题目列表\r\n */\r\nexport const getQuestionsByCategory = async (categoryId, options = {}) => {\r\n  // 离线模式下从缓存获取数据\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从缓存获取分类题目列表');\r\n    const cached = await cacheService.getCachedQuestions();\r\n    const categoryQuestions = cached.questions.filter(q => \r\n      q.category && getCategoryId(q.category) === categoryId\r\n    );\r\n    \r\n    // 应用过滤条件\r\n    let filteredQuestions = categoryQuestions;\r\n    const { difficulty, proficiency, tag } = options;\r\n    \r\n    if (difficulty) {\r\n      filteredQuestions = filteredQuestions.filter(q => q.difficulty === difficulty);\r\n    }\r\n    if (proficiency) {\r\n      filteredQuestions = filteredQuestions.filter(q => q.proficiency === proficiency);\r\n    }\r\n    if (tag) {\r\n      filteredQuestions = filteredQuestions.filter(q => q.tags.includes(tag));\r\n    }\r\n    \r\n    const { page = 1, pageSize = 10 } = options;\r\n    const startIndex = (page - 1) * pageSize;\r\n    const paginatedQuestions = filteredQuestions.slice(startIndex, startIndex + pageSize);\r\n    \r\n    return {\r\n      data: paginatedQuestions,\r\n      pagination: {\r\n        current: page,\r\n        pageSize,\r\n        total: filteredQuestions.length,\r\n        totalPages: Math.ceil(filteredQuestions.length / pageSize)\r\n      }\r\n    };\r\n  }\r\n\r\n  await delay(REQUEST_DELAY);\r\n  \r\n  try {\r\n    const currentUser = checkUserAuth();\r\n\r\n    const { \r\n      page = 1, \r\n      pageSize = 10, \r\n      sortBy = 'updatedAt',\r\n      sortOrder = 'desc',\r\n      difficulty,\r\n      proficiency,\r\n      tag\r\n    } = options;\r\n    \r\n    const categoryPointer = createCategoryPointer(categoryId);\r\n    const query = new AV.Query('Question');\r\n    \r\n    query.equalTo('category', categoryPointer);\r\n    query.equalTo('createdBy', currentUser);\r\n    query.include('category');\r\n    \r\n    // 过滤条件\r\n    if (difficulty) query.equalTo('difficulty', difficulty);\r\n    if (proficiency) query.equalTo('proficiency', proficiency);\r\n    if (tag) query.containsAll('tags', [tag]);\r\n    \r\n    // 排序\r\n    if (sortOrder === 'asc') {\r\n      query.addAscending(sortBy);\r\n    } else {\r\n      query.addDescending(sortBy);\r\n    }\r\n    \r\n    // 分页\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    \r\n    const results = await query.find();\r\n    const totalCount = await query.count();\r\n    \r\n    const response = {\r\n      data: results.map(result => formatQuestionResponse(result)),\r\n      pagination: {\r\n        current: page,\r\n        pageSize,\r\n        total: totalCount,\r\n        totalPages: Math.ceil(totalCount / pageSize)\r\n      }\r\n    };\r\n    \r\n    return response;\r\n  } catch (error) {\r\n    console.error('获取题目列表失败:', error);\r\n    throw new Error(`获取题目失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 根据ID获取单个题目详情\r\n */\r\nexport const getQuestionById = async (id) => {\r\n  // 离线模式下从缓存获取数据\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从缓存获取单个题目详情');\r\n    const cached = await cacheService.getCachedQuestions();\r\n    const question = cached.questions.find(q => q.id === id || q.objectId === id);\r\n    \r\n    if (!question) {\r\n      throw new Error('题目不存在或未缓存');\r\n    }\r\n    \r\n    return question;\r\n  }\r\n\r\n  try {\r\n    const query = new AV.Query('Question');\r\n    query.equalTo('objectId', id);\r\n    query.include('category');\r\n    \r\n    const question = await query.first();\r\n    \r\n    if (!question) {\r\n      throw new Error('题目不存在');\r\n    }\r\n    \r\n    return formatQuestionResponse(question);\r\n  } catch (error) {\r\n    console.error(`获取题目 ${id} 失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 批量获取题目详情（优化性能）\r\n */\r\nexport const getQuestionsBatch = async (questionIds) => {\r\n  if (!questionIds || questionIds.length === 0) return [];\r\n\r\n  // 离线模式下从缓存获取数据\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从缓存批量获取题目');\r\n    const cached = await cacheService.getCachedQuestions();\r\n    return cached.questions.filter(q => \r\n      questionIds.includes(q.id) || questionIds.includes(q.objectId)\r\n    );\r\n  }\r\n\r\n  // 分批处理，避免过多请求\r\n  const batches = [];\r\n  for (let i = 0; i < questionIds.length; i += BATCH_SIZE) {\r\n    batches.push(questionIds.slice(i, i + BATCH_SIZE));\r\n  }\r\n\r\n  const results = [];\r\n  \r\n  for (const batch of batches) {\r\n    await delay(REQUEST_DELAY);\r\n    \r\n    try {\r\n      const currentUser = checkUserAuth();\r\n\r\n      const query = new AV.Query('Question');\r\n      query.containedIn('objectId', batch);\r\n      query.equalTo('createdBy', currentUser);\r\n      query.include('category');\r\n      \r\n      const batchResults = await query.find();\r\n      results.push(...batchResults.map(q => formatQuestionResponse(q)));\r\n    } catch (error) {\r\n      console.error('批量获取题目失败:', error);\r\n      // 继续处理其他批次\r\n    }\r\n  }\r\n\r\n  return results;\r\n};\r\n\r\n/**\r\n * 删除题目\r\n */\r\nexport const deleteQuestion = async (questionId) => {\r\n  checkOfflineMode('删除题目');\r\n\r\n  try {\r\n    const currentUser = checkUserAuth();\r\n\r\n    // 验证题目是否属于当前用户\r\n    const query = new AV.Query('Question');\r\n    query.equalTo('objectId', questionId);\r\n    query.equalTo('createdBy', currentUser);\r\n    query.include('category');\r\n    const question = await query.first();\r\n    \r\n    if (!question) {\r\n      throw new Error('题目不存在或无权删除');\r\n    }\r\n\r\n    // 获取分类信息用于更新计数\r\n    const category = question.get('category');\r\n    \r\n    await question.destroy();\r\n    \r\n    // 立即更新分类计数\r\n    if (category) {\r\n      await updateCategoryCountImmediately(category, -1);\r\n    }\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('删除题目失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 搜索题目\r\n */\r\nexport const searchQuestions = async (searchTerm, options = {}) => {\r\n  // 离线模式下从缓存搜索\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：在缓存中搜索题目');\r\n    const cached = await cacheService.getCachedQuestions();\r\n    \r\n    const searchLower = searchTerm.toLowerCase();\r\n    const searchedQuestions = cached.questions.filter(question => \r\n      question.title.toLowerCase().includes(searchLower) ||\r\n      question.detailedAnswer.toLowerCase().includes(searchLower) ||\r\n      question.oralAnswer.toLowerCase().includes(searchLower) ||\r\n      question.code.toLowerCase().includes(searchLower) ||\r\n      (question.tags && question.tags.some(tag => \r\n        tag.toLowerCase().includes(searchLower)\r\n      ))\r\n    );\r\n    \r\n    const { page = 1, pageSize = 10 } = options;\r\n    const startIndex = (page - 1) * pageSize;\r\n    const paginatedQuestions = searchedQuestions.slice(startIndex, startIndex + pageSize);\r\n    \r\n    return {\r\n      data: paginatedQuestions,\r\n      pagination: {\r\n        current: page,\r\n        pageSize,\r\n        total: searchedQuestions.length,\r\n        totalPages: Math.ceil(searchedQuestions.length / pageSize)\r\n      }\r\n    };\r\n  }\r\n\r\n  await delay(REQUEST_DELAY);\r\n  \r\n  try {\r\n    const currentUser = checkUserAuth();\r\n\r\n    const { page = 1, pageSize = 10 } = options;\r\n    \r\n    const titleQuery = new AV.Query('Question');\r\n    titleQuery.contains('title', searchTerm);\r\n    titleQuery.equalTo('createdBy', currentUser);\r\n    \r\n    const detailedAnswerQuery = new AV.Query('Question');\r\n    detailedAnswerQuery.contains('detailedAnswer', searchTerm);\r\n    detailedAnswerQuery.equalTo('createdBy', currentUser);\r\n    \r\n    const oralAnswerQuery = new AV.Query('Question');\r\n    oralAnswerQuery.contains('oralAnswer', searchTerm);\r\n    oralAnswerQuery.equalTo('createdBy', currentUser);\r\n    \r\n    const codeQuery = new AV.Query('Question');\r\n    codeQuery.contains('code', searchTerm);\r\n    codeQuery.equalTo('createdBy', currentUser);\r\n    \r\n    const tagsQuery = new AV.Query('Question');\r\n    tagsQuery.containsAll('tags', [searchTerm]);\r\n    tagsQuery.equalTo('createdBy', currentUser);\r\n    \r\n    const query = AV.Query.or(\r\n      titleQuery, \r\n      detailedAnswerQuery, \r\n      oralAnswerQuery, \r\n      codeQuery, \r\n      tagsQuery\r\n    );\r\n    \r\n    query.include('category');\r\n    query.addDescending('updatedAt');\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    \r\n    const results = await query.find();\r\n    const totalCount = await query.count();\r\n    \r\n    return {\r\n      data: results.map(result => formatQuestionResponse(result)),\r\n      pagination: {\r\n        current: page,\r\n        pageSize,\r\n        total: totalCount,\r\n        totalPages: Math.ceil(totalCount / pageSize)\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.error('搜索题目失败:', error);\r\n    throw new Error(`搜索失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取所有题目 - 确保获取全部数据\r\n */\r\nexport const getAllQuestions = async () => {\r\n  // 离线模式处理\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从缓存获取所有题目数据');\r\n    const cached = await cacheService.getCachedQuestions();\r\n    return cached.questions;\r\n  }\r\n\r\n  await delay(REQUEST_DELAY);\r\n  \r\n  try {\r\n    const currentUser = checkUserAuth();\r\n\r\n    const allQuestions = [];\r\n    let skip = 0;\r\n    const limit = 100; // LeanCloud 单次查询限制\r\n    let hasMore = true;\r\n\r\n    // 循环获取所有数据\r\n    while (hasMore) {\r\n      const query = new AV.Query('Question');\r\n      query.equalTo('createdBy', currentUser);\r\n      query.include('category');\r\n      query.descending('updatedAt');\r\n      query.limit(limit);\r\n      query.skip(skip);\r\n      \r\n      const batchResults = await query.find();\r\n      allQuestions.push(...batchResults);\r\n      \r\n      // 检查是否还有更多数据\r\n      hasMore = batchResults.length === limit;\r\n      skip += limit;\r\n      \r\n      console.log(`📦 批量获取题目: 第 ${skip/limit} 批, 获取 ${batchResults.length} 条`);\r\n    }\r\n\r\n    const result = allQuestions.map(question => formatQuestionResponse(question));\r\n    \r\n    console.log('📊 getAllQuestions 实时查询结果:', {\r\n      题目总数: result.length,\r\n      批次: `${skip/limit} 批`,\r\n      最新题目: result.slice(0, 3).map(q => ({ id: q.id, title: q.title }))\r\n    });\r\n    \r\n    // 保存到缓存服务\r\n    await cacheService.cacheQuestions(result);\r\n    \r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取所有题目失败:', error);\r\n    \r\n    // 网络请求失败时，尝试使用缓存数据\r\n    if (error.message.includes('offline') || error.message.includes('network') || error.message.includes('CORS')) {\r\n      console.log('🌐 网络请求失败，尝试使用缓存数据');\r\n      const cached = await cacheService.getCachedQuestions();\r\n      return cached.questions;\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新题目\r\n */\r\nexport const updateQuestion = async (questionId, updateData) => {\r\n  checkOfflineMode('更新题目');\r\n\r\n  try {\r\n    console.log('questionService: 更新题目', questionId, updateData);\r\n    \r\n    const question = AV.Object.createWithoutData('Question', questionId);\r\n    \r\n    // 记录旧的分类信息\r\n    let oldCategory = null;\r\n    if (updateData.categoryId) {\r\n      const oldQuestion = await new AV.Query('Question')\r\n        .include('category')\r\n        .get(questionId);\r\n      oldCategory = oldQuestion.get('category');\r\n    }\r\n    \r\n    // 设置更新字段\r\n    Object.keys(updateData).forEach(key => {\r\n      if (updateData[key] !== undefined) {\r\n        // 如果是 categoryId，转换为 Pointer 对象\r\n        if (key === 'categoryId') {\r\n          const categoryPointer = createCategoryPointer(updateData[key]);\r\n          question.set('category', categoryPointer);\r\n        } else {\r\n          question.set(key, updateData[key]);\r\n        }\r\n      }\r\n    });\r\n    \r\n    const result = await question.save();\r\n    console.log('questionService: 更新成功', result);\r\n    \r\n    // 如果分类发生变化，更新分类计数\r\n    if (updateData.categoryId && oldCategory) {\r\n      const newCategoryId = updateData.categoryId;\r\n      const oldCategoryId = getCategoryId(oldCategory);\r\n      \r\n      if (oldCategoryId !== newCategoryId) {\r\n        // 减少旧分类的计数\r\n        if (oldCategoryId) {\r\n          scheduleBatchUpdate(oldCategoryId, -1);\r\n        }\r\n        // 增加新分类的计数\r\n        if (newCategoryId) {\r\n          scheduleBatchUpdate(newCategoryId, 1);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 重新获取更新后的题目信息\r\n    const updatedQuestion = await new AV.Query('Question')\r\n      .include('category')\r\n      .get(questionId);\r\n    \r\n    return formatQuestionResponse(updatedQuestion);\r\n  } catch (error) {\r\n    console.error('questionService: 更新题目失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新题目复习时间\r\n */\r\nexport const updateQuestionReviewTime = async (questionId) => {\r\n  checkOfflineMode('更新复习时间');\r\n\r\n  try {\r\n    const currentUser = checkUserAuth();\r\n\r\n    const question = AV.Object.createWithoutData('Question', questionId);\r\n    question.set('lastReviewedAt', new Date());\r\n    \r\n    const result = await question.save();\r\n    \r\n    return result;\r\n  } catch (error) {\r\n    console.error('更新题目复习时间失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取需要复习的题目\r\n */\r\nexport const getReviewQuestions = async (thresholdDays = 7) => {\r\n  // 离线模式下从缓存获取\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从缓存获取复习题目');\r\n    const cached = await cacheService.getCachedQuestions();\r\n    const thresholdDate = new Date();\r\n    thresholdDate.setDate(thresholdDate.getDate() - thresholdDays);\r\n    \r\n    return cached.questions.filter(question => {\r\n      if (!question.lastReviewedAt) return true;\r\n      const lastReviewed = new Date(question.lastReviewedAt);\r\n      return lastReviewed < thresholdDate;\r\n    });\r\n  }\r\n\r\n  try {\r\n    const currentUser = checkUserAuth();\r\n\r\n    const thresholdDate = new Date();\r\n    thresholdDate.setDate(thresholdDate.getDate() - thresholdDays);\r\n\r\n    const query = new AV.Query('Question');\r\n    query.equalTo('createdBy', currentUser);\r\n    query.lessThan('lastReviewedAt', thresholdDate);\r\n    query.include('category');\r\n    query.addAscending('lastReviewedAt');\r\n    \r\n    const questions = await query.find();\r\n    \r\n    return questions.map(question => formatQuestionResponse(question));\r\n  } catch (error) {\r\n    console.error('获取复习题目失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 立即更新分类计数\r\n */\r\nconst updateCategoryCountImmediately = async (category, change) => {\r\n  // 离线模式下跳过分类计数更新\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    return;\r\n  }\r\n\r\n  if (!category) return;\r\n  \r\n  const categoryId = getCategoryId(category);\r\n  if (!categoryId) return;\r\n\r\n  try {\r\n    const categoryQuery = new AV.Query('Category');\r\n    const freshCategory = await categoryQuery.get(categoryId);\r\n    \r\n    const currentCount = freshCategory.get('questionCount') || 0;\r\n    const newCount = Math.max(0, currentCount + change);\r\n    \r\n    freshCategory.set('questionCount', newCount);\r\n    await freshCategory.save();\r\n    \r\n    console.log(`分类 ${freshCategory.get('name')} 题目数量立即更新: ${currentCount} -> ${newCount}`);\r\n  } catch (error) {\r\n    console.error(`立即更新分类 ${categoryId} 题目数量失败:`, error);\r\n  }\r\n};\r\n\r\n/**\r\n * 刷新缓存 - 重新获取所有数据并更新缓存\r\n */\r\nexport const refreshCache = async () => {\r\n  try {\r\n    console.log('🔄 开始刷新题目缓存');\r\n    const questions = await getAllQuestions();\r\n    await cacheService.cacheQuestions(questions);\r\n    console.log('✅ 题目缓存刷新完成');\r\n    return questions;\r\n  } catch (error) {\r\n    console.error('❌ 刷新缓存失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 导出辅助函数\r\nexport { batchUpdateCategoryCounts, createCategoryPointer };","// components/OfflineIndicator.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { offlineService } from '../services/offlineService';\r\nimport { cacheService } from '../services/cacheService'; // 确保从正确的文件导入\r\nimport './OfflineIndicator.css';\r\n\r\nconst OfflineIndicator = () => {\r\n  const [isOnline, setIsOnline] = useState(true);\r\n  const [cacheStatus, setCacheStatus] = useState({});\r\n\r\n  useEffect(() => {\r\n    // 初始状态\r\n    setIsOnline(offlineService.isOnlineMode());\r\n    setCacheStatus(cacheService.getCacheStatus());\r\n\r\n    // 监听网络状态变化\r\n    const handleOnline = () => setIsOnline(true);\r\n    const handleOffline = () => setIsOnline(false);\r\n\r\n    offlineService.addEventListener('online', handleOnline);\r\n    offlineService.addEventListener('offline', handleOffline);\r\n\r\n    // 定期更新缓存状态\r\n    const interval = setInterval(() => {\r\n      setCacheStatus(cacheService.getCacheStatus());\r\n    }, 5000);\r\n\r\n    return () => {\r\n      offlineService.removeEventListener('online', handleOnline);\r\n      offlineService.removeEventListener('offline', handleOffline);\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  if (isOnline) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"offline-indicator\">\r\n      <div className=\"offline-content\">\r\n        <div className=\"offline-icon\">📶</div>\r\n        <div className=\"offline-text\">\r\n          <strong>离线模式</strong>\r\n          <span>使用缓存的题目数据</span>\r\n          {cacheStatus.hasCache && (\r\n            <span className=\"cache-info\">\r\n              已缓存 {cacheStatus.count} 道题目\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OfflineIndicator;","// components/CacheManagementTab.jsx\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { cacheService } from '../services/cacheService';\r\nimport { offlineService } from '../services/offlineService';\r\nimport './CacheManagementTab.css';\r\n\r\n// 防抖钩子\r\nconst useDebounce = (value, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  \r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    \r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n  \r\n  return debouncedValue;\r\n};\r\n\r\n// 节流钩子\r\nconst useThrottle = (value, limit) => {\r\n  const [throttledValue, setThrottledValue] = useState(value);\r\n  const lastRan = useRef(Date.now());\r\n  \r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      if (Date.now() - lastRan.current >= limit) {\r\n        setThrottledValue(value);\r\n        lastRan.current = Date.now();\r\n      }\r\n    }, limit - (Date.now() - lastRan.current));\r\n    \r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, limit]);\r\n  \r\n  return throttledValue;\r\n};\r\n\r\nconst CacheManagementTab = ({ \r\n  questions = [], \r\n  onCacheUpdate,\r\n  currentUser \r\n}) => {\r\n  const navigate = useNavigate();\r\n  \r\n  // 状态管理\r\n  const [cacheStatus, setCacheStatus] = useState({});\r\n  const [syncing, setSyncing] = useState(false);\r\n  const [isOnline, setIsOnline] = useState(true);\r\n  const [cacheSettings, setCacheSettings] = useState({\r\n    cacheLimit: 30,\r\n    autoCache: true,\r\n    cacheStrategy: 'recent'\r\n  });\r\n  const [tempCacheLimit, setTempCacheLimit] = useState(30);\r\n  const [showSettings, setShowSettings] = useState(false);\r\n\r\n  // 防抖和节流\r\n  const debouncedCacheLimit = useDebounce(tempCacheLimit, 300);\r\n  const throttledCacheLimit = useThrottle(tempCacheLimit, 100);\r\n\r\n  // 初始化\r\n  useEffect(() => {\r\n    const status = cacheService.getCacheStatus();\r\n    setCacheStatus(status);\r\n    setCacheSettings(prev => ({\r\n      ...prev,\r\n      cacheLimit: cacheService.getCacheLimit()\r\n    }));\r\n    setTempCacheLimit(cacheService.getCacheLimit());\r\n    \r\n    // 网络状态监听\r\n    setIsOnline(offlineService.isOnlineMode());\r\n    \r\n    const handleOnline = () => setIsOnline(true);\r\n    const handleOffline = () => setIsOnline(false);\r\n    \r\n    offlineService.addEventListener('online', handleOnline);\r\n    offlineService.addEventListener('offline', handleOffline);\r\n    \r\n    return () => {\r\n      offlineService.removeEventListener('online', handleOnline);\r\n      offlineService.removeEventListener('offline', handleOffline);\r\n    };\r\n  }, []);\r\n\r\n  // 防抖更新设置\r\n  useEffect(() => {\r\n    if (debouncedCacheLimit !== cacheSettings.cacheLimit) {\r\n      setCacheSettings(prev => ({\r\n        ...prev,\r\n        cacheLimit: debouncedCacheLimit\r\n      }));\r\n      cacheService.setCacheLimit(debouncedCacheLimit);\r\n    }\r\n  }, [debouncedCacheLimit, cacheSettings.cacheLimit]);\r\n\r\n  // 手动缓存题目\r\n  const handleManualCache = useCallback(async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    setSyncing(true);\r\n    try {\r\n      const success = await cacheService.cacheQuestions(questions);\r\n      if (success) {\r\n        const newStatus = cacheService.getCacheStatus();\r\n        setCacheStatus(newStatus);\r\n        onCacheUpdate?.(newStatus);\r\n        \r\n        // 显示成功消息\r\n        setTimeout(() => {\r\n          // 可以添加 Toast 通知\r\n        }, 100);\r\n      }\r\n    } catch (error) {\r\n      console.error('缓存失败:', error);\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  }, [currentUser, questions, onCacheUpdate]);\r\n\r\n  // 清理缓存\r\n  const handleClearCache = useCallback(() => {\r\n    cacheService.clearCache();\r\n    const newStatus = cacheService.getCacheStatus();\r\n    setCacheStatus(newStatus);\r\n    onCacheUpdate?.(newStatus);\r\n  }, [onCacheUpdate]);\r\n\r\n  // 滑块变化处理\r\n  const handleSliderChange = useCallback((value) => {\r\n    setTempCacheLimit(value);\r\n  }, []);\r\n\r\n  // 缓存设置模态框\r\n  const CacheSettingsModal = () => (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h3>⚙️ 缓存设置</h3>\r\n          <button\r\n            className=\"close-btn\"\r\n            onClick={() => setShowSettings(false)}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"cache-settings-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"cacheLimit\">\r\n              缓存题目数量: <span className=\"limit-value\">{throttledCacheLimit}</span> 题\r\n            </label>\r\n            \r\n            <div className=\"slider-container\">\r\n              <input\r\n                id=\"cacheLimit\"\r\n                type=\"range\"\r\n                min=\"10\"\r\n                max=\"100\"\r\n                step=\"10\"\r\n                value={tempCacheLimit}\r\n                onChange={(e) => {\r\n                  const value = parseInt(e.target.value);\r\n                  handleSliderChange(value);\r\n                }}\r\n                onInput={(e) => {\r\n                  const value = parseInt(e.target.value);\r\n                  const progress = ((value - 10) / 90) * 100;\r\n                  e.target.style.setProperty('--slider-progress', `${progress}%`);\r\n                }}\r\n                className=\"cache-limit-slider\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"slider-labels\">\r\n              <span>10</span>\r\n              <span>30</span>\r\n              <span>50</span>\r\n              <span>70</span>\r\n              <span>90</span>\r\n              <span>100</span>\r\n            </div>\r\n            \r\n            <div className=\"setting-feedback\">\r\n              {tempCacheLimit !== cacheSettings.cacheLimit ? (\r\n                <span>🔄 将更新为: {tempCacheLimit} 题</span>\r\n              ) : (\r\n                <span>✅ 当前设置: {cacheSettings.cacheLimit} 题</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-actions\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"cancel-btn\"\r\n              onClick={() => setShowSettings(false)}\r\n            >\r\n              取消\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"submit-btn\"\r\n              onClick={() => {\r\n                cacheService.setCacheLimit(tempCacheLimit);\r\n                setShowSettings(false);\r\n              }}\r\n            >\r\n              保存设置\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <section className=\"cache-management-section\">\r\n      <div className=\"container\">\r\n        {/* 缓存状态概览 */}\r\n        <div className=\"cache-overview\">\r\n          <div className=\"cache-header\">\r\n            <h2>💾 缓存管理</h2>\r\n            <p>管理离线缓存数据，确保在无网络环境下也能正常使用</p>\r\n          </div>\r\n          \r\n          <div className=\"cache-stats-cards\">\r\n            <div className=\"cache-stat-card\">\r\n              <div className=\"stat-icon\">📦</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">\r\n                  {cacheStatus.hasCache ? cacheStatus.count : 0}\r\n                </div>\r\n                <div className=\"stat-label\">已缓存题目</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"cache-stat-card\">\r\n              <div className=\"stat-icon\">⚡</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">\r\n                  {cacheSettings.cacheLimit}\r\n                </div>\r\n                <div className=\"stat-label\">缓存限制</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"cache-stat-card\">\r\n              <div className=\"stat-icon\">🕒</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">\r\n                  {cacheStatus.hasCache ? '7天' : '无'}\r\n                </div>\r\n                <div className=\"stat-label\">缓存有效期</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"cache-stat-card\">\r\n              <div className=\"stat-icon\">🌐</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">\r\n                  {isOnline ? '在线' : '离线'}\r\n                </div>\r\n                <div className=\"stat-label\">网络状态</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 缓存操作区域 */}\r\n        <div className=\"cache-actions-panel\">\r\n          <div className=\"cache-action-group\">\r\n            <h3>缓存操作</h3>\r\n            <div className=\"action-buttons\">\r\n              <button\r\n                onClick={handleManualCache}\r\n                disabled={syncing || !isOnline}\r\n                className={`cache-action-btn primary ${syncing ? 'loading' : ''}`}\r\n              >\r\n                {syncing ? (\r\n                  <>\r\n                    <div className=\"loading-spinner\"></div>\r\n                    缓存中...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <span className=\"btn-icon\">💾</span>\r\n                    立即缓存题目\r\n                  </>\r\n                )}\r\n              </button>\r\n              \r\n              <button\r\n                onClick={handleClearCache}\r\n                disabled={!cacheStatus.hasCache}\r\n                className=\"cache-action-btn secondary\"\r\n              >\r\n                <span className=\"btn-icon\">🗑️</span>\r\n                清理缓存\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => setShowSettings(true)}\r\n                className=\"cache-action-btn outline\"\r\n              >\r\n                <span className=\"btn-icon\">⚙️</span>\r\n                缓存设置\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 缓存预览 */}\r\n          {cacheStatus.hasCache && (\r\n            <div className=\"cache-preview\">\r\n              <h3>缓存预览</h3>\r\n              <div className=\"preview-content\">\r\n                <p>已缓存 {cacheStatus.count} 道题目，点击查看离线题目：</p>\r\n                <button \r\n                  onClick={() => navigate('/offline/questions')}\r\n                  className=\"view-offline-btn\"\r\n                >\r\n                  📚 查看离线题目 ({cacheStatus.count})\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* 缓存提示 */}\r\n          <div className=\"cache-tips\">\r\n            <h3>使用提示</h3>\r\n            <ul>\r\n              <li>💡 缓存题目后可在无网络环境下查看和复习</li>\r\n              <li>⏰ 缓存数据有效期为7天，过期后自动清理</li>\r\n              <li>📱 建议在网络良好时进行缓存操作</li>\r\n              <li>🔄 题目更新后建议重新缓存以获取最新内容</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 设置模态框 */}\r\n      {showSettings && <CacheSettingsModal />}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CacheManagementTab;","// components/ReviewReminderSection.jsx\r\nimport React, { useState } from 'react';\r\nimport AV from 'leancloud-storage';\r\nimport './ReviewReminderSection.css';\r\n\r\nconst ReviewReminderSection = ({\r\n  reviewQuestions,\r\n  setReviewQuestions,\r\n  reviewThreshold,\r\n  setReviewThreshold,\r\n  showReviewSettings,\r\n  setShowReviewSettings,\r\n  onQuestionClick, // 添加这个prop\r\n  onUpdateQuestionTime,\r\n  questions\r\n}) => {\r\n  const [selectedUrgency, setSelectedUrgency] = useState('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [updatingQuestions, setUpdatingQuestions] = useState(new Set());\r\n  \r\n  // 添加用户状态\r\n  const [currentUser, setCurrentUser] = useState(AV.User.current());\r\n\r\n  // 格式化时间显示\r\n  const formatTimeAgo = (date) => {\r\n    const now = new Date();\r\n    const diffMs = now - new Date(date);\r\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n    const diffWeeks = Math.floor(diffDays / 7);\r\n    const diffMonths = Math.floor(diffDays / 30);\r\n\r\n    if (diffDays === 0) return '今天';\r\n    if (diffDays === 1) return '昨天';\r\n    if (diffDays < 7) return `${diffDays}天前`;\r\n    if (diffWeeks < 4) return `${diffWeeks}周前`;\r\n    return `${diffMonths}月前`;\r\n  };\r\n\r\n  // 获取紧急程度 - 修改后的版本：1天=急需，3天=建议，5天=稍后\r\n  const getUrgencyLevel = (question) => {\r\n    // 使用 lastReviewedAt 字段，如果不存在则使用 createdAt\r\n    const lastReviewed = new Date(question.lastReviewedAt || question.createdAt);\r\n    const daysAgo = Math.floor((new Date() - lastReviewed) / (1000 * 60 * 60 * 24));\r\n    \r\n    if (daysAgo >= 5) return 'high';     // 5天及以上 = 急需复习\r\n    if (daysAgo >= 3) return 'medium';   // 3-4天 = 建议复习\r\n    return 'low';                        // 1-2天 = 可稍后复习\r\n  };\r\n\r\n  // 获取紧急程度颜色\r\n  const getUrgencyColor = (urgency) => {\r\n    switch (urgency) {\r\n      case 'high': return '#ff6b6b';\r\n      case 'medium': return '#ffa726';\r\n      case 'low': return '#4ecdc4';\r\n      default: return '#95a5a6';\r\n    }\r\n  };\r\n\r\n  // 获取紧急程度文本\r\n  const getUrgencyText = (urgency) => {\r\n    switch (urgency) {\r\n      case 'high': return '急需复习';\r\n      case 'medium': return '建议复习';\r\n      case 'low': return '可稍后复习';\r\n      default: return '未知';\r\n    }\r\n  };\r\n\r\n  // 获取紧急程度对应的天数描述\r\n  const getUrgencyDaysDescription = (urgency) => {\r\n    switch (urgency) {\r\n      case 'high': return '5天以上未复习';\r\n      case 'medium': return '3-4天未复习';\r\n      case 'low': return '1-2天未复习';\r\n      default: return '';\r\n    }\r\n  };\r\n\r\n  // 处理立即复习 - 修复版本\r\n  const handleReviewNow = async (questionId, e) => {\r\n    e.stopPropagation(); // 阻止事件冒泡，避免触发卡片点击\r\n    \r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    \r\n\r\n    // 验证题目是否存在\r\n    const question = questions.find(q => q.id === questionId);\r\n    if (!question) {\r\n      console.error('未找到题目:', questionId);\r\n      alert('题目不存在，请刷新页面重试');\r\n      return;\r\n    }\r\n\r\n\r\n    // 添加到更新中的集合\r\n    setUpdatingQuestions(prev => new Set(prev).add(questionId));\r\n    \r\n    try {\r\n      console.log('开始调用 onUpdateQuestionTime...');\r\n      \r\n      // 1. 首先更新题目的复习时间\r\n      await onUpdateQuestionTime(questionId);\r\n      \r\n      console.log('onUpdateQuestionTime 调用成功');\r\n      \r\n      // 2. 从复习列表中移除该题目\r\n      setReviewQuestions(prev => {\r\n        const newList = prev.filter(q => q.id !== questionId);\r\n        console.log('从复习列表移除后:', newList.length);\r\n        return newList;\r\n      });\r\n      \r\n      console.log('准备跳转到题目...');\r\n      \r\n      // 3. 找到题目信息并跳转到分类页面\r\n      if (question && question.category) {\r\n        console.log('跳转到分类:', question.category.id);\r\n        \r\n        // 调用父组件传递的跳转函数\r\n        if (onQuestionClick) {\r\n          onQuestionClick(questionId);\r\n        } else {\r\n          // 备用跳转逻辑\r\n          handleQuestionClick(question);\r\n        }\r\n      } else {\r\n        console.warn('无法找到题目对应的分类信息');\r\n        alert('复习时间已更新，但无法跳转到题目位置');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('更新复习时间失败:', error);\r\n      console.error('错误详情:', {\r\n        questionId,\r\n        currentUser: currentUser?.id,\r\n        errorMessage: error.message\r\n      });\r\n      \r\n      // 更详细的错误处理\r\n      let errorMessage = '更新失败，请重试';\r\n      \r\n      if (error.message.includes('permission')) {\r\n        errorMessage = '更新失败：没有权限修改此题目';\r\n      } else if (error.message.includes('Object not found')) {\r\n        errorMessage = '更新失败：题目不存在或已被删除';\r\n      } else if (error.message.includes('未找到对应的题目')) {\r\n        errorMessage = '更新失败：本地数据中未找到该题目';\r\n      } else if (error.message.includes('reserved')) {\r\n        errorMessage = '更新失败：数据字段冲突，请刷新页面重试';\r\n      }\r\n      \r\n      alert(errorMessage);\r\n    } finally {\r\n      // 从更新中的集合移除\r\n      setUpdatingQuestions(prev => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(questionId);\r\n        return newSet;\r\n      });\r\n    }\r\n  };\r\n\r\n  // 处理稍后提醒\r\n  const handlePostpone = (questionId, e) => {\r\n    e.stopPropagation();\r\n    // 这里可以添加更复杂的逻辑，比如推迟到明天等\r\n    alert('已推迟提醒，该题目将在明天再次出现在复习列表中');\r\n  };\r\n\r\n  // 处理题目点击 - 跳转到分类详情页\r\n  const handleQuestionClick = (question) => {\r\n    if (!question.category?.id) {\r\n      console.warn('题目没有分类信息，无法跳转');\r\n      alert('该题目没有分类信息，无法跳转');\r\n      return;\r\n    }\r\n\r\n    // 构建跳转URL\r\n    const categoryUrl = `/category/${question.category.id}`;\r\n    \r\n    // 使用 navigate 或 window.location 进行跳转\r\n    if (window.history.pushState) {\r\n      window.history.pushState(null, '', categoryUrl);\r\n      // 触发路由变化\r\n      window.dispatchEvent(new PopStateEvent('popstate'));\r\n    } else {\r\n      window.location.href = categoryUrl;\r\n    }\r\n    \r\n    // 可以添加一个滚动到特定题目的逻辑\r\n    // 这里需要在 CategoryDetailPage 中添加相应的处理\r\n    setTimeout(() => {\r\n      // 触发自定义事件，让 CategoryDetailPage 知道要滚动到哪个题目\r\n      window.dispatchEvent(new CustomEvent('scrollToQuestion', { \r\n        detail: { questionId: question.id } \r\n      }));\r\n    }, 100);\r\n  };\r\n\r\n  // 过滤题目\r\n  const filteredQuestions = reviewQuestions.filter(question => {\r\n    const matchesSearch = question.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         (question.category?.name || '').toLowerCase().includes(searchTerm.toLowerCase());\r\n    \r\n    if (selectedUrgency === 'all') return matchesSearch;\r\n    \r\n    const urgency = getUrgencyLevel(question);\r\n    return matchesSearch && urgency === selectedUrgency;\r\n  });\r\n\r\n  // 按紧急程度分组 - 使用新的天数标准\r\n  const questionsByUrgency = {\r\n    high: filteredQuestions.filter(q => getUrgencyLevel(q) === 'high'),    // 5天以上\r\n    medium: filteredQuestions.filter(q => getUrgencyLevel(q) === 'medium'), // 3-4天\r\n    low: filteredQuestions.filter(q => getUrgencyLevel(q) === 'low')        // 1-2天\r\n  };\r\n\r\n  // 获取进度百分比\r\n  const getProgressPercentage = () => {\r\n    const totalQuestions = questions.length;\r\n    const reviewedQuestions = totalQuestions - reviewQuestions.length;\r\n    return totalQuestions > 0 ? (reviewedQuestions / totalQuestions) * 100 : 0;\r\n  };\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <section className=\"review-reminder-section\">\r\n        <div className=\"container\">\r\n          <div className=\"auth-required-container\">\r\n            <div className=\"auth-required-icon\">🔐</div>\r\n            <h2>请先登录</h2>\r\n            <p>登录后即可查看复习提醒</p>\r\n            <div className=\"auth-required-actions\">\r\n              <button \r\n                onClick={() => window.dispatchEvent(new CustomEvent('showAuthModal'))}\r\n                className=\"login-btn\"\r\n              >\r\n                立即登录\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"review-reminder-section\">\r\n      <div className=\"container\">\r\n        {/* 用户欢迎信息 */}\r\n        <div className=\"user-welcome-banner\">\r\n          <h3>📚 复习提醒 - {currentUser.getUsername()}</h3>\r\n          <p>及时复习是巩固知识的关键，以下是需要您关注的题目</p>\r\n        </div>\r\n\r\n        {/* 头部统计信息 */}\r\n        <div className=\"review-header\">\r\n          <div className=\"review-stats\">\r\n            <div className=\"stat-card urgent\">\r\n              <div className=\"stat-icon\">🔥</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">{questionsByUrgency.high.length}</div>\r\n                <div className=\"stat-label\">急需复习</div>\r\n                <div className=\"stat-description\">5天以上</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stat-card medium\">\r\n              <div className=\"stat-icon\">⚠️</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">{questionsByUrgency.medium.length}</div>\r\n                <div className=\"stat-label\">建议复习</div>\r\n                <div className=\"stat-description\">3-4天</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stat-card low\">\r\n              <div className=\"stat-icon\">💡</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">{questionsByUrgency.low.length}</div>\r\n                <div className=\"stat-label\">可稍后复习</div>\r\n                <div className=\"stat-description\">1-2天</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stat-card total\">\r\n              <div className=\"stat-icon\">📚</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">{reviewQuestions.length}</div>\r\n                <div className=\"stat-label\">待复习题目</div>\r\n                <div className=\"stat-description\">总计</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 进度条 */}\r\n          <div className=\"review-progress\">\r\n            <div className=\"progress-header\">\r\n              <span>复习进度</span>\r\n              <span>{Math.round(getProgressPercentage())}%</span>\r\n            </div>\r\n            <div className=\"progress-bar\">\r\n              <div \r\n                className=\"progress-fill\"\r\n                style={{ width: `${getProgressPercentage()}%` }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"progress-stats\">\r\n              <span>{questions.length - reviewQuestions.length} / {questions.length} 题目已及时复习</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 控制面板 */}\r\n        <div className=\"review-controls\">\r\n          <div className=\"controls-left\">\r\n            <div className=\"search-box\">\r\n              <span className=\"search-icon\">🔍</span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"搜索题目或分类...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"search-input\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"urgency-filter\">\r\n              <button\r\n                className={`urgency-btn ${selectedUrgency === 'all' ? 'active' : ''}`}\r\n                onClick={() => setSelectedUrgency('all')}\r\n              >\r\n                全部\r\n              </button>\r\n              <button\r\n                className={`urgency-btn high ${selectedUrgency === 'high' ? 'active' : ''}`}\r\n                onClick={() => setSelectedUrgency('high')}\r\n              >\r\n                🔥 急需 (5天+)\r\n              </button>\r\n              <button\r\n                className={`urgency-btn medium ${selectedUrgency === 'medium' ? 'active' : ''}`}\r\n                onClick={() => setSelectedUrgency('medium')}\r\n              >\r\n                ⚠️ 建议 (3-4天)\r\n              </button>\r\n              <button\r\n                className={`urgency-btn low ${selectedUrgency === 'low' ? 'active' : ''}`}\r\n                onClick={() => setSelectedUrgency('low')}\r\n              >\r\n                💡 稍后 (1-2天)\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"controls-right\">\r\n            <button\r\n              className=\"settings-btn\"\r\n              onClick={() => setShowReviewSettings(true)}\r\n            >\r\n              ⚙️ 复习设置\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 复习设置弹窗 */}\r\n        {showReviewSettings && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h3>复习提醒设置</h3>\r\n                <button \r\n                  className=\"close-btn\"\r\n                  onClick={() => setShowReviewSettings(false)}\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"settings-content\">\r\n                <div className=\"setting-item\">\r\n                  <label htmlFor=\"reviewThreshold\">\r\n                    复习提醒阈值\r\n                    <span className=\"hint\">（超过这个天数的题目会出现在复习列表中）</span>\r\n                  </label>\r\n                  <div className=\"threshold-control\">\r\n                    <input\r\n                      id=\"reviewThreshold\"\r\n                      type=\"range\"\r\n                      min=\"1\"\r\n                      max=\"30\"\r\n                      step=\"1\"\r\n                      value={reviewThreshold}\r\n                      onChange={(e) => setReviewThreshold(parseInt(e.target.value))}\r\n                      className=\"threshold-slider\"\r\n                    />\r\n                    <span className=\"threshold-value\">{reviewThreshold} 天</span>\r\n                  </div>\r\n                  <div className=\"threshold-presets\">\r\n                    {[1, 3, 5, 7, 14, 30].map(days => (\r\n                      <button\r\n                        key={days}\r\n                        className={`preset-btn ${reviewThreshold === days ? 'active' : ''}`}\r\n                        onClick={() => setReviewThreshold(days)}\r\n                      >\r\n                        {days}天\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"urgency-explanation\">\r\n                  <h4>📋 紧急程度说明</h4>\r\n                  <div className=\"urgency-levels\">\r\n                    <div className=\"urgency-level high\">\r\n                      <span className=\"urgency-color\" style={{backgroundColor: '#ff6b6b'}}></span>\r\n                      <div className=\"urgency-info\">\r\n                        <strong>急需复习 (红色)</strong>\r\n                        <span>5天以上未复习的题目</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"urgency-level medium\">\r\n                      <span className=\"urgency-color\" style={{backgroundColor: '#ffa726'}}></span>\r\n                      <div className=\"urgency-info\">\r\n                        <strong>建议复习 (橙色)</strong>\r\n                        <span>3-4天未复习的题目</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"urgency-level low\">\r\n                      <span className=\"urgency-color\" style={{backgroundColor: '#4ecdc4'}}></span>\r\n                      <div className=\"urgency-info\">\r\n                        <strong>可稍后复习 (青色)</strong>\r\n                        <span>1-2天未复习的题目</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                \r\n              </div>\r\n              \r\n              <div className=\"modal-actions\">\r\n                <button\r\n                  className=\"cancel-btn\"\r\n                  onClick={() => setShowReviewSettings(false)}\r\n                >\r\n                  取消\r\n                </button>\r\n                <button\r\n                  className=\"confirm-btn\"\r\n                  onClick={() => setShowReviewSettings(false)}\r\n                >\r\n                  确认设置\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 题目列表 */}\r\n        <div className=\"review-questions\">\r\n          {filteredQuestions.length === 0 ? (\r\n            <div className=\"empty-review-state\">\r\n              <div className=\"empty-icon\">🎉</div>\r\n              <h3>太棒了！没有需要复习的题目</h3>\r\n              <p>继续保持良好的复习习惯，或者调整复习设置来查看更多题目</p>\r\n              <button\r\n                className=\"adjust-settings-btn\"\r\n                onClick={() => setShowReviewSettings(true)}\r\n              >\r\n                调整复习设置\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"questions-grid\">\r\n              {filteredQuestions.map((question, index) => {\r\n                const urgency = getUrgencyLevel(question);\r\n                const urgencyColor = getUrgencyColor(urgency);\r\n                // 使用 lastReviewedAt 字段\r\n                const lastReviewed = new Date(question.lastReviewedAt || question.createdAt);\r\n                const daysAgo = Math.floor((new Date() - lastReviewed) / (1000 * 60 * 60 * 24));\r\n                const isUpdating = updatingQuestions.has(question.id);\r\n                \r\n                return (\r\n                  <div\r\n                    key={question.id}\r\n                    className={`review-question-card ${isUpdating ? 'updating' : ''}`}\r\n                    onClick={() => handleQuestionClick(question)}\r\n                    style={{ '--urgency-color': urgencyColor }}\r\n                  >\r\n                    <div className=\"card-header\">\r\n                      <div className=\"urgency-indicator\" style={{ backgroundColor: urgencyColor }}></div>\r\n                      <div className=\"question-meta\">\r\n                        <span className=\"urgency-badge\" style={{ backgroundColor: urgencyColor }}>\r\n                          {getUrgencyText(urgency)}\r\n                        </span>\r\n                        <span className=\"category-tag\">\r\n                          {question.category?.name || '未分类'}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"time-info\">\r\n                        <span className=\"last-reviewed\">\r\n                          上次复习: {formatTimeAgo(question.lastReviewedAt || question.createdAt)}\r\n                        </span>\r\n                        <span className=\"days-ago\">({daysAgo}天前)</span>\r\n                        <span className=\"urgency-description\">\r\n                          {getUrgencyDaysDescription(urgency)}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"card-content\">\r\n                      <h4 className=\"question-title\">{question.title}</h4>\r\n                      \r\n                      {question.detailedAnswer && (\r\n                        <div className=\"answer-preview\">\r\n                          {question.detailedAnswer.substring(0, 100)}...\r\n                        </div>\r\n                      )}\r\n                      \r\n                      <div className=\"question-tags\">\r\n                        <span className={`difficulty-tag difficulty-${question.difficulty}`}>\r\n                          {question.difficulty === 'easy' ? '简单' : \r\n                           question.difficulty === 'medium' ? '中等' : '困难'}\r\n                        </span>\r\n                        {question.tags && question.tags.slice(0, 3).map((tag, tagIndex) => (\r\n                          <span key={tagIndex} className=\"tag\">\r\n                            #{tag}\r\n                          </span>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"card-footer\">\r\n                      <div className=\"review-actions\">\r\n                        <button \r\n                          className=\"review-now-btn\"\r\n                          onClick={(e) => handleReviewNow(question.id, e)}\r\n                          disabled={isUpdating}\r\n                        >\r\n                          {isUpdating ? '🔄 更新中...' : '🔍 立即复习'}\r\n                        </button>\r\n                        <button \r\n                          className=\"postpone-btn\"\r\n                          onClick={(e) => handlePostpone(question.id, e)}\r\n                          disabled={isUpdating}\r\n                        >\r\n                          ⏰ 稍后提醒\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {isUpdating && (\r\n                      <div className=\"updating-overlay\">\r\n                        <div className=\"updating-spinner\"></div>\r\n                        <span>更新中...</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ReviewReminderSection;","import React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport { useVirtualizer } from '@tanstack/react-virtual';\r\nimport { getQuestionsBatch } from '../services/questionService';\r\nimport './CalendarTooltip.css';\r\n\r\nconst CalendarTooltip = ({ \r\n  dayData, \r\n  position, \r\n  onClose,\r\n  isVisible \r\n}) => {\r\n  const tooltipRef = useRef(null);\r\n  const queryClient = useQueryClient();\r\n  const [cachedQuestions, setCachedQuestions] = useState([]);\r\n  const [itemHeights, setItemHeights] = useState(new Map());\r\n\r\n  // 批量获取问题数据的查询\r\n  const { data: questionsData, isLoading } = useQuery({\r\n    queryKey: ['day-questions-batch', dayData?.date?.toISOString(), dayData?.questions?.map(q => q.id).join(',')],\r\n    queryFn: async () => {\r\n      if (!dayData?.questions?.length) return [];\r\n      \r\n      // 检查缓存中已有的数据\r\n      const cachedQuestions = [];\r\n      const missingQuestionIds = [];\r\n      \r\n      dayData.questions.forEach(question => {\r\n        const cached = queryClient.getQueryData(['question', question.id]);\r\n        if (cached) {\r\n          cachedQuestions.push(cached);\r\n        } else {\r\n          missingQuestionIds.push(question.id);\r\n        }\r\n      });\r\n      \r\n      // 如果有缺失的数据，批量获取\r\n      if (missingQuestionIds.length > 0) {\r\n        try {\r\n          const batchResults = await getQuestionsBatch(missingQuestionIds);\r\n          // 将批量获取的数据存入缓存\r\n          batchResults.forEach(question => {\r\n            queryClient.setQueryData(['question', question.id], question);\r\n          });\r\n          return [...cachedQuestions, ...batchResults];\r\n        } catch (error) {\r\n          console.warn('批量获取题目失败，使用基础数据:', error);\r\n          // 失败时使用基础数据\r\n          const fallbackQuestions = dayData.questions.map(q => \r\n            queryClient.getQueryData(['question', q.id]) || q\r\n          );\r\n          return fallbackQuestions;\r\n        }\r\n      }\r\n      \r\n      return cachedQuestions;\r\n    },\r\n    enabled: isVisible && !!dayData?.questions?.length,\r\n    staleTime: 10 * 60 * 1000,\r\n    cacheTime: 30 * 60 * 1000,\r\n    retry: 1,\r\n    retryDelay: 1000,\r\n  });\r\n\r\n  // 缓存更新\r\n  useEffect(() => {\r\n    if (questionsData && questionsData.length > 0) {\r\n      setCachedQuestions(questionsData);\r\n    } else if (dayData?.questions) {\r\n      setCachedQuestions(dayData.questions);\r\n    }\r\n  }, [questionsData, dayData?.questions]);\r\n\r\n  // 虚拟化容器引用\r\n  const parentRef = useRef(null);\r\n\r\n  // 使用固定高度避免无限循环\r\n  const virtualizer = useVirtualizer({\r\n    count: cachedQuestions.length,\r\n    getScrollElement: () => parentRef.current,\r\n    estimateSize: () => 140, // 固定高度，避免动态测量导致的循环\r\n    overscan: 5,\r\n  });\r\n\r\n  // 点击外部关闭\r\n  const handleClickOutside = useCallback((event) => {\r\n    if (tooltipRef.current && !tooltipRef.current.contains(event.target)) {\r\n      onClose();\r\n    }\r\n  }, [onClose]);\r\n\r\n  useEffect(() => {\r\n    if (isVisible) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }\r\n  }, [isVisible, handleClickOutside]);\r\n\r\n  // ESC键关闭\r\n  const handleEscape = useCallback((event) => {\r\n    if (event.key === 'Escape') {\r\n      onClose();\r\n    }\r\n  }, [onClose]);\r\n\r\n  useEffect(() => {\r\n    if (isVisible) {\r\n      document.addEventListener('keydown', handleEscape);\r\n      return () => document.removeEventListener('keydown', handleEscape);\r\n    }\r\n  }, [isVisible, handleEscape]);\r\n\r\n  if (!isVisible || !dayData) return null;\r\n\r\n  const virtualQuestions = virtualizer.getVirtualItems();\r\n  const totalQuestions = dayData.questions?.length || 0;\r\n\r\n  return (\r\n    <div \r\n      ref={tooltipRef}\r\n      className=\"calendar-tooltip\"\r\n      style={{\r\n        left: `${Math.min(position.x, window.innerWidth - 500)}px`,\r\n        top: `${position.y}px`,\r\n        transform: 'translateX(-50%)'\r\n      }}\r\n    >\r\n      <div className=\"tooltip-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"date-display\">\r\n            <span className=\"date-day\">{dayData.date.getDate()}</span>\r\n            <div className=\"date-info\">\r\n              <span className=\"date-weekday\">\r\n                {dayData.date.toLocaleDateString('zh-CN', { weekday: 'long' })}\r\n              </span>\r\n              <span className=\"date-full\">\r\n                {dayData.date.toLocaleDateString('zh-CN', { \r\n                  year: 'numeric', \r\n                  month: 'long',\r\n                  day: 'numeric'\r\n                })}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"stats-badge\">\r\n            <span className=\"stat-icon\">📚</span>\r\n            <span className=\"stat-count\">{totalQuestions}</span>\r\n            <span className=\"stat-label\">道题目</span>\r\n          </div>\r\n        </div>\r\n        <button \r\n          className=\"tooltip-close-btn\"\r\n          onClick={onClose}\r\n          aria-label=\"关闭\"\r\n        >\r\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\r\n            <path d=\"M12.707 3.293a1 1 0 00-1.414 0L8 6.586 4.707 3.293a1 1 0 00-1.414 1.414L6.586 8l-3.293 3.293a1 1 0 101.414 1.414L8 9.414l3.293 3.293a1 1 0 001.414-1.414L9.414 8l3.293-3.293a1 1 0 000-1.414z\"/>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"tooltip-content\">\r\n        {isLoading ? (\r\n          <div className=\"loading-state\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <span className=\"loading-text\">加载题目中...</span>\r\n          </div>\r\n        ) : cachedQuestions.length > 0 ? (\r\n          <div \r\n            ref={parentRef}\r\n            className=\"questions-virtual-container\"\r\n            style={{\r\n              height: '500px',\r\n              overflow: 'auto'\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: `${virtualizer.getTotalSize()}px`,\r\n                width: '100%',\r\n                position: 'relative'\r\n              }}\r\n            >\r\n              {virtualQuestions.map((virtualRow) => {\r\n                const question = cachedQuestions[virtualRow.index];\r\n                \r\n                return (\r\n                  <div\r\n                    key={question.id}\r\n                    className=\"question-virtual-item\"\r\n                    style={{\r\n                      position: 'absolute',\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: '100%',\r\n                      height: `${virtualRow.size}px`,\r\n                      transform: `translateY(${virtualRow.start}px)`\r\n                    }}\r\n                  >\r\n                    <QuestionItem \r\n                      question={question} \r\n                      index={virtualRow.index}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"empty-state\">\r\n            <div className=\"empty-icon\">📝</div>\r\n            <h4 className=\"empty-title\">这一天没有学习记录</h4>\r\n            <p className=\"empty-description\">开始记录你的学习进度吧</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {cachedQuestions.length > 0 && (\r\n        <div className=\"tooltip-footer\">\r\n          <div className=\"footer-stats\">\r\n            <span className=\"virtual-info\">\r\n              显示 {virtualQuestions.length} / {totalQuestions} 道题目\r\n            </span>\r\n            <span className=\"scroll-hint\">滚动查看更多</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"tooltip-arrow\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 简化的单个题目项组件 - 移除动态高度测量\r\nconst QuestionItem = React.memo(({ question, index }) => {\r\n  const getDifficultyColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#10b981';\r\n      case 'medium': return '#f59e0b';\r\n      case 'hard': return '#ef4444';\r\n      default: return '#6b7280';\r\n    }\r\n  };\r\n\r\n  const getDifficultyText = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '简单';\r\n      case 'medium': return '中等';\r\n      case 'hard': return '困难';\r\n      default: return '未知';\r\n    }\r\n  };\r\n\r\n  const formatTime = (date) => {\r\n    return new Date(date).toLocaleTimeString('zh-CN', {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-item\">\r\n      <div className=\"question-main\">\r\n        <div className=\"question-header\">\r\n          <div className=\"question-meta\">\r\n            <span className=\"question-index\">#{index + 1}</span>\r\n            <span \r\n              className=\"difficulty-badge\"\r\n              style={{ \r\n                backgroundColor: getDifficultyColor(question.difficulty),\r\n                color: 'white'\r\n              }}\r\n            >\r\n              {getDifficultyText(question.difficulty)}\r\n            </span>\r\n            <span className=\"question-time\">\r\n              {formatTime(question.createdAt)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <h4 className=\"question-title\">{question.title}</h4>\r\n        \r\n        <div className=\"question-category\">\r\n          <span className=\"category-tag\">\r\n            {question.category?.name || '未分类'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nQuestionItem.displayName = 'QuestionItem';\r\n\r\nexport default CalendarTooltip;","// Documents.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Documents.css';\r\n\r\nconst Documents = () => {\r\n  const [selectedDoc, setSelectedDoc] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentQuoteIndex, setCurrentQuoteIndex] = useState(0);\r\n\r\n  // 技术名言数据\r\n  const techQuotes = [\r\n    {\r\n      text: \"任何足够先进的技术都与魔法无异。\",\r\n      author: \"亚瑟·C·克拉克\",\r\n      category: \"科技哲学\"\r\n    },\r\n    {\r\n      text: \"代码就像是幽默，当你需要解释它时，它就不再有趣了。\",\r\n      author: \"Cory House\",\r\n      category: \"编程\"\r\n    },\r\n    {\r\n      text: \"首先，解决问题。然后，编写代码。\",\r\n      author: \"John Johnson\",\r\n      category: \"开发方法\"\r\n    },\r\n    {\r\n      text: \"编程不是关于你知道什么，而是关于你能弄清楚什么。\",\r\n      author: \"Chris Pine\",\r\n      category: \"学习\"\r\n    },\r\n    {\r\n      text: \"简单性是可靠性的先决条件。\",\r\n      author: \"Edsger W. Dijkstra\",\r\n      category: \"软件工程\"\r\n    },\r\n    {\r\n      text: \"测试只能证明 bug 的存在，而不能证明它们的不存在。\",\r\n      author: \"Edsger W. Dijkstra\",\r\n      category: \"测试\"\r\n    },\r\n    {\r\n      text: \"最好的错误信息是根本不需要错误信息。\",\r\n      author: \"Jef Raskin\",\r\n      category: \"用户体验\"\r\n    },\r\n    {\r\n      text: \"过早优化是万恶之源。\",\r\n      author: \"Donald Knuth\",\r\n      category: \"性能优化\"\r\n    },\r\n    {\r\n      text: \"代码的阅读次数远多于编写次数。\",\r\n      author: \"Guido van Rossum\",\r\n      category: \"代码质量\"\r\n    },\r\n    {\r\n      text: \"完美不是在没有东西可加时达到的，而是在没有东西可拿走时达到的。\",\r\n      author: \"Antoine de Saint-Exupéry\",\r\n      category: \"设计\"\r\n    },\r\n    {\r\n      text: \"计算机科学的核心是解决问题。\",\r\n      author: \"Abelson and Sussman\",\r\n      category: \"计算机科学\"\r\n    },\r\n    {\r\n      text: \"未来已经到来，只是分布不均。\",\r\n      author: \"William Gibson\",\r\n      category: \"科技创新\"\r\n    },\r\n    {\r\n      text: \"最危险的代码是你看不到问题的代码。\",\r\n      author: \"Douglas Crockford\",\r\n      category: \"代码安全\"\r\n    },\r\n    {\r\n      text: \"编程是理解的艺术。\",\r\n      author: \"Kristen Nygaard\",\r\n      category: \"编程哲学\"\r\n    },\r\n    {\r\n      text: \"技术应该改善生活，而不是支配生活。\",\r\n      author: \"Tim Cook\",\r\n      category: \"科技伦理\"\r\n    }\r\n  ];\r\n\r\n  // 自动轮播名言\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentQuoteIndex((prevIndex) => \r\n        prevIndex === techQuotes.length - 1 ? 0 : prevIndex + 1\r\n      );\r\n    }, 5000); // 每5秒切换一次\r\n\r\n    return () => clearInterval(interval);\r\n  }, [techQuotes.length]);\r\n\r\n  // 手动切换名言\r\n  const nextQuote = () => {\r\n    setCurrentQuoteIndex((prevIndex) => \r\n      prevIndex === techQuotes.length - 1 ? 0 : prevIndex + 1\r\n    );\r\n  };\r\n\r\n  const prevQuote = () => {\r\n    setCurrentQuoteIndex((prevIndex) => \r\n      prevIndex === 0 ? techQuotes.length - 1 : prevIndex - 1\r\n    );\r\n  };\r\n\r\n  // 扩展的知名文档数据（专注于前端和后端）\r\n  const documents = [\r\n    // 前端框架\r\n    {\r\n      id: 1,\r\n      title: 'React 官方文档',\r\n      description: '用于构建用户界面的 JavaScript 库',\r\n      category: '前端框架',\r\n      url: 'https://react.dev',\r\n      icon: '⚛️'\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Vue.js 文档',\r\n      description: '渐进式 JavaScript 框架',\r\n      category: '前端框架',\r\n      url: 'https://vuejs.org',\r\n      icon: '🟢'\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Angular 文档',\r\n      description: 'Google 开发的前端框架',\r\n      category: '前端框架',\r\n      url: 'https://angular.io',\r\n      icon: '🅰️'\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Svelte 文档',\r\n      description: '编译时框架，无虚拟DOM',\r\n      category: '前端框架',\r\n      url: 'https://svelte.dev',\r\n      icon: '⚡'\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'SolidJS 文档',\r\n      description: '用于构建用户界面的声明式 JavaScript 库',\r\n      category: '前端框架',\r\n      url: 'https://solidjs.com',\r\n      icon: '🔷'\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Next.js 文档',\r\n      description: 'React 全栈框架',\r\n      category: '前端框架',\r\n      url: 'https://nextjs.org',\r\n      icon: '⏭️'\r\n    },\r\n    {\r\n      id: 7,\r\n      title: 'Nuxt.js 文档',\r\n      description: 'Vue.js 全栈框架',\r\n      category: '前端框架',\r\n      url: 'https://nuxtjs.org',\r\n      icon: '🔥'\r\n    },\r\n\r\n    // 前端状态管理\r\n    {\r\n      id: 8,\r\n      title: 'Redux 文档',\r\n      description: 'JavaScript 应用状态容器',\r\n      category: '前端状态管理',\r\n      url: 'https://redux.js.org',\r\n      icon: '📦'\r\n    },\r\n    {\r\n      id: 9,\r\n      title: 'Zustand 文档',\r\n      description: '小型、快速、可扩展的状态管理',\r\n      category: '前端状态管理',\r\n      url: 'https://github.com/pmndrs/zustand',\r\n      icon: '🐻'\r\n    },\r\n    {\r\n      id: 10,\r\n      title: 'MobX 文档',\r\n      description: '简单、可扩展的状态管理',\r\n      category: '前端状态管理',\r\n      url: 'https://mobx.js.org',\r\n      icon: '🔄'\r\n    },\r\n    {\r\n      id: 11,\r\n      title: 'Vuex 文档',\r\n      description: 'Vue.js 的状态管理库',\r\n      category: '前端状态管理',\r\n      url: 'https://vuex.vuejs.org',\r\n      icon: '🏪'\r\n    },\r\n\r\n    // CSS 框架和预处理器\r\n    {\r\n      id: 12,\r\n      title: 'Tailwind CSS 文档',\r\n      description: '实用优先的 CSS 框架',\r\n      category: 'CSS 框架',\r\n      url: 'https://tailwindcss.com',\r\n      icon: '🎨'\r\n    },\r\n    {\r\n      id: 13,\r\n      title: 'Bootstrap 文档',\r\n      description: '最流行的前端框架',\r\n      category: 'CSS 框架',\r\n      url: 'https://getbootstrap.com',\r\n      icon: '🎯'\r\n    },\r\n    {\r\n      id: 14,\r\n      title: 'Sass 文档',\r\n      description: '专业级 CSS 扩展语言',\r\n      category: 'CSS 框架',\r\n      url: 'https://sass-lang.com',\r\n      icon: '💎'\r\n    },\r\n    {\r\n      id: 15,\r\n      title: 'Less 文档',\r\n      description: 'CSS 预处理器',\r\n      category: 'CSS 框架',\r\n      url: 'http://lesscss.org',\r\n      icon: '➖'\r\n    },\r\n    {\r\n      id: 16,\r\n      title: 'Styled Components',\r\n      description: 'CSS-in-JS 样式库',\r\n      category: 'CSS 框架',\r\n      url: 'https://styled-components.com',\r\n      icon: '💅'\r\n    },\r\n\r\n    // 前端构建工具\r\n    {\r\n      id: 17,\r\n      title: 'Webpack 文档',\r\n      description: '模块打包工具',\r\n      category: '前端构建工具',\r\n      url: 'https://webpack.js.org',\r\n      icon: '📦'\r\n    },\r\n    {\r\n      id: 18,\r\n      title: 'Vite 文档',\r\n      description: '下一代前端构建工具',\r\n      category: '前端构建工具',\r\n      url: 'https://vitejs.dev',\r\n      icon: '⚡'\r\n    },\r\n    {\r\n      id: 19,\r\n      title: 'Parcel 文档',\r\n      description: '零配置构建工具',\r\n      category: '前端构建工具',\r\n      url: 'https://parceljs.org',\r\n      icon: '📮'\r\n    },\r\n    {\r\n      id: 20,\r\n      title: 'Rollup 文档',\r\n      description: 'JavaScript 模块打包器',\r\n      category: '前端构建工具',\r\n      url: 'https://rollupjs.org',\r\n      icon: '🔄'\r\n    },\r\n\r\n    // 前端测试\r\n    {\r\n      id: 21,\r\n      title: 'Jest 文档',\r\n      description: 'JavaScript 测试框架',\r\n      category: '前端测试',\r\n      url: 'https://jestjs.io',\r\n      icon: '🎭'\r\n    },\r\n    {\r\n      id: 22,\r\n      title: 'Cypress 文档',\r\n      description: '端到端测试框架',\r\n      category: '前端测试',\r\n      url: 'https://docs.cypress.io',\r\n      icon: '🎯'\r\n    },\r\n    {\r\n      id: 23,\r\n      title: 'Testing Library',\r\n      description: 'DOM 测试工具库',\r\n      category: '前端测试',\r\n      url: 'https://testing-library.com',\r\n      icon: '🧪'\r\n    },\r\n    {\r\n      id: 24,\r\n      title: 'Vitest 文档',\r\n      description: '基于 Vite 的测试框架',\r\n      category: '前端测试',\r\n      url: 'https://vitest.dev',\r\n      icon: '⚡'\r\n    },\r\n\r\n    // 后端框架 (Node.js)\r\n    {\r\n      id: 25,\r\n      title: 'Express.js 文档',\r\n      description: 'Node.js Web 应用框架',\r\n      category: '后端框架',\r\n      url: 'https://expressjs.com',\r\n      icon: '🚂'\r\n    },\r\n    {\r\n      id: 26,\r\n      title: 'Koa 文档',\r\n      description: '下一代 Node.js 框架',\r\n      category: '后端框架',\r\n      url: 'https://koajs.com',\r\n      icon: '🎋'\r\n    },\r\n    {\r\n      id: 27,\r\n      title: 'NestJS 文档',\r\n      description: '用于构建高效、可扩展的服务器端应用',\r\n      category: '后端框架',\r\n      url: 'https://nestjs.com',\r\n      icon: '🪺'\r\n    },\r\n    {\r\n      id: 28,\r\n      title: 'Fastify 文档',\r\n      description: '快速且低开销的 Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://fastify.io',\r\n      icon: '🚀'\r\n    },\r\n    {\r\n      id: 29,\r\n      title: 'Hapi 文档',\r\n      description: '丰富的框架用于构建应用和服务',\r\n      category: '后端框架',\r\n      url: 'https://hapi.dev',\r\n      icon: '🎯'\r\n    },\r\n\r\n    // 后端框架 (Python)\r\n    {\r\n      id: 30,\r\n      title: 'Django 文档',\r\n      description: 'Python Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://docs.djangoproject.com',\r\n      icon: '🎸'\r\n    },\r\n    {\r\n      id: 31,\r\n      title: 'Flask 文档',\r\n      description: 'Python 微框架',\r\n      category: '后端框架',\r\n      url: 'https://flask.palletsprojects.com',\r\n      icon: '🍶'\r\n    },\r\n    {\r\n      id: 32,\r\n      title: 'FastAPI 文档',\r\n      description: '现代、快速的 Python Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://fastapi.tiangolo.com',\r\n      icon: '⚡'\r\n    },\r\n\r\n    // 后端框架 (Java)\r\n    {\r\n      id: 33,\r\n      title: 'Spring 文档',\r\n      description: 'Java 应用框架',\r\n      category: '后端框架',\r\n      url: 'https://spring.io/docs',\r\n      icon: '🌱'\r\n    },\r\n    {\r\n      id: 34,\r\n      title: 'Spring Boot 文档',\r\n      description: '简化 Spring 应用开发',\r\n      category: '后端框架',\r\n      url: 'https://spring.io/projects/spring-boot',\r\n      icon: '👢'\r\n    },\r\n\r\n    // 后端框架 (其他语言)\r\n    {\r\n      id: 35,\r\n      title: 'Laravel 文档',\r\n      description: 'PHP Web 应用框架',\r\n      category: '后端框架',\r\n      url: 'https://laravel.com/docs',\r\n      icon: '🔨'\r\n    },\r\n    {\r\n      id: 36,\r\n      title: 'Ruby on Rails 文档',\r\n      description: 'Ruby Web 应用框架',\r\n      category: '后端框架',\r\n      url: 'https://rubyonrails.org',\r\n      icon: '💎'\r\n    },\r\n    {\r\n      id: 37,\r\n      title: 'ASP.NET Core 文档',\r\n      description: '.NET Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://docs.microsoft.com/aspnet/core',\r\n      icon: '🌐'\r\n    },\r\n    {\r\n      id: 38,\r\n      title: 'Gin 文档',\r\n      description: 'Go 语言 Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://gin-gonic.com',\r\n      icon: '🍸'\r\n    },\r\n\r\n    // 数据库和 ORM\r\n    {\r\n      id: 39,\r\n      title: 'MySQL 文档',\r\n      description: 'MySQL 数据库官方文档',\r\n      category: '数据库',\r\n      url: 'https://dev.mysql.com/doc',\r\n      icon: '🐬'\r\n    },\r\n    {\r\n      id: 40,\r\n      title: 'PostgreSQL 文档',\r\n      description: 'PostgreSQL 数据库文档',\r\n      category: '数据库',\r\n      url: 'https://www.postgresql.org/docs',\r\n      icon: '🐘'\r\n    },\r\n    {\r\n      id: 41,\r\n      title: 'MongoDB 文档',\r\n      description: 'MongoDB NoSQL 数据库文档',\r\n      category: '数据库',\r\n      url: 'https://docs.mongodb.com',\r\n      icon: '🍃'\r\n    },\r\n    {\r\n      id: 42,\r\n      title: 'Redis 文档',\r\n      description: 'Redis 内存数据结构存储',\r\n      category: '数据库',\r\n      url: 'https://redis.io/documentation',\r\n      icon: '🔴'\r\n    },\r\n    {\r\n      id: 43,\r\n      title: 'Prisma 文档',\r\n      description: '下一代 Node.js TypeScript ORM',\r\n      category: '数据库',\r\n      url: 'https://www.prisma.io',\r\n      icon: '🛡️'\r\n    },\r\n    {\r\n      id: 44,\r\n      title: 'Sequelize 文档',\r\n      description: 'Node.js 的 ORM',\r\n      category: '数据库',\r\n      url: 'https://sequelize.org',\r\n      icon: '🗄️'\r\n    },\r\n    {\r\n      id: 45,\r\n      title: 'Mongoose 文档',\r\n      description: 'MongoDB 对象建模工具',\r\n      category: '数据库',\r\n      url: 'https://mongoosejs.com',\r\n      icon: '🐍'\r\n    },\r\n\r\n    // API 和微服务\r\n    {\r\n      id: 46,\r\n      title: 'GraphQL 文档',\r\n      description: 'API 查询语言',\r\n      category: 'API 和微服务',\r\n      url: 'https://graphql.org',\r\n      icon: '📈'\r\n    },\r\n    {\r\n      id: 47,\r\n      title: 'Apollo 文档',\r\n      description: 'GraphQL 平台',\r\n      category: 'API 和微服务',\r\n      url: 'https://www.apollographql.com',\r\n      icon: '🚀'\r\n    },\r\n    {\r\n      id: 48,\r\n      title: 'Swagger 文档',\r\n      description: 'API 设计和文档工具',\r\n      category: 'API 和微服务',\r\n      url: 'https://swagger.io',\r\n      icon: '📝'\r\n    },\r\n    {\r\n      id: 49,\r\n      title: 'gRPC 文档',\r\n      description: '高性能 RPC 框架',\r\n      category: 'API 和微服务',\r\n      url: 'https://grpc.io',\r\n      icon: '🔧'\r\n    },\r\n    {\r\n      id: 50,\r\n      title: 'RESTful API 指南',\r\n      description: 'REST API 最佳实践',\r\n      category: 'API 和微服务',\r\n      url: 'https://restfulapi.net',\r\n      icon: '🌐'\r\n    },\r\n\r\n    // 认证和授权\r\n    {\r\n      id: 51,\r\n      title: 'JWT 文档',\r\n      description: 'JSON Web Tokens 官方文档',\r\n      category: '认证和授权',\r\n      url: 'https://jwt.io',\r\n      icon: '🔐'\r\n    },\r\n    {\r\n      id: 52,\r\n      title: 'OAuth 2.0 指南',\r\n      description: 'OAuth 2.0 授权框架',\r\n      category: '认证和授权',\r\n      url: 'https://oauth.net/2',\r\n      icon: '🔑'\r\n    },\r\n    {\r\n      id: 53,\r\n      title: 'Passport.js 文档',\r\n      description: 'Node.js 认证中间件',\r\n      category: '认证和授权',\r\n      url: 'http://www.passportjs.org',\r\n      icon: '🛂'\r\n    },\r\n    {\r\n      id: 54,\r\n      title: 'Auth0 文档',\r\n      description: '身份验证和授权平台',\r\n      category: '认证和授权',\r\n      url: 'https://auth0.com/docs',\r\n      icon: '🔒'\r\n    },\r\n\r\n    // 部署和 DevOps\r\n    {\r\n      id: 55,\r\n      title: 'Docker 文档',\r\n      description: '容器化平台文档',\r\n      category: '部署和 DevOps',\r\n      url: 'https://docs.docker.com',\r\n      icon: '🐳'\r\n    },\r\n    {\r\n      id: 56,\r\n      title: 'Kubernetes 文档',\r\n      description: '容器编排系统文档',\r\n      category: '部署和 DevOps',\r\n      url: 'https://kubernetes.io/docs',\r\n      icon: '⚓'\r\n    },\r\n    {\r\n      id: 57,\r\n      title: 'PM2 文档',\r\n      description: 'Node.js 进程管理器',\r\n      category: '部署和 DevOps',\r\n      url: 'https://pm2.keymetrics.io',\r\n      icon: '🔄'\r\n    },\r\n    {\r\n      id: 58,\r\n      title: 'Nginx 文档',\r\n      description: 'Web 服务器和反向代理',\r\n      category: '部署和 DevOps',\r\n      url: 'https://nginx.org/en/docs',\r\n      icon: '🔧'\r\n    },\r\n\r\n    // 编程语言\r\n    {\r\n      id: 59,\r\n      title: 'TypeScript 文档',\r\n      description: 'TypeScript 语言文档',\r\n      category: '编程语言',\r\n      url: 'https://www.typescriptlang.org',\r\n      icon: '🔷'\r\n    },\r\n    {\r\n      id: 60,\r\n      title: 'JavaScript MDN',\r\n      description: 'JavaScript 语言参考文档',\r\n      category: '编程语言',\r\n      url: 'https://developer.mozilla.org/javascript',\r\n      icon: '📜'\r\n    },\r\n    {\r\n      id: 61,\r\n      title: 'Python 官方文档',\r\n      description: 'Python 编程语言官方文档',\r\n      category: '编程语言',\r\n      url: 'https://docs.python.org',\r\n      icon: '🐍'\r\n    },\r\n    {\r\n      id: 62,\r\n      title: 'Node.js 文档',\r\n      description: 'Node.js 运行时文档',\r\n      category: '编程语言',\r\n      url: 'https://nodejs.org',\r\n      icon: '📦'\r\n    },\r\n\r\n    // 工具和包管理\r\n    {\r\n      id: 63,\r\n      title: 'Git 文档',\r\n      description: '分布式版本控制系统',\r\n      category: '开发工具',\r\n      url: 'https://git-scm.com/doc',\r\n      icon: '📚'\r\n    },\r\n    {\r\n      id: 64,\r\n      title: 'NPM 文档',\r\n      description: 'Node 包管理器文档',\r\n      category: '开发工具',\r\n      url: 'https://docs.npmjs.com',\r\n      icon: '📦'\r\n    },\r\n    {\r\n      id: 65,\r\n      title: 'Yarn 文档',\r\n      description: '快速、可靠、安全的依赖管理',\r\n      category: '开发工具',\r\n      url: 'https://yarnpkg.com',\r\n      icon: '🧶'\r\n    },\r\n    {\r\n      id: 66,\r\n      title: 'VS Code 文档',\r\n      description: 'Visual Studio Code 编辑器文档',\r\n      category: '开发工具',\r\n      url: 'https://code.visualstudio.com/docs',\r\n      icon: '💻'\r\n    },\r\n\r\n    // 性能和优化\r\n    {\r\n      id: 67,\r\n      title: 'Lighthouse 文档',\r\n      description: '自动化网站质量评估工具',\r\n      category: '性能和优化',\r\n      url: 'https://developers.google.com/web/tools/lighthouse',\r\n      icon: '💡'\r\n    },\r\n    {\r\n      id: 68,\r\n      title: 'Web Vitals',\r\n      description: '网站用户体验质量指标',\r\n      category: '性能和优化',\r\n      url: 'https://web.dev/vitals',\r\n      icon: '📊'\r\n    },\r\n    {\r\n      id: 69,\r\n      title: 'Bundlephobia',\r\n      description: '检查 npm 包大小对性能的影响',\r\n      category: '性能和优化',\r\n      url: 'https://bundlephobia.com',\r\n      icon: '📦'\r\n    }\r\n  ];\r\n\r\n  // 按类别分组\r\n  const categories = [...new Set(documents.map(doc => doc.category))];\r\n\r\n  // 过滤文档\r\n  const filteredDocs = documents.filter(doc =>\r\n    doc.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    doc.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    doc.category.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleDocClick = (doc) => {\r\n    setSelectedDoc(doc);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedDoc(null);\r\n  };\r\n\r\n  const handleVisitSite = () => {\r\n    if (selectedDoc) {\r\n      window.open(selectedDoc.url, '_blank');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"documents-container\">\r\n      {/* 技术名言轮播屏 */}\r\n      <div className=\"quotes-carousel\">\r\n        <div className=\"carousel-container\">\r\n          <button className=\"carousel-btn prev-btn\" onClick={prevQuote}>\r\n            ‹\r\n          </button>\r\n          \r\n          <div className=\"quote-slide\">\r\n            <div className=\"quote-content\">\r\n              <div className=\"quote-icon\">💭</div>\r\n              <div className=\"quote-text\">\r\n                <p className=\"quote-main\">\"{techQuotes[currentQuoteIndex].text}\"</p>\r\n                <div className=\"quote-meta\">\r\n                  <span className=\"quote-author\">— {techQuotes[currentQuoteIndex].author}</span>\r\n                  <span className=\"quote-category\">{techQuotes[currentQuoteIndex].category}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <button className=\"carousel-btn next-btn\" onClick={nextQuote}>\r\n            ›\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"carousel-indicators\">\r\n          {techQuotes.map((_, index) => (\r\n            <button\r\n              key={index}\r\n              className={`indicator ${index === currentQuoteIndex ? 'active' : ''}`}\r\n              onClick={() => setCurrentQuoteIndex(index)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"documents-header\">\r\n        <h1>📚 开发文档库</h1>\r\n        <p>专注于前端和后端开发文档 - 共 {documents.length} 个资源</p>\r\n        \r\n        <div className=\"search-section\">\r\n          <div className=\"search-box\">\r\n            <span className=\"search-icon\">🔍</span>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"搜索文档名称、描述或类别...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"search-input\"\r\n            />\r\n            {searchTerm && (\r\n              <button \r\n                className=\"clear-search\"\r\n                onClick={() => setSearchTerm('')}\r\n              >\r\n                ✕\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"documents-content\">\r\n        {categories.map(category => {\r\n          const categoryDocs = filteredDocs.filter(doc => doc.category === category);\r\n          \r\n          if (categoryDocs.length === 0) return null;\r\n          \r\n          return (\r\n            <div key={category} className=\"category-section\">\r\n              <h2 className=\"category-title\">\r\n                {category} \r\n                <span className=\"category-count\">({categoryDocs.length})</span>\r\n              </h2>\r\n              <div className=\"documents-grid\">\r\n                {categoryDocs.map(doc => (\r\n                  <div\r\n                    key={doc.id}\r\n                    className=\"document-card\"\r\n                    onClick={() => handleDocClick(doc)}\r\n                  >\r\n                    <div className=\"doc-header\">\r\n                      <div className=\"doc-icon\">{doc.icon}</div>\r\n                      <div className=\"doc-info\">\r\n                        <h3 className=\"doc-title\">{doc.title}</h3>\r\n                        <p className=\"doc-description\">{doc.description}</p>\r\n                        <div className=\"doc-category\">{doc.category}</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"doc-footer\">\r\n                      <button className=\"visit-button\">\r\n                        访问网站 →\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        {filteredDocs.length === 0 && (\r\n          <div className=\"no-results\">\r\n            <div className=\"no-results-icon\">🔍</div>\r\n            <h3>未找到匹配的文档</h3>\r\n            <p>尝试调整搜索关键词</p>\r\n            <button \r\n              className=\"clear-search-btn\"\r\n              onClick={() => setSearchTerm('')}\r\n            >\r\n              清除搜索\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 文档详情模态框 */}\r\n      {selectedDoc && (\r\n        <div className=\"modal-overlay\" onClick={handleCloseModal}>\r\n          <div className=\"modal-content doc-modal\" onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"modal-header\">\r\n              <div className=\"modal-title-section\">\r\n                <span className=\"doc-modal-icon\">{selectedDoc.icon}</span>\r\n                <div>\r\n                  <h3>{selectedDoc.title}</h3>\r\n                  <span className=\"doc-category-badge\">{selectedDoc.category}</span>\r\n                </div>\r\n              </div>\r\n              <button className=\"close-btn\" onClick={handleCloseModal}>\r\n                ×\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"modal-body\">\r\n              <p className=\"doc-modal-description\">{selectedDoc.description}</p>\r\n              \r\n              <div className=\"doc-url-section\">\r\n                <label>网站地址:</label>\r\n                <div className=\"url-display\">\r\n                  <span className=\"url-text\">{selectedDoc.url}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"modal-actions\">\r\n              <button className=\"cancel-btn\" onClick={handleCloseModal}>\r\n                关闭\r\n              </button>\r\n              <button className=\"visit-site-btn\" onClick={handleVisitSite}>\r\n                🌐 访问网站\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Documents;","// services/communityService.js\r\nimport AV from 'leancloud-storage';\r\n\r\nexport class CommunityService {\r\n  // 获取帖子列表\r\n  static async getPosts(options = {}) {\r\n    const {\r\n      page = 1,\r\n      pageSize = 20,\r\n      sortBy = 'createdAt',\r\n      sortOrder = 'desc',\r\n      keyword = '',\r\n      tag = '',\r\n      authorId = ''\r\n    } = options;\r\n\r\n    const query = new AV.Query('Post');\r\n    query.equalTo('isPublic', true);\r\n    query.equalTo('status', 'published');\r\n    \r\n    // 关键词搜索\r\n    if (keyword) {\r\n      const titleQuery = new AV.Query('Post');\r\n      titleQuery.contains('title', keyword);\r\n      \r\n      const contentQuery = new AV.Query('Post');\r\n      contentQuery.contains('content', keyword);\r\n      \r\n      query = AV.Query.or(titleQuery, contentQuery);\r\n    }\r\n    \r\n    // 标签筛选\r\n    if (tag) {\r\n      query.equalTo('tags', tag);\r\n    }\r\n    \r\n    // 作者筛选\r\n    if (authorId) {\r\n      const author = AV.Object.createWithoutData('_User', authorId);\r\n      query.equalTo('author', author);\r\n    }\r\n    \r\n    query.include('author');\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    query.descending(sortBy);\r\n    \r\n    return query.find();\r\n  }\r\n\r\n  // 创建帖子\r\n  static async createPost(postData) {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) throw new Error('请先登录');\r\n    \r\n    const Post = AV.Object.extend('Post');\r\n    const post = new Post();\r\n    \r\n    post.set('title', postData.title);\r\n    post.set('content', postData.content);\r\n    post.set('author', currentUser);\r\n    post.set('tags', postData.tags || []);\r\n    post.set('isPublic', postData.isPublic !== false);\r\n    post.set('status', 'published');\r\n    post.set('likes', 0);\r\n    post.set('views', 0);\r\n    post.set('commentCount', 0);\r\n    \r\n    return post.save();\r\n  }\r\n\r\n  // 获取帖子详情\r\n  static async getPostById(id) {\r\n    const query = new AV.Query('Post');\r\n    query.include('author');\r\n    const post = await query.get(id);\r\n    \r\n    // 增加浏览数\r\n    post.increment('views', 1);\r\n    await post.save();\r\n    \r\n    return post;\r\n  }\r\n\r\n  // 获取评论\r\n  static async getComments(postId, options = {}) {\r\n    const { page = 1, pageSize = 50 } = options;\r\n    \r\n    const query = new AV.Query('Comment');\r\n    const post = AV.Object.createWithoutData('Post', postId);\r\n    query.equalTo('post', post);\r\n    query.include('author');\r\n    query.include('parent');\r\n    query.ascending('createdAt');\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    \r\n    return query.find();\r\n  }\r\n\r\n  // 添加评论\r\n  static async addComment(postId, content, parentId = null) {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) throw new Error('请先登录');\r\n    \r\n    const Comment = AV.Object.extend('Comment');\r\n    const comment = new Comment();\r\n    \r\n    const post = AV.Object.createWithoutData('Post', postId);\r\n    comment.set('post', post);\r\n    comment.set('author', currentUser);\r\n    comment.set('content', content);\r\n    comment.set('likes', 0);\r\n    \r\n    if (parentId) {\r\n      const parent = AV.Object.createWithoutData('Comment', parentId);\r\n      comment.set('parent', parent);\r\n    }\r\n    \r\n    // 更新帖子的评论数和最后评论时间\r\n    post.increment('commentCount', 1);\r\n    post.set('lastCommentedAt', new Date());\r\n    await post.save();\r\n    \r\n    return comment.save();\r\n  }\r\n\r\n  // 点赞/取消点赞\r\n  static async toggleLike(postId) {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) throw new Error('请先登录');\r\n    \r\n    const Like = AV.Object.extend('Like');\r\n    const query = new AV.Query('Like');\r\n    const post = AV.Object.createWithoutData('Post', postId);\r\n    \r\n    query.equalTo('user', currentUser);\r\n    query.equalTo('post', post);\r\n    \r\n    const existingLike = await query.first();\r\n    \r\n    if (existingLike) {\r\n      // 取消点赞\r\n      await existingLike.destroy();\r\n      \r\n      const postObj = await new AV.Query('Post').get(postId);\r\n      postObj.increment('likes', -1);\r\n      await postObj.save();\r\n      \r\n      return { liked: false };\r\n    } else {\r\n      // 添加点赞\r\n      const like = new Like();\r\n      like.set('user', currentUser);\r\n      like.set('post', post);\r\n      await like.save();\r\n      \r\n      const postObj = await new AV.Query('Post').get(postId);\r\n      postObj.increment('likes', 1);\r\n      await postObj.save();\r\n      \r\n      return { liked: true };\r\n    }\r\n  }\r\n\r\n  // 获取热门标签\r\n  static async getPopularTags(limit = 10) {\r\n    // 这里可以使用 LeanCloud 的聚合查询\r\n    // 简化版本：从所有帖子中统计标签\r\n    const query = new AV.Query('Post');\r\n    query.equalTo('isPublic', true);\r\n    query.equalTo('status', 'published');\r\n    const posts = await query.find();\r\n    \r\n    const tagCount = {};\r\n    posts.forEach(post => {\r\n      const tags = post.get('tags') || [];\r\n      tags.forEach(tag => {\r\n        tagCount[tag] = (tagCount[tag] || 0) + 1;\r\n      });\r\n    });\r\n    \r\n    return Object.entries(tagCount)\r\n      .sort(([,a], [,b]) => b - a)\r\n      .slice(0, limit)\r\n      .map(([tag, count]) => ({ tag, count }));\r\n  }\r\n}","// components/community/CreatePostModal.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport AV from 'leancloud-storage';\r\nimport './CreatePostModal.css';\r\n\r\nconst CreatePostModal = ({ onClose, onSuccess }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    content: '',\r\n    tags: '',\r\n    isPublic: true\r\n  });\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [charCount, setCharCount] = useState({ title: 0, content: 0 });\r\n  const [suggestedTags, setSuggestedTags] = useState([]);\r\n  const textareaRef = useRef(null);\r\n\r\n  const maxLengths = {\r\n    title: 100,\r\n    content: 5000\r\n  };\r\n\r\n  // 热门标签建议\r\n  const popularTags = [\r\n    'JavaScript', 'React', '算法', 'LeetCode', '前端', \r\n    '面试', 'TypeScript', 'Vue', 'CSS', 'Node.js',\r\n    '数据库', '计算机网络', '操作系统', '数据结构'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // 自动调整文本域高度\r\n    if (textareaRef.current) {\r\n      textareaRef.current.style.height = 'auto';\r\n      textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px';\r\n    }\r\n  }, [formData.content]);\r\n\r\n  useEffect(() => {\r\n    // 根据标题内容推荐标签\r\n    if (formData.title.length > 5) {\r\n      const matchedTags = popularTags.filter(tag =>\r\n        formData.title.toLowerCase().includes(tag.toLowerCase())\r\n      );\r\n      setSuggestedTags(matchedTags.slice(0, 3));\r\n    } else {\r\n      setSuggestedTags([]);\r\n    }\r\n  }, [formData.title]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.title.trim()) {\r\n      newErrors.title = '请输入帖子标题';\r\n    } else if (formData.title.length < 5) {\r\n      newErrors.title = '标题至少需要5个字符';\r\n    } else if (formData.title.length > maxLengths.title) {\r\n      newErrors.title = `标题不能超过${maxLengths.title}个字符`;\r\n    }\r\n\r\n    if (!formData.content.trim()) {\r\n      newErrors.content = '请输入帖子内容';\r\n    } else if (formData.content.length < 10) {\r\n      newErrors.content = '内容至少需要10个字符';\r\n    } else if (formData.content.length > maxLengths.content) {\r\n      newErrors.content = `内容不能超过${maxLengths.content}个字符`;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    setCharCount(prev => ({ ...prev, [field]: value.length }));\r\n    \r\n    // 清除对应字段的错误\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const handleTagSuggestionClick = (tag) => {\r\n    const currentTags = formData.tags.split(',').map(t => t.trim()).filter(t => t);\r\n    if (!currentTags.includes(tag)) {\r\n      const newTags = [...currentTags, tag].join(', ');\r\n      handleInputChange('tags', newTags);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      const tagsArray = formData.tags\r\n        .split(',')\r\n        .map(tag => tag.trim())\r\n        .filter(tag => tag)\r\n        .slice(0, 5); // 最多5个标签\r\n\r\n      const postData = {\r\n        title: formData.title.trim(),\r\n        content: formData.content.trim(),\r\n        tags: tagsArray,\r\n        isPublic: formData.isPublic\r\n      };\r\n\r\n      const newPost = await CommunityService.createPost(postData);\r\n      \r\n      // 显示成功消息\r\n      setSubmitting(false);\r\n      onSuccess(newPost);\r\n      \r\n    } catch (error) {\r\n      console.error('发布失败:', error);\r\n      setErrors({ submit: error.message || '发布失败，请重试' });\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const getTitleCharCountColor = () => {\r\n    const ratio = charCount.title / maxLengths.title;\r\n    if (ratio > 0.9) return '#ff6b6b';\r\n    if (ratio > 0.7) return '#ffa726';\r\n    return '#4ecdc4';\r\n  };\r\n\r\n  const getContentCharCountColor = () => {\r\n    const ratio = charCount.content / maxLengths.content;\r\n    if (ratio > 0.9) return '#ff6b6b';\r\n    if (ratio > 0.7) return '#ffa726';\r\n    return '#4ecdc4';\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"create-post-modal\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <div className=\"header-content\">\r\n            <h3>✏️ 发布新帖子</h3>\r\n            <p>分享你的学习心得和经验</p>\r\n          </div>\r\n          <button className=\"close-btn\" onClick={onClose}>\r\n            ✕\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"post-form\">\r\n          {/* 标题输入 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"post-title\">\r\n              帖子标题 *\r\n              <span \r\n                className=\"char-count\"\r\n                style={{ color: getTitleCharCountColor() }}\r\n              >\r\n                {charCount.title}/{maxLengths.title}\r\n              </span>\r\n            </label>\r\n            <input\r\n              id=\"post-title\"\r\n              type=\"text\"\r\n              placeholder=\"请输入有吸引力的标题...\"\r\n              value={formData.title}\r\n              onChange={(e) => handleInputChange('title', e.target.value)}\r\n              className={errors.title ? 'error' : ''}\r\n              maxLength={maxLengths.title}\r\n            />\r\n            {errors.title && <span className=\"error-message\">{errors.title}</span>}\r\n          </div>\r\n\r\n          {/* 内容输入 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"post-content\">\r\n              帖子内容 *\r\n              <span \r\n                className=\"char-count\"\r\n                style={{ color: getContentCharCountColor() }}\r\n              >\r\n                {charCount.content}/{maxLengths.content}\r\n              </span>\r\n            </label>\r\n            <textarea\r\n              ref={textareaRef}\r\n              id=\"post-content\"\r\n              placeholder=\"详细描述你的问题或分享你的经验...（支持 Markdown 格式）\"\r\n              value={formData.content}\r\n              onChange={(e) => handleInputChange('content', e.target.value)}\r\n              className={errors.content ? 'error' : ''}\r\n              maxLength={maxLengths.content}\r\n              rows=\"6\"\r\n            />\r\n            {errors.content && <span className=\"error-message\">{errors.content}</span>}\r\n            \r\n            {/* 内容格式提示 */}\r\n            <div className=\"format-tips\">\r\n              <span className=\"tip-title\">格式提示：</span>\r\n              <span className=\"tip-item\">**粗体**</span>\r\n              <span className=\"tip-item\">*斜体*</span>\r\n              <span className=\"tip-item\">`代码`</span>\r\n              <span className=\"tip-item\">- 列表项</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 标签输入 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"post-tags\">\r\n              标签\r\n              <span className=\"optional\">（可选）</span>\r\n            </label>\r\n            <input\r\n              id=\"post-tags\"\r\n              type=\"text\"\r\n              placeholder=\"输入标签，用逗号分隔（例如：JavaScript,算法,LeetCode）\"\r\n              value={formData.tags}\r\n              onChange={(e) => handleInputChange('tags', e.target.value)}\r\n            />\r\n            \r\n            {/* 标签建议 */}\r\n            {suggestedTags.length > 0 && (\r\n              <div className=\"tag-suggestions\">\r\n                <span className=\"suggestions-label\">推荐标签：</span>\r\n                {suggestedTags.map(tag => (\r\n                  <button\r\n                    key={tag}\r\n                    type=\"button\"\r\n                    className=\"tag-suggestion\"\r\n                    onClick={() => handleTagSuggestionClick(tag)}\r\n                  >\r\n                    {tag}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"tags-hint\">\r\n              最多5个标签，用逗号分隔。合适的标签有助于更多人看到你的帖子。\r\n            </div>\r\n          </div>\r\n\r\n          {/* 发布设置 */}\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-label\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={formData.isPublic}\r\n                onChange={(e) => handleInputChange('isPublic', e.target.checked)}\r\n              />\r\n              <span className=\"checkmark\"></span>\r\n              公开帖子（所有人可见）\r\n            </label>\r\n            <div className=\"privacy-hint\">\r\n              {formData.isPublic \r\n                ? '✅ 你的帖子将对所有用户可见'\r\n                : '🔒 只有你自己可以看到此帖子'\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n          {/* 提交错误 */}\r\n          {errors.submit && (\r\n            <div className=\"submit-error\">\r\n              <span className=\"error-icon\">⚠️</span>\r\n              {errors.submit}\r\n            </div>\r\n          )}\r\n\r\n          {/* 表单操作 */}\r\n          <div className=\"form-actions\">\r\n            <button \r\n              type=\"button\" \r\n              onClick={onClose}\r\n              className=\"cancel-btn\"\r\n              disabled={submitting}\r\n            >\r\n              取消\r\n            </button>\r\n            <button \r\n              type=\"submit\" \r\n              className=\"submit-btn\"\r\n              disabled={submitting}\r\n            >\r\n              {submitting ? (\r\n                <>\r\n                  <div className=\"submit-spinner\"></div>\r\n                  发布中...\r\n                </>\r\n              ) : (\r\n                '🚀 发布帖子'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePostModal;","// components/community/SearchBar.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst SearchBar = ({ onSearch, placeholder = \"搜索帖子标题或内容...\" }) => {\r\n  const [keyword, setKeyword] = useState('');\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const searchInputRef = useRef(null);\r\n\r\n  // 热门搜索建议\r\n  const popularSuggestions = [\r\n    'JavaScript',\r\n    'React',\r\n    '算法',\r\n    'LeetCode',\r\n    '前端',\r\n    '面试',\r\n    'TypeScript',\r\n    'Vue'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // 防抖搜索\r\n    const timeoutId = setTimeout(() => {\r\n      onSearch(keyword);\r\n    }, 300);\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [keyword, onSearch]);\r\n\r\n  const handleSearch = (value) => {\r\n    setKeyword(value);\r\n    setShowSuggestions(value.length > 0);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setKeyword('');\r\n    setShowSuggestions(false);\r\n    onSearch('');\r\n    searchInputRef.current?.focus();\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    setKeyword(suggestion);\r\n    setShowSuggestions(false);\r\n    onSearch(suggestion);\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    setIsFocused(true);\r\n    if (keyword.length > 0) {\r\n      setShowSuggestions(true);\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsFocused(false);\r\n    // 延迟隐藏建议列表，以便点击建议项\r\n    setTimeout(() => setShowSuggestions(false), 200);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Escape') {\r\n      setShowSuggestions(false);\r\n      searchInputRef.current?.blur();\r\n    } else if (e.key === 'Enter') {\r\n      setShowSuggestions(false);\r\n      onSearch(keyword);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <div className={`search-input-container ${isFocused ? 'focused' : ''}`}>\r\n        <div className=\"search-icon\">🔍</div>\r\n        \r\n        <input\r\n          ref={searchInputRef}\r\n          type=\"text\"\r\n          placeholder={placeholder}\r\n          value={keyword}\r\n          onChange={(e) => handleSearch(e.target.value)}\r\n          onFocus={handleFocus}\r\n          onBlur={handleBlur}\r\n          onKeyDown={handleKeyDown}\r\n          className=\"search-input\"\r\n        />\r\n\r\n        {keyword && (\r\n          <button \r\n            className=\"clear-search\"\r\n            onClick={handleClear}\r\n            type=\"button\"\r\n          >\r\n            ✕\r\n          </button>\r\n        )}\r\n\r\n        {/* 搜索建议下拉框 */}\r\n        {showSuggestions && (\r\n          <div className=\"search-suggestions\">\r\n            <div className=\"suggestions-header\">\r\n              <span className=\"suggestions-title\">搜索建议</span>\r\n              <button \r\n                className=\"close-suggestions\"\r\n                onClick={() => setShowSuggestions(false)}\r\n              >\r\n                ✕\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"suggestions-list\">\r\n              {/* 精确匹配建议 */}\r\n              {keyword.length > 0 && (\r\n                <div \r\n                  className=\"suggestion-item exact-match\"\r\n                  onClick={() => handleSuggestionClick(keyword)}\r\n                >\r\n                  <span className=\"suggestion-icon\">🔍</span>\r\n                  <span className=\"suggestion-text\">搜索: \"{keyword}\"</span>\r\n                </div>\r\n              )}\r\n\r\n              {/* 热门搜索建议 */}\r\n              <div className=\"suggestions-section\">\r\n                <div className=\"section-title\">热门搜索</div>\r\n                {popularSuggestions\r\n                  .filter(suggestion => \r\n                    suggestion.toLowerCase().includes(keyword.toLowerCase())\r\n                  )\r\n                  .map((suggestion, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"suggestion-item\"\r\n                      onClick={() => handleSuggestionClick(suggestion)}\r\n                    >\r\n                      <span className=\"suggestion-icon\">🔥</span>\r\n                      <span className=\"suggestion-text\">{suggestion}</span>\r\n                    </div>\r\n                  ))\r\n                }\r\n              </div>\r\n\r\n              {/* 搜索提示 */}\r\n              <div className=\"search-tips\">\r\n                <div className=\"tips-title\">搜索提示</div>\r\n                <div className=\"tips-list\">\r\n                  <div className=\"tip-item\">\r\n                    <span className=\"tip-icon\">💡</span>\r\n                    <span>支持搜索帖子标题、内容和标签</span>\r\n                  </div>\r\n                  <div className=\"tip-item\">\r\n                    <span className=\"tip-icon\">⏎</span>\r\n                    <span>按 Enter 键快速搜索</span>\r\n                  </div>\r\n                  <div className=\"tip-item\">\r\n                    <span className=\"tip-icon\">⎋</span>\r\n                    <span>按 ESC 键清除搜索</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 搜索统计信息 */}\r\n      {keyword && (\r\n        <div className=\"search-stats\">\r\n          <span className=\"stats-text\">\r\n            正在搜索: <strong>\"{keyword}\"</strong>\r\n          </span>\r\n          <button \r\n            className=\"advanced-search-btn\"\r\n            onClick={() => setShowSuggestions(true)}\r\n          >\r\n            高级搜索\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;","// components/community/TagCloud.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport './TagCloud.css';\r\n\r\nconst TagCloud = ({ onTagClick, maxTags = 20 }) => {\r\n  const [tags, setTags] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedTag, setSelectedTag] = useState('');\r\n\r\n  // 默认热门标签（作为回退）\r\n  const defaultTags = [\r\n    { tag: 'JavaScript', count: 25, color: '#f7df1e' },\r\n    { tag: 'React', count: 18, color: '#61dafb' },\r\n    { tag: '算法', count: 22, color: '#4ecdc4' },\r\n    { tag: 'LeetCode', count: 20, color: '#ff6b6b' },\r\n    { tag: '前端', count: 15, color: '#667eea' },\r\n    { tag: '面试', count: 12, color: '#f093fb' },\r\n    { tag: 'TypeScript', count: 10, color: '#3178c6' },\r\n    { tag: 'Vue', count: 8, color: '#41b883' },\r\n    { tag: 'CSS', count: 6, color: '#264de4' },\r\n    { tag: 'Node.js', count: 5, color: '#68a063' },\r\n    { tag: '数据库', count: 7, color: '#ffa726' },\r\n    { tag: '计算机网络', count: 4, color: '#26c6da' },\r\n    { tag: '操作系统', count: 3, color: '#ab47bc' },\r\n    { tag: '数据结构', count: 9, color: '#ec407a' },\r\n    { tag: 'Git', count: 5, color: '#f4511e' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    loadPopularTags();\r\n  }, []);\r\n\r\n  const loadPopularTags = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const popularTags = await CommunityService.getPopularTags(maxTags);\r\n      if (popularTags && popularTags.length > 0) {\r\n        // 为标签添加颜色\r\n        const tagsWithColors = popularTags.map((tagData, index) => ({\r\n          ...tagData,\r\n          color: getTagColor(index)\r\n        }));\r\n        setTags(tagsWithColors);\r\n      } else {\r\n        // 使用默认标签\r\n        setTags(defaultTags.slice(0, maxTags));\r\n      }\r\n    } catch (error) {\r\n      console.error('加载热门标签失败:', error);\r\n      // 使用默认标签作为回退\r\n      setTags(defaultTags.slice(0, maxTags));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 根据索引生成标签颜色\r\n  const getTagColor = (index) => {\r\n    const colors = [\r\n      '#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57',\r\n      '#ff9ff3', '#54a0ff', '#5f27cd', '#00d2d3', '#ff9f43',\r\n      '#f368e0', '#ff9f43', '#a55eea', '#fd79a8', '#e17055',\r\n      '#00b894', '#00cec9', '#0984e3', '#6c5ce7', '#b2bec3'\r\n    ];\r\n    return colors[index % colors.length];\r\n  };\r\n\r\n  // 根据标签数量计算字体大小\r\n  const getTagSize = (count, maxCount) => {\r\n    const sizes = ['xs', 'sm', 'md', 'lg', 'xl'];\r\n    const ratio = count / maxCount;\r\n    \r\n    if (ratio > 0.8) return sizes[4];      // xl\r\n    if (ratio > 0.6) return sizes[3];      // lg\r\n    if (ratio > 0.4) return sizes[2];      // md\r\n    if (ratio > 0.2) return sizes[1];      // sm\r\n    return sizes[0];                       // xs\r\n  };\r\n\r\n  const handleTagClick = (tag) => {\r\n    setSelectedTag(tag === selectedTag ? '' : tag);\r\n    onTagClick(tag === selectedTag ? '' : tag);\r\n  };\r\n\r\n  const handleClearFilter = () => {\r\n    setSelectedTag('');\r\n    onTagClick('');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"tag-cloud-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <span>加载标签中...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const maxCount = Math.max(...tags.map(t => t.count));\r\n  const totalPosts = tags.reduce((sum, tag) => sum + tag.count, 0);\r\n\r\n  return (\r\n    <div className=\"tag-cloud-container\">\r\n      {/* 标签云头部信息 */}\r\n      <div className=\"tag-cloud-header\">\r\n        <div className=\"tag-cloud-stats\">\r\n          <span className=\"stats-text\">\r\n            {tags.length} 个标签 • {totalPosts} 个帖子\r\n          </span>\r\n          {selectedTag && (\r\n            <button \r\n              className=\"clear-filter-btn\"\r\n              onClick={handleClearFilter}\r\n            >\r\n              清除筛选\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 标签云主体 */}\r\n      <div className=\"tag-cloud\">\r\n        {tags.map(({ tag, count, color }) => {\r\n          const size = getTagSize(count, maxCount);\r\n          const isSelected = tag === selectedTag;\r\n          \r\n          return (\r\n            <span\r\n              key={tag}\r\n              className={`tag ${size} ${isSelected ? 'selected' : ''}`}\r\n              style={{\r\n                '--tag-color': color,\r\n                '--tag-bg-color': isSelected ? color : `${color}20`,\r\n                '--tag-border-color': isSelected ? color : `${color}40`\r\n              }}\r\n              onClick={() => handleTagClick(tag)}\r\n              title={`${tag} - ${count} 个帖子`}\r\n            >\r\n              <span className=\"tag-text\">{tag}</span>\r\n              <span className=\"tag-count\">{count}</span>\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* 选中的标签提示 */}\r\n      {selectedTag && (\r\n        <div className=\"selected-tag-info\">\r\n          <span className=\"selected-tag-badge\">\r\n            <span className=\"selected-tag-text\">已选择: {selectedTag}</span>\r\n            <button \r\n              className=\"remove-selection\"\r\n              onClick={handleClearFilter}\r\n            >\r\n              ✕\r\n            </button>\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {/* 标签云说明 */}\r\n      <div className=\"tag-cloud-footer\">\r\n        <div className=\"tag-cloud-tips\">\r\n          <span className=\"tip-icon\">💡</span>\r\n          <span className=\"tip-text\">点击标签筛选相关帖子</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagCloud;","// components/community/CommunityStats.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport AV from 'leancloud-storage';\r\nimport './CommunityStats.css';\r\n\r\nconst CommunityStats = () => {\r\n  const [stats, setStats] = useState({\r\n    totalPosts: 0,\r\n    totalComments: 0,\r\n    totalLikes: 0,\r\n    activeUsers: 0,\r\n    todayPosts: 0,\r\n    trendingTags: []\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadStats();\r\n    // 每5分钟刷新一次数据\r\n    const interval = setInterval(loadStats, 5 * 60 * 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const loadStats = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // 获取帖子总数\r\n      const totalPosts = await new AV.Query('Post')\r\n        .equalTo('status', 'published')\r\n        .count()\r\n        .catch(() => 0);\r\n\r\n      // 获取评论总数\r\n      const totalComments = await new AV.Query('Comment').count().catch(() => 0);\r\n\r\n      // 获取点赞总数（需要从 Like 表统计）\r\n      const totalLikes = await new AV.Query('Like').count().catch(() => 0);\r\n\r\n      // 获取今日帖子数\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      const todayPosts = await new AV.Query('Post')\r\n        .greaterThanOrEqualTo('createdAt', today)\r\n        .count()\r\n        .catch(() => 0);\r\n\r\n      // 获取活跃用户数（最近7天有活动的用户）\r\n      const weekAgo = new Date();\r\n      weekAgo.setDate(weekAgo.getDate() - 7);\r\n      const activeUsers = await new AV.Query('Post')\r\n        .greaterThanOrEqualTo('createdAt', weekAgo)\r\n        .distinct('author')\r\n        .count()\r\n        .catch(() => 0);\r\n\r\n      // 获取热门标签\r\n      const postQuery = new AV.Query('Post');\r\n      const posts = await postQuery\r\n        .equalTo('status', 'published')\r\n        .limit(1000)\r\n        .find()\r\n        .catch(() => []);\r\n\r\n      const tagCount = {};\r\n      posts.forEach(post => {\r\n        const tags = post.get('tags') || [];\r\n        tags.forEach(tag => {\r\n          tagCount[tag] = (tagCount[tag] || 0) + 1;\r\n        });\r\n      });\r\n\r\n      const trendingTags = Object.entries(tagCount)\r\n        .sort(([,a], [,b]) => b - a)\r\n        .slice(0, 5)\r\n        .map(([tag, count]) => ({ tag, count }));\r\n\r\n      setStats({\r\n        totalPosts,\r\n        totalComments,\r\n        totalLikes,\r\n        activeUsers,\r\n        todayPosts,\r\n        trendingTags\r\n      });\r\n      setLastUpdated(new Date());\r\n    } catch (error) {\r\n      console.error('加载统计信息失败:', error);\r\n      // 使用默认数据\r\n      setStats({\r\n        totalPosts: 0,\r\n        totalComments: 0,\r\n        totalLikes: 0,\r\n        activeUsers: 0,\r\n        todayPosts: 0,\r\n        trendingTags: []\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatNumber = (num) => {\r\n    if (num >= 10000) {\r\n      return (num / 10000).toFixed(1) + '万';\r\n    }\r\n    if (num >= 1000) {\r\n      return (num / 1000).toFixed(1) + '千';\r\n    }\r\n    return num.toString();\r\n  };\r\n\r\n  const getGrowthRate = (current, previous) => {\r\n    if (previous === 0) return 100;\r\n    return ((current - previous) / previous * 100).toFixed(1);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"community-stats\">\r\n        <div className=\"stats-header\">\r\n          <h4>📊 社区统计</h4>\r\n          <button className=\"refresh-btn\" onClick={loadStats}>\r\n            🔄\r\n          </button>\r\n        </div>\r\n        <div className=\"stats-loading\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <span>加载统计中...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"community-stats\">\r\n      <div className=\"stats-header\">\r\n        <h4>📊 社区统计</h4>\r\n        <div className=\"header-actions\">\r\n          {lastUpdated && (\r\n            <span className=\"update-time\">\r\n              更新于 {lastUpdated.toLocaleTimeString('zh-CN', { \r\n                hour: '2-digit', \r\n                minute: '2-digit' \r\n              })}\r\n            </span>\r\n          )}\r\n          <button \r\n            className=\"refresh-btn\"\r\n            onClick={loadStats}\r\n            title=\"刷新数据\"\r\n          >\r\n            🔄\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"stats-grid\">\r\n        {/* 帖子统计 */}\r\n        <div className=\"stat-card primary\">\r\n          <div className=\"stat-icon\">📝</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-number\">{formatNumber(stats.totalPosts)}</div>\r\n            <div className=\"stat-label\">总帖子</div>\r\n            <div className=\"stat-subtext\">\r\n              +{stats.todayPosts} 今日\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 评论统计 */}\r\n        <div className=\"stat-card success\">\r\n          <div className=\"stat-icon\">💬</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-number\">{formatNumber(stats.totalComments)}</div>\r\n            <div className=\"stat-label\">总评论</div>\r\n            <div className=\"stat-subtext\">\r\n              互动活跃\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 点赞统计 */}\r\n        <div className=\"stat-card warning\">\r\n          <div className=\"stat-icon\">👍</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-number\">{formatNumber(stats.totalLikes)}</div>\r\n            <div className=\"stat-label\">总点赞</div>\r\n            <div className=\"stat-subtext\">\r\n              社区认可\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 活跃用户 */}\r\n        <div className=\"stat-card info\">\r\n          <div className=\"stat-icon\">👥</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-number\">{formatNumber(stats.activeUsers)}</div>\r\n            <div className=\"stat-label\">活跃用户</div>\r\n            <div className=\"stat-subtext\">\r\n              最近7天\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 热门标签 */}\r\n      {stats.trendingTags.length > 0 && (\r\n        <div className=\"trending-tags\">\r\n          <h5>🔥 热门标签</h5>\r\n          <div className=\"tags-list\">\r\n            {stats.trendingTags.map(({ tag, count }, index) => (\r\n              <div key={tag} className=\"trending-tag\">\r\n                <span className=\"tag-rank\">#{index + 1}</span>\r\n                <span className=\"tag-name\">{tag}</span>\r\n                <span className=\"tag-count\">{count}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 社区状态指示器 */}\r\n      <div className=\"community-health\">\r\n        <div className=\"health-indicator\">\r\n          <div className=\"health-label\">社区活跃度</div>\r\n          <div className=\"health-bar\">\r\n            <div \r\n              className=\"health-fill\"\r\n              style={{ \r\n                width: `${Math.min((stats.todayPosts / 10) * 100, 100)}%`,\r\n                backgroundColor: stats.todayPosts >= 5 ? '#4ecdc4' : \r\n                               stats.todayPosts >= 2 ? '#ffa726' : '#ff6b6b'\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"health-status\">\r\n            {stats.todayPosts >= 5 ? '🔥 非常活跃' :\r\n             stats.todayPosts >= 2 ? '💪 活跃' : '😴 安静'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommunityStats;","// components/community/CommentItem.jsx\r\nimport React, { useState } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport AV from 'leancloud-storage';\r\nimport './CommentItem.css';\r\n\r\n// 格式化时间函数\r\nconst formatTime = (date) => {\r\n  if (!date) return \"刚刚\";\r\n  const now = new Date();\r\n  const diffMs = now - new Date(date);\r\n  const diffMins = Math.floor(diffMs / 60000);\r\n  const diffHours = Math.floor(diffMs / 3600000);\r\n  const diffDays = Math.floor(diffMs / 86400000);\r\n\r\n  if (diffMins < 1) return \"刚刚\";\r\n  if (diffMins < 60) return `${diffMins}分钟前`;\r\n  if (diffHours < 24) return `${diffHours}小时前`;\r\n  if (diffDays < 7) return `${diffDays}天前`;\r\n  return new Date(date).toLocaleDateString('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric'\r\n  });\r\n};\r\n\r\nconst CommentItem = ({ comment, onReply, onUpdate }) => {\r\n  const [likes, setLikes] = useState(comment.get('likes') || 0);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [showActions, setShowActions] = useState(false);\r\n  const [editing, setEditing] = useState(false);\r\n  const [editContent, setEditContent] = useState(comment.get('content') || '');\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  // 获取用户信息\r\n  const getAvatarUrl = () => {\r\n    return comment.get('author')?.get('avatar') || '/default-avatar.png';\r\n  };\r\n\r\n  const getUsername = () => {\r\n    return comment.get('author')?.get('username') || '匿名用户';\r\n  };\r\n\r\n  // 检查当前用户是否是评论作者\r\n  const isAuthor = () => {\r\n    const currentUser = AV.User.current();\r\n    return currentUser && comment.get('author')?.id === currentUser.id;\r\n  };\r\n\r\n  // 处理点赞\r\n  const handleLike = async () => {\r\n    try {\r\n      const result = await CommunityService.toggleLike(comment.id, 'comment');\r\n      setLikes(result.liked ? likes + 1 : Math.max(0, likes - 1));\r\n      setIsLiked(result.liked);\r\n    } catch (error) {\r\n      console.error('点赞评论失败:', error);\r\n    }\r\n  };\r\n\r\n  // 处理回复\r\n  const handleReplyClick = () => {\r\n    onReply(comment);\r\n  };\r\n\r\n  // 处理编辑\r\n  const handleEdit = () => {\r\n    setEditing(true);\r\n    setEditContent(comment.get('content') || '');\r\n  };\r\n\r\n  // 保存编辑\r\n  const handleSaveEdit = async () => {\r\n    if (!editContent.trim()) return;\r\n\r\n    setSaving(true);\r\n    try {\r\n      // 这里需要实现更新评论的 API\r\n      // await CommunityService.updateComment(comment.id, { content: editContent });\r\n      setEditing(false);\r\n      onUpdate(); // 刷新评论列表\r\n    } catch (error) {\r\n      console.error('更新评论失败:', error);\r\n      alert('更新评论失败: ' + error.message);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  // 取消编辑\r\n  const handleCancelEdit = () => {\r\n    setEditing(false);\r\n    setEditContent(comment.get('content') || '');\r\n  };\r\n\r\n  // 处理删除\r\n  const handleDelete = async () => {\r\n    if (!window.confirm('确定要删除这条评论吗？此操作不可撤销。')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 这里需要实现删除评论的 API\r\n      // await CommunityService.deleteComment(comment.id);\r\n      onUpdate(); // 刷新评论列表\r\n    } catch (error) {\r\n      console.error('删除评论失败:', error);\r\n      alert('删除评论失败: ' + error.message);\r\n    }\r\n  };\r\n\r\n  // 渲染评论内容（支持简单的 Markdown）\r\n  const renderContent = () => {\r\n    const content = comment.get('content') || '';\r\n    \r\n    return content\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      .replace(/`(.*?)`/g, '<code>$1</code>')\r\n      .replace(/\\n/g, '<br>');\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"comment-item\"\r\n      onMouseEnter={() => setShowActions(true)}\r\n      onMouseLeave={() => setShowActions(false)}\r\n    >\r\n      {/* 评论头部 */}\r\n      <div className=\"comment-header\">\r\n        <div className=\"comment-author\">\r\n          <img \r\n            src={getAvatarUrl()} \r\n            alt=\"用户头像\"\r\n            className=\"comment-avatar\"\r\n          />\r\n          <div className=\"author-info\">\r\n            <span className=\"author-name\">{getUsername()}</span>\r\n            {isAuthor() && (\r\n              <span className=\"author-badge\">作者</span>\r\n            )}\r\n            <span className=\"comment-time\">\r\n              {formatTime(comment.get('createdAt'))}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 评论操作 */}\r\n        {showActions && (\r\n          <div className=\"comment-actions\">\r\n            <button \r\n              className=\"action-btn reply-btn\"\r\n              onClick={handleReplyClick}\r\n              title=\"回复\"\r\n            >\r\n              ↩️\r\n            </button>\r\n            \r\n            {isAuthor() && (\r\n              <>\r\n                <button \r\n                  className=\"action-btn edit-btn\"\r\n                  onClick={handleEdit}\r\n                  title=\"编辑\"\r\n                >\r\n                  ✏️\r\n                </button>\r\n                <button \r\n                  className=\"action-btn delete-btn\"\r\n                  onClick={handleDelete}\r\n                  title=\"删除\"\r\n                >\r\n                  🗑️\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 评论内容 */}\r\n      <div className=\"comment-content\">\r\n        {editing ? (\r\n          <div className=\"edit-comment\">\r\n            <textarea\r\n              value={editContent}\r\n              onChange={(e) => setEditContent(e.target.value)}\r\n              rows=\"3\"\r\n              className=\"edit-textarea\"\r\n              maxLength=\"1000\"\r\n            />\r\n            <div className=\"edit-actions\">\r\n              <button \r\n                onClick={handleCancelEdit}\r\n                className=\"cancel-edit-btn\"\r\n                disabled={saving}\r\n              >\r\n                取消\r\n              </button>\r\n              <button \r\n                onClick={handleSaveEdit}\r\n                className=\"save-edit-btn\"\r\n                disabled={!editContent.trim() || saving}\r\n              >\r\n                {saving ? '保存中...' : '保存'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div \r\n            className=\"comment-text\"\r\n            dangerouslySetInnerHTML={{ __html: renderContent() }}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {/* 评论底部 */}\r\n      <div className=\"comment-footer\">\r\n        <button \r\n          className={`like-btn ${isLiked ? 'liked' : ''}`}\r\n          onClick={handleLike}\r\n        >\r\n          <span className=\"like-icon\">👍</span>\r\n          <span className=\"like-count\">{likes}</span>\r\n        </button>\r\n\r\n        <button \r\n          className=\"reply-footer-btn\"\r\n          onClick={handleReplyClick}\r\n        >\r\n          回复\r\n        </button>\r\n      </div>\r\n\r\n      {/* 回复指示器 */}\r\n      {comment.get('parent') && (\r\n        <div className=\"reply-indicator\">\r\n          回复 <span className=\"reply-to\">@{comment.get('parent')?.get('author')?.get('username') || '用户'}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentItem;","// components/community/CommentSection.jsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport CommentItem from './CommentItem';\r\nimport AV from 'leancloud-storage';\r\nimport './CommentSection.css';\r\n\r\nconst CommentSection = ({ postId }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [sortBy, setSortBy] = useState('newest'); // newest, oldest, popular\r\n  const [replyingTo, setReplyingTo] = useState(null);\r\n  const textareaRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    loadComments();\r\n  }, [postId, sortBy]);\r\n\r\n  const loadComments = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const commentsData = await CommunityService.getComments(postId);\r\n      \r\n      // 排序评论\r\n      const sortedComments = [...commentsData].sort((a, b) => {\r\n        switch (sortBy) {\r\n          case 'oldest':\r\n            return new Date(a.get('createdAt')) - new Date(b.get('createdAt'));\r\n          case 'popular':\r\n            return (b.get('likes') || 0) - (a.get('likes') || 0);\r\n          case 'newest':\r\n          default:\r\n            return new Date(b.get('createdAt')) - new Date(a.get('createdAt'));\r\n        }\r\n      });\r\n\r\n      setComments(sortedComments);\r\n    } catch (error) {\r\n      console.error('加载评论失败:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmitComment = async () => {\r\n    if (!newComment.trim()) return;\r\n\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      alert('请先登录后再评论');\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      let parentId = null;\r\n      if (replyingTo) {\r\n        parentId = replyingTo.id;\r\n      }\r\n\r\n      await CommunityService.addComment(postId, newComment, parentId);\r\n      \r\n      // 清空输入框\r\n      setNewComment('');\r\n      setReplyingTo(null);\r\n      \r\n      // 重新加载评论\r\n      await loadComments();\r\n      \r\n      // 显示成功提示\r\n      showSuccessMessage('评论发布成功！');\r\n    } catch (error) {\r\n      console.error('发布评论失败:', error);\r\n      alert('发布评论失败: ' + error.message);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleReply = (comment) => {\r\n    setReplyingTo(comment);\r\n    setNewComment(`@${comment.get('author')?.get('username') || '用户'} `);\r\n    textareaRef.current?.focus();\r\n  };\r\n\r\n  const cancelReply = () => {\r\n    setReplyingTo(null);\r\n    setNewComment('');\r\n  };\r\n\r\n  const showSuccessMessage = (message) => {\r\n    // 可以在这里添加更美观的成功提示\r\n    console.log(message);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\r\n      handleSubmitComment();\r\n    }\r\n  };\r\n\r\n  const getCommentCountText = () => {\r\n    const count = comments.length;\r\n    if (count === 0) return '暂无评论';\r\n    if (count === 1) return '1 条评论';\r\n    return `${count} 条评论`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-section\">\r\n      {/* 评论头部 */}\r\n      <div className=\"comment-header\">\r\n        <h4 className=\"comment-title\">\r\n          💬 {getCommentCountText()}\r\n        </h4>\r\n        \r\n        <div className=\"comment-controls\">\r\n          <select \r\n            value={sortBy}\r\n            onChange={(e) => setSortBy(e.target.value)}\r\n            className=\"sort-select\"\r\n          >\r\n            <option value=\"newest\">最新</option>\r\n            <option value=\"oldest\">最早</option>\r\n            <option value=\"popular\">最热</option>\r\n          </select>\r\n          \r\n          <button \r\n            className=\"refresh-comments\"\r\n            onClick={loadComments}\r\n            disabled={loading}\r\n          >\r\n            {loading ? '🔄' : '🔄'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 评论输入框 */}\r\n      <div className=\"comment-input-section\">\r\n        {replyingTo && (\r\n          <div className=\"reply-indicator\">\r\n            <span>回复 @{replyingTo.get('author')?.get('username') || '用户'}</span>\r\n            <button onClick={cancelReply}>取消</button>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"comment-input-wrapper\">\r\n          <textarea\r\n            ref={textareaRef}\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder={replyingTo ? '写下你的回复...' : '写下你的评论...'}\r\n            rows=\"3\"\r\n            className=\"comment-textarea\"\r\n            maxLength=\"1000\"\r\n          />\r\n          \r\n          <div className=\"comment-input-footer\">\r\n            <div className=\"char-count\">\r\n              {newComment.length}/1000\r\n            </div>\r\n            \r\n            <button\r\n              onClick={handleSubmitComment}\r\n              disabled={!newComment.trim() || submitting}\r\n              className=\"submit-comment-btn\"\r\n            >\r\n              {submitting ? (\r\n                <>\r\n                  <div className=\"submit-spinner\"></div>\r\n                  发布中...\r\n                </>\r\n              ) : (\r\n                '发布评论'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"comment-tips\">\r\n          <span className=\"tip\">💡 支持 Markdown 语法</span>\r\n          <span className=\"tip\">⏎ + Ctrl 快速发布</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 评论列表 */}\r\n      <div className=\"comments-list\">\r\n        {loading ? (\r\n          <div className=\"comments-loading\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <span>加载评论中...</span>\r\n          </div>\r\n        ) : comments.length === 0 ? (\r\n          <div className=\"no-comments\">\r\n            <div className=\"no-comments-icon\">💬</div>\r\n            <h5>还没有评论</h5>\r\n            <p>成为第一个评论的人吧！</p>\r\n          </div>\r\n        ) : (\r\n          comments.map(comment => (\r\n            <CommentItem\r\n              key={comment.id}\r\n              comment={comment}\r\n              onReply={handleReply}\r\n              onUpdate={loadComments}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentSection;","// components/community/PostCard.jsx\r\nimport React, { useState } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport CommentSection from './CommentSection';\r\nimport './PostCard.css';\r\n\r\n// 格式化时间函数\r\nconst formatTime = (date) => {\r\n  if (!date) return \"刚刚\";\r\n  const now = new Date();\r\n  const diffMs = now - new Date(date);\r\n  const diffMins = Math.floor(diffMs / 60000);\r\n  const diffHours = Math.floor(diffMs / 3600000);\r\n  const diffDays = Math.floor(diffMs / 86400000);\r\n\r\n  if (diffMins < 1) return \"刚刚\";\r\n  if (diffMins < 60) return `${diffMins}分钟前`;\r\n  if (diffHours < 24) return `${diffHours}小时前`;\r\n  if (diffDays < 7) return `${diffDays}天前`;\r\n  return new Date(date).toLocaleDateString('zh-CN', {\r\n    month: 'short',\r\n    day: 'numeric'\r\n  });\r\n};\r\n\r\nconst PostCard = ({ post }) => {\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [likes, setLikes] = useState(post.get('likes') || 0);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [views, setViews] = useState(post.get('views') || 0);\r\n  \r\n  // 获取用户头像\r\n  const getAvatarUrl = () => {\r\n    return post.get('author')?.get('avatar') || '/default-avatar.png';\r\n  };\r\n\r\n  // 获取用户名\r\n  const getUsername = () => {\r\n    return post.get('author')?.get('username') || '匿名用户';\r\n  };\r\n\r\n  // 处理点赞\r\n  const handleLike = async () => {\r\n    try {\r\n      const result = await CommunityService.toggleLike(post.id);\r\n      setLikes(result.liked ? likes + 1 : Math.max(0, likes - 1));\r\n      setIsLiked(result.liked);\r\n    } catch (error) {\r\n      console.error('点赞失败:', error);\r\n    }\r\n  };\r\n\r\n  // 处理查看评论\r\n  const handleToggleComments = () => {\r\n    setShowComments(!showComments);\r\n    // 增加浏览数（只在第一次展开评论时）\r\n    if (!showComments) {\r\n      setViews(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  // 获取难度颜色\r\n  const getDifficultyColor = () => {\r\n    const difficulty = post.get('difficulty') || 'medium';\r\n    switch (difficulty) {\r\n      case 'easy': return '#52c41a';\r\n      case 'medium': return '#faad14';\r\n      case 'hard': return '#f5222d';\r\n      default: return '#666';\r\n    }\r\n  };\r\n\r\n  // 获取标签颜色\r\n  const getTagColor = (index) => {\r\n    const colors = [\r\n      '#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57',\r\n      '#ff9ff3', '#54a0ff', '#5f27cd', '#00d2d3', '#ff9f43'\r\n    ];\r\n    return colors[index % colors.length];\r\n  };\r\n\r\n  // 渲染内容（支持简单的 Markdown）\r\n  const renderContent = () => {\r\n    const content = post.get('content') || '';\r\n    \r\n    // 简单的 Markdown 处理\r\n    return content\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      .replace(/`(.*?)`/g, '<code>$1</code>')\r\n      .replace(/\\n/g, '<br>');\r\n  };\r\n\r\n  // 获取内容预览\r\n  const getContentPreview = () => {\r\n    const content = post.get('content') || '';\r\n    const plainText = content.replace(/[#*`]/g, '');\r\n    return plainText.length > 150 \r\n      ? plainText.substring(0, 150) + '...' \r\n      : plainText;\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-card\">\r\n      {/* 帖子头部 */}\r\n      <div className=\"post-header\">\r\n        <div className=\"author-section\">\r\n          <img \r\n            src={getAvatarUrl()} \r\n            alt=\"用户头像\"\r\n            className=\"author-avatar\"\r\n            style={{ width: '40px', height: '40px' }} // 内联样式作为备选\r\n\r\n          />\r\n          <div className=\"author-info\">\r\n            <div className=\"author-name\">{getUsername()}</div>\r\n            <div className=\"post-meta\">\r\n              <span className=\"post-time\">\r\n                {formatTime(post.get('createdAt'))}\r\n              </span>\r\n              {post.get('isPinned') && (\r\n                <span className=\"pinned-badge\">📌 置顶</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"post-status\">\r\n          {post.get('difficulty') && (\r\n            <span \r\n              className=\"difficulty-badge\"\r\n              style={{ backgroundColor: getDifficultyColor() }}\r\n            >\r\n              {post.get('difficulty') === 'easy' ? '简单' : \r\n               post.get('difficulty') === 'medium' ? '中等' : '困难'}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 帖子内容 */}\r\n      <div className=\"post-content\">\r\n        <h3 className=\"post-title\">{post.get('title')}</h3>\r\n        \r\n        <div \r\n          className=\"post-body\"\r\n          dangerouslySetInnerHTML={{ __html: renderContent() }}\r\n        />\r\n        \r\n        {/* 内容过长时的阅读更多 */}\r\n        {(post.get('content') || '').length > 150 && !showComments && (\r\n          <button \r\n            className=\"read-more-btn\"\r\n            onClick={() => setShowComments(true)}\r\n          >\r\n            阅读全文\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* 标签区域 */}\r\n      {post.get('tags') && post.get('tags').length > 0 && (\r\n        <div className=\"post-tags\">\r\n          {post.get('tags').map((tag, index) => (\r\n            <span\r\n              key={tag}\r\n              className=\"post-tag\"\r\n              style={{ \r\n                backgroundColor: getTagColor(index) + '20',\r\n                color: getTagColor(index),\r\n                borderColor: getTagColor(index) + '40'\r\n              }}\r\n            >\r\n              #{tag}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* 帖子统计和操作 */}\r\n      <div className=\"post-footer\">\r\n        <div className=\"post-stats\">\r\n          <button \r\n            className={`stat-btn like-btn ${isLiked ? 'liked' : ''}`}\r\n            onClick={handleLike}\r\n          >\r\n            <span className=\"stat-icon\">👍</span>\r\n            <span className=\"stat-count\">{likes}</span>\r\n          </button>\r\n          \r\n          <button \r\n            className={`stat-btn comment-btn ${showComments ? 'active' : ''}`}\r\n            onClick={handleToggleComments}\r\n          >\r\n            <span className=\"stat-icon\">💬</span>\r\n            <span className=\"stat-count\">{post.get('commentCount') || 0}</span>\r\n          </button>\r\n          \r\n          <div className=\"stat-btn view-btn\">\r\n            <span className=\"stat-icon\">👁️</span>\r\n            <span className=\"stat-count\">{views}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"post-actions\">\r\n          <button className=\"action-btn share-btn\">\r\n            🔗 分享\r\n          </button>\r\n          <button className=\"action-btn bookmark-btn\">\r\n            📌 收藏\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 评论区域 */}\r\n      {showComments && (\r\n        <CommentSection postId={post.id} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostCard;","// components/community/CommunityPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport CreatePostModal from './CreatePostModal';\r\nimport SearchBar from './SearchBar';\r\nimport TagCloud from './TagCloud';\r\nimport CommunityStats from './CommunityStats';\r\nimport PostCard from './PostCard';\r\nimport './CommunityPage.css';\r\n\r\nconst CommunityPage = () => {\r\n  const [activeTab, setActiveTab] = useState('latest');\r\n  const [posts, setPosts] = useState([]);\r\n  const [allPosts, setAllPosts] = useState([]); // 保存所有帖子用于搜索过滤\r\n  const [loading, setLoading] = useState(false);\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    pageSize: 20,\r\n    hasMore: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadPosts(true);\r\n  }, [activeTab]);\r\n\r\n  // 根据搜索关键词过滤帖子\r\n  useEffect(() => {\r\n    if (searchKeyword.trim() === '') {\r\n      // 如果没有搜索关键词，显示所有帖子\r\n      setPosts(allPosts);\r\n    } else {\r\n      // 只显示标题包含搜索关键词的帖子\r\n      const filtered = allPosts.filter(post => \r\n        post.get('title')?.toLowerCase().includes(searchKeyword.toLowerCase())\r\n      );\r\n      setPosts(filtered);\r\n    }\r\n  }, [searchKeyword, allPosts]);\r\n\r\n  const loadPosts = async (reset = false) => {\r\n    if (loading) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const currentPage = reset ? 1 : pagination.page;\r\n      const options = {\r\n        page: currentPage,\r\n        pageSize: pagination.pageSize,\r\n        sortBy: activeTab === 'latest' ? 'createdAt' : 'likes',\r\n        sortOrder: 'desc'\r\n      };\r\n\r\n      const postsData = await CommunityService.getPosts(options);\r\n      \r\n      if (reset) {\r\n        setAllPosts(postsData);\r\n        setPosts(postsData);\r\n      } else {\r\n        const newAllPosts = [...allPosts, ...postsData];\r\n        setAllPosts(newAllPosts);\r\n        \r\n        // 应用当前搜索过滤\r\n        if (searchKeyword.trim() === '') {\r\n          setPosts(newAllPosts);\r\n        } else {\r\n          const filtered = newAllPosts.filter(post => \r\n            post.get('title')?.toLowerCase().includes(searchKeyword.toLowerCase())\r\n          );\r\n          setPosts(filtered);\r\n        }\r\n      }\r\n\r\n      setPagination(prev => ({\r\n        ...prev,\r\n        page: currentPage,\r\n        hasMore: postsData.length === pagination.pageSize\r\n      }));\r\n    } catch (error) {\r\n      console.error('加载帖子失败:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (keyword) => {\r\n    setSearchKeyword(keyword);\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    if (!loading && pagination.hasMore) {\r\n      loadPosts(false);\r\n    }\r\n  };\r\n\r\n  const handlePostCreated = (newPost) => {\r\n    // 添加到所有帖子列表\r\n    setAllPosts(prev => [newPost, ...prev]);\r\n    \r\n    // 根据当前搜索条件决定是否显示新帖子\r\n    if (searchKeyword.trim() === '' || \r\n        newPost.get('title')?.toLowerCase().includes(searchKeyword.toLowerCase())) {\r\n      setPosts(prev => [newPost, ...prev]);\r\n    }\r\n    \r\n    setShowCreateModal(false);\r\n  };\r\n\r\n  // 获取搜索结果统计\r\n  const getSearchStats = () => {\r\n    if (searchKeyword.trim() === '') {\r\n      return `共 ${allPosts.length} 个帖子`;\r\n    } else {\r\n      const matchCount = allPosts.filter(post => \r\n        post.get('title')?.toLowerCase().includes(searchKeyword.toLowerCase())\r\n      ).length;\r\n      return `找到 ${posts.length} 个匹配标题的帖子（共 ${matchCount} 个）`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"community-section\">\r\n      <div className=\"container\">\r\n        {/* 头部区域 */}\r\n        <div className=\"community-header\">\r\n          <div className=\"header-content\">\r\n            <div className=\"header-text\">\r\n              <h2>学习社区</h2>\r\n              <p>与大家一起交流学习心得，分享刷题经验</p>\r\n            </div>\r\n            <button \r\n              className=\"create-post-btn modern-btn primary\"\r\n              onClick={() => setShowCreateModal(true)}\r\n            >\r\n              <span className=\"btn-icon\">✏️</span>\r\n              发布帖子\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 搜索和统计区域 */}\r\n        <div className=\"community-toolbar\">\r\n          <div className=\"toolbar-left\">\r\n            <SearchBar \r\n              onSearch={handleSearch}\r\n              placeholder=\"搜索帖子标题...\"\r\n            />\r\n          </div>\r\n          <div className=\"toolbar-right\">\r\n            <CommunityStats />\r\n          </div>\r\n        </div>\r\n\r\n        {/* 搜索统计信息 */}\r\n        {searchKeyword && (\r\n          <div className=\"search-results-info\">\r\n            <div className=\"results-stats\">\r\n              {getSearchStats()}\r\n              {searchKeyword && (\r\n                <span className=\"search-keyword\">\r\n                  搜索关键词: <strong>\"{searchKeyword}\"</strong>\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"community-layout\">\r\n          {/* 侧边栏 */}\r\n          <aside className=\"community-sidebar\">\r\n            <div className=\"sidebar-section\">\r\n              <h3>热门标签</h3>\r\n              <TagCloud \r\n                onTagClick={(tag) => handleSearch(tag)}\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"sidebar-section\">\r\n              <h3>社区指南</h3>\r\n              <div className=\"community-guidelines\">\r\n                <p>💡 分享学习心得</p>\r\n                <p>🤝 互相帮助解答</p>\r\n                <p>🎯 保持内容相关</p>\r\n                <p>👍 尊重他人观点</p>\r\n              </div>\r\n            </div>\r\n          </aside>\r\n\r\n          {/* 主内容区 */}\r\n          <main className=\"community-main\">\r\n            {/* 标签导航 */}\r\n            <div className=\"community-tabs\">\r\n              <button \r\n                className={`modern-tab ${activeTab === 'latest' ? 'active' : ''}`}\r\n                onClick={() => setActiveTab('latest')}\r\n              >\r\n                <span className=\"tab-icon\">🆕</span>\r\n                <span className=\"tab-text\">最新帖子</span>\r\n              </button>\r\n              <button \r\n                className={`modern-tab ${activeTab === 'popular' ? 'active' : ''}`}\r\n                onClick={() => setActiveTab('popular')}\r\n              >\r\n                <span className=\"tab-icon\">🔥</span>\r\n                <span className=\"tab-text\">热门内容</span>\r\n              </button>\r\n            </div>\r\n            \r\n            {/* 帖子列表 */}\r\n            <div className=\"post-list\">\r\n              {loading && (\r\n                <div className=\"loading\">\r\n                  <div className=\"spinner\"></div>\r\n                  <span>加载中...</span>\r\n                </div>\r\n              )}\r\n              \r\n              {posts.map(post => (\r\n                <PostCard key={post.id} post={post} />\r\n              ))}\r\n              \r\n              {!loading && posts.length === 0 && (\r\n                <div className=\"empty-state\">\r\n                  <div className=\"empty-icon\">\r\n                    {searchKeyword ? '🔍' : '💬'}\r\n                  </div>\r\n                  <h3>\r\n                    {searchKeyword ? '没有找到匹配的帖子' : '暂无帖子'}\r\n                  </h3>\r\n                  <p>\r\n                    {searchKeyword \r\n                      ? `没有标题包含 \"${searchKeyword}\" 的帖子，尝试调整搜索关键词`\r\n                      : '成为第一个分享学习心得的人吧！'\r\n                    }\r\n                  </p>\r\n                  {searchKeyword && (\r\n                    <button \r\n                      onClick={() => handleSearch('')}\r\n                      className=\"clear-search-btn\"\r\n                    >\r\n                      显示所有帖子\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {pagination.hasMore && posts.length > 0 && searchKeyword === '' && (\r\n              <div className=\"load-more-section\">\r\n                <button \r\n                  onClick={handleLoadMore}\r\n                  disabled={loading}\r\n                  className=\"load-more-btn\"\r\n                >\r\n                  {loading ? '加载中...' : '加载更多'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </main>\r\n        </div>\r\n        \r\n        {/* 创建帖子模态框 */}\r\n        {showCreateModal && (\r\n          <CreatePostModal \r\n            onClose={() => setShowCreateModal(false)}\r\n            onSuccess={handlePostCreated}\r\n          />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CommunityPage;","// HomePage.jsx\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\r\nimport Chatbox from \"../components/Chatbox\";\r\nimport {\r\n  getCategories,\r\n  initAV,\r\n  QueryOptions,\r\n  createCategory,\r\n  deleteCategory,\r\n} from \"../services/categoryService\";\r\nimport { getAllQuestions, updateQuestion } from \"../services/questionService\";\r\nimport { cacheService } from \"../services/cacheService\";\r\nimport { offlineService } from \"../services/offlineService\";\r\nimport OfflineIndicator from \"../components/OfflineIndicator\";\r\nimport AV from \"leancloud-storage\";\r\nimport CacheManagementTab from '../components/CacheManagementTab';\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ReviewReminderSection from \"../components/ReviewReminderSection\";\r\nimport CalendarTooltip from \"../components/CalendarTooltip\";\r\nimport \"./HomePage.css\";\r\nimport Documents from \"../components/Documents\";\r\nimport CommunityPage from \"../components/community/CommunityPage\";\r\n\r\n// 创建 React Query 客户端\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      staleTime: 5 * 60 * 1000, // 5分钟\r\n      cacheTime: 10 * 60 * 1000, // 10分钟\r\n      retry: 1,\r\n    },\r\n  },\r\n});\r\n\r\nconst HomePage = () => {\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [syncing, setSyncing] = useState(false);\r\n  const [syncMessage, setSyncMessage] = useState(\"\");\r\n  const [activeTab, setActiveTab] = useState(\"categories\");\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date());\r\n  const [showAddCategory, setShowAddCategory] = useState(false);\r\n  const [newCategoryName, setNewCategoryName] = useState(\"\");\r\n  const [newCategoryDescription, setNewCategoryDescription] = useState(\"\");\r\n  const [addingCategory, setAddingCategory] = useState(false);\r\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n  const [categoryToDelete, setCategoryToDelete] = useState(null);\r\n  const [deletingCategory, setDeletingCategory] = useState(false);\r\n\r\n  // 复习提醒相关状态\r\n  const [reviewThreshold, setReviewThreshold] = useState(7);\r\n  const [reviewQuestions, setReviewQuestions] = useState([]);\r\n  const [showReviewSettings, setShowReviewSettings] = useState(false);\r\n\r\n  // 用户状态\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  // 日历hover相关状态\r\n  const [hoveredDay, setHoveredDay] = useState(null);\r\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\r\n  const [tooltipVisible, setTooltipVisible] = useState(false);\r\n  const calendarRef = useRef(null);\r\n\r\n  // 新增离线相关状态\r\n  const [isOnline, setIsOnline] = useState(true);\r\n  const [cacheStatus, setCacheStatus] = useState({});\r\n  const [offlineQuestions, setOfflineQuestions] = useState([]);\r\n  const [showOfflineMode, setShowOfflineMode] = useState(false);\r\n  const [swStatus, setSwStatus] = useState({\r\n    supported: false,\r\n    activated: false,\r\n    error: null,\r\n  });\r\n\r\n  // 添加状态\r\n  const [cacheSettings, setCacheSettings] = useState({\r\n    cacheLimit: cacheService.getCacheLimit(),\r\n    autoCache: true,\r\n  });\r\n\r\n  // 新增：分类引用，用于聊天机器人触发\r\n  const categoryRefs = useRef({});\r\n\r\n  // 新增：处理分类触发\r\n  // 在 Homepage.jsx 的 handleTriggerCategory 函数中添加调试\r\n\r\n// 处理分类触发\r\nconst handleTriggerCategory = (categoryName, buttonId) => {\r\n  console.log(`🎯 触发分类: ${categoryName}, 按钮ID: ${buttonId}`);\r\n  console.log(`📊 当前分类列表:`, categories.map(cat => cat.name));\r\n  \r\n  // 首先切换到分类标签页\r\n  setActiveTab(\"categories\");\r\n  \r\n  // 延迟执行，确保分类页面已经渲染\r\n  setTimeout(() => {\r\n    // 找到匹配的分类 - 增强匹配逻辑\r\n    const targetCategory = categories.find(cat => {\r\n      const catNameLower = cat.name.toLowerCase();\r\n      const searchNameLower = categoryName.toLowerCase();\r\n      \r\n      // 多种匹配方式\r\n      const exactMatch = catNameLower === searchNameLower;\r\n      const containsMatch = catNameLower.includes(searchNameLower) || searchNameLower.includes(catNameLower);\r\n      const fuzzyMatch = catNameLower.replace(/\\s+/g, '') === searchNameLower.replace(/\\s+/g, '');\r\n      \r\n      console.log(`🔍 匹配检查: ${cat.name}`, {\r\n        exactMatch,\r\n        containsMatch,\r\n        fuzzyMatch,\r\n        catNameLower,\r\n        searchNameLower\r\n      });\r\n      \r\n      return exactMatch || containsMatch || fuzzyMatch;\r\n    });\r\n    \r\n    if (targetCategory) {\r\n      console.log(`✅ 找到分类: ${targetCategory.name}`, targetCategory);\r\n      \r\n      // 如果有对应的分类卡片引用，模拟点击\r\n      const categoryKey = `category-${targetCategory.id}`;\r\n      if (categoryRefs.current[categoryKey]) {\r\n        console.log(`🖱️ 模拟点击分类卡片: ${targetCategory.name}`);\r\n        categoryRefs.current[categoryKey].click();\r\n      } else {\r\n        // 如果没有引用，直接导航到分类页面\r\n        console.log(`🔗 直接导航到分类: ${targetCategory.name}`);\r\n        handleCategoryClick(targetCategory.id);\r\n      }\r\n      \r\n      // 显示成功消息\r\n      setSyncMessage(`已为您打开 ${targetCategory.name} 分类`);\r\n      setTimeout(() => setSyncMessage(\"\"), 3000);\r\n    } else {\r\n      console.log(`❌ 未找到匹配的分类: ${categoryName}`);\r\n      console.log(`💡 可用的分类:`, categories.map(c => c.name));\r\n      \r\n      // 尝试更宽松的匹配\r\n      const looseMatch = categories.find(cat => \r\n        cat.name.toLowerCase().includes(categoryName.toLowerCase().substring(0, 3))\r\n      );\r\n      \r\n      if (looseMatch) {\r\n        console.log(`🔍 宽松匹配找到: ${looseMatch.name}`);\r\n        const categoryKey = `category-${looseMatch.id}`;\r\n        if (categoryRefs.current[categoryKey]) {\r\n          categoryRefs.current[categoryKey].click();\r\n          setSyncMessage(`已为您打开相近分类: ${looseMatch.name}`);\r\n        } else {\r\n          handleCategoryClick(looseMatch.id);\r\n        }\r\n      } else {\r\n        setSyncMessage(`未找到\"${categoryName}\"分类，请检查分类名称`);\r\n      }\r\n      setTimeout(() => setSyncMessage(\"\"), 3000);\r\n    }\r\n  }, 100);\r\n};\r\n\r\n  // 预缓存函数\r\n  const preCacheQuestions = useCallback(async () => {\r\n    if (!currentUser) return;\r\n\r\n    try {\r\n      console.log(\"🔄 通过 Service Worker 缓存题目...\");\r\n      setSyncing(true);\r\n\r\n      cacheService.setCacheLimit(cacheSettings.cacheLimit);\r\n\r\n      const success = await cacheService.cacheQuestions(questions);\r\n\r\n      if (success) {\r\n        const status = await cacheService.getCacheStatus();\r\n        setCacheStatus(status);\r\n        setTimeout(() => setSyncMessage(\"\"), 3000);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"预缓存失败:\", error);\r\n      setSyncMessage(\"缓存失败: \" + error.message);\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  }, [currentUser, questions, cacheSettings.cacheLimit]);\r\n\r\n  // 缓存设置组件\r\n  const CacheSettingsModal = () => (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h3>📦 离线缓存设置</h3>\r\n          <button\r\n            className=\"close-btn\"\r\n            onClick={() => setShowCacheSettings(false)}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"cache-settings-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"cacheLimit\">\r\n              缓存题目数量: {cacheSettings.cacheLimit} 题\r\n            </label>\r\n            <input\r\n              id=\"cacheLimit\"\r\n              type=\"range\"\r\n              min=\"10\"\r\n              max=\"100\"\r\n              step=\"10\"\r\n              value={cacheSettings.cacheLimit}\r\n              onChange={(e) =>\r\n                setCacheSettings((prev) => ({\r\n                  ...prev,\r\n                  cacheLimit: parseInt(e.target.value),\r\n                }))\r\n              }\r\n              className=\"cache-limit-slider\"\r\n            />\r\n            <div className=\"range-labels\">\r\n              <span>10题</span>\r\n              <span>100题</span>\r\n            </div>\r\n            <div className=\"cache-hint\">\r\n              当前配置: 最多缓存 {cacheSettings.cacheLimit} 道题目供离线使用\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-actions\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"cancel-btn\"\r\n              onClick={() => setShowCacheSettings(false)}\r\n            >\r\n              取消\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"submit-btn\"\r\n              onClick={() => {\r\n                cacheService.setCacheLimit(cacheSettings.cacheLimit);\r\n                setShowCacheSettings(false);\r\n                setTimeout(() => setSyncMessage(\"\"), 3000);\r\n              }}\r\n            >\r\n              保存设置\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const [showCacheSettings, setShowCacheSettings] = useState(false);\r\n\r\n  // 加载离线数据\r\n  const loadOfflineData = useCallback(async () => {\r\n    try {\r\n      const cacheData = await cacheService.getCachedQuestions();\r\n      setOfflineQuestions(cacheData.questions);\r\n      setShowOfflineMode(true);\r\n      console.log(\"📦 加载离线数据:\", cacheData.questions.length);\r\n    } catch (error) {\r\n      console.error(\"加载离线数据失败:\", error);\r\n    }\r\n  }, []);\r\n\r\n  // 手动缓存功能\r\n  const handleManualCache = useCallback(async () => {\r\n    setSyncing(true);\r\n    setSyncMessage(\"正在缓存题目数据...\");\r\n\r\n    try {\r\n      await preCacheQuestions();\r\n      setCacheStatus(cacheService.getCacheStatus());\r\n    } catch (error) {\r\n      setSyncMessage(\"缓存失败: \" + error.message);\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  }, [preCacheQuestions]);\r\n\r\n  // 网络状态监听\r\n  useEffect(() => {\r\n    const handleOnline = () => {\r\n      setIsOnline(true);\r\n      setShowOfflineMode(false);\r\n    };\r\n\r\n    const handleOffline = () => {\r\n      setIsOnline(false);\r\n      if (cacheService.getCacheStatus().hasCache) {\r\n        loadOfflineData();\r\n      }\r\n    };\r\n\r\n    offlineService.addEventListener(\"online\", handleOnline);\r\n    offlineService.addEventListener(\"offline\", handleOffline);\r\n\r\n    setIsOnline(offlineService.isOnlineMode());\r\n    setCacheStatus(cacheService.getCacheStatus());\r\n\r\n    return () => {\r\n      offlineService.removeEventListener(\"online\", handleOnline);\r\n      offlineService.removeEventListener(\"offline\", handleOffline);\r\n    };\r\n  }, [loadOfflineData]);\r\n\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n\r\n    if (user) {\r\n      if (offlineService.shouldUseOfflineData()) {\r\n        console.log(\"🚀 启动离线模式\");\r\n        setShowOfflineMode(true);\r\n        loadOfflineData();\r\n        setLoading(false);\r\n      } else {\r\n        initializeData();\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Service Worker 事件监听\r\n  useEffect(() => {\r\n    if (!cacheService.isSupported) return;\r\n\r\n    const handleCacheUpdated = (event) => {\r\n      const { count, timestamp } = event.detail;\r\n      setSyncMessage(``);\r\n      setCacheStatus((prev) => ({ ...prev, hasCache: true, count }));\r\n    };\r\n\r\n    const handleSwActivated = (event) => {\r\n      setSwStatus((prev) => ({\r\n        ...prev,\r\n        activated: true,\r\n        version: event.detail.version,\r\n      }));\r\n      console.log(\"🚀 Service Worker 已激活:\", event.detail.version);\r\n    };\r\n\r\n    cacheService.addEventListener(\"cacheUpdated\", handleCacheUpdated);\r\n    cacheService.addEventListener(\"swActivated\", handleSwActivated);\r\n\r\n    setSwStatus((prev) => ({\r\n      ...prev,\r\n      supported: cacheService.isSupported,\r\n    }));\r\n\r\n    return () => {\r\n      cacheService.removeEventListener(\"cacheUpdated\", handleCacheUpdated);\r\n      cacheService.removeEventListener(\"swActivated\", handleSwActivated);\r\n    };\r\n  }, []);\r\n\r\n  // 用户登录后自动缓存\r\n  useEffect(() => {\r\n    if (currentUser && questions.length > 0) {\r\n      const timer = setTimeout(() => {\r\n        preCacheQuestions();\r\n      }, 3000);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [currentUser, questions, preCacheQuestions]);\r\n\r\n  const handleManualRefresh = useCallback(async () => {\r\n    console.log(\"🔄 手动刷新数据...\");\r\n    setSyncMessage(\"刷新数据中...\");\r\n\r\n    try {\r\n      clearAllCache();\r\n      clearCategoryCache();\r\n      await initializeData();\r\n      setSyncMessage(\"数据刷新成功！\");\r\n      setTimeout(() => setSyncMessage(\"\"), 3000);\r\n    } catch (error) {\r\n      console.error(\"刷新数据失败:\", error);\r\n      setSyncMessage(\"刷新失败: \" + error.message);\r\n      setTimeout(() => setSyncMessage(\"\"), 5000);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleQuestionCreated = () => {\r\n      console.log(\"📝 检测到题目创建，自动刷新数据...\");\r\n      setTimeout(() => {\r\n        handleManualRefresh();\r\n      }, 1000);\r\n    };\r\n\r\n    window.addEventListener(\"questionCreated\", handleQuestionCreated);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"questionCreated\", handleQuestionCreated);\r\n    };\r\n  }, [handleManualRefresh]);\r\n\r\n  // 检查用户登录状态\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n\r\n    if (user) {\r\n      initializeData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // 处理添加分类\r\n  const handleAddCategory = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!currentUser) {\r\n      alert(\"请先登录\");\r\n      return;\r\n    }\r\n\r\n    if (!newCategoryName.trim()) {\r\n      alert(\"请输入分类名称\");\r\n      return;\r\n    }\r\n\r\n    setAddingCategory(true);\r\n    try {\r\n      const newCategory = await createCategory({\r\n        name: newCategoryName.trim(),\r\n        description: newCategoryDescription.trim() || undefined,\r\n      });\r\n\r\n      setCategories((prev) => [newCategory, ...prev]);\r\n      setNewCategoryName(\"\");\r\n      setNewCategoryDescription(\"\");\r\n      setShowAddCategory(false);\r\n\r\n      setSyncMessage(`分类 \"${newCategory.name}\" 创建成功！`);\r\n      setTimeout(() => setSyncMessage(\"\"), 3000);\r\n    } catch (error) {\r\n      console.error(\"创建分类失败:\", error);\r\n      setSyncMessage(\"创建分类失败: \" + (error.message || \"请检查网络连接\"));\r\n    } finally {\r\n      setAddingCategory(false);\r\n    }\r\n  };\r\n\r\n  // 处理删除分类确认\r\n  const handleDeleteClick = useCallback((category, e) => {\r\n    e.stopPropagation();\r\n    setCategoryToDelete(category);\r\n    setShowDeleteConfirm(true);\r\n  }, []);\r\n\r\n  // 确认删除分类\r\n  const handleConfirmDelete = async () => {\r\n    if (!categoryToDelete) return;\r\n\r\n    setDeletingCategory(true);\r\n    try {\r\n      await deleteCategory(categoryToDelete.id);\r\n      setCategories((prev) =>\r\n        prev.filter((cat) => cat.id !== categoryToDelete.id)\r\n      );\r\n      setShowDeleteConfirm(false);\r\n      setCategoryToDelete(null);\r\n      setSyncMessage(`分类 \"${categoryToDelete.name}\" 删除成功！`);\r\n      setTimeout(() => setSyncMessage(\"\"), 3000);\r\n    } catch (error) {\r\n      console.error(\"删除分类失败:\", error);\r\n      setSyncMessage(\"删除分类失败: \" + (error.message || \"请检查网络连接\"));\r\n    } finally {\r\n      setDeletingCategory(false);\r\n    }\r\n  };\r\n\r\n  // 取消删除\r\n  const handleCancelDelete = useCallback(() => {\r\n    setShowDeleteConfirm(false);\r\n    setCategoryToDelete(null);\r\n  }, []);\r\n\r\n  const reloadData = async () => {\r\n    try {\r\n      const categoriesData = await getCategories({\r\n        page: 1,\r\n        pageSize: 50,\r\n        sortBy: QueryOptions.SORT_BY_UPDATED_AT,\r\n        sortOrder: \"desc\",\r\n      });\r\n      setCategories(categoriesData.data);\r\n\r\n      const questionsData = await getAllQuestions();\r\n      setQuestions(questionsData);\r\n    } catch (err) {\r\n      console.error(\"重新加载数据失败:\", err);\r\n    }\r\n  };\r\n\r\n  // 更新题目复习时间\r\n  const handleUpdateQuestionTime = async (questionId) => {\r\n    try {\r\n      console.log(\"更新题目复习时间:\", questionId);\r\n\r\n      const question = questions.find((q) => q.id === questionId);\r\n      if (!question) {\r\n        throw new Error(\"未找到对应的题目\");\r\n      }\r\n\r\n      const currentTime = new Date();\r\n\r\n      await updateQuestion(questionId, {\r\n        lastReviewedAt: currentTime,\r\n      });\r\n\r\n      console.log(\"LeanCloud 更新成功，开始更新本地状态\");\r\n\r\n      setQuestions((prev) =>\r\n        prev.map((q) =>\r\n          q.id === questionId\r\n            ? {\r\n                ...q,\r\n                lastReviewedAt: currentTime.toISOString(),\r\n              }\r\n            : q\r\n        )\r\n      );\r\n\r\n      console.log(`题目 ${questionId} 复习时间已更新`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"更新题目时间失败:\", error);\r\n      console.error(\"错误详情:\", {\r\n        questionId,\r\n        errorMessage: error.message,\r\n        errorStack: error.stack,\r\n      });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleGlobalError = (event) => {\r\n      if (\r\n        event.error &&\r\n        (event.error.message.includes(\"network\") ||\r\n          event.error.message.includes(\"offline\") ||\r\n          event.error.message.includes(\"CORS\") ||\r\n          event.error.message.includes(\"LeanCloud\"))\r\n      ) {\r\n        console.log(\"🌐 捕获到网络错误，切换到离线模式\");\r\n        setShowOfflineMode(true);\r\n        event.preventDefault();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"error\", handleGlobalError);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"error\", handleGlobalError);\r\n    };\r\n  }, []);\r\n\r\n  // 计算需要复习的题目\r\n  useEffect(() => {\r\n    const calculateReviewQuestions = () => {\r\n      const now = new Date();\r\n      const thresholdMs = reviewThreshold * 24 * 60 * 60 * 1000;\r\n\r\n      const needReview = questions\r\n        .filter((question) => {\r\n          const lastReviewed = new Date(\r\n            question.lastReviewedAt || question.createdAt\r\n          );\r\n          const timeDiff = now - lastReviewed;\r\n          return timeDiff >= thresholdMs;\r\n        })\r\n        .sort((a, b) => {\r\n          const timeA = new Date(a.lastReviewedAt || a.createdAt);\r\n          const timeB = new Date(b.lastReviewedAt || b.createdAt);\r\n          return timeA - timeB;\r\n        });\r\n\r\n      setReviewQuestions(needReview);\r\n    };\r\n\r\n    if (questions.length > 0) {\r\n      calculateReviewQuestions();\r\n    }\r\n  }, [questions, reviewThreshold]);\r\n\r\n  const handleChatboxNavigate = (target) => {\r\n    console.log(\"导航到:\", target);\r\n    switch (target) {\r\n      case \"categories\":\r\n        setActiveTab(\"categories\");\r\n        break;\r\n      case \"review\":\r\n        setActiveTab(\"review\");\r\n        break;\r\n      case \"stats\":\r\n        setActiveTab(\"stats\");\r\n        break;\r\n      case \"calendar\":\r\n        setActiveTab(\"calendar\");\r\n        break;\r\n      case \"community\":\r\n        setActiveTab(\"community\");\r\n        break;\r\n      case \"documents\":\r\n        setActiveTab(\"documents\");\r\n        break;\r\n      case \"createCategory\":\r\n        setShowAddCategory(true);\r\n        break;\r\n      case \"cacheQuestions\":\r\n        handleManualCache();\r\n        break;\r\n      case \"offlineMode\":\r\n        navigate(\"/offline/questions\");\r\n        break;\r\n      default:\r\n        setActiveTab(\"categories\");\r\n    }\r\n\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  // 优化后的 initializeData 函数\r\n  const initializeData = async () => {\r\n    try {\r\n      if (!offlineService.shouldUseOfflineData()) {\r\n        initAV();\r\n      }\r\n\r\n      console.log(\"🔄 开始加载数据...\");\r\n\r\n      const [categoriesData, questionsData] = await Promise.all([\r\n        getCategories({\r\n          page: 1,\r\n          pageSize: 50,\r\n          sortBy: QueryOptions.SORT_BY_UPDATED_AT,\r\n          sortOrder: \"desc\",\r\n        }),\r\n        getAllQuestions(false),\r\n      ]);\r\n\r\n      console.log(\"✅ 数据加载完成:\", {\r\n        分类数据: categoriesData.data.length,\r\n        题目数据: questionsData.length,\r\n        模式: offlineService.shouldUseOfflineData() ? \"离线\" : \"在线\",\r\n      });\r\n\r\n      setCategories(categoriesData.data);\r\n      setQuestions(questionsData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(\"❌ 初始化数据失败:\", err);\r\n\r\n      if (err.message.includes(\"offline\") || err.message.includes(\"network\")) {\r\n        console.log(\"🌐 网络错误，切换到完全离线模式\");\r\n        setShowOfflineMode(true);\r\n\r\n        try {\r\n          const cacheData = await cacheService.getCachedQuestions();\r\n          setOfflineQuestions(cacheData.questions);\r\n          setCategories([]);\r\n          setQuestions([]);\r\n          setLoading(false);\r\n          return;\r\n        } catch (cacheError) {\r\n          console.error(\"加载离线数据也失败:\", cacheError);\r\n        }\r\n      }\r\n\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 使用 useMemo 优化计算密集型操作\r\n  const filteredCategories = useMemo(() => {\r\n    return categories.filter((category) =>\r\n      category.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n  }, [categories, searchTerm]);\r\n\r\n  // 计算准确的分类题目数量统计\r\n  const categoryStats = useMemo(() => {\r\n    if (!categories.length) {\r\n      return {\r\n        totalCategories: 0,\r\n        totalQuestions: 0,\r\n        categoriesWithQuestions: 0,\r\n      };\r\n    }\r\n\r\n    const totalQuestionsFromCategories = categories.reduce(\r\n      (sum, cat) => sum + (cat.questionCount || 0),\r\n      0\r\n    );\r\n    const categoriesWithQuestions = categories.filter(\r\n      (cat) => (cat.questionCount || 0) > 0\r\n    ).length;\r\n\r\n    console.log(\"🔍 详细统计信息:\", {\r\n      分类总数: categories.length,\r\n      基于分类的题目总数: totalQuestionsFromCategories,\r\n      基于所有题目的题目总数: questions.length,\r\n      差异: Math.abs(totalQuestionsFromCategories - questions.length),\r\n      有题目的分类数: categoriesWithQuestions,\r\n      对象: questions,\r\n      各分类详情: categories.map((cat) => ({\r\n        分类名称: cat.name,\r\n        服务层题目数: cat.questionCount,\r\n        前端计算题目数: questions.filter((q) => q.category?.id === cat.id)\r\n          .length,\r\n        是否匹配:\r\n          cat.questionCount ===\r\n          questions.filter((q) => q.category?.id === cat.id).length,\r\n      })),\r\n    });\r\n\r\n    return {\r\n      totalCategories: categories.length,\r\n      totalQuestions: totalQuestionsFromCategories,\r\n      categoriesWithQuestions: categoriesWithQuestions,\r\n    };\r\n  }, [categories, questions]);\r\n\r\n  // 获取某一天的题目详情\r\n  const getDayQuestions = useCallback(\r\n    (date) => {\r\n      const dateStr = date.toISOString().split(\"T\")[0];\r\n\r\n      const dayQuestions = questions.filter((question) => {\r\n        const questionDate = new Date(question.createdAt);\r\n        const questionDateStr = questionDate.toISOString().split(\"T\")[0];\r\n        return questionDateStr === dateStr;\r\n      });\r\n\r\n      return dayQuestions.sort(\r\n        (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\r\n      );\r\n    },\r\n    [questions]\r\n  );\r\n\r\n  // 获取固定颜色\r\n  const getDayColor = useCallback((count) => {\r\n    if (count === 0) return \"#f8f9fa\";\r\n    if (count <= 1) return \"#4CAF50\";\r\n    if (count <= 3) return \"#8BC34A\";\r\n    if (count <= 5) return \"#FFC107\";\r\n    if (count <= 8) return \"#FF9800\";\r\n    return \"#F44336\";\r\n  }, []);\r\n\r\n  // 生成月度日历数据\r\n  const getMonthlyCalendarData = useCallback(() => {\r\n    const monthStart = new Date(\r\n      selectedMonth.getFullYear(),\r\n      selectedMonth.getMonth(),\r\n      1\r\n    );\r\n    const monthEnd = new Date(\r\n      selectedMonth.getFullYear(),\r\n      selectedMonth.getMonth() + 1,\r\n      0\r\n    );\r\n\r\n    const dateCounts = {};\r\n    questions.forEach((question) => {\r\n      const questionDate = new Date(question.createdAt);\r\n      if (questionDate >= monthStart && questionDate <= monthEnd) {\r\n        const dateStr = questionDate.toISOString().split(\"T\")[0];\r\n        dateCounts[dateStr] = (dateCounts[dateStr] || 0) + 1;\r\n      }\r\n    });\r\n\r\n    const calendarData = [];\r\n    const currentDate = new Date(monthStart);\r\n\r\n    while (currentDate <= monthEnd) {\r\n      const dateStr = currentDate.toISOString().split(\"T\")[0];\r\n      const dayQuestions = getDayQuestions(currentDate);\r\n      const questionCount = dayQuestions.length;\r\n\r\n      calendarData.push({\r\n        date: new Date(currentDate),\r\n        count: questionCount,\r\n        day: currentDate.getDate(),\r\n        isToday: dateStr === new Date().toISOString().split(\"T\")[0],\r\n        questions: dayQuestions,\r\n        color: getDayColor(questionCount),\r\n      });\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    return calendarData;\r\n  }, [selectedMonth, questions, getDayQuestions, getDayColor]);\r\n\r\n  // 处理日历日期的鼠标悬停\r\n  const handleDayMouseEnter = useCallback((dayData, event) => {\r\n    setHoveredDay(dayData);\r\n    setTooltipVisible(true);\r\n\r\n    if (calendarRef.current) {\r\n      const calendarRect = calendarRef.current.getBoundingClientRect();\r\n      const dayRect = event.currentTarget.getBoundingClientRect();\r\n\r\n      setTooltipPosition({\r\n        x: dayRect.left + dayRect.width / 2 - calendarRect.left,\r\n        y: dayRect.top - calendarRect.top - 10,\r\n      });\r\n    }\r\n\r\n    setTooltipVisible(true);\r\n  }, []);\r\n\r\n  const handleDayMouseLeave = useCallback(() => {\r\n    setTimeout(() => {\r\n      if (!document.querySelector(\".calendar-tooltip:hover\")) {\r\n        setTooltipVisible(false);\r\n      }\r\n    }, 100);\r\n  }, []);\r\n\r\n  const handleTooltipClose = useCallback(() => {\r\n    setTooltipVisible(false);\r\n    setHoveredDay(null);\r\n  }, []);\r\n\r\n  // 月份导航\r\n  const navigateMonth = useCallback(\r\n    (direction) => {\r\n      const newDate = new Date(selectedMonth);\r\n      if (direction === \"prev\") {\r\n        newDate.setMonth(newDate.getMonth() - 1);\r\n      } else {\r\n        newDate.setMonth(newDate.getMonth() + 1);\r\n      }\r\n      setSelectedMonth(newDate);\r\n    },\r\n    [selectedMonth]\r\n  );\r\n\r\n  // 获取月份统计\r\n  const getMonthStats = useCallback(() => {\r\n    const monthData = getMonthlyCalendarData();\r\n    const daysWithQuestions = monthData.filter((day) => day.count > 0).length;\r\n    const totalQuestions = monthData.reduce((sum, day) => sum + day.count, 0);\r\n    const maxDaily = Math.max(...monthData.map((day) => day.count));\r\n\r\n    return { daysWithQuestions, totalQuestions, maxDaily };\r\n  }, [getMonthlyCalendarData]);\r\n\r\n  const getCategoryChartData = useCallback(() => {\r\n    const categoryMap = {};\r\n\r\n    questions.forEach((question) => {\r\n      const categoryName = question.category?.name || \"未分类\";\r\n      categoryMap[categoryName] = (categoryMap[categoryName] || 0) + 1;\r\n    });\r\n\r\n    return Object.entries(categoryMap)\r\n      .map(([name, count]) => ({\r\n        name: name.length > 8 ? name.substring(0, 8) + \"...\" : name,\r\n        fullName: name,\r\n        value: count,\r\n        percentage: ((count / questions.length) * 100).toFixed(1),\r\n      }))\r\n      .sort((a, b) => b.value - a.value);\r\n  }, [questions]);\r\n\r\n  const getDifficultyData = useCallback(() => {\r\n    const difficultyMap = {};\r\n\r\n    questions.forEach((question) => {\r\n      const difficulty = question.difficulty || \"unknown\";\r\n      difficultyMap[difficulty] = (difficultyMap[difficulty] || 0) + 1;\r\n    });\r\n\r\n    return Object.entries(difficultyMap).map(([name, count]) => ({\r\n      name: getDifficultyText(name),\r\n      value: count,\r\n      color: getDifficultyColor(name),\r\n    }));\r\n  }, [questions]);\r\n\r\n  const getDifficultyColor = useCallback((difficulty) => {\r\n    switch (difficulty) {\r\n      case \"easy\":\r\n        return \"#52c41a\";\r\n      case \"medium\":\r\n        return \"#faad14\";\r\n      case \"hard\":\r\n        return \"#f5222d\";\r\n      default:\r\n        return \"#666\";\r\n    }\r\n  }, []);\r\n\r\n  const getDifficultyText = useCallback((difficulty) => {\r\n    switch (difficulty) {\r\n      case \"easy\":\r\n        return \"简单\";\r\n      case \"medium\":\r\n        return \"中等\";\r\n      case \"hard\":\r\n        return \"困难\";\r\n      default:\r\n        return \"未知\";\r\n    }\r\n  }, []);\r\n\r\n  const getActiveDays = useCallback(() => {\r\n    const uniqueDays = new Set(\r\n      questions.map((q) => new Date(q.createdAt).toDateString())\r\n    );\r\n    return uniqueDays.size;\r\n  }, [questions]);\r\n\r\n  const handleCategoryClick = useCallback(\r\n    (categoryId) => {\r\n      if (offlineService.shouldUseOfflineData()) {\r\n        alert(\"离线模式下无法查看分类详情，请连接网络后重试\");\r\n        return;\r\n      }\r\n      navigate(`/category/${categoryId}`);\r\n    },\r\n    [navigate]\r\n  );\r\n\r\n  const handleQuestionClick = useCallback(\r\n    (questionId) => {\r\n      const question = questions.find((q) => q.id === questionId);\r\n      if (question && question.category) {\r\n        navigate(`/category/${question.category.id}`);\r\n      }\r\n    },\r\n    [questions, navigate]\r\n  );\r\n\r\n  // 跳转到离线分类\r\n  const navigateToOfflineCategory = useCallback((category) => {\r\n    alert(\r\n      `离线模式：查看 ${category.name} 分类的 ${category.questions.length} 道题目\\n\\n请连接网络后查看完整功能`\r\n    );\r\n  }, []);\r\n\r\n  const formatTime = useCallback((date) => {\r\n    if (!date) return \"暂无\";\r\n    const now = new Date();\r\n    const diffMs = now - new Date(date);\r\n    const diffMins = Math.floor(diffMs / 60000);\r\n    const diffHours = Math.floor(diffMs / 3600000);\r\n    const diffDays = Math.floor(diffMs / 86400000);\r\n\r\n    if (diffMins < 60) return `${diffMins}分钟前`;\r\n    if (diffHours < 24) return `${diffHours}小时前`;\r\n    if (diffDays < 30) return `${diffDays}天前`;\r\n    return new Date(date).toLocaleDateString();\r\n  }, []);\r\n\r\n  const getProgressWidth = useCallback(\r\n    (count) => {\r\n      if (!categories.length) return 0;\r\n      const maxCount = Math.max(...categories.map((c) => c.questionCount || 0));\r\n      return maxCount > 0 ? (count / maxCount) * 100 : 0;\r\n    },\r\n    [categories]\r\n  );\r\n\r\n  const defaultColors = [\r\n    \"#ff6b6b\",\r\n    \"#4ecdc4\",\r\n    \"#45b7d1\",\r\n    \"#96ceb4\",\r\n    \"#feca57\",\r\n    \"#ff9ff3\",\r\n    \"#54a0ff\",\r\n    \"#5f27cd\",\r\n    \"#00d2d3\",\r\n    \"#ff9f43\",\r\n  ];\r\n\r\n  // 使用 useMemo 缓存计算结果\r\n  const chartData = useMemo(\r\n    () => getCategoryChartData(),\r\n    [getCategoryChartData]\r\n  );\r\n  const difficultyData = useMemo(\r\n    () => getDifficultyData(),\r\n    [getDifficultyData]\r\n  );\r\n  const calendarData = useMemo(\r\n    () => getMonthlyCalendarData(),\r\n    [getMonthlyCalendarData]\r\n  );\r\n  const activeDays = useMemo(() => getActiveDays(), [getActiveDays]);\r\n  const monthStats = useMemo(() => getMonthStats(), [getMonthStats]);\r\n\r\n  const monthName = useMemo(\r\n    () =>\r\n      selectedMonth.toLocaleDateString(\"zh-CN\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n      }),\r\n    [selectedMonth]\r\n  );\r\n\r\n  // 离线模式下的分类浏览\r\n  const renderOfflineCategories = useCallback(() => {\r\n    const categoryMap = {};\r\n    offlineQuestions.forEach((question) => {\r\n      const categoryName = question.category?.name || \"未分类\";\r\n      if (!categoryMap[categoryName]) {\r\n        categoryMap[categoryName] = {\r\n          name: categoryName,\r\n          questions: [],\r\n          questionCount: 0,\r\n          id: `offline-${categoryName}`,\r\n        };\r\n      }\r\n      categoryMap[categoryName].questions.push(question);\r\n      categoryMap[categoryName].questionCount++;\r\n    });\r\n\r\n    const offlineCategories = Object.values(categoryMap);\r\n\r\n    return (\r\n      <section className=\"categories-section\">\r\n        <div className=\"container\">\r\n          <div className=\"offline-header\">\r\n            <h3 style={{ color: \"#666666\" }}>📦 离线模式</h3>\r\n            <p style={{ color: \"#666666\" }}>\r\n              当前处于离线状态，显示缓存的题目数据\r\n            </p>\r\n\r\n            <div className=\"cache-stats\" style={{ color: \"#666666\" }}>\r\n              已缓存 {offlineQuestions.length} 道题目，\r\n              {offlineCategories.length} 个分类\r\n            </div>\r\n\r\n            <div className=\"offline-global-actions\">\r\n              <button\r\n                onClick={() => navigate(\"/offline/questions\")}\r\n                className=\"view-all-offline-btn\"\r\n                style={{ color: \"#333333\" }}\r\n              >\r\n                📚 查看所有离线题目 ({offlineQuestions.length})\r\n              </button>\r\n              <button\r\n                onClick={() => window.location.reload()}\r\n                className=\"refresh-network-btn\"\r\n                style={{ color: \"#333333\" }}\r\n              >\r\n                🔄 检查网络连接\r\n              </button>\r\n            </div>\r\n\r\n            <div\r\n              className=\"cache-progress-fill\"\r\n              style={{\r\n                width: `${\r\n                  (offlineQuestions.length / cacheService.getCacheLimit()) * 100\r\n                }%`,\r\n              }}\r\n            ></div>\r\n          </div>\r\n\r\n          <div className=\"categories-grid\">\r\n            {offlineCategories.map((category, index) => {\r\n              const color = defaultColors[index % defaultColors.length];\r\n\r\n              return (\r\n                <div\r\n                  key={category.id}\r\n                  className=\"category-card offline-card\"\r\n                  onClick={() => navigateToOfflineCategory(category)}\r\n                  style={{ \"--accent-color\": color }}\r\n                >\r\n                  <div className=\"card-header\">\r\n                    <div\r\n                      className=\"category-icon\"\r\n                      style={{ backgroundColor: color }}\r\n                    >\r\n                      {category.name.charAt(0)}\r\n                    </div>\r\n                    <div className=\"category-info\">\r\n                      <h3 className=\"category-name\">{category.name}</h3>\r\n                      <span className=\"question-count\">\r\n                        {category.questionCount}题\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"offline-badge\">离线</div>\r\n                  </div>\r\n\r\n                  <div className=\"card-footer\">\r\n                    <div className=\"progress-info\">\r\n                      <div className=\"progress-stats\">\r\n                        <span>离线缓存数据</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <button className=\"explore-btn\">查看题目 →</button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }, [offlineQuestions, navigateToOfflineCategory, navigate]);\r\n\r\n  // 修改现有的渲染逻辑\r\n  const renderContent = () => {\r\n    if (showOfflineMode) {\r\n      return renderOfflineCategories();\r\n    }\r\n\r\n    switch (activeTab) {\r\n      case \"categories\":\r\n        return renderCategoriesTab();\r\n      case \"review\":\r\n        return renderReviewTab();\r\n      case \"stats\":\r\n        return renderStatsTab();\r\n      case \"calendar\":\r\n        return renderCalendarTab();\r\n      case \"documents\":\r\n        return renderDocumentsTab();\r\n      case \"community\":\r\n        return renderCommunityTab();\r\n      case 'cache':\r\n        return (\r\n          <CacheManagementTab \r\n            questions={questions}\r\n            onCacheUpdate={setCacheStatus}\r\n            currentUser={currentUser}\r\n          />\r\n        );\r\n      default:\r\n        return renderCategoriesTab();\r\n    }\r\n  };\r\n\r\n  // 原有的标签页渲染函数\r\n  const renderCategoriesTab = () => (\r\n    <>\r\n      <section className=\"filters-section\">\r\n        <div className=\"container\">\r\n          <div className=\"filters\">\r\n            <div className=\"stats\">\r\n              找到 {filteredCategories.length} 个类别\r\n              {categories.length > 0 && ` • 总计 ${questions.length} 道题目`}\r\n            </div>\r\n            <button\r\n              className=\"add-category-btn\"\r\n              onClick={() => setShowAddCategory(true)}\r\n            >\r\n              <span className=\"btn-icon\">+</span>\r\n              新建分类\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* 添加分类弹窗 */}\r\n      {showAddCategory && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3>创建新分类</h3>\r\n              <button\r\n                className=\"close-btn\"\r\n                onClick={() => setShowAddCategory(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n\r\n            <form onSubmit={handleAddCategory} className=\"category-form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"categoryName\">分类名称 *</label>\r\n                <input\r\n                  id=\"categoryName\"\r\n                  type=\"text\"\r\n                  value={newCategoryName}\r\n                  onChange={(e) => setNewCategoryName(e.target.value)}\r\n                  placeholder=\"请输入分类名称\"\r\n                  maxLength={50}\r\n                  autoFocus\r\n                  style={{ color: \"black\" }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"categoryDescription\">分类描述</label>\r\n                <textarea\r\n                  id=\"categoryDescription\"\r\n                  value={newCategoryDescription}\r\n                  onChange={(e) => setNewCategoryDescription(e.target.value)}\r\n                  placeholder=\"请输入分类描述（可选）\"\r\n                  rows=\"3\"\r\n                  maxLength={200}\r\n                  style={{ color: \"black\" }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-actions\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"cancel-btn\"\r\n                  onClick={() => setShowAddCategory(false)}\r\n                >\r\n                  取消\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"submit-btn\"\r\n                  disabled={addingCategory || !newCategoryName.trim()}\r\n                >\r\n                  {addingCategory ? \"创建中...\" : \"创建分类\"}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 删除分类确认弹窗 */}\r\n      {showDeleteConfirm && categoryToDelete && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content delete-confirm-modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>确认删除</h3>\r\n              <button className=\"close-btn\" onClick={handleCancelDelete}>\r\n                ×\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"delete-content\">\r\n              <div className=\"delete-icon\">🗑️</div>\r\n              <div className=\"delete-message\">\r\n                <p>\r\n                  确定要删除分类 <strong>\"{categoryToDelete.name}\"</strong> 吗？\r\n                </p>\r\n                {categoryToDelete.questionCount > 0 && (\r\n                  <p className=\"warning-text\">\r\n                    ⚠️ 此分类包含 {categoryToDelete.questionCount}{\" \"}\r\n                    道题目，删除后这些题目将变为未分类状态！\r\n                  </p>\r\n                )}\r\n                <p className=\"delete-hint\">此操作不可撤销，请谨慎操作。</p>\r\n              </div>\r\n\r\n              <div className=\"delete-actions\">\r\n                <button\r\n                  className=\"cancel-delete-btn\"\r\n                  onClick={handleCancelDelete}\r\n                  disabled={deletingCategory}\r\n                >\r\n                  取消\r\n                </button>\r\n                <button\r\n                  className=\"confirm-delete-btn\"\r\n                  onClick={handleConfirmDelete}\r\n                  disabled={deletingCategory}\r\n                >\r\n                  {deletingCategory ? \"删除中...\" : \"确认删除\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <section className=\"categories-section\">\r\n        <div className=\"container\">\r\n          {filteredCategories.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              <div className=\"empty-icon\">📚</div>\r\n              <h3>暂无类别数据</h3>\r\n              <p>没有找到匹配的类别，尝试调整搜索条件或创建新分类</p>\r\n              <button\r\n                className=\"create-first-category-btn\"\r\n                onClick={() => setShowAddCategory(true)}\r\n              >\r\n                + 创建第一个分类\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"categories-grid\">\r\n              {filteredCategories.map((category, index) => {\r\n                const color = defaultColors[index % defaultColors.length];\r\n\r\n                const actualQuestionCount = questions.filter(\r\n                  (q) => q.category?.id === category.id\r\n                ).length;\r\n\r\n                const displayCount =\r\n                  actualQuestionCount > 0\r\n                    ? actualQuestionCount\r\n                    : category.questionCount || 0;\r\n\r\n                return (\r\n                  <div\r\n                    key={category.id}\r\n                    ref={(el) => categoryRefs.current[`category-${category.id}`] = el}\r\n                    className=\"category-card\"\r\n                    onClick={() => handleCategoryClick(category.id)}\r\n                    style={{ \"--accent-color\": color }}\r\n                  >\r\n                    <div className=\"card-header\">\r\n                      <div\r\n                        className=\"category-icon\"\r\n                        style={{ backgroundColor: color }}\r\n                      >\r\n                        {category.name.charAt(0)}\r\n                      </div>\r\n                      <div className=\"category-info\">\r\n                        <h3 className=\"category-name\">{category.name}</h3>\r\n                        {category.description && (\r\n                          <p className=\"category-description\">\r\n                            {category.description}\r\n                          </p>\r\n                        )}\r\n                        <span className=\"question-count\">{displayCount}题</span>\r\n                      </div>\r\n                      <button\r\n                        className=\"delete-category-btn\"\r\n                        onClick={(e) => handleDeleteClick(category, e)}\r\n                        title=\"删除分类\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"card-footer\">\r\n                      <div className=\"progress-info\">\r\n                        <div className=\"progress-stats\">\r\n                          <span>\r\n                            最近更新: {formatTime(category.updatedAt)}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"progress-bar\">\r\n                          <div\r\n                            className=\"progress-fill\"\r\n                            style={{\r\n                              width: `${getProgressWidth(\r\n                                category.questionCount\r\n                              )}%`,\r\n                              backgroundColor: color,\r\n                            }}\r\n                          ></div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <button className=\"explore-btn\">查看题目 →</button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n\r\n  const renderReviewTab = () => (\r\n    <ReviewReminderSection\r\n      reviewQuestions={reviewQuestions}\r\n      setReviewQuestions={setReviewQuestions}\r\n      reviewThreshold={reviewThreshold}\r\n      setReviewThreshold={setReviewThreshold}\r\n      showReviewSettings={showReviewSettings}\r\n      setShowReviewSettings={setShowReviewSettings}\r\n      onQuestionClick={handleQuestionClick}\r\n      onUpdateQuestionTime={handleUpdateQuestionTime}\r\n      questions={questions}\r\n    />\r\n  );\r\n\r\n  const renderStatsTab = () => (\r\n    <section className=\"stats-section\">\r\n      <div className=\"container\">\r\n        <div className=\"stats-overview\">\r\n          <div className=\"modern-stat-card primary\">\r\n            <div className=\"stat-icon\">📚</div>\r\n            <div className=\"stat-content\">\r\n              <div className=\"stat-number\">{categoryStats.totalCategories}</div>\r\n              <div className=\"stat-label\">总分类数</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modern-stat-card success\">\r\n            <div className=\"stat-icon\">❓</div>\r\n            <div className=\"stat-content\">\r\n              <div className=\"stat-number\">{questions.length}</div>\r\n              <div className=\"stat-label\">总题目数</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modern-stat-card warning\">\r\n            <div className=\"stat-icon\">📅</div>\r\n            <div className=\"stat-content\">\r\n              <div className=\"stat-number\">{activeDays}</div>\r\n              <div className=\"stat-label\">活跃天数</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modern-stat-card info\">\r\n            <div className=\"stat-icon\">⚡</div>\r\n            <div className=\"stat-content\">\r\n              <div className=\"stat-number\">\r\n                {categoryStats.totalQuestions > 0\r\n                  ? (categoryStats.totalQuestions / activeDays).toFixed(1)\r\n                  : 0}\r\n              </div>\r\n              <div className=\"stat-label\">日均题目</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"charts-grid\">\r\n          <div className=\"modern-chart-card\">\r\n            <div className=\"chart-header\">\r\n              <h3>📊 分类题目分布</h3>\r\n              <span className=\"chart-subtitle\">各分类题目数量占比</span>\r\n            </div>\r\n            <div className=\"chart-container\">\r\n              <ResponsiveContainer width=\"100%\" height={300}>\r\n                <PieChart>\r\n                  <Pie\r\n                    data={chartData}\r\n                    cx=\"50%\"\r\n                    cy=\"50%\"\r\n                    labelLine={false}\r\n                    label={({ name, percentage }) => `${name} ${percentage}%`}\r\n                    outerRadius={100}\r\n                    fill=\"#8884d8\"\r\n                    dataKey=\"value\"\r\n                  >\r\n                    {chartData.map((entry, index) => (\r\n                      <Cell\r\n                        key={`cell-${index}`}\r\n                        fill={defaultColors[index % defaultColors.length]}\r\n                      />\r\n                    ))}\r\n                  </Pie>\r\n                  <Tooltip formatter={(value, name) => [`${value} 题`, name]} />\r\n                  <Legend />\r\n                </PieChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"modern-chart-card\">\r\n            <div className=\"chart-header\">\r\n              <h3>🎯 难度分布</h3>\r\n              <span className=\"chart-subtitle\">题目难度等级统计</span>\r\n            </div>\r\n            <div className=\"chart-container\">\r\n              <ResponsiveContainer width=\"100%\" height={300}>\r\n                <BarChart data={difficultyData}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"name\" />\r\n                  <YAxis />\r\n                  <Tooltip formatter={(value) => [`${value} 题`, \"数量\"]} />\r\n                  <Bar dataKey=\"value\" name=\"题目数量\">\r\n                    {difficultyData.map((entry, index) => (\r\n                      <Cell key={`cell-${index}`} fill={entry.color} />\r\n                    ))}\r\n                  </Bar>\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n  const renderCalendarTab = () => (\r\n    <section className=\"modern-calendar-section\">\r\n      <div className=\"container\">\r\n        <div className=\"calendar-header\">\r\n          <h3>🗓️ 学习日历</h3>\r\n          <p>查看每月的学习活动分布</p>\r\n        </div>\r\n\r\n        <div className=\"modern-calendar-card\" ref={calendarRef}>\r\n          <div className=\"calendar-controls\">\r\n            <button\r\n              onClick={() => navigateMonth(\"prev\")}\r\n              className=\"month-nav-btn\"\r\n            >\r\n              ← 上个月\r\n            </button>\r\n            <h4 className=\"current-month\">{monthName}</h4>\r\n            <button\r\n              onClick={() => navigateMonth(\"next\")}\r\n              className=\"month-nav-btn\"\r\n            >\r\n              下个月 →\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"monthly-calendar\">\r\n            <div className=\"calendar-weekdays\">\r\n              {[\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"].map((day) => (\r\n                <div key={day} className=\"weekday\">\r\n                  {day}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"calendar-days\">\r\n              {calendarData.map((dayData, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`calendar-day ${\r\n                    dayData.count > 0 ? \"has-questions\" : \"\"\r\n                  } ${dayData.isToday ? \"today\" : \"\"}`}\r\n                  style={{ backgroundColor: dayData.color }}\r\n                  onMouseEnter={(e) => handleDayMouseEnter(dayData, e)}\r\n                  onMouseLeave={handleDayMouseLeave}\r\n                  data-count={dayData.count}\r\n                >\r\n                  <span className=\"day-number\">{dayData.day}</span>\r\n                  {dayData.count > 0 && (\r\n                    <div className=\"question-count-badge\">{dayData.count}</div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <CalendarTooltip\r\n              dayData={hoveredDay}\r\n              position={tooltipPosition}\r\n              isVisible={tooltipVisible}\r\n              onClose={handleTooltipClose}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"calendar-stats\">\r\n            <div className=\"calendar-stat\">\r\n              <span className=\"stat-value\">{monthStats.totalQuestions}</span>\r\n              <span className=\"stat-label\">本月题目</span>\r\n            </div>\r\n            <div className=\"calendar-stat\">\r\n              <span className=\"stat-value\">{monthStats.daysWithQuestions}</span>\r\n              <span className=\"stat-label\">学习天数</span>\r\n            </div>\r\n            <div className=\"calendar-stat\">\r\n              <span className=\"stat-value\">{monthStats.maxDaily}</span>\r\n              <span className=\"stat-label\">单日最高</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"calendar-legend\">\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#f8f9fa\" }}\r\n              ></div>\r\n              <span>无题目</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#4CAF50\" }}\r\n              ></div>\r\n              <span>1题</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#8BC34A\" }}\r\n              ></div>\r\n              <span>2-3题</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#FFC107\" }}\r\n              ></div>\r\n              <span>4-5题</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#FF9800\" }}\r\n              ></div>\r\n              <span>6-8题</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#F44336\" }}\r\n              ></div>\r\n              <span>9题以上</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n  const renderDocumentsTab = () => (\r\n    <section className=\"documents-tab-section\">\r\n      <div className=\"container\">\r\n        <Documents />\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n  const renderCommunityTab = () => <CommunityPage />;\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <div className=\"auth-required-container\">\r\n          <div className=\"auth-required-icon\">🔐</div>\r\n          <h2>请先登录</h2>\r\n          <p>登录后即可查看和管理您的刷题数据</p>\r\n          <div className=\"auth-required-actions\">\r\n            <button\r\n              onClick={() => {\r\n                window.dispatchEvent(\r\n                  new CustomEvent(\"showAuthModal\", {\r\n                    detail: { tab: \"login\" },\r\n                  })\r\n                );\r\n              }}\r\n              className=\"login-btn primary\"\r\n            >\r\n              🚀 立即登录\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                window.dispatchEvent(\r\n                  new CustomEvent(\"showAuthModal\", {\r\n                    detail: { tab: \"register\" },\r\n                  })\r\n                );\r\n              }}\r\n              className=\"login-btn secondary\"\r\n            >\r\n              📝 注册账号\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"auth-features\">\r\n            <div className=\"feature-list\">\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">📚</span>\r\n                <span>管理您的刷题分类</span>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">📊</span>\r\n                <span>查看学习统计</span>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">🔄</span>\r\n                <span>使用复习提醒功能</span>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">🗓️</span>\r\n                <span>记录学习日历</span>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">📦</span>\r\n                <span>离线缓存题目</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载知识库中...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <div className=\"error-container\">\r\n          <h2>加载失败</h2>\r\n          <p>{error}</p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            className=\"retry-btn\"\r\n          >\r\n            重试\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <div className=\"homepage\">\r\n        <OfflineIndicator />\r\n\r\n        <header className=\"hero-section\">\r\n          <div className=\"hero-content\">\r\n            <div className=\"user-welcome\">\r\n              <h1 className=\"hero-title\">我的知识题库</h1>\r\n              <p className=\"hero-subtitle\">\r\n                欢迎回来, {currentUser.getUsername()}！\r\n                {!isOnline && (\r\n                  <span className=\"offline-status\"> • 离线模式</span>\r\n                )}\r\n              </p>\r\n              <div className=\"cache-actions\">\r\n                {/* 缓存操作按钮 */}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"header-actions\">\r\n              <div className=\"search-container\">\r\n                {/* 搜索容器 */}\r\n              </div>\r\n             \r\n              {showCacheSettings && <CacheSettingsModal />}\r\n            </div>\r\n            \r\n          </div>\r\n        </header>\r\n\r\n        {/* 现代化标签导航 */}\r\n        <section className=\"modern-tabs-section\">\r\n          <div className=\"container\">\r\n            <div className=\"modern-tabs\">\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"categories\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"categories\")}\r\n              >\r\n                <span className=\"tab-icon\">📚</span>\r\n                <span className=\"tab-text\">分类浏览</span>\r\n                {activeTab === \"categories\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"review\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"review\")}\r\n              >\r\n                <span className=\"tab-icon\">🔄</span>\r\n                <span className=\"tab-text\">\r\n                  复习提醒\r\n                  {reviewQuestions.length > 0 && (\r\n                    <span className=\"tab-badge\">{reviewQuestions.length}</span>\r\n                  )}\r\n                </span>\r\n                {activeTab === \"review\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"stats\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"stats\")}\r\n              >\r\n                <span className=\"tab-icon\">📊</span>\r\n                <span className=\"tab-text\">数据统计</span>\r\n                {activeTab === \"stats\" && <div className=\"tab-indicator\"></div>}\r\n              </button>\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"calendar\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"calendar\")}\r\n              >\r\n                <span className=\"tab-icon\">🗓️</span>\r\n                <span className=\"tab-text\">学习日历</span>\r\n                {activeTab === \"calendar\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"documents\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"documents\")}\r\n              >\r\n                <span className=\"tab-icon\">📖</span>\r\n                <span className=\"tab-text\">开发文档</span>\r\n                {activeTab === \"documents\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"community\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"community\")}\r\n              >\r\n                <span className=\"tab-icon\">👥</span>\r\n                <span className=\"tab-text\">学习社区</span>\r\n                {activeTab === \"community\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"cache\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"cache\")}\r\n              >\r\n                <span className=\"tab-icon\">💾</span>\r\n                <span className=\"tab-text\">\r\n                  缓存管理\r\n                  {cacheStatus.hasCache && (\r\n                    <span className=\"tab-badge\">{cacheStatus.count}</span>\r\n                  )}\r\n                </span>\r\n                {activeTab === \"cache\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 同步状态消息 */}\r\n        {syncMessage && <div className=\"sync-message\">{syncMessage}</div>}\r\n\r\n        {/* 主要内容区域 */}\r\n        {renderContent()}\r\n\r\n        {/* 修复底部统计 */}\r\n        <footer className=\"footer-section\">\r\n          <div className=\"container\">\r\n            <div className=\"footer-stats\">\r\n              <div className=\"stat-item\">\r\n                <div className=\"stat-number\">\r\n                  {categoryStats.totalCategories}\r\n                </div>\r\n                <div className=\"stat-label\">总类别数</div>\r\n              </div>\r\n              <div className=\"stat-item\">\r\n                <div className=\"stat-number\">{questions.length}</div>\r\n                <div className=\"stat-label\">总题目数</div>\r\n              </div>\r\n              <div className=\"stat-item\">\r\n                <div className=\"stat-number\">{cacheStatus.count || 0}</div>\r\n                <div className=\"stat-label\">缓存题目</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n\r\n        <Chatbox\r\n          onNavigate={handleChatboxNavigate}\r\n          onTriggerCategory={handleTriggerCategory}\r\n          categories={categories}\r\n          questions={questions}\r\n          currentUser={currentUser}\r\n          cacheStatus={cacheStatus}\r\n          isOnline={isOnline}\r\n        />\r\n      </div>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n\r\n// 清理缓存的函数\r\nconst clearAllCache = () => {\r\n  console.log(\"清理所有缓存\");\r\n};\r\n\r\nconst clearCategoryCache = () => {\r\n  console.log(\"清理分类缓存\");\r\n};\r\n\r\nexport default HomePage;","// initClasses.js\r\nimport AV from 'leancloud-storage';\r\n\r\n\r\n\r\n// 初始化配置\r\nAV.init({\r\n  appId: process.env.REACT_APP_LC_APP_ID,\r\n  appKey: process.env.REACT_APP_LC_APP_KEY,\r\n  serverURL: process.env.REACT_APP_LC_SERVER_URL\r\n});\r\n\r\n// 难度选项\r\nconst DifficultyOptions = {\r\n  EASY: 'easy',\r\n  MEDIUM: 'medium',\r\n  HARD: 'hard'\r\n};\r\n\r\n// 掌握程度选项\r\nconst ProficiencyOptions = {\r\n  BEGINNER: 'beginner',\r\n  INTERMEDIATE: 'intermediate',\r\n  ADVANCED: 'advanced',\r\n  MASTER: 'master'\r\n};\r\n\r\n// 社区相关 Class 名称\r\nconst CommunityClasses = {\r\n  POST: 'Post',\r\n  COMMENT: 'Comment',\r\n  LIKE: 'Like',\r\n  FOLLOW: 'Follow'\r\n};\r\n\r\n// 帖子状态选项\r\nconst PostStatusOptions = {\r\n  PUBLISHED: 'published',\r\n  DRAFT: 'draft',\r\n  DELETED: 'deleted'\r\n};\r\n\r\n// 帖子排序选项\r\nconst PostSortOptions = {\r\n  CREATED_AT: 'createdAt',\r\n  UPDATED_AT: 'updatedAt',\r\n  LAST_COMMENTED_AT: 'lastCommentedAt',\r\n  LIKES: 'likes',\r\n  VIEWS: 'views',\r\n  COMMENT_COUNT: 'commentCount'\r\n};\r\n\r\n// Notion 数据库字段映射配置\r\nconst NotionFieldMapping = {\r\n  // 标题字段映射\r\n  TITLE: ['Title', '题目', 'Name', '名称'],\r\n  // 难度字段映射\r\n  DIFFICULTY: ['Difficulty', '难度'],\r\n  // 分类字段映射\r\n  CATEGORY: ['Category', '类别', '分类'],\r\n  // 标签字段映射\r\n  TAGS: ['Tags', '标签'],\r\n  // 答案内容字段映射\r\n  CONTENT: ['Content', '内容', 'Answer', '答案'],\r\n  // 完成时间字段映射\r\n  COMPLETION_TIME: ['CompletionTime', '完成时间', '时间']\r\n};\r\n\r\n// ==================== 社区功能相关函数 ====================\r\n\r\n/**\r\n * 创建社区相关的数据表（Post, Comment, Like, Follow）\r\n */\r\nexport const createCommunityClasses = async () => {\r\n  try {\r\n    \r\n    const results = {\r\n      Post: await createPostClass(),\r\n      Comment: await createCommentClass(),\r\n      Like: await createLikeClass(),\r\n      Follow: await createFollowClass()\r\n    };\r\n    \r\n    return results;\r\n  } catch (error) {\r\n    throw new Error(`创建社区数据表失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Post 类（帖子表）\r\n */\r\nconst createPostClass = async () => {\r\n  try {\r\n    // 检查是否已存在\r\n    const query = new AV.Query(CommunityClasses.POST);\r\n    const existing = await query.first().catch(() => null);\r\n    if (existing) {\r\n      return { exists: true, message: 'Post class already exists' };\r\n    }\r\n\r\n    // 创建 Post 类（实际上在 LeanCloud 中类会自动创建，这里我们创建示例数据来验证）\r\n    const Post = AV.Object.extend(CommunityClasses.POST);\r\n    const testPost = new Post();\r\n    \r\n    // 设置字段\r\n    testPost.set('title', '测试帖子标题');\r\n    testPost.set('content', '这是一个测试帖子的内容，用于验证 Post 类的创建。');\r\n    testPost.set('author', AV.User.current());\r\n    testPost.set('tags', ['测试', '示例']);\r\n    testPost.set('likes', 0);\r\n    testPost.set('views', 0);\r\n    testPost.set('commentCount', 0);\r\n    testPost.set('isPublic', true);\r\n    testPost.set('isPinned', false);\r\n    testPost.set('status', PostStatusOptions.PUBLISHED);\r\n    \r\n    // 设置 ACL（权限控制）\r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);    // 所有人可读\r\n    acl.setPublicWriteAccess(false);  // 只有作者可写\r\n    if (AV.User.current()) {\r\n      acl.setWriteAccess(AV.User.current(), true);\r\n    }\r\n    testPost.setACL(acl);\r\n    \r\n    await testPost.save();\r\n    console.log('✅ Post 类创建成功并添加测试数据');\r\n    \r\n    // 删除测试数据\r\n    await testPost.destroy();\r\n    console.log('🧹 已清理测试数据');\r\n    \r\n    return { \r\n      success: true, \r\n      message: 'Post class created successfully' \r\n    };\r\n  } catch (error) {\r\n    console.error('创建 Post 类失败:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Comment 类（评论表）\r\n */\r\nconst createCommentClass = async () => {\r\n  try {\r\n    // 检查是否已存在\r\n    const query = new AV.Query(CommunityClasses.COMMENT);\r\n    const existing = await query.first().catch(() => null);\r\n    if (existing) {\r\n      console.log('📝 Comment 类已存在，跳过创建');\r\n      return { exists: true, message: 'Comment class already exists' };\r\n    }\r\n\r\n    // 创建 Comment 类\r\n    const Comment = AV.Object.extend(CommunityClasses.COMMENT);\r\n    const testComment = new Comment();\r\n    \r\n    // 设置字段\r\n    testComment.set('content', '这是一个测试评论内容。');\r\n    testComment.set('author', AV.User.current());\r\n    testComment.set('likes', 0);\r\n    \r\n    // 设置 ACL\r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    if (AV.User.current()) {\r\n      acl.setWriteAccess(AV.User.current(), true);\r\n    }\r\n    testComment.setACL(acl);\r\n    \r\n    await testComment.save();\r\n    console.log('✅ Comment 类创建成功并添加测试数据');\r\n    \r\n    // 删除测试数据\r\n    await testComment.destroy();\r\n    console.log('🧹 已清理测试数据');\r\n    \r\n    return { \r\n      success: true, \r\n      message: 'Comment class created successfully' \r\n    };\r\n  } catch (error) {\r\n    console.error('创建 Comment 类失败:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Like 类（点赞关系表）\r\n */\r\nconst createLikeClass = async () => {\r\n  try {\r\n    // 检查是否已存在\r\n    const query = new AV.Query(CommunityClasses.LIKE);\r\n    const existing = await query.first().catch(() => null);\r\n    if (existing) {\r\n      console.log('📝 Like 类已存在，跳过创建');\r\n      return { exists: true, message: 'Like class already exists' };\r\n    }\r\n\r\n    // 创建 Like 类\r\n    const Like = AV.Object.extend(CommunityClasses.LIKE);\r\n    const testLike = new Like();\r\n    \r\n    // 设置字段\r\n    testLike.set('user', AV.User.current());\r\n    \r\n    // 设置 ACL\r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    if (AV.User.current()) {\r\n      acl.setWriteAccess(AV.User.current(), true);\r\n    }\r\n    testLike.setACL(acl);\r\n    \r\n    await testLike.save();\r\n    console.log('✅ Like 类创建成功并添加测试数据');\r\n    \r\n    // 删除测试数据\r\n    await testLike.destroy();\r\n    console.log('🧹 已清理测试数据');\r\n    \r\n    return { \r\n      success: true, \r\n      message: 'Like class created successfully' \r\n    };\r\n  } catch (error) {\r\n    console.error('创建 Like 类失败:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Follow 类（关注关系表）\r\n */\r\nconst createFollowClass = async () => {\r\n  try {\r\n    // 检查是否已存在\r\n    const query = new AV.Query(CommunityClasses.FOLLOW);\r\n    const existing = await query.first().catch(() => null);\r\n    if (existing) {\r\n      console.log('📝 Follow 类已存在，跳过创建');\r\n      return { exists: true, message: 'Follow class already exists' };\r\n    }\r\n\r\n    // 创建 Follow 类\r\n    const Follow = AV.Object.extend(CommunityClasses.FOLLOW);\r\n    const testFollow = new Follow();\r\n    \r\n    // 设置字段\r\n    testFollow.set('follower', AV.User.current());\r\n    \r\n    // 设置 ACL\r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    if (AV.User.current()) {\r\n      acl.setWriteAccess(AV.User.current(), true);\r\n    }\r\n    testFollow.setACL(acl);\r\n    \r\n    await testFollow.save();\r\n    console.log('✅ Follow 类创建成功并添加测试数据');\r\n    \r\n    // 删除测试数据\r\n    await testFollow.destroy();\r\n    console.log('🧹 已清理测试数据');\r\n    \r\n    return { \r\n      success: true, \r\n      message: 'Follow class created successfully' \r\n    };\r\n  } catch (error) {\r\n    console.error('创建 Follow 类失败:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n/**\r\n * 生成社区示例数据\r\n */\r\nexport const generateCommunitySampleData = async () => {\r\n  try {\r\n    console.log('🚀 开始生成社区示例数据...');\r\n    \r\n    // 首先确保数据表已创建\r\n    await createCommunityClasses();\r\n    \r\n    const results = {\r\n      posts: await createSamplePosts(),\r\n      comments: await createSampleComments(),\r\n      likes: await createSampleLikes()\r\n    };\r\n    \r\n    console.log('✅ 社区示例数据生成完成:', results);\r\n    return {\r\n      success: true,\r\n      ...results,\r\n      message: `成功生成 ${results.posts.length} 个帖子, ${results.comments.length} 条评论, ${results.likes.length} 个点赞`\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ 生成社区示例数据失败:', error);\r\n    throw new Error(`生成社区示例数据失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建示例帖子\r\n */\r\nconst createSamplePosts = async () => {\r\n  const currentUser = AV.User.current();\r\n  if (!currentUser) {\r\n    console.log('⚠️ 用户未登录，跳过创建示例帖子');\r\n    return [];\r\n  }\r\n\r\n  const Post = AV.Object.extend(CommunityClasses.POST);\r\n  const samplePosts = [\r\n    {\r\n      title: '欢迎来到学习社区！',\r\n      content: `大家好！欢迎来到我们的学习社区。这里是一个分享编程学习心得、交流刷题经验的地方。\r\n\r\n## 社区规则：\r\n1. 友善交流，互相帮助\r\n2. 分享有价值的内容\r\n3. 尊重他人观点\r\n4. 保持内容相关性\r\n\r\n希望大家都能在这里有所收获！🎉`,\r\n      tags: ['欢迎', '公告', '社区'],\r\n      isPublic: true,\r\n      isPinned: true\r\n    },\r\n    {\r\n      title: 'JavaScript 闭包的理解与实践',\r\n      content: `今天来分享一下我对 JavaScript 闭包的理解...\r\n\r\n## 什么是闭包？\r\n闭包是指那些能够访问自由变量的函数。\r\n\r\n## 实际应用场景：\r\n1. 模块化开发\r\n2. 私有变量\r\n3. 函数柯里化\r\n\r\n大家有什么补充的吗？`,\r\n      tags: ['JavaScript', '闭包', '前端'],\r\n      isPublic: true,\r\n      isPinned: false\r\n    },\r\n    {\r\n      title: 'React Hooks 使用心得',\r\n      content: `使用 React Hooks 有一段时间了，分享一些实践经验：\r\n\r\n- useState: 状态管理\r\n- useEffect: 副作用处理\r\n- useContext: 上下文传递\r\n- useMemo: 性能优化\r\n\r\n你们觉得哪个 Hook 最实用？`,\r\n      tags: ['React', 'Hooks', '前端'],\r\n      isPublic: true,\r\n      isPinned: false\r\n    }\r\n  ];\r\n\r\n  const posts = [];\r\n  for (const data of samplePosts) {\r\n    const post = new Post();\r\n    post.set('title', data.title);\r\n    post.set('content', data.content);\r\n    post.set('author', currentUser);\r\n    post.set('tags', data.tags);\r\n    post.set('likes', Math.floor(Math.random() * 10));\r\n    post.set('views', Math.floor(Math.random() * 50));\r\n    post.set('commentCount', Math.floor(Math.random() * 5));\r\n    post.set('isPublic', data.isPublic);\r\n    post.set('isPinned', data.isPinned);\r\n    post.set('status', PostStatusOptions.PUBLISHED);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    acl.setWriteAccess(currentUser, true);\r\n    post.setACL(acl);\r\n    \r\n    const saved = await post.save();\r\n    posts.push(saved);\r\n    console.log(`✅ 创建帖子: \"${data.title}\"`);\r\n  }\r\n  \r\n  return posts;\r\n};\r\n\r\n/**\r\n * 创建示例评论\r\n */\r\nconst createSampleComments = async () => {\r\n  const currentUser = AV.User.current();\r\n  if (!currentUser) {\r\n    console.log('⚠️ 用户未登录，跳过创建示例评论');\r\n    return [];\r\n  }\r\n\r\n  // 获取刚创建的帖子\r\n  const postQuery = new AV.Query(CommunityClasses.POST);\r\n  const posts = await postQuery.find();\r\n  \r\n  if (posts.length === 0) {\r\n    console.log('⚠️ 没有找到帖子，跳过创建评论');\r\n    return [];\r\n  }\r\n\r\n  const Comment = AV.Object.extend(CommunityClasses.COMMENT);\r\n  const sampleComments = [\r\n    { content: '欢迎欢迎！期待更多精彩内容！🎊' },\r\n    { content: '闭包的讲解很清晰，感谢分享！' },\r\n    { content: '我觉得 useEffect 最实用，能处理各种副作用。' },\r\n    { content: '新人报道，请多指教！' },\r\n    { content: 'Hooks 确实让 React 开发更简洁了。' }\r\n  ];\r\n\r\n  const comments = [];\r\n  for (let i = 0; i < sampleComments.length; i++) {\r\n    const comment = new Comment();\r\n    comment.set('content', sampleComments[i].content);\r\n    comment.set('author', currentUser);\r\n    comment.set('post', posts[i % posts.length]); // 轮流分配到不同帖子\r\n    comment.set('likes', Math.floor(Math.random() * 5));\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    acl.setWriteAccess(currentUser, true);\r\n    comment.setACL(acl);\r\n    \r\n    const saved = await comment.save();\r\n    comments.push(saved);\r\n    console.log(`✅ 创建评论: \"${sampleComments[i].content.substring(0, 20)}...\"`);\r\n  }\r\n  \r\n  return comments;\r\n};\r\n\r\n/**\r\n * 创建示例点赞\r\n */\r\nconst createSampleLikes = async () => {\r\n  const currentUser = AV.User.current();\r\n  if (!currentUser) {\r\n    console.log('⚠️ 用户未登录，跳过创建示例点赞');\r\n    return [];\r\n  }\r\n\r\n  // 获取刚创建的帖子和评论\r\n  const postQuery = new AV.Query(CommunityClasses.POST);\r\n  const posts = await postQuery.find();\r\n  \r\n  const commentQuery = new AV.Query(CommunityClasses.COMMENT);\r\n  const comments = await commentQuery.find();\r\n\r\n  const Like = AV.Object.extend(CommunityClasses.LIKE);\r\n  const likes = [];\r\n\r\n  // 为第一个帖子点赞\r\n  if (posts.length > 0) {\r\n    const like = new Like();\r\n    like.set('user', currentUser);\r\n    like.set('post', posts[0]);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setWriteAccess(currentUser, true);\r\n    like.setACL(acl);\r\n    \r\n    const saved = await like.save();\r\n    likes.push(saved);\r\n    console.log('✅ 创建帖子点赞');\r\n  }\r\n\r\n  // 为第一个评论点赞\r\n  if (comments.length > 0) {\r\n    const like = new Like();\r\n    like.set('user', currentUser);\r\n    like.set('comment', comments[0]);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setWriteAccess(currentUser, true);\r\n    like.setACL(acl);\r\n    \r\n    const saved = await like.save();\r\n    likes.push(saved);\r\n    console.log('✅ 创建评论点赞');\r\n  }\r\n  \r\n  return likes;\r\n};\r\n\r\n/**\r\n * 清除社区数据\r\n */\r\nexport const clearCommunityData = async () => {\r\n  try {\r\n    \r\n    let deletedCount = {\r\n      posts: 0,\r\n      comments: 0,\r\n      likes: 0,\r\n      follows: 0\r\n    };\r\n    \r\n    // 清除点赞数据\r\n    try {\r\n      const likeQuery = new AV.Query(CommunityClasses.LIKE);\r\n      const likes = await likeQuery.find();\r\n      if (likes.length > 0) {\r\n        await AV.Object.destroyAll(likes);\r\n        deletedCount.likes = likes.length;\r\n      }\r\n    } catch (error) {\r\n    }\r\n    \r\n    // 清除评论数据\r\n    try {\r\n      const commentQuery = new AV.Query(CommunityClasses.COMMENT);\r\n      const comments = await commentQuery.find();\r\n      if (comments.length > 0) {\r\n        await AV.Object.destroyAll(comments);\r\n        deletedCount.comments = comments.length;\r\n      }\r\n    } catch (error) {\r\n    }\r\n    \r\n    // 清除帖子数据\r\n    try {\r\n      const postQuery = new AV.Query(CommunityClasses.POST);\r\n      const posts = await postQuery.find();\r\n      if (posts.length > 0) {\r\n        await AV.Object.destroyAll(posts);\r\n        deletedCount.posts = posts.length;\r\n      }\r\n    } catch (error) {\r\n    }\r\n    \r\n    // 清除关注数据\r\n    try {\r\n      const followQuery = new AV.Query(CommunityClasses.FOLLOW);\r\n      const follows = await followQuery.find();\r\n      if (follows.length > 0) {\r\n        await AV.Object.destroyAll(follows);\r\n        deletedCount.follows = follows.length;\r\n      }\r\n    } catch (error) {\r\n    }\r\n    \r\n    const message = `社区数据清除完成: ${deletedCount.posts} 帖子, ${deletedCount.comments} 评论, ${deletedCount.likes} 点赞, ${deletedCount.follows} 关注`;\r\n    \r\n    return {\r\n      success: true,\r\n      ...deletedCount,\r\n      message\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ 清除社区数据失败:', error);\r\n    throw new Error(`清除社区数据失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n// ==================== 原有函数（保持不变） ====================\r\n\r\n/**\r\n * Notion 同步云函数\r\n */\r\nexport const syncProblemsFromNotion = async () => {\r\n  try {\r\n    \r\n    // 检查环境变量是否配置\r\n    if (!process.env.REACT_APP_NOTION_TOKEN || !process.env.REACT_APP_NOTION_DATABASE_ID) {\r\n      throw new Error('Notion 环境变量未配置，请检查 REACT_APP_NOTION_TOKEN 和 REACT_APP_NOTION_DATABASE_ID');\r\n    }\r\n\r\n    // 调用云函数（如果部署了云引擎版本）\r\n    try {\r\n      const result = await AV.Cloud.run('syncProblemsFromNotion');\r\n      return result;\r\n    } catch (cloudError) {\r\n      // 回退到客户端版本同步\r\n      return await syncWithClientVersion();\r\n    }\r\n  } catch (error) {\r\n    console.error('❌ Notion 同步失败:', error);\r\n    throw new Error(`同步失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 客户端版本同步（云函数不可用时的回退方案）\r\n */\r\nconst syncWithClientVersion = async () => {\r\n  try {\r\n    // 这里可以添加直接从前端调用 Notion API 的逻辑\r\n    // 但由于安全原因，建议使用云函数方式\r\n    console.log('📝 使用客户端同步模式（需要配置云函数）');\r\n    \r\n    // 模拟同步过程\r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    \r\n    return {\r\n      success: true,\r\n      message: '同步功能需要部署云函数。请参考以下步骤：\\n1. 在 LeanCloud 云引擎部署 syncProblemsFromNotion 云函数\\n2. 配置 NOTION_INTEGRATION_TOKEN 和 NOTION_DATABASE_ID 环境变量',\r\n      data: {\r\n        synced: 0,\r\n        mode: 'client_fallback'\r\n      }\r\n    };\r\n  } catch (error) {\r\n    throw new Error(`客户端同步失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Notion 同步相关的云函数定义（用于云引擎部署）\r\n */\r\nexport const defineNotionCloudFunctions = () => {\r\n  // 这些函数需要在云引擎中定义\r\n  if (typeof AV.Cloud !== 'undefined') {\r\n    // 同步题目云函数\r\n    AV.Cloud.define('syncProblemsFromNotion', async (request) => {\r\n      const { Client } = require('@notionhq/client');\r\n      \r\n      // 初始化 Notion 客户端\r\n      const notion = new Client({\r\n        auth: process.env.NOTION_INTEGRATION_TOKEN,\r\n      });\r\n\r\n      try {\r\n        console.log('开始从 Notion 数据库同步数据...');\r\n        \r\n        // 查询 Notion 数据库\r\n        const response = await notion.databases.query({\r\n          database_id: process.env.NOTION_DATABASE_ID,\r\n          sorts: [{ timestamp: 'last_edited_time', direction: 'descending' }],\r\n        });\r\n\r\n        console.log(`从 Notion 获取到 ${response.results.length} 条记录`);\r\n\r\n        const problems = [];\r\n        let syncedCount = 0;\r\n        \r\n        // 处理每条记录\r\n        for (const page of response.results) {\r\n          const problemData = parseNotionPage(page);\r\n          if (problemData) {\r\n            problems.push(problemData);\r\n          }\r\n        }\r\n\r\n        // 保存到 LeanCloud\r\n        syncedCount = await saveNotionProblemsToLeanCloud(problems);\r\n        \r\n        return {\r\n          success: true,\r\n          message: `同步完成！处理 ${response.results.length} 条记录，成功保存 ${syncedCount} 道题目`,\r\n          data: {\r\n            fetched: response.results.length,\r\n            saved: syncedCount,\r\n            problems: problems.slice(0, 5) // 返回前5条作为示例\r\n          }\r\n        };\r\n\r\n      } catch (error) {\r\n        console.error('Notion 同步错误:', error);\r\n        throw new AV.Cloud.Error(`同步失败: ${error.message}`);\r\n      }\r\n    });\r\n\r\n    // 检查 Notion 连接状态\r\n    AV.Cloud.define('checkNotionConnection', async (request) => {\r\n      const { Client } = require('@notionhq/client');\r\n      \r\n      try {\r\n        const notion = new Client({\r\n          auth: process.env.NOTION_INTEGRATION_TOKEN,\r\n        });\r\n\r\n        // 尝试查询数据库信息\r\n        const database = await notion.databases.retrieve({\r\n          database_id: process.env.NOTION_DATABASE_ID,\r\n        });\r\n\r\n        return {\r\n          success: true,\r\n          connected: true,\r\n          database: {\r\n            title: database.title[0]?.plain_text || '未命名',\r\n            properties: Object.keys(database.properties),\r\n            url: database.url\r\n          }\r\n        };\r\n      } catch (error) {\r\n        return {\r\n          success: false,\r\n          connected: false,\r\n          error: error.message\r\n        };\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * 解析 Notion 页面数据\r\n */\r\nconst parseNotionPage = (page) => {\r\n  try {\r\n    const properties = page.properties;\r\n    \r\n    // 获取标题\r\n    const title = getNotionPropertyValue(properties, NotionFieldMapping.TITLE, 'title');\r\n    if (!title) {\r\n      console.warn('跳过无标题的记录:', page.id);\r\n      return null;\r\n    }\r\n\r\n    // 获取其他字段\r\n    const difficulty = getNotionPropertyValue(properties, NotionFieldMapping.DIFFICULTY, 'select');\r\n    const categoryName = getNotionPropertyValue(properties, NotionFieldMapping.CATEGORY, 'select');\r\n    const tags = getNotionPropertyValue(properties, NotionFieldMapping.TAGS, 'multi_select') || [];\r\n    const content = getNotionPropertyValue(properties, NotionFieldMapping.CONTENT, 'rich_text');\r\n    const completionTime = getNotionPropertyValue(properties, NotionFieldMapping.COMPLETION_TIME, 'number');\r\n\r\n    return {\r\n      title: title,\r\n      difficulty: difficulty || DifficultyOptions.MEDIUM,\r\n      category: categoryName || '未分类',\r\n      tags: Array.isArray(tags) ? tags : [tags],\r\n      content: content || '',\r\n      completionTime: completionTime || 15,\r\n      notionPageId: page.id,\r\n      notionUrl: page.url,\r\n      lastEditedTime: new Date(page.last_edited_time),\r\n      isActive: true\r\n    };\r\n  } catch (error) {\r\n    console.error('解析 Notion 页面失败:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * 通用获取 Notion 属性值的方法\r\n */\r\nconst getNotionPropertyValue = (properties, fieldNames, expectedType) => {\r\n  for (const fieldName of fieldNames) {\r\n    const property = properties[fieldName];\r\n    if (property && property.type === expectedType) {\r\n      switch (expectedType) {\r\n        case 'title':\r\n          return property.title[0]?.text?.content;\r\n        case 'rich_text':\r\n          return property.rich_text[0]?.text?.content;\r\n        case 'select':\r\n          return property.select?.name;\r\n        case 'multi_select':\r\n          return property.multi_select?.map(item => item.name);\r\n        case 'number':\r\n          return property.number;\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * 保存 Notion 数据到 LeanCloud\r\n */\r\nconst saveNotionProblemsToLeanCloud = async (problems) => {\r\n  const Question = AV.Object.extend('Question');\r\n  let savedCount = 0;\r\n\r\n  for (const problemData of problems) {\r\n    try {\r\n      // 查找或创建分类\r\n      const category = await findOrCreateCategory(problemData.category);\r\n      \r\n      // 检查是否已存在相同 Notion Page ID 的题目\r\n      const query = new AV.Query('Question');\r\n      query.equalTo('notionPageId', problemData.notionPageId);\r\n      const existing = await query.first();\r\n      \r\n      const question = existing || new Question();\r\n      \r\n      // 设置题目属性\r\n      question.set('title', problemData.title);\r\n      question.set('content', problemData.content);\r\n      question.set('difficulty', problemData.difficulty);\r\n      question.set('tags', problemData.tags);\r\n      question.set('completionTime', problemData.completionTime);\r\n      question.set('category', category);\r\n      question.set('notionPageId', problemData.notionPageId);\r\n      question.set('notionUrl', problemData.notionUrl);\r\n      question.set('isActive', true);\r\n      \r\n      // 设置 ACL\r\n      const acl = new AV.ACL();\r\n      acl.setPublicReadAccess(true);\r\n      acl.setPublicWriteAccess(true);\r\n      question.setACL(acl);\r\n      \r\n      await question.save();\r\n      savedCount++;\r\n      \r\n      console.log(`✅ 保存题目: \"${problemData.title}\" → 分类 \"${problemData.category}\"`);\r\n    } catch (error) {\r\n      console.error(`保存题目失败: ${problemData.title}`, error);\r\n    }\r\n  }\r\n  \r\n  // 更新分类计数\r\n  await updateAllCategoryCounts();\r\n  \r\n  return savedCount;\r\n};\r\n\r\n/**\r\n * 查找或创建分类\r\n */\r\nconst findOrCreateCategory = async (categoryName) => {\r\n  const Category = AV.Object.extend('Category');\r\n  \r\n  // 查找现有分类\r\n  const query = new AV.Query('Category');\r\n  query.equalTo('name', categoryName);\r\n  let category = await query.first();\r\n  \r\n  // 如果不存在则创建\r\n  if (!category) {\r\n    category = new Category();\r\n    category.set('name', categoryName);\r\n    category.set('questionCount', 0);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(true);\r\n    category.setACL(acl);\r\n    \r\n    await category.save();\r\n  }\r\n  \r\n  return category;\r\n};\r\n\r\n/**\r\n * 检查 Notion 连接状态\r\n */\r\nexport const checkNotionConnection = async () => {\r\n  try {\r\n    const result = await AV.Cloud.run('checkNotionConnection');\r\n    return result;\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      connected: false,\r\n      error: error.message,\r\n      message: '请确保已部署云函数并配置环境变量'\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 生成正确格式的 Category 和 Question Class（包含示例数据）\r\n */\r\nexport const generateSampleData = async () => {\r\n  try {\r\n    console.log('开始生成示例数据...');\r\n    await clearAllData();\r\n    const categories = await createCategories();\r\n    const questions = await createQuestions(categories);\r\n    await updateCategoryCounts(categories);\r\n    \r\n    console.log('🎉 示例数据生成完成！');\r\n    return {\r\n      success: true,\r\n      categoriesCount: categories.length,\r\n      questionsCount: questions.length,\r\n      message: `成功生成 ${categories.length} 个分类和 ${questions.length} 个题目`\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ 生成示例数据失败:', error);\r\n    throw new Error(`生成失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Category 数据\r\n */\r\nconst createCategories = async () => {\r\n  const Category = AV.Object.extend('Category');\r\n  const categoriesData = [\r\n    { name: 'JavaScript 核心概念' }, { name: 'React 框架原理' }, { name: '算法与数据结构' },\r\n    { name: '计算机网络' }, { name: '数据库系统' }, { name: '操作系统' },\r\n    { name: '前端工程化' }, { name: 'TypeScript 进阶' }\r\n  ];\r\n\r\n  const categories = [];\r\n  for (const data of categoriesData) {\r\n    const category = new Category();\r\n    category.set('name', data.name);\r\n    category.set('questionCount', 0);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(true);\r\n    category.setACL(acl);\r\n    \r\n    const saved = await category.save();\r\n    categories.push(saved);\r\n    console.log(`✅ 创建分类: ${data.name}`);\r\n  }\r\n  \r\n  return categories;\r\n};\r\n\r\n/**\r\n * 创建 Question 数据（关联到 Category）\r\n */\r\nconst createQuestions = async (categories) => {\r\n  const Question = AV.Object.extend('Question');\r\n  const questionsData = [\r\n    // 你原有的题目数据...\r\n  ];\r\n\r\n  const questions = [];\r\n  for (const data of questionsData) {\r\n    const question = new Question();\r\n    question.set('title', data.title);\r\n    question.set('answer', data.answer);\r\n    question.set('tags', data.tags);\r\n    question.set('difficulty', data.difficulty);\r\n    question.set('completionTime', data.completionTime);\r\n    question.set('proficiency', data.proficiency);\r\n    question.set('category', categories[data.categoryIndex]);\r\n    question.set('isActive', true);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(true);\r\n    question.setACL(acl);\r\n    \r\n    const saved = await question.save();\r\n    questions.push(saved);\r\n    console.log(`✅ 创建题目: \"${data.title}\" → 属于 \"${categories[data.categoryIndex].get('name')}\"`);\r\n  }\r\n  \r\n  return questions;\r\n};\r\n\r\n/**\r\n * 更新 Category 的题目计数\r\n */\r\nconst updateCategoryCounts = async (categories) => {\r\n  for (const category of categories) {\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    const count = await questionQuery.count();\r\n    category.set('questionCount', count);\r\n    await category.save();\r\n    console.log(`📊 分类 \"${category.get('name')}\" 有 ${count} 个题目`);\r\n  }\r\n};\r\n\r\n/**\r\n * 更新所有分类的题目计数\r\n */\r\nconst updateAllCategoryCounts = async () => {\r\n  const categoryQuery = new AV.Query('Category');\r\n  const categories = await categoryQuery.find();\r\n  \r\n  for (const category of categories) {\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    const count = await questionQuery.count();\r\n    category.set('questionCount', count);\r\n    await category.save();\r\n  }\r\n  \r\n  console.log(`📊 更新了 ${categories.length} 个分类的题目计数`);\r\n};\r\n\r\n/**\r\n * 清除所有数据\r\n */\r\nexport const clearAllData = async () => {\r\n  try {\r\n    console.log('开始清除所有数据...');\r\n    let deletedQuestions = 0;\r\n    let deletedCategories = 0;\r\n    \r\n    try {\r\n      const questionQuery = new AV.Query('Question');\r\n      const questions = await questionQuery.find();\r\n      if (questions.length > 0) {\r\n        await AV.Object.destroyAll(questions);\r\n        deletedQuestions = questions.length;\r\n        console.log(`🗑️ 删除了 ${deletedQuestions} 个题目`);\r\n      }\r\n    } catch (error) {\r\n      console.log('没有题目需要删除或删除失败:', error.message);\r\n    }\r\n    \r\n    try {\r\n      const categoryQuery = new AV.Query('Category');\r\n      const categories = await categoryQuery.find();\r\n      if (categories.length > 0) {\r\n        await AV.Object.destroyAll(categories);\r\n        deletedCategories = categories.length;\r\n        console.log(`🗑️ 删除了 ${deletedCategories} 个分类`);\r\n      }\r\n    } catch (error) {\r\n      console.log('没有分类需要删除或删除失败:', error.message);\r\n    }\r\n    \r\n    const message = `清除完成: ${deletedCategories} 个分类, ${deletedQuestions} 个题目`;\r\n    console.log('✅ ' + message);\r\n    \r\n    return {\r\n      success: true,\r\n      deletedCategories,\r\n      deletedQuestions,\r\n      message\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ 清除数据失败:', error);\r\n    throw new Error(`清除失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 检查数据状态\r\n */\r\nexport const checkDataStatus = async () => {\r\n  try {\r\n    let categoryCount = 0;\r\n    let questionCount = 0;\r\n    \r\n    try {\r\n      const categoryQuery = new AV.Query('Category');\r\n      categoryCount = await categoryQuery.count();\r\n    } catch (error) {\r\n      categoryCount = 0;\r\n    }\r\n    \r\n    try {\r\n      const questionQuery = new AV.Query('Question');\r\n      questionCount = await questionQuery.count();\r\n    } catch (error) {\r\n      questionCount = 0;\r\n    }\r\n    \r\n    const status = {\r\n      categoryCount,\r\n      questionCount,\r\n      hasData: categoryCount > 0 || questionCount > 0\r\n    };\r\n    \r\n    console.log('📊 数据状态:', status);\r\n    return status;\r\n  } catch (error) {\r\n    console.error('检查数据状态失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 导出所有常量和函数\r\nexport { \r\n  DifficultyOptions, \r\n  ProficiencyOptions, \r\n  NotionFieldMapping,\r\n  CommunityClasses,\r\n  PostStatusOptions,\r\n  PostSortOptions\r\n};\r\n\r\n// 全局可用\r\nif (typeof window !== 'undefined') {\r\n  // 原有函数\r\n  window.generateSampleData = generateSampleData;\r\n  window.clearAllData = clearAllData;\r\n  window.checkDataStatus = checkDataStatus;\r\n  window.syncProblemsFromNotion = syncProblemsFromNotion;\r\n  window.checkNotionConnection = checkNotionConnection;\r\n  window.defineNotionCloudFunctions = defineNotionCloudFunctions;\r\n  \r\n  // 新增社区函数\r\n  window.createCommunityClasses = createCommunityClasses;\r\n  window.generateCommunitySampleData = generateCommunitySampleData;\r\n  window.clearCommunityData = clearCommunityData;\r\n  \r\n  console.log(`\r\n🎯 数据库管理工具已加载！\r\n\r\n📚 数据管理:\r\n1. generateSampleData()          - 生成示例数据\r\n2. clearAllData()                - 清除所有数据\r\n3. checkDataStatus()             - 检查数据状态\r\n\r\n🔄 Notion 同步:\r\n4. syncProblemsFromNotion()      - 从 Notion 导入题目\r\n5. checkNotionConnection()       - 检查 Notion 连接状态\r\n6. defineNotionCloudFunctions()  - 定义云函数（用于云引擎）\r\n\r\n👥 社区功能:\r\n7. createCommunityClasses()      - 创建社区数据表\r\n8. generateCommunitySampleData() - 生成社区示例数据\r\n9. clearCommunityData()          - 清除社区数据\r\n\r\n💡 使用提示:\r\n- 首次使用请运行 generateSampleData() 创建示例数据\r\n- 使用社区功能前运行 createCommunityClasses() 创建数据表\r\n- 配置 Notion 环境变量后使用 syncProblemsFromNotion() 同步\r\n- 云函数需要在 LeanCloud 云引擎部署\r\n  `);\r\n}","// InitPage.jsx\r\nimport React, { useState } from 'react';\r\nimport { \r\n  generateSampleData, \r\n  clearAllData, \r\n  checkDataStatus, \r\n  syncProblemsFromNotion, \r\n  checkNotionConnection,\r\n  createCommunityClasses,\r\n  generateCommunitySampleData,\r\n  clearCommunityData\r\n} from '../services/initClasses';\r\nimport './InitPage.css';\r\n\r\nconst InitPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [dataStatus, setDataStatus] = useState(null);\r\n  const [notionStatus, setNotionStatus] = useState(null);\r\n  const [syncResult, setSyncResult] = useState(null);\r\n  const [communityStatus, setCommunityStatus] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('notion'); // 'notion', 'data', 'community'\r\n\r\n  // 检查数据状态\r\n  const handleCheckStatus = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const status = await checkDataStatus();\r\n      setDataStatus(status);\r\n      setMessage(`📊 当前数据: ${status.categoryCount} 个分类, ${status.questionCount} 个题目`);\r\n    } catch (error) {\r\n      setMessage(`❌ 检查失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 检查社区数据状态\r\n  const handleCheckCommunityStatus = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const status = {\r\n        postCount: 0,\r\n        commentCount: 0,\r\n        likeCount: 0,\r\n        followCount: 0,\r\n        hasData: false\r\n      };\r\n      \r\n      try {\r\n        // 使用 checkDataStatus 的逻辑来检查社区数据\r\n        // 这里简化处理，实际使用时可以调用专门的社区状态检查函数\r\n        status.postCount = 0;\r\n        status.commentCount = 0;\r\n        status.likeCount = 0;\r\n        status.followCount = 0;\r\n        status.hasData = false;\r\n        \r\n        setMessage(`📊 社区数据状态已检查，请先创建社区数据表`);\r\n      } catch (error) {\r\n        setMessage(`📊 社区数据表尚未创建，请先点击\"创建社区数据表\"`);\r\n      }\r\n      \r\n      setCommunityStatus(status);\r\n    } catch (error) {\r\n      setMessage(`❌ 检查社区状态失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 检查 Notion 连接状态\r\n  const handleCheckNotionConnection = async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    setNotionStatus(null);\r\n    \r\n    try {\r\n      const result = await checkNotionConnection();\r\n      setNotionStatus(result);\r\n      \r\n      if (result.success && result.connected) {\r\n        setMessage(`✅ Notion 连接正常！数据库: ${result.database.title}`);\r\n      } else {\r\n        setMessage(`⚠️ Notion 连接异常: ${result.error || '请检查配置'}`);\r\n      }\r\n    } catch (error) {\r\n      setMessage(`❌ 检查 Notion 连接失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 从 Notion 同步数据\r\n  const handleSyncFromNotion = async () => {\r\n    if (!window.confirm('确定要从 Notion 导入数据吗？这会添加新题目到现有数据中。')) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setMessage('');\r\n    setSyncResult(null);\r\n    \r\n    try {\r\n      const result = await syncProblemsFromNotion();\r\n      setSyncResult(result);\r\n      \r\n      if (result.success) {\r\n        setMessage(`✅ ${result.message}`);\r\n        // 同步成功后更新状态\r\n        await handleCheckStatus();\r\n      } else {\r\n        setMessage(`⚠️ ${result.message}`);\r\n      }\r\n    } catch (error) {\r\n      setMessage(`❌ 同步失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 生成示例数据\r\n  const handleGenerateData = async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await generateSampleData();\r\n      setMessage(`✅ ${result.message}`);\r\n      // 更新状态\r\n      await handleCheckStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 创建社区数据表\r\n  const handleCreateCommunityClasses = async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await createCommunityClasses();\r\n      if (result.Post.success && result.Comment.success && result.Like.success && result.Follow.success) {\r\n        setMessage(`✅ 社区数据表创建成功！所有表都已就绪`);\r\n      } else {\r\n        // 检查哪些表创建失败\r\n        const failedTables = [];\r\n        if (!result.Post.success) failedTables.push('Post');\r\n        if (!result.Comment.success) failedTables.push('Comment');\r\n        if (!result.Like.success) failedTables.push('Like');\r\n        if (!result.Follow.success) failedTables.push('Follow');\r\n        \r\n        if (failedTables.length > 0) {\r\n          setMessage(`⚠️ 部分表创建失败: ${failedTables.join(', ')}。可能表已存在或权限不足`);\r\n        } else {\r\n          setMessage(`✅ 社区数据表创建完成`);\r\n        }\r\n      }\r\n      // 更新社区状态\r\n      await handleCheckCommunityStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ 创建社区数据表失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 生成社区示例数据\r\n  const handleGenerateCommunityData = async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await generateCommunitySampleData();\r\n      setMessage(`✅ ${result.message}`);\r\n      // 更新社区状态\r\n      await handleCheckCommunityStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ 生成社区示例数据失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 清除所有数据\r\n  const handleClearData = async () => {\r\n    if (!window.confirm('确定要清除所有数据吗？此操作不可撤销！')) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await clearAllData();\r\n      setMessage(`✅ ${result.message}`);\r\n      // 更新状态\r\n      await handleCheckStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 清除社区数据\r\n  const handleClearCommunityData = async () => {\r\n    if (!window.confirm('确定要清除所有社区数据吗？此操作不可撤销！')) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await clearCommunityData();\r\n      setMessage(`✅ ${result.message}`);\r\n      // 更新社区状态\r\n      await handleCheckCommunityStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ 清除社区数据失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"init-page\">\r\n      <header className=\"page-header\">\r\n        <h1>🎯 数据库管理工具</h1>\r\n        <p>管理 Category、Question 和社区数据，支持 Notion 同步</p>\r\n      </header>\r\n\r\n      {/* 标签导航 */}\r\n      <section className=\"tab-navigation\">\r\n        <div className=\"tabs\">\r\n          <button \r\n            className={`tab ${activeTab === 'notion' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('notion')}\r\n          >\r\n            🔄 Notion 同步\r\n          </button>\r\n          <button \r\n            className={`tab ${activeTab === 'data' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('data')}\r\n          >\r\n            📊 题目数据管理\r\n          </button>\r\n          <button \r\n            className={`tab ${activeTab === 'community' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('community')}\r\n          >\r\n            👥 社区数据管理\r\n          </button>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Notion 同步功能区 */}\r\n    \r\n      {activeTab === 'notion' && (\r\n        <section className=\"notion-section\">\r\n          <h2>🔄 Notion 数据同步</h2>\r\n          <div className=\"action-buttons\">\r\n            <button \r\n              onClick={handleCheckNotionConnection}\r\n              disabled={loading}\r\n              className=\"btn btn-notion\"\r\n            >\r\n              🔗 检查 Notion 连接\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleSyncFromNotion}\r\n              disabled={loading}\r\n              className=\"btn btn-sync\"\r\n            >\r\n              📥 从 Notion 导入\r\n            </button>\r\n          </div>\r\n\r\n          {notionStatus && (\r\n            <div className=\"notion-status\">\r\n              <h4>Notion 连接状态</h4>\r\n              <div className={`status-card ${notionStatus.connected ? 'connected' : 'disconnected'}`}>\r\n                <div className=\"status-header\">\r\n                  <span className=\"status-indicator\">\r\n                    {notionStatus.connected ? '🟢' : '🔴'}\r\n                  </span>\r\n                  <strong>\r\n                    {notionStatus.connected ? '连接正常' : '连接异常'}\r\n                  </strong>\r\n                </div>\r\n                \r\n                {notionStatus.connected && notionStatus.database && (\r\n                  <div className=\"database-info\">\r\n                    <p><strong>数据库:</strong> {notionStatus.database.title}</p>\r\n                    <p><strong>属性字段:</strong> {notionStatus.database.properties.length} 个</p>\r\n                    <p><strong>URL:</strong> \r\n                      <a href={notionStatus.database.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        查看数据库\r\n                      </a>\r\n                    </p>\r\n                  </div>\r\n                )}\r\n                \r\n                {!notionStatus.connected && (\r\n                  <div className=\"error-info\">\r\n                    <p><strong>错误信息:</strong> {notionStatus.error}</p>\r\n                    <p className=\"help-text\">\r\n                      💡 请确保已部署云函数并配置环境变量\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {syncResult && (\r\n            <div className=\"sync-result\">\r\n              <h4>同步结果</h4>\r\n              <div className=\"result-card\">\r\n                <div className=\"result-stats\">\r\n                  <div className=\"stat\">\r\n                    <span className=\"stat-label\">获取记录:</span>\r\n                    <span className=\"stat-value\">{syncResult.data?.fetched || 0}</span>\r\n                  </div>\r\n                  <div className=\"stat\">\r\n                    <span className=\"stat-label\">成功保存:</span>\r\n                    <span className=\"stat-value\">{syncResult.data?.saved || 0}</span>\r\n                  </div>\r\n                  <div className=\"stat\">\r\n                    <span className=\"stat-label\">同步模式:</span>\r\n                    <span className=\"stat-value\">{syncResult.data?.mode || 'cloud'}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                {syncResult.data?.problems && syncResult.data.problems.length > 0 && (\r\n                  <div className=\"synced-problems\">\r\n                    <h5>最近同步的题目:</h5>\r\n                    <ul>\r\n                      {syncResult.data.problems.slice(0, 3).map((problem, index) => (\r\n                        <li key={index}>\r\n                          <span className=\"problem-title\">{problem.title}</span>\r\n                          <span className=\"problem-category\">{problem.category}</span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </section>\r\n      )}\r\n\r\n      {/* 题目数据管理功能区 */}\r\n      {activeTab === 'data' && (\r\n        <section className=\"data-management-section\">\r\n          <h2>📊 题目数据管理</h2>\r\n          <div className=\"action-buttons\">\r\n            <button \r\n              onClick={handleCheckStatus}\r\n              disabled={loading}\r\n              className=\"btn btn-info\"\r\n            >\r\n              🔍 检查状态\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleGenerateData}\r\n              disabled={loading}\r\n              className=\"btn btn-success\"\r\n            >\r\n              🚀 生成示例数据\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleClearData}\r\n              disabled={loading}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              🗑️ 清除所有数据\r\n            </button>\r\n          </div>\r\n\r\n          {dataStatus && (\r\n            <div className=\"status-info\">\r\n              <h4>📈 数据状态</h4>\r\n              <div className=\"status-grid\">\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">分类数量:</span>\r\n                  <span className=\"value\">{dataStatus.categoryCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">题目数量:</span>\r\n                  <span className=\"value\">{dataStatus.questionCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">数据状态:</span>\r\n                  <span className={`value ${dataStatus.hasData ? 'has-data' : 'no-data'}`}>\r\n                    {dataStatus.hasData ? '有数据' : '无数据'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </section>\r\n      )}\r\n\r\n      {/* 社区数据管理功能区 */}\r\n      {activeTab === 'community' && (\r\n        <section className=\"community-management-section\">\r\n          <h2>👥 社区数据管理</h2>\r\n          <p className=\"section-description\">\r\n            管理学习社区的帖子、评论、点赞等社交功能数据\r\n          </p>\r\n          \r\n          <div className=\"action-buttons\">\r\n            <button \r\n              onClick={handleCheckCommunityStatus}\r\n              disabled={loading}\r\n              className=\"btn btn-info\"\r\n            >\r\n              🔍 检查社区状态\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleCreateCommunityClasses}\r\n              disabled={loading}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              🏗️ 创建社区数据表\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleGenerateCommunityData}\r\n              disabled={loading}\r\n              className=\"btn btn-success\"\r\n            >\r\n              🚀 生成社区示例数据\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleClearCommunityData}\r\n              disabled={loading}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              🗑️ 清除社区数据\r\n            </button>\r\n          </div>\r\n\r\n          {communityStatus && (\r\n            <div className=\"status-info\">\r\n              <h4>📈 社区数据状态</h4>\r\n              <div className=\"status-grid\">\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">帖子数量:</span>\r\n                  <span className=\"value\">{communityStatus.postCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">评论数量:</span>\r\n                  <span className=\"value\">{communityStatus.commentCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">点赞数量:</span>\r\n                  <span className=\"value\">{communityStatus.likeCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">关注数量:</span>\r\n                  <span className=\"value\">{communityStatus.followCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">数据状态:</span>\r\n                  <span className={`value ${communityStatus.hasData ? 'has-data' : 'no-data'}`}>\r\n                    {communityStatus.hasData ? '有数据' : '无数据'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"community-classes-info\">\r\n            <h4>🏗️ 社区数据表结构</h4>\r\n            <div className=\"classes-grid\">\r\n              <div className=\"class-card\">\r\n                <h5>📝 Post (帖子)</h5>\r\n                <ul>\r\n                  <li>title - 帖子标题</li>\r\n                  <li>content - 帖子内容</li>\r\n                  <li>author - 作者</li>\r\n                  <li>tags - 标签数组</li>\r\n                  <li>likes - 点赞数</li>\r\n                  <li>views - 浏览数</li>\r\n                  <li>commentCount - 评论数</li>\r\n                  <li>isPublic - 是否公开</li>\r\n                  <li>status - 帖子状态</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <div className=\"class-card\">\r\n                <h5>💬 Comment (评论)</h5>\r\n                <ul>\r\n                  <li>content - 评论内容</li>\r\n                  <li>author - 评论作者</li>\r\n                  <li>post - 所属帖子</li>\r\n                  <li>parent - 父评论</li>\r\n                  <li>likes - 点赞数</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <div className=\"class-card\">\r\n                <h5>👍 Like (点赞)</h5>\r\n                <ul>\r\n                  <li>user - 点赞用户</li>\r\n                  <li>post - 被点赞帖子</li>\r\n                  <li>comment - 被点赞评论</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <div className=\"class-card\">\r\n                <h5>👥 Follow (关注)</h5>\r\n                <ul>\r\n                  <li>follower - 关注者</li>\r\n                  <li>following - 被关注者</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n\r\n      {/* 通用状态显示 */}\r\n      {loading && (\r\n        <div className=\"loading-state\">\r\n          <div className=\"spinner\"></div>\r\n          <span>执行中...</span>\r\n        </div>\r\n      )}\r\n\r\n      {message && (\r\n        <div className={`message ${message.includes('❌') ? 'error' : message.includes('⚠️') ? 'warning' : 'success'}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      {/* 使用说明 */}\r\n      <div className=\"instructions\">\r\n        <h3>📖 使用说明</h3>\r\n        \r\n        {activeTab === 'notion' && (\r\n          <div className=\"instruction-item\">\r\n            <h4>🔄 Notion 同步</h4>\r\n            <ul>\r\n              <li><strong>检查连接:</strong> 验证 Notion API 连接状态</li>\r\n              <li><strong>从 Notion 导入:</strong> 将 Notion 数据库中的题目同步到本地</li>\r\n              <li><strong>智能匹配:</strong> 自动识别分类、难度、标签等字段</li>\r\n              <li><strong>去重机制:</strong> 基于 Notion Page ID 避免重复导入</li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'data' && (\r\n          <div className=\"instruction-item\">\r\n            <h4>📊 题目数据管理</h4>\r\n            <ul>\r\n              <li><strong>生成示例数据:</strong> 创建分类和题目示例数据</li>\r\n              <li><strong>检查状态:</strong> 查看当前数据统计</li>\r\n              <li><strong>清除数据:</strong> 删除所有题目和分类数据</li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'community' && (\r\n          <div className=\"instruction-item\">\r\n            <h4>👥 社区数据管理</h4>\r\n            <ul>\r\n              <li><strong>创建数据表:</strong> 初始化社区功能所需的数据表（Post、Comment、Like、Follow）</li>\r\n              <li><strong>生成示例数据:</strong> 创建示例帖子、评论和点赞数据</li>\r\n              <li><strong>检查状态:</strong> 查看社区数据统计</li>\r\n              <li><strong>清除数据:</strong> 删除所有社区相关数据</li>\r\n            </ul>\r\n            \r\n            <div className=\"community-features\">\r\n              <h5>社区功能特性:</h5>\r\n              <ul>\r\n                <li>📝 发帖和内容管理</li>\r\n                <li>💬 评论和回复系统</li>\r\n                <li>👍 点赞互动功能</li>\r\n                <li>👥 用户关注系统</li>\r\n                <li>🔐 完善的权限控制</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"instruction-item\">\r\n          <h4>🔧 环境配置要求</h4>\r\n          <div className=\"config-requirements\">\r\n            <div className=\"config-item\">\r\n              <strong>Notion 集成:</strong>\r\n              <span>需要配置 NOTION_INTEGRATION_TOKEN 和 NOTION_DATABASE_ID</span>\r\n            </div>\r\n            <div className=\"config-item\">\r\n              <strong>云函数部署:</strong>\r\n              <span>需要在 LeanCloud 云引擎部署同步函数</span>\r\n            </div>\r\n            <div className=\"config-item\">\r\n              <strong>数据库权限:</strong>\r\n              <span>Notion 数据库需要分享给集成</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InitPage;","// components/QuestionForm.jsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { createQuestion, updateQuestion, DifficultyOptions, ProficiencyOptions } from '../services/questionService';\r\nimport { getAllCategories } from '../services/categoryService';\r\nimport AV from 'leancloud-storage';\r\nimport './QuestionForm.css';\r\n\r\nconst QuestionForm = ({ question, onSave, onCancel, defaultCategoryId, onCategoryChange }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    detailedAnswer: '',\r\n    oralAnswer: '',\r\n    code: '',\r\n    url: '',\r\n    tags: [],\r\n    difficulty: DifficultyOptions.MEDIUM,\r\n    proficiency: ProficiencyOptions.BEGINNER,\r\n    appearanceLevel: 50,\r\n    categoryId: '',\r\n    images: [] // 新增：存储上传的图片信息\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [newTag, setNewTag] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingCategories, setLoadingCategories] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [activeAnswerTab, setActiveAnswerTab] = useState('detailed');\r\n  const [uploadingImages, setUploadingImages] = useState([]); // 新增：上传中的图片\r\n  \r\n  // 添加用户状态\r\n  const currentUser = AV.User.current();\r\n  \r\n  // 创建 ref 用于文件输入\r\n  const fileInputRef = useRef(null);\r\n  const detailedAnswerRef = useRef(null);\r\n  const oralAnswerRef = useRef(null);\r\n\r\n  const isEditing = !!question;\r\n\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    \r\n    if (user) {\r\n      loadCategories();\r\n      if (question) {\r\n        setFormData({\r\n          title: question.title || '',\r\n          detailedAnswer: question.detailedAnswer || '',\r\n          oralAnswer: question.oralAnswer || '',\r\n          code: question.code || '',\r\n          url: question.url || '',\r\n          tags: question.tags || [],\r\n          difficulty: question.difficulty || DifficultyOptions.MEDIUM,\r\n          proficiency: question.proficiency || ProficiencyOptions.BEGINNER,\r\n          appearanceLevel: question.appearanceLevel || 50,\r\n          categoryId: question.category?.id || '',\r\n          images: question.images || [] // 加载已有的图片\r\n        });\r\n      } else if (defaultCategoryId) {\r\n        setFormData(prev => ({ ...prev, categoryId: defaultCategoryId }));\r\n      }\r\n    }\r\n  }, [question, defaultCategoryId]);\r\n\r\n  const loadCategories = async () => {\r\n    if (!currentUser) {\r\n      return\r\n    };\r\n    \r\n    setLoadingCategories(true);\r\n    try {\r\n      const categoriesData = await getAllCategories();\r\n      \r\n      // 确保只显示当前用户的分类\r\n      const userCategories = categoriesData.filter(category => {\r\n        // 检查分类是否属于当前用户\r\n        const createdBy = category.createdBy;\r\n        return createdBy && createdBy.id === currentUser.id;\r\n      });\r\n      \r\n      setCategories(userCategories);\r\n      \r\n      console.log('加载到的分类:', {\r\n        总数: categoriesData.length,\r\n        用户分类: userCategories.length,\r\n        当前用户: currentUser.id,\r\n        分类详情: userCategories.map(cat => ({ id: cat.id, name: cat.name, createdBy: cat.createdBy?.id }))\r\n      });\r\n      \r\n      // 如果没有传入类别ID且没有默认类别ID，默认选择第一个类别\r\n      if (!isEditing && !defaultCategoryId && userCategories.length > 0 && !formData.categoryId) {\r\n        setFormData(prev => ({ ...prev, categoryId: userCategories[0].id }));\r\n        console.log('自动选择第一个分类:', userCategories[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error('加载类别失败:', error);\r\n      setErrors({ categories: '加载类别失败: ' + error.message });\r\n    } finally {\r\n      setLoadingCategories(false);\r\n    }\r\n  };\r\n\r\n  // 新增：处理拖拽事件\r\n  const handleDragOver = (e, answerType) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const textarea = answerType === 'detailed' ? detailedAnswerRef.current : oralAnswerRef.current;\r\n    if (textarea) {\r\n      textarea.classList.add('drag-over');\r\n    }\r\n  };\r\n\r\n  const handleDragLeave = (e, answerType) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const textarea = answerType === 'detailed' ? detailedAnswerRef.current : oralAnswerRef.current;\r\n    if (textarea) {\r\n      textarea.classList.remove('drag-over');\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e, answerType) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    const textarea = answerType === 'detailed' ? detailedAnswerRef.current : oralAnswerRef.current;\r\n    if (textarea) {\r\n      textarea.classList.remove('drag-over');\r\n    }\r\n\r\n    const files = Array.from(e.dataTransfer.files);\r\n    handleFiles(files, answerType);\r\n  };\r\n\r\n  // 新增：处理文件选择\r\n  const handleFileSelect = (e, answerType) => {\r\n    const files = Array.from(e.target.files);\r\n    handleFiles(files, answerType);\r\n    // 重置文件输入\r\n    e.target.value = '';\r\n  };\r\n\r\n  // 新增：处理文件上传\r\n  const handleFiles = async (files, answerType) => {\r\n    const imageFiles = files.filter(file => \r\n      file.type === 'image/jpeg' || \r\n      file.type === 'image/png' || \r\n      file.type === 'image/jpg'\r\n    );\r\n\r\n    if (imageFiles.length === 0) {\r\n      alert('请选择 JPG 或 PNG 格式的图片文件');\r\n      return;\r\n    }\r\n\r\n    for (const file of imageFiles) {\r\n      await uploadImage(file, answerType);\r\n    }\r\n  };\r\n\r\n  // 新增：上传图片到 LeanCloud\r\n  const uploadImage = async (file, answerType) => {\r\n    const uploadingId = Date.now().toString();\r\n    \r\n    try {\r\n      // 添加到上传中列表\r\n      setUploadingImages(prev => [...prev, uploadingId]);\r\n      \r\n      // 创建 LeanCloud 文件对象\r\n      const avFile = new AV.File(file.name, file);\r\n      \r\n      // 上传文件\r\n      const savedFile = await avFile.save();\r\n      \r\n      // 创建图片信息对象\r\n      const imageInfo = {\r\n        id: uploadingId,\r\n        objectId: savedFile.id,\r\n        url: savedFile.url(),\r\n        name: file.name,\r\n        size: file.size,\r\n        type: file.type,\r\n        answerType: answerType // 标记图片属于哪个答案类型\r\n      };\r\n      \r\n      // 添加到表单数据\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        images: [...prev.images, imageInfo]\r\n      }));\r\n      \r\n      // 插入图片标记到文本区域\r\n      insertImageMarkdown(imageInfo, answerType);\r\n      \r\n    } catch (error) {\r\n      console.error('图片上传失败:', error);\r\n      alert(`图片上传失败: ${error.message}`);\r\n    } finally {\r\n      // 从上传中列表移除\r\n      setUploadingImages(prev => prev.filter(id => id !== uploadingId));\r\n    }\r\n  };\r\n\r\n  // 新增：插入图片 Markdown 到文本区域\r\n  const insertImageMarkdown = (imageInfo, answerType) => {\r\n    const markdown = `![${imageInfo.name}](${imageInfo.url})`;\r\n    const field = answerType === 'detailed' ? 'detailedAnswer' : 'oralAnswer';\r\n    \r\n    setFormData(prev => {\r\n      const currentText = prev[field];\r\n      const newText = currentText ? `${currentText}\\n${markdown}` : markdown;\r\n      return { ...prev, [field]: newText };\r\n    });\r\n  };\r\n\r\n  // 新增：手动触发文件选择\r\n  const triggerFileInput = (answerType) => {\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.setAttribute('data-answer-type', answerType);\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  // 新增：删除图片\r\n  const removeImage = (imageId) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      images: prev.images.filter(img => img.id !== imageId)\r\n    }));\r\n  };\r\n\r\n  // 新增：获取指定答案类型的图片\r\n  const getImagesByAnswerType = (answerType) => {\r\n    return formData.images.filter(img => img.answerType === answerType);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.title.trim()) {\r\n      newErrors.title = '问题标题不能为空';\r\n    } else if (formData.title.trim().length < 2) {\r\n      newErrors.title = '问题标题至少需要2个字符';\r\n    }\r\n    \r\n    if (!formData.detailedAnswer.trim() && !formData.oralAnswer.trim()) {\r\n      newErrors.answer = '至少需要填写一个答案版本（详细版本或口述版本）';\r\n    }\r\n    \r\n    if (!formData.categoryId) {\r\n      newErrors.categoryId = '请选择类别';\r\n    }\r\n    \r\n    if (formData.tags.length > 10) {\r\n      newErrors.tags = '标签数量不能超过10个';\r\n    }\r\n\r\n    if (formData.url && !isValidUrl(formData.url)) {\r\n      newErrors.url = '请输入有效的URL链接';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const isValidUrl = (string) => {\r\n    try {\r\n      new URL(string);\r\n      return true;\r\n    } catch (_) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData(prev => ({ \r\n      ...prev, \r\n      [field]: value \r\n    }));\r\n    \r\n    // 清除该字段的错误信息\r\n    if (errors[field]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleAddTag = () => {\r\n    const tag = newTag.trim();\r\n    if (tag && !formData.tags.includes(tag)) {\r\n      if (formData.tags.length >= 10) {\r\n        setErrors({ tags: '标签数量不能超过10个' });\r\n        return;\r\n      }\r\n      \r\n      setFormData(prev => ({\r\n        ...prev,\r\n        tags: [...prev.tags, tag]\r\n      }));\r\n      setNewTag('');\r\n      \r\n      // 清除标签错误\r\n      if (errors.tags) {\r\n        setErrors(prev => ({\r\n          ...prev,\r\n          tags: ''\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRemoveTag = (tagToRemove) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      tags: prev.tags.filter(tag => tag !== tagToRemove)\r\n    }));\r\n  };\r\n\r\n  const handleTagKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleAddTag();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      if (isEditing) {\r\n        // 检查类别是否发生了变化\r\n        const oldCategory = question.category; // 原来的 category 对象\r\n        const newCategory = categories.find(cat => cat.id === formData.categoryId); // 新的 category 对象\r\n        const categoryChanged = oldCategory?.id !== newCategory?.id;\r\n        \r\n        await updateQuestion(question.id, formData);\r\n        \r\n        // 如果类别发生了变化，调用回调函数通知父组件\r\n        if (categoryChanged && onCategoryChange) {\r\n          onCategoryChange({\r\n            questionId: question.id,\r\n            oldCategoryId: oldCategory?.id,\r\n            newCategoryId: newCategory?.id,\r\n            question: { ...question, ...formData, category: newCategory }\r\n          });\r\n        }\r\n      } else {\r\n        // 创建题目时只需要传递 categoryId，questionService 会处理 Pointer 转换\r\n        await createQuestion(formData);\r\n      }\r\n      onSave();\r\n      window.dispatchEvent(new CustomEvent('questionCreated', {\r\n        detail: { question: result }\r\n      }));\r\n    } catch (error) {\r\n      console.error('保存题目失败:', error);\r\n      setErrors({ submit: error.message });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 新增：渲染答案标签页内容\r\n  const renderAnswerTab = (type, placeholder, hint) => {\r\n    const images = getImagesByAnswerType(type);\r\n    const isUploading = uploadingImages.length > 0;\r\n    const field = type === 'detailed' ? 'detailedAnswer' : 'oralAnswer';\r\n    const textareaRef = type === 'detailed' ? detailedAnswerRef : oralAnswerRef;\r\n    \r\n    return (\r\n      <div className=\"tab-panel\">\r\n        <div \r\n          className=\"answer-textarea-container\"\r\n          onDragOver={(e) => handleDragOver(e, type)}\r\n          onDragLeave={(e) => handleDragLeave(e, type)}\r\n          onDrop={(e) => handleDrop(e, type)}\r\n        >\r\n          <textarea\r\n            ref={textareaRef}\r\n            value={formData[field]}\r\n            onChange={(e) => handleInputChange(field, e.target.value)}\r\n            placeholder={placeholder}\r\n            rows={type === 'detailed' ? '6' : '4'}\r\n            disabled={loading}\r\n            className={errors.answer && !formData[field].trim() ? 'error' : ''}\r\n          />\r\n          \r\n          {/* 图片上传提示 */}\r\n          <div className=\"upload-hint\">\r\n            <div className=\"upload-hint-text\">\r\n              💡 支持拖拽 JPG/PNG 图片到此区域，或 \r\n              <button \r\n                type=\"button\" \r\n                className=\"upload-trigger-btn\"\r\n                onClick={() => triggerFileInput(type)}\r\n                disabled={loading || isUploading}\r\n              >\r\n                点击上传\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 已上传图片预览 */}\r\n        {images.length > 0 && (\r\n          <div className=\"uploaded-images\">\r\n            <div className=\"images-title\">已上传图片 ({images.length}):</div>\r\n            <div className=\"images-grid\">\r\n              {images.map((image) => (\r\n                <div key={image.id} className=\"image-item\">\r\n                  <img src={image.url} alt={image.name} />\r\n                  <div className=\"image-info\">\r\n                    <span className=\"image-name\">{image.name}</span>\r\n                    <button \r\n                      type=\"button\"\r\n                      className=\"remove-image-btn\"\r\n                      onClick={() => removeImage(image.id)}\r\n                      disabled={loading}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"tab-hint\">\r\n          {hint}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"question-form-overlay\">\r\n        <div className=\"question-form-dialog\">\r\n          <div className=\"question-form-header\">\r\n            <h3>请先登录</h3>\r\n            <button \r\n              type=\"button\" \r\n              className=\"close-button\"\r\n              onClick={onCancel}\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n          <div className=\"auth-required-container\">\r\n            <div className=\"auth-required-icon\">🔐</div>\r\n            <p>登录后即可添加或编辑题目</p>\r\n            <div className=\"auth-required-actions\">\r\n              <button \r\n                onClick={() => window.dispatchEvent(new CustomEvent('showAuthModal'))}\r\n                className=\"login-btn\"\r\n              >\r\n                立即登录\r\n              </button>\r\n              <button \r\n                onClick={onCancel}\r\n                className=\"btn-secondary\"\r\n              >\r\n                取消\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"question-form-overlay\">\r\n      <div className=\"question-form-dialog\">\r\n        <div className=\"question-form-header\">\r\n          <h3>{isEditing ? '编辑题目' : '添加新题目'}</h3>\r\n          <div className=\"user-info\">\r\n            <span className=\"user-badge\">👤 {currentUser.getUsername()}</span>\r\n          </div>\r\n          <button \r\n            type=\"button\" \r\n            className=\"close-button\"\r\n            onClick={onCancel}\r\n            disabled={loading}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"question-form\">\r\n          {/* 问题标题 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">问题标题 *</label>\r\n            <input\r\n              id=\"title\"\r\n              type=\"text\"\r\n              value={formData.title}\r\n              onChange={(e) => handleInputChange('title', e.target.value)}\r\n              placeholder=\"请输入问题标题\"\r\n              disabled={loading}\r\n              className={errors.title ? 'error' : ''}\r\n            />\r\n            {errors.title && <span className=\"error-message\">{errors.title}</span>}\r\n          </div>\r\n\r\n          {/* 答案版本标签页 */}\r\n          <div className=\"form-group\">\r\n            <label>问题答案 *</label>\r\n            <div className=\"answer-tabs-container\">\r\n              <div className=\"answer-tab-buttons\">\r\n                <button \r\n                  type=\"button\"\r\n                  className={`answer-tab-button ${activeAnswerTab === 'detailed' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('detailed')}\r\n                >\r\n                  详细版本\r\n                </button>\r\n                <button \r\n                  type=\"button\"\r\n                  className={`answer-tab-button ${activeAnswerTab === 'oral' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('oral')}\r\n                >\r\n                  口述版本\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"answer-tab-content\">\r\n                {activeAnswerTab === 'detailed' && \r\n                  renderAnswerTab(\r\n                    'detailed', \r\n                    '请输入详细的答案解释，包含技术细节、原理分析等', \r\n                    '适合记录完整的技术解析和详细说明'\r\n                  )\r\n                }\r\n\r\n                {activeAnswerTab === 'oral' && \r\n                  renderAnswerTab(\r\n                    'oral', \r\n                    '请输入简洁的口述版本答案，适合面试场景表达', \r\n                    '适合记录简洁的口头表达版本，便于面试时快速回忆'\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n            {errors.answer && <span className=\"error-message\">{errors.answer}</span>}\r\n          </div>\r\n\r\n          {/* 代码展示部分 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">相关代码（可选）</label>\r\n            <textarea\r\n              id=\"code\"\r\n              value={formData.code}\r\n              onChange={(e) => handleInputChange('code', e.target.value)}\r\n              placeholder=\"请输入与该题目相关的代码片段，将保持原格式显示\"\r\n              rows=\"8\"\r\n              disabled={loading}\r\n              className=\"code-textarea\"\r\n            />\r\n            <div className=\"field-hint\">\r\n              代码将保持原格式显示，适合展示算法实现、组件代码等\r\n            </div>\r\n          </div>\r\n\r\n          {/* URL链接 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"url\">相关链接（可选）</label>\r\n            <input\r\n              id=\"url\"\r\n              type=\"url\"\r\n              value={formData.url}\r\n              onChange={(e) => handleInputChange('url', e.target.value)}\r\n              placeholder=\"https://example.com\"\r\n              disabled={loading}\r\n              className={errors.url ? 'error' : ''}\r\n            />\r\n            {errors.url && <span className=\"error-message\">{errors.url}</span>}\r\n            <div className=\"field-hint\">\r\n              可添加相关的文档、文章或参考链接\r\n            </div>\r\n          </div>\r\n\r\n          {/* 标签管理 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"tags\">标签（可选）</label>\r\n            <div className=\"tags-input-container\">\r\n              <input\r\n                id=\"tags\"\r\n                type=\"text\"\r\n                value={newTag}\r\n                onChange={(e) => setNewTag(e.target.value)}\r\n                onKeyPress={handleTagKeyPress}\r\n                placeholder=\"输入标签后按回车或点击添加\"\r\n                disabled={loading}\r\n                maxLength={20}\r\n              />\r\n              <button \r\n                type=\"button\" \r\n                onClick={handleAddTag}\r\n                disabled={loading || !newTag.trim()}\r\n                className=\"add-tag-button\"\r\n              >\r\n                添加\r\n              </button>\r\n            </div>\r\n            {errors.tags && <span className=\"error-message\">{errors.tags}</span>}\r\n            \r\n            {/* 标签列表 */}\r\n            {formData.tags.length > 0 && (\r\n              <div className=\"tags-list\">\r\n                <div className=\"tags-header\">\r\n                  <span>已添加标签 ({formData.tags.length}/10):</span>\r\n                </div>\r\n                <div className=\"tags-container\">\r\n                  {formData.tags.map((tag, index) => (\r\n                    <span key={index} className=\"tag\">\r\n                      {tag}\r\n                      <button \r\n                        type=\"button\" \r\n                        onClick={() => handleRemoveTag(tag)}\r\n                        disabled={loading}\r\n                        className=\"remove-tag-button\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* 难度和掌握程度 */}\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"difficulty\">难度</label>\r\n              <select\r\n                id=\"difficulty\"\r\n                value={formData.difficulty}\r\n                onChange={(e) => handleInputChange('difficulty', e.target.value)}\r\n                disabled={loading}\r\n              >\r\n                <option value={DifficultyOptions.EASY}>简单</option>\r\n                <option value={DifficultyOptions.MEDIUM}>中等</option>\r\n                <option value={DifficultyOptions.HARD}>困难</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"proficiency\">掌握程度</label>\r\n              <select\r\n                id=\"proficiency\"\r\n                value={formData.proficiency}\r\n                onChange={(e) => handleInputChange('proficiency', e.target.value)}\r\n                disabled={loading}\r\n              >\r\n                <option value={ProficiencyOptions.BEGINNER}>初级</option>\r\n                <option value={ProficiencyOptions.INTERMEDIATE}>中级</option>\r\n                <option value={ProficiencyOptions.ADVANCED}>高级</option>\r\n                <option value={ProficiencyOptions.MASTER}>精通</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n            \r\n          {/* 出现频率 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"appearanceLevel\">\r\n              出现频率: {formData.appearanceLevel}%\r\n              <span className=\"field-hint\">（数值越高，在复习时出现的概率越大）</span>\r\n            </label>\r\n            <input\r\n              id=\"appearanceLevel\"\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              value={formData.appearanceLevel}\r\n              onChange={(e) => handleInputChange('appearanceLevel', parseInt(e.target.value))}\r\n              disabled={loading}\r\n              className=\"appearance-slider\"\r\n            />\r\n            <div className=\"slider-labels\">\r\n              <span>低频</span>\r\n              <span>中频</span>\r\n              <span>高频</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 类别选择 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"category\">类别 *</label>\r\n            {loadingCategories ? (\r\n              <div className=\"loading-categories\">加载类别中...</div>\r\n            ) : categories.length === 0 ? (\r\n              <div className=\"no-categories\">\r\n                <div className=\"no-categories-icon\">📁</div>\r\n                <p>暂无类别，请先创建类别</p>\r\n                <button \r\n                  type=\"button\"\r\n                  className=\"create-category-btn\"\r\n                  onClick={() => {\r\n                    onCancel(); // 关闭题目表单\r\n                    // 触发创建分类的事件或跳转到分类管理页面\r\n                    window.dispatchEvent(new CustomEvent('showCategoryManagement'));\r\n                  }}\r\n                >\r\n                  🚀 去创建分类\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <select\r\n                id=\"category\"\r\n                value={formData.categoryId}\r\n                onChange={(e) => handleInputChange('categoryId', e.target.value)}\r\n                disabled={loading}\r\n                className={errors.categoryId ? 'error' : ''}\r\n              >\r\n                <option value=\"\">请选择类别</option>\r\n                {categories.map(category => (\r\n                  <option key={category.id} value={category.id}>\r\n                    {category.name} ({category.questionCount || 0}题)\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            )}\r\n            {errors.categoryId && <span className=\"error-message\">{errors.categoryId}</span>}\r\n          </div>\r\n\r\n          {/* 提交错误 */}\r\n          {errors.submit && (\r\n            <div className=\"submit-error\">\r\n              {errors.submit}\r\n            </div>\r\n          )}\r\n\r\n          {/* 表单操作 */}\r\n          <div className=\"form-actions\">\r\n            <button \r\n              type=\"button\" \r\n              onClick={onCancel}\r\n              disabled={loading}\r\n              className=\"btn-secondary\"\r\n            >\r\n              取消\r\n            </button>\r\n            <button \r\n              type=\"submit\" \r\n              disabled={loading}\r\n              className=\"btn-primary\"\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <span className=\"loading-spinner\"></span>\r\n                  {isEditing ? '更新中...' : '添加中...'}\r\n                </>\r\n              ) : (\r\n                isEditing ? '更新题目' : '添加题目'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        {/* 隐藏的文件输入 */}\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          style={{ display: 'none' }}\r\n          accept=\".jpg,.jpeg,.png\"\r\n          multiple\r\n          onChange={(e) => {\r\n            const answerType = e.target.getAttribute('data-answer-type');\r\n            handleFileSelect(e, answerType);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionForm;","// components/QuestionDetailCard.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport QuestionForm from './QuestionForm';\r\nimport AV from 'leancloud-storage';\r\nimport './QuestionDetailCard.css';\r\n\r\nconst QuestionDetailCard = ({ \r\n  question, \r\n  onDelete, \r\n  isExpandedView = false, \r\n  onUpdateField,\r\n  onEdit, // 新增：接收编辑回调函数\r\n  showQuestionForm, // 新增：控制表单显示\r\n  setShowQuestionForm, // 新增：控制表单显示状态\r\n  editingQuestion, // 新增：正在编辑的题目\r\n  setEditingQuestion // 新增：设置编辑题目\r\n}) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [showFullAnswer, setShowFullAnswer] = useState(isExpandedView);\r\n  const [deleteLoading, setDeleteLoading] = useState(false);\r\n  const [editLoading, setEditLoading] = useState(false);\r\n  const [activeAnswerTab, setActiveAnswerTab] = useState('oral');\r\n  const [localAppearanceLevel, setLocalAppearanceLevel] = useState(question?.appearanceLevel || 50);\r\n  const [updatingAppearance, setUpdatingAppearance] = useState(false);\r\n  \r\n  // 添加确认复习相关状态\r\n  const [showReviewConfirm, setShowReviewConfirm] = useState(false);\r\n  const [reviewDays, setReviewDays] = useState(7); // 默认7天\r\n  const [confirmingReview, setConfirmingReview] = useState(false);\r\n  \r\n  // 添加移除复习相关状态\r\n  const [showRemoveReview, setShowRemoveReview] = useState(false);\r\n  const [removeDays, setRemoveDays] = useState(7); // 默认7天\r\n  const [removingReview, setRemovingReview] = useState(false);\r\n  \r\n  // 添加用户状态\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n  }, []);\r\n\r\n  // 当question的appearanceLevel变化时更新本地状态\r\n  useEffect(() => {\r\n    console.log('question.appearanceLevel 变化:', question?.appearanceLevel);\r\n    setLocalAppearanceLevel(question?.appearanceLevel);\r\n  }, [question?.appearanceLevel]);\r\n\r\n  // 监控状态变化用于调试\r\n  useEffect(() => {\r\n    console.log('localAppearanceLevel 状态变化:', localAppearanceLevel);\r\n  }, [localAppearanceLevel]);\r\n\r\n  // 增强的 Markdown 解析函数 - 支持图片预览\r\n  const parseMarkdown = (text) => {\r\n    if (!text || text.trim() === '') {\r\n      return <span className=\"no-content\">暂无内容</span>;\r\n    }\r\n\r\n    // 分割文本为行\r\n    const lines = text.split('\\n');\r\n    const elements = [];\r\n    let inCodeBlock = false;\r\n    let codeBlockContent = [];\r\n    let codeLanguage = '';\r\n\r\n    lines.forEach((line, index) => {\r\n      // 检查代码块开始 (```language)\r\n      if (line.trim().startsWith('```')) {\r\n        if (!inCodeBlock) {\r\n          inCodeBlock = true;\r\n          codeLanguage = line.trim().substring(3).trim() || 'text';\r\n          codeBlockContent = [];\r\n          return;\r\n        } else {\r\n          inCodeBlock = false;\r\n          elements.push(\r\n            <pre key={`code-${index}`} className=\"code-block\">\r\n              <code className={`language-${codeLanguage}`}>{codeBlockContent.join('\\n')}</code>\r\n            </pre>\r\n          );\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (inCodeBlock) {\r\n        codeBlockContent.push(line);\r\n        return;\r\n      }\r\n\r\n      if (line.trim() === '') {\r\n        elements.push(<br key={`br-${index}`} />);\r\n        return;\r\n      }\r\n\r\n      // 处理图片标记 - 新增：直接渲染为小预览图\r\n      const imageMatch = line.match(/!\\[(.*?)\\]\\((.*?)\\)/);\r\n      if (imageMatch) {\r\n        const altText = imageMatch[1];\r\n        const imageUrl = imageMatch[2];\r\n        elements.push(\r\n          <div key={`img-${index}`} className=\"markdown-image-container\">\r\n            <img \r\n              src={imageUrl} \r\n              alt={altText} \r\n              className=\"markdown-image-preview\"\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                // 点击预览图可以查看大图\r\n                window.open(imageUrl, '_blank');\r\n              }}\r\n            />\r\n            {altText && altText !== '' && (\r\n              <div className=\"image-alt-text\">{altText}</div>\r\n            )}\r\n          </div>\r\n        );\r\n        return;\r\n      }\r\n\r\n      let processedLine = line;\r\n\r\n      // 处理标题\r\n      if (line.startsWith('### ')) {\r\n        elements.push(<h3 key={`h3-${index}`} className=\"md-h3\">{line.substring(4)}</h3>);\r\n        return;\r\n      } else if (line.startsWith('## ')) {\r\n        elements.push(<h2 key={`h2-${index}`} className=\"md-h2\">{line.substring(3)}</h2>);\r\n        return;\r\n      } else if (line.startsWith('# ')) {\r\n        elements.push(<h1 key={`h1-${index}`} className=\"md-h1\">{line.substring(2)}</h1>);\r\n        return;\r\n      }\r\n\r\n      // 处理粗体\r\n      processedLine = processedLine.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\r\n      processedLine = processedLine.replace(/__(.*?)__/g, '<strong>$1</strong>');\r\n\r\n      // 处理斜体\r\n      processedLine = processedLine.replace(/\\*(.*?)\\*/g, '<em>$1</em>');\r\n      processedLine = processedLine.replace(/_(.*?)_/g, '<em>$1</em>');\r\n\r\n      // 处理代码片段\r\n      processedLine = processedLine.replace(/`(.*?)`/g, '<code class=\"inline-code\">$1</code>');\r\n\r\n      // 处理链接\r\n      processedLine = processedLine.replace(/\\[(.*?)\\]\\((.*?)\\)/g, '<a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"md-link\">$1</a>');\r\n\r\n      // 处理无序列表\r\n      if (line.trim().startsWith('- ') || line.trim().startsWith('* ')) {\r\n        const listItem = line.trim().substring(2);\r\n        elements.push(\r\n          <div key={`li-${index}`} className=\"md-list-item\">\r\n            • {listItem}\r\n          </div>\r\n        );\r\n        return;\r\n      }\r\n\r\n      // 处理有序列表\r\n      const orderedListMatch = line.trim().match(/^(\\d+)\\.\\s+(.*)$/);\r\n      if (orderedListMatch) {\r\n        elements.push(\r\n          <div key={`oli-${index}`} className=\"md-list-item\">\r\n            {orderedListMatch[1]}. {orderedListMatch[2]}\r\n          </div>\r\n        );\r\n        return;\r\n      }\r\n\r\n      // 处理引用块\r\n      if (line.trim().startsWith('> ')) {\r\n        elements.push(\r\n          <blockquote key={`blockquote-${index}`} className=\"md-blockquote\">\r\n            {line.substring(2)}\r\n          </blockquote>\r\n        );\r\n        return;\r\n      }\r\n\r\n      // 普通段落\r\n      elements.push(\r\n        <div \r\n          key={`p-${index}`} \r\n          className=\"md-paragraph\"\r\n          dangerouslySetInnerHTML={{ __html: processedLine }}\r\n        />\r\n      );\r\n    });\r\n\r\n    if (inCodeBlock && codeBlockContent.length > 0) {\r\n      elements.push(\r\n        <pre key=\"code-final\" className=\"code-block\">\r\n          <code className={`language-${codeLanguage}`}>{codeBlockContent.join('\\n')}</code>\r\n        </pre>\r\n      );\r\n    }\r\n\r\n    return <div className=\"markdown-content\">{elements}</div>;\r\n  };\r\n\r\n  const getDifficultyColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#52c41a';\r\n      case 'medium': return '#faad14';\r\n      case 'hard': return '#f5222d';\r\n      default: return '#666';\r\n    }\r\n  };\r\n\r\n  const getDifficultyText = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '简单';\r\n      case 'medium': return '中等';\r\n      case 'hard': return '困难';\r\n      default: return difficulty;\r\n    }\r\n  };\r\n\r\n  const getProficiencyText = (proficiency) => {\r\n    switch (proficiency) {\r\n      case 'beginner': return '初级';\r\n      case 'intermediate': return '中级';\r\n      case 'advanced': return '高级';\r\n      case 'master': return '精通';\r\n      default: return proficiency;\r\n    }\r\n  };\r\n\r\n  const getAppearanceLevelColor = (level) => {\r\n    if (level >= 80) return '#ff6b6b';\r\n    if (level >= 60) return '#ffa726';\r\n    if (level >= 40) return '#4ecdc4';\r\n    return '#95a5a6';\r\n  };\r\n\r\n  const formatText = (text) => {\r\n    return parseMarkdown(text);\r\n  };\r\n\r\n  const formatCode = (code) => {\r\n    if (!code || code.trim() === '') {\r\n      return null;\r\n    }\r\n    return (\r\n      <pre className=\"code-block\">\r\n        <code>{code}</code>\r\n      </pre>\r\n    );\r\n  };\r\n\r\n  // 修改后的编辑处理函数 - 调用父组件的 onEdit\r\n  const handleEdit = () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    \r\n    if (onEdit) {\r\n      // 调用父组件的编辑函数\r\n      onEdit(question);\r\n    } else {\r\n      // 如果没有提供 onEdit，使用原来的内部状态管理\r\n      setIsEditing(true);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    if (deleteLoading) return;\r\n    \r\n    if (!window.confirm(`确定要删除题目 \"${question.title}\" 吗？此操作不可撤销！`)) {\r\n      return;\r\n    }\r\n\r\n    setDeleteLoading(true);\r\n    try {\r\n      await onDelete(question.id);\r\n    } catch (error) {\r\n      console.error('删除题目失败:', error);\r\n    } finally {\r\n      setDeleteLoading(false);\r\n    }\r\n  };\r\n\r\n  // 内部编辑状态的处理函数（如果使用内部状态）\r\n  const handleSave = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const toggleAnswer = () => {\r\n    setShowFullAnswer(!showFullAnswer);\r\n  };\r\n\r\n  // 处理出现频率更改 - 优化版本\r\n  const handleAppearanceLevelChange = async (newLevel) => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    console.log('开始更新出现频率:', {\r\n      新值: newLevel,\r\n      当前prop值: question?.appearanceLevel,\r\n      当前本地状态值: localAppearanceLevel\r\n    });\r\n    \r\n    // 立即更新本地状态（乐观更新）\r\n    setLocalAppearanceLevel(newLevel);\r\n    \r\n    if (onUpdateField && question?.id) {\r\n      setUpdatingAppearance(true);\r\n      try {\r\n        await onUpdateField(question.id, 'appearanceLevel', newLevel);\r\n        console.log('出现频率更新成功，等待父组件数据更新');\r\n        \r\n        // 注意：这里不直接更新本地状态，等待父组件传递新的 question prop\r\n        // 父组件应该在 onUpdateField 成功后更新数据并重新传递 question prop\r\n        \r\n      } catch (error) {\r\n        console.error('更新出现频率失败:', error);\r\n        // 出错时回滚到原来的值\r\n        setLocalAppearanceLevel(question?.appearanceLevel || 50);\r\n      } finally {\r\n        setUpdatingAppearance(false);\r\n      }\r\n    } else {\r\n      console.warn('缺少 onUpdateField 或 question.id');\r\n    }\r\n  };\r\n\r\n  // 防抖的滑块处理函数\r\n  const handleSliderChange = (e) => {\r\n    const newLevel = parseInt(e.target.value);\r\n    handleAppearanceLevelChange(newLevel);\r\n  };\r\n\r\n  // 处理确认复习\r\n  const handleConfirmReview = async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    if (confirmingReview) return;\r\n\r\n    setConfirmingReview(true);\r\n    try {\r\n      // 计算下次提醒时间\r\n      const nextReviewDate = new Date();\r\n      nextReviewDate.setDate(nextReviewDate.getDate() + reviewDays);\r\n      \r\n      // 更新题目的下次复习时间\r\n      if (onUpdateField && question?.id) {\r\n        await onUpdateField(question.id, 'nextReviewDate', nextReviewDate.toISOString());\r\n        console.log(`题目将在 ${reviewDays} 天后再次提醒复习`);\r\n        \r\n        // 显示成功消息\r\n        alert(`已确认复习！该题目将在 ${reviewDays} 天后再次出现在复习列表中`);\r\n        \r\n        // 关闭确认对话框\r\n        setShowReviewConfirm(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('确认复习失败:', error);\r\n      alert('确认复习失败，请重试');\r\n    } finally {\r\n      setConfirmingReview(false);\r\n    }\r\n  };\r\n\r\n  // 处理移除复习\r\n  const handleRemoveFromReview = async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    if (removingReview) return;\r\n\r\n    setRemovingReview(true);\r\n    try {\r\n      // 计算下次提醒时间\r\n      const nextReviewDate = new Date();\r\n      nextReviewDate.setDate(nextReviewDate.getDate() + removeDays);\r\n      \r\n      // 更新题目的下次复习时间\r\n      if (onUpdateField && question?.id) {\r\n        await onUpdateField(question.id, 'nextReviewDate', nextReviewDate.toISOString());\r\n        console.log(`题目将在 ${removeDays} 天后再次提醒复习`);\r\n        \r\n        // 显示成功消息\r\n        alert(`已暂停复习！该题目将在 ${removeDays} 天后再次出现在复习列表中`);\r\n        \r\n        // 关闭确认对话框\r\n        setShowRemoveReview(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('移除复习失败:', error);\r\n      alert('操作失败，请重试');\r\n    } finally {\r\n      setRemovingReview(false);\r\n    }\r\n  };\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className={`question-detail-card ${isExpandedView ? 'expanded-view' : ''}`}>\r\n        <div className=\"auth-required-container\">\r\n          <div className=\"auth-required-icon\">🔐</div>\r\n          <h3>请先登录</h3>\r\n          <p>登录后即可查看题目详情</p>\r\n          <div className=\"auth-required-actions\">\r\n            <button \r\n              onClick={() => window.dispatchEvent(new CustomEvent('showAuthModal'))}\r\n              className=\"login-btn\"\r\n            >\r\n              立即登录\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 如果使用内部编辑状态并且正在编辑\r\n  if (isEditing && !onEdit) {\r\n    return (\r\n      <div className={`question-edit-container ${isExpandedView ? 'expanded-view' : ''}`}>\r\n        <QuestionForm\r\n          question={question}\r\n          onSave={handleSave}\r\n          onCancel={handleCancel}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 安全地获取数据\r\n  const detailedAnswer = question?.detailedAnswer || '';\r\n  const oralAnswer = question?.oralAnswer || '';\r\n  const code = question?.code || '';\r\n  const url = question?.url || '';\r\n  // 使用本地状态而不是直接使用 question.appearanceLevel\r\n  const appearanceLevel = localAppearanceLevel;\r\n\r\n  return (\r\n    <div className={`question-detail-card ${isExpandedView ? 'expanded-view' : ''}`}>\r\n     \r\n      {/* 头部信息 */}\r\n      {!isExpandedView && (\r\n        <div className=\"question-header\">\r\n          <div className=\"question-title-section\">\r\n            <h3 className=\"question-title\">{question?.title || '无标题'}</h3>\r\n            <div className=\"question-meta-badges\">\r\n              <span \r\n                className=\"difficulty-badge\"\r\n                style={{ backgroundColor: getDifficultyColor(question?.difficulty) }}\r\n              >\r\n                {getDifficultyText(question?.difficulty)}\r\n              </span>\r\n              <span className=\"proficiency-badge\">\r\n                {getProficiencyText(question?.proficiency)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"question-actions\">\r\n            <button \r\n              onClick={handleEdit}\r\n              className=\"btn-edit\"\r\n              title=\"编辑题目\"\r\n              disabled={deleteLoading}\r\n            >\r\n              {editLoading ? '编辑中...' : '✏️ 编辑'}\r\n            </button>\r\n\r\n            <button \r\n              onClick={() => setShowRemoveReview(true)}\r\n              className=\"btn-remove-review\"\r\n              title=\"暂时移除复习\"\r\n            >\r\n              ⏸️ 暂停复习\r\n            </button>\r\n            <button \r\n              onClick={handleDelete}\r\n              className=\"btn-delete\"\r\n              title=\"删除题目\"\r\n              disabled={deleteLoading}\r\n            >\r\n              {deleteLoading ? '删除中...' : '🗑️ 删除'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 出现频率显示 - 可编辑 */}\r\n      <div className=\"appearance-level-display\">\r\n        <div className=\"appearance-header\">\r\n          <span className=\"appearance-label\">出现频率</span>\r\n          <span className={`appearance-value ${updatingAppearance ? 'updating' : ''}`}>\r\n            {updatingAppearance ? '保存中...' : `${appearanceLevel}%`}\r\n          </span>\r\n        </div>\r\n        <div className=\"appearance-slider-container\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={appearanceLevel}\r\n            onChange={handleSliderChange}\r\n            className=\"appearance-slider-editable\"\r\n            disabled={updatingAppearance}\r\n            style={{\r\n              background: `linear-gradient(90deg, \r\n                ${getAppearanceLevelColor(0)} 0%, \r\n                ${getAppearanceLevelColor(50)} 50%, \r\n                ${getAppearanceLevelColor(100)} 100%)`\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"appearance-labels\">\r\n          <span className=\"appearance-label-low\">低频</span>\r\n          <span className=\"appearance-label-high\">高频</span>\r\n        </div>\r\n        <div className=\"appearance-hint\">\r\n          拖动滑块调整出现频率，数值越高在复习时出现的概率越大\r\n          {updatingAppearance && <span className=\"saving-indicator\"> • 保存中...</span>}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 答案内容区域 */}\r\n      <div className=\"answer-section\">\r\n        {!isExpandedView && (\r\n          <div className=\"answer-header\">\r\n            <h4>答案</h4>\r\n            <div className=\"answer-controls\">\r\n              <div className=\"answer-tabs\">\r\n                <button \r\n                  className={`tab-button ${activeAnswerTab === 'detailed' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('detailed')}\r\n                >\r\n                  详细版本\r\n                </button>\r\n                <button \r\n                  className={`tab-button ${activeAnswerTab === 'oral' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('oral')}\r\n                >\r\n                  口述版本\r\n                </button>\r\n              </div>\r\n              <button \r\n                onClick={toggleAnswer}\r\n                className=\"toggle-answer-btn\"\r\n              >\r\n                {showFullAnswer ? '收起' : '展开'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 答案内容 */}\r\n        <div className={`answer-content ${showFullAnswer || isExpandedView ? 'expanded' : 'collapsed'}`}>\r\n          {isExpandedView ? (\r\n            <div className=\"expanded-answer-tabs\">\r\n              <div className=\"expanded-tab-buttons\">\r\n                <button \r\n                  className={`expanded-tab-button ${activeAnswerTab === 'detailed' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('detailed')}\r\n                >\r\n                  详细版本\r\n                </button>\r\n                <button \r\n                  className={`expanded-tab-button ${activeAnswerTab === 'oral' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('oral')}\r\n                >\r\n                  口述版本\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"expanded-tab-content\">\r\n                {activeAnswerTab === 'detailed' ? (\r\n                  <div className=\"detailed-answer\">\r\n                    <h5>详细答案</h5>\r\n                    <div className=\"answer-text markdown-enabled\">\r\n                      {formatText(detailedAnswer)}\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"oral-answer\">\r\n                    <h5>口述答案</h5>\r\n                    <div className=\"answer-text markdown-enabled\">\r\n                      {formatText(oralAnswer)}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"answer-text markdown-enabled\">\r\n              {activeAnswerTab === 'detailed' ? formatText(detailedAnswer) : formatText(oralAnswer)}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* 代码部分 */}\r\n        {code && code.trim() && (\r\n          <div className=\"code-section\">\r\n            <h5>相关代码</h5>\r\n            {formatCode(code)}\r\n          </div>\r\n        )}\r\n\r\n        {/* 链接部分 */}\r\n        {url && url.trim() && (\r\n          <div className=\"url-section\">\r\n            <h5>相关链接</h5>\r\n            <a \r\n              href={url} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\"\r\n              className=\"question-link\"\r\n            >\r\n              🔗 {url}\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 确认复习按钮 */}\r\n      <div className=\"review-confirm-section\">\r\n        <button \r\n          className=\"confirm-review-btn\"\r\n          onClick={() => setShowReviewConfirm(true)}\r\n        >\r\n          ✅ 确认已复习\r\n        </button>\r\n        <p className=\"review-hint\">\r\n          点击确认后，该题目将在一段时间内不会出现在复习列表中\r\n        </p>\r\n      </div>\r\n\r\n      {/* 确认复习对话框 */}\r\n      {showReviewConfirm && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content review-confirm-modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>确认复习完成</h3>\r\n              <button \r\n                className=\"close-btn\"\r\n                onClick={() => setShowReviewConfirm(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"modal-body\">\r\n              <p>请选择在多少天内不再提醒复习这道题目：</p>\r\n              \r\n              <div className=\"review-days-selector\">\r\n                <div className=\"days-presets\">\r\n                  {[1, 3, 7, 14, 30].map(days => (\r\n                    <button\r\n                      key={days}\r\n                      className={`days-preset-btn ${reviewDays === days ? 'active' : ''}`}\r\n                      onClick={() => setReviewDays(days)}\r\n                    >\r\n                      {days}天\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                \r\n                <div className=\"custom-days-input\">\r\n                  <label htmlFor=\"customDays\">自定义天数：</label>\r\n                  <input\r\n                    id=\"customDays\"\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"365\"\r\n                    value={reviewDays}\r\n                    onChange={(e) => setReviewDays(parseInt(e.target.value) || 1)}\r\n                    className=\"days-input\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"review-info\">\r\n                <p><strong>题目：</strong>{question?.title}</p>\r\n                <p><strong>下次提醒时间：</strong>\r\n                  {new Date(Date.now() + reviewDays * 24 * 60 * 60 * 1000).toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"modal-actions\">\r\n              <button\r\n                className=\"cancel-btn\"\r\n                onClick={() => setShowReviewConfirm(false)}\r\n                disabled={confirmingReview}\r\n              >\r\n                取消\r\n              </button>\r\n              <button\r\n                className=\"confirm-btn\"\r\n                onClick={handleConfirmReview}\r\n                disabled={confirmingReview}\r\n              >\r\n                {confirmingReview ? '确认中...' : '确认复习'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 移除复习对话框 */}\r\n      {showRemoveReview && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content remove-review-modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>暂停复习提醒</h3>\r\n              <button \r\n                className=\"close-btn\"\r\n                onClick={() => setShowRemoveReview(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"modal-body\">\r\n              <p>选择在多少天内不再提醒复习这道题目：</p>\r\n              \r\n              <div className=\"remove-days-selector\">\r\n                <div className=\"days-presets\">\r\n                  {[1, 3, 7, 14, 30, 90].map(days => (\r\n                    <button\r\n                      key={days}\r\n                      className={`days-preset-btn ${removeDays === days ? 'active' : ''}`}\r\n                      onClick={() => setRemoveDays(days)}\r\n                    >\r\n                      {days}天\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                \r\n                <div className=\"custom-days-input\">\r\n                  <label htmlFor=\"customRemoveDays\">自定义天数：</label>\r\n                  <input\r\n                    id=\"customRemoveDays\"\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"365\"\r\n                    value={removeDays}\r\n                    onChange={(e) => setRemoveDays(parseInt(e.target.value) || 1)}\r\n                    className=\"days-input\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"remove-review-info\">\r\n                <p><strong>题目：</strong>{question?.title}</p>\r\n                <p><strong>下次提醒时间：</strong>\r\n                  {new Date(Date.now() + removeDays * 24 * 60 * 60 * 1000).toLocaleDateString()}\r\n                </p>\r\n                <p className=\"info-text\">\r\n                  💡 在此期间，该题目不会出现在复习列表中\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"modal-actions\">\r\n              <button\r\n                className=\"cancel-btn\"\r\n                onClick={() => setShowRemoveReview(false)}\r\n                disabled={removingReview}\r\n              >\r\n                取消\r\n              </button>\r\n              <button\r\n                className=\"confirm-btn\"\r\n                onClick={handleRemoveFromReview}\r\n                disabled={removingReview}\r\n              >\r\n                {removingReview ? '处理中...' : '确认暂停'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 详细信息 */}\r\n      <div className=\"card-details\">\r\n        {!isExpandedView && (\r\n          <div className=\"category-info\">\r\n            <span className=\"category-label\">所属分类:</span>\r\n            <span className=\"category-name\">{question?.category?.name || '未分类'}</span>\r\n          </div>\r\n        )}\r\n\r\n        {question?.tags && question.tags.length > 0 && (\r\n          <div className=\"tags-section\">\r\n            <h4>标签</h4>\r\n            <div className=\"tags-container\">\r\n              {question.tags.map((tag, index) => (\r\n                <span key={index} className=\"tag\">\r\n                  #{tag}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"time-info\">\r\n          <span className=\"create-time\">\r\n            创建: {question?.createdAt ? new Date(question.createdAt).toLocaleDateString() : '未知'}\r\n          </span>\r\n          <span className=\"update-time\">\r\n            更新: {question?.updatedAt ? new Date(question.updatedAt).toLocaleDateString() : '未知'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 展开视图下的操作按钮 */}\r\n      {isExpandedView && (\r\n        <div className=\"expanded-actions\">\r\n          <button \r\n            onClick={handleEdit}\r\n            className=\"btn-edit primary\"\r\n            disabled={deleteLoading}\r\n          >\r\n            ✏️ 编辑题目\r\n          </button>\r\n          <button \r\n            onClick={() => setShowRemoveReview(true)}\r\n            className=\"btn-remove-review secondary\"\r\n          >\r\n            ⏸️ 暂停复习\r\n          </button>\r\n          <button \r\n            onClick={handleDelete}\r\n            className=\"btn-delete secondary\"\r\n            disabled={deleteLoading}\r\n          >\r\n            🗑️ 删除题目\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* 在虚拟化容器之外渲染编辑表单 - 新增 */}\r\n      {showQuestionForm && editingQuestion && editingQuestion.id === question.id && (\r\n        <div \r\n          className=\"form-modal-overlay\"\r\n          style={{\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            zIndex: 9999,\r\n            padding: '20px'\r\n          }}\r\n        >\r\n          <QuestionForm\r\n            question={editingQuestion}\r\n            onSave={() => {\r\n              setShowQuestionForm(false);\r\n              setEditingQuestion(null);\r\n            }}\r\n            onCancel={() => {\r\n              setShowQuestionForm(false);\r\n              setEditingQuestion(null);\r\n            }}\r\n            defaultCategoryId={question?.category?.id}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionDetailCard;","// pages/CategoryDetailPage.jsx\r\nimport React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useInfiniteQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { useVirtualizer } from '@tanstack/react-virtual';\r\nimport { initAV, getCategoryWithQuestions, getAllCategories, getQuestionsByCategory } from '../services/categoryService';\r\nimport { deleteQuestion, updateQuestion } from '../services/questionService';\r\nimport QuestionDetailCard from '../components/QuestionDetailCard';\r\nimport QuestionForm from '../components/QuestionForm';\r\nimport AV from 'leancloud-storage';\r\nimport './CategoryDetailPage.css';\r\n\r\n// 分页配置\r\nconst PAGE_SIZE = 20; // 每页加载的题目数量\r\n\r\n// 防抖函数\r\nconst debounce = (func, wait) => {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n};\r\n\r\nconst CategoryDetailPage = () => {\r\n  const { categoryId } = useParams();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  \r\n  const [category, setCategory] = useState(null);\r\n  const [allCategories, setAllCategories] = useState([]);\r\n  const [showQuestionForm, setShowQuestionForm] = useState(false);\r\n  const [editingQuestion, setEditingQuestion] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortBy, setSortBy] = useState('createdAt');\r\n  const [expandedQuestions, setExpandedQuestions] = useState(new Set());\r\n  const [viewMode, setViewMode] = useState('accordion');\r\n  const [draggingQuestion, setDraggingQuestion] = useState(null);\r\n  const [dragOverQuestion, setDragOverQuestion] = useState(null);\r\n  const [syncMessage, setSyncMessage] = useState('');\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  const loadMoreTriggerRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n\r\n  // 初始化用户和基础数据\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n    \r\n    if (user) {\r\n      initializeData();\r\n    }\r\n  }, [categoryId]);\r\n\r\n  // 滚动到指定题目的事件监听\r\n  useEffect(() => {\r\n    const handleScrollToQuestion = (event) => {\r\n      const { questionId } = event.detail;\r\n      \r\n      const questionElement = document.querySelector(`[data-question-id=\"${questionId}\"]`);\r\n      if (questionElement) {\r\n        questionElement.scrollIntoView({ \r\n          behavior: 'smooth', \r\n          block: 'center' \r\n        });\r\n        \r\n        questionElement.style.boxShadow = '0 0 0 3px #667eea';\r\n        setTimeout(() => {\r\n          questionElement.style.boxShadow = '';\r\n        }, 2000);\r\n        \r\n        if (!expandedQuestions.has(questionId)) {\r\n          toggleQuestion(questionId);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scrollToQuestion', handleScrollToQuestion);\r\n    \r\n    return () => {\r\n      window.removeEventListener('scrollToQuestion', handleScrollToQuestion);\r\n    };\r\n  }, [expandedQuestions]);\r\n\r\n  // 初始化基础数据\r\n  const initializeData = async () => {\r\n    try {\r\n      initAV();\r\n      \r\n      // 串行执行，避免并发请求\r\n      await loadCategoryInfo();\r\n      await new Promise(resolve => setTimeout(resolve, 300)); // 添加延迟\r\n      await loadAllCategories();\r\n    } catch (error) {\r\n      console.error('初始化失败:', error);\r\n      // 如果是429错误，显示友好提示\r\n      if (error.code === 429 || error.message.includes('Too many requests')) {\r\n        setSyncMessage('请求过于频繁，请稍后重试');\r\n        setTimeout(() => setSyncMessage(''), 5000);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 加载分类信息\r\n  const loadCategoryInfo = async () => {\r\n    try {\r\n      const data = await getCategoryWithQuestions(categoryId);\r\n      setCategory(data.category);\r\n    } catch (error) {\r\n      console.error('加载分类信息失败:', error);\r\n    }\r\n  };\r\n\r\n  // 加载所有分类\r\n  const loadAllCategories = async () => {\r\n    try {\r\n      const categoriesData = await getAllCategories();\r\n      const userCategories = categoriesData.filter(cat => {\r\n        const createdBy = cat.createdBy;\r\n        return createdBy && createdBy.id === currentUser?.id;\r\n      });\r\n      setAllCategories(userCategories);\r\n    } catch (error) {\r\n      console.error('加载所有分类失败:', error);\r\n      // 处理429错误\r\n      if (error.code === 429 || error.message.includes('Too many requests')) {\r\n        setSyncMessage('服务器繁忙，请稍后重试');\r\n        setTimeout(() => setSyncMessage(''), 5000);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // 修复无限滚动查询\r\n  const {\r\n    data,\r\n    fetchNextPage,\r\n    hasNextPage,\r\n    isFetchingNextPage,\r\n    isLoading,\r\n    error,\r\n    refetch\r\n  } = useInfiniteQuery({\r\n    queryKey: ['questions', categoryId, sortBy],\r\n    queryFn: async ({ pageParam = 0 }) => {\r\n      console.log('正在获取第', pageParam + 1, '页数据');\r\n      \r\n      const result = await getQuestionsByCategory(categoryId, {\r\n        page: pageParam,\r\n        pageSize: PAGE_SIZE,\r\n        sortBy,\r\n        sortOrder: 'desc'\r\n      });\r\n      \r\n      console.log('第', pageParam + 1, '页返回数据:', {\r\n        dataLength: result.data?.length,\r\n        hasMore: result.data?.length === PAGE_SIZE,\r\n        total: result.total\r\n      });\r\n      \r\n      return {\r\n        questions: result.data || [],\r\n        total: result.total,\r\n        nextPage: result.data?.length === PAGE_SIZE ? pageParam + 1 : undefined\r\n      };\r\n    },\r\n    getNextPageParam: (lastPage, allPages) => {\r\n      const nextPage = lastPage.nextPage;\r\n      \r\n      return nextPage;\r\n    },\r\n    enabled: !!categoryId && !!currentUser,\r\n    staleTime: 1000 * 60 * 5,\r\n    initialPageParam: 0,\r\n  });\r\n\r\n// 在扁平化所有页面的题目时添加去重\r\nconst allQuestions = useMemo(() => {\r\n  const questions = data?.pages.flatMap(page => page.questions) || [];\r\n  \r\n  // 去重逻辑：基于 question.id\r\n  const uniqueQuestions = questions.reduce((acc, current) => {\r\n    const existing = acc.find(item => item.id === current.id);\r\n    if (!existing) {\r\n      acc.push(current);\r\n    } else {\r\n      console.warn('发现重复题目:', current.id, current.title);\r\n    }\r\n    return acc;\r\n  }, []);\r\n  \r\n  return uniqueQuestions;\r\n}, [data]);\r\n\r\n// 在搜索过滤后的题目中也确保去重\r\nconst filteredQuestions = useMemo(() => {\r\n  if (!searchTerm) return allQuestions;\r\n  \r\n  const filtered = allQuestions.filter(question =>\r\n    question.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    (question.detailedAnswer && question.detailedAnswer.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n    (question.oralAnswer && question.oralAnswer.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n    (question.code && question.code.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n    (question.tags && question.tags.some(tag => \r\n      tag.toLowerCase().includes(searchTerm.toLowerCase())\r\n    ))\r\n  );\r\n  \r\n  // 再次去重确保安全\r\n  const uniqueFiltered = Array.from(new Map(filtered.map(item => [item.id, item])).values());\r\n  \r\n  return uniqueFiltered;\r\n}, [allQuestions, searchTerm]);\r\n\r\n// 在排序后的题目中也确保去重\r\nconst sortedQuestions = useMemo(() => {\r\n  const sorted = [...filteredQuestions].sort((a, b) => {\r\n    switch (sortBy) {\r\n      case 'title':\r\n        return a.title.localeCompare(b.title);\r\n      case 'difficulty':\r\n        const difficultyOrder = { 'easy': 1, 'medium': 2, 'hard': 3 };\r\n        return difficultyOrder[a.difficulty] - difficultyOrder[b.difficulty];\r\n      case 'appearanceLevel':\r\n        return (b.appearanceLevel || 50) - (a.appearanceLevel || 50);\r\n      case 'createdAt':\r\n        return new Date(b.createdAt) - new Date(a.createdAt);\r\n      case 'updatedAt':\r\n        return new Date(b.updatedAt) - new Date(a.createdAt);\r\n      default:\r\n        return (b.appearanceLevel || 50) - (a.appearanceLevel || 50);\r\n    }\r\n  });\r\n  \r\n  // 最终去重检查\r\n  const finalUnique = Array.from(new Map(sorted.map(item => [item.id, item])).values());\r\n  \r\n  return finalUnique;\r\n}, [filteredQuestions, sortBy]);\r\n  // React Virtual 虚拟化配置\r\n  const virtualizer = useVirtualizer({\r\n    count: sortedQuestions.length,\r\n    getScrollElement: () => containerRef.current,\r\n    estimateSize: () => viewMode === 'grid' ? 200 : 120,\r\n    overscan: 10,\r\n  });\r\n\r\n  // 修复：改进的滚动加载逻辑\r\n  const handleScroll = useCallback(() => {\r\n    const container = containerRef.current;\r\n    if (!container || !hasNextPage || isFetchingNextPage) {\r\n      return;\r\n    }\r\n\r\n    const { scrollTop, scrollHeight, clientHeight } = container;\r\n    const scrollThreshold = 100;\r\n    const distanceFromBottom = scrollHeight - scrollTop - clientHeight;\r\n    \r\n    console.log('滚动检查:', {\r\n      distanceFromBottom,\r\n      shouldLoad: distanceFromBottom < scrollThreshold,\r\n      hasNextPage,\r\n      isFetchingNextPage\r\n    });\r\n    \r\n    if (distanceFromBottom < scrollThreshold) {\r\n      console.log('🎯 触发加载更多！当前页数:', data?.pages?.length || 0);\r\n      fetchNextPage();\r\n    }\r\n  }, [hasNextPage, isFetchingNextPage, fetchNextPage, data]);\r\n\r\n  // 修复：确保滚动监听正确绑定\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n    if (!container) {\r\n      console.log('❌ 未找到滚动容器');\r\n      return;\r\n    }\r\n\r\n    console.log('✅ 绑定滚动监听器');\r\n    const debouncedScroll = debounce(handleScroll, 50);\r\n    \r\n    container.addEventListener('scroll', debouncedScroll);\r\n    \r\n    return () => {\r\n      container.removeEventListener('scroll', debouncedScroll);\r\n    };\r\n  }, [handleScroll]);\r\n\r\n  // 修复：改进的 Intersection Observer\r\n  useEffect(() => {\r\n    if (!loadMoreTriggerRef.current || !hasNextPage || isFetchingNextPage) {\r\n      return;\r\n    }\r\n\r\n    console.log('🔍 设置 Intersection Observer');\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          console.log('🎯 Intersection Observer 触发加载更多！');\r\n          fetchNextPage();\r\n        }\r\n      },\r\n      { \r\n        threshold: 0.1,\r\n        root: containerRef.current,\r\n        rootMargin: '100px'\r\n      }\r\n    );\r\n\r\n    observer.observe(loadMoreTriggerRef.current);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [hasNextPage, isFetchingNextPage, fetchNextPage, sortedQuestions.length]);\r\n\r\n  // 修复：手动测试加载更多的函数\r\n  const handleManualLoadMore = () => {\r\n    console.log('🔄 手动触发加载更多');\r\n    fetchNextPage();\r\n  };\r\n\r\n  // 删除题目 mutation\r\n  const deleteQuestionMutation = useMutation({\r\n    mutationFn: deleteQuestion,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['questions', categoryId]);\r\n      setSyncMessage('题目删除成功');\r\n      setTimeout(() => setSyncMessage(''), 3000);\r\n    },\r\n    onError: (error) => {\r\n      console.error('删除题目失败:', error);\r\n      alert('删除失败: ' + error.message);\r\n    }\r\n  });\r\n\r\n  // 更新题目 mutation\r\n  const updateQuestionMutation = useMutation({\r\n    mutationFn: ({ questionId, data }) => updateQuestion(questionId, data),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['questions', categoryId]);\r\n    },\r\n    onError: (error) => {\r\n      console.error('更新题目失败:', error);\r\n      throw new Error('更新失败: ' + error.message);\r\n    }\r\n  });\r\n\r\n  // 处理题目类别变化\r\n  const handleQuestionCategoryChange = ({ questionId, oldCategoryId, newCategoryId, question }) => {\r\n    const currentCategory = category;\r\n    \r\n    if (oldCategoryId === currentCategory.id) {\r\n      queryClient.invalidateQueries(['questions', categoryId]);\r\n      \r\n      setExpandedQuestions(prev => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(questionId);\r\n        return newSet;\r\n      });\r\n      \r\n      const newCategory = allCategories.find(cat => cat.id === newCategoryId);\r\n      setSyncMessage(`题目已移动到分类: ${newCategory?.name || '其他分类'}`);\r\n      setTimeout(() => setSyncMessage(''), 3000);\r\n    }\r\n  };\r\n\r\n  const toggleQuestion = (questionId) => {\r\n    setExpandedQuestions(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(questionId)) {\r\n        newSet.delete(questionId);\r\n      } else {\r\n        newSet.add(questionId);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const expandAllQuestions = () => {\r\n    const allQuestionIds = new Set(sortedQuestions.map(q => q.id));\r\n    setExpandedQuestions(allQuestionIds);\r\n  };\r\n\r\n  const collapseAllQuestions = () => {\r\n    setExpandedQuestions(new Set());\r\n  };\r\n\r\n  const handleAddQuestion = () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    setEditingQuestion(null);\r\n    setShowQuestionForm(true);\r\n  };\r\n\r\n  const handleEditQuestion = (question) => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    setEditingQuestion(question);\r\n    setShowQuestionForm(true);\r\n  };\r\n\r\n  const handleDeleteQuestion = async (questionId) => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    const questionToDelete = sortedQuestions.find(q => q.id === questionId);\r\n    if (!questionToDelete) {\r\n      throw new Error('未找到要删除的题目');\r\n    }\r\n\r\n    const confirmMessage = `确定要删除题目 \"${questionToDelete.title}\" 吗？此操作不可撤销！`;\r\n    if (!window.confirm(confirmMessage)) {\r\n      return;\r\n    }\r\n\r\n    deleteQuestionMutation.mutate(questionId);\r\n    \r\n    setExpandedQuestions(prev => {\r\n      const newSet = new Set(prev);\r\n      newSet.delete(questionId);\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const handleUpdateQuestionField = async (questionId, field, value) => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await updateQuestionMutation.mutateAsync({\r\n        questionId,\r\n        data: { [field]: value }\r\n      });\r\n    } catch (error) {\r\n      console.error('更新题目字段失败:', error);\r\n      throw new Error('更新失败: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    refetch();\r\n  };\r\n\r\n  // 拖拽相关函数\r\n  const handleDragStart = (e, questionId) => {\r\n    if (expandedQuestions.size > 0) return;\r\n    \r\n    setDraggingQuestion(questionId);\r\n    e.dataTransfer.effectAllowed = 'move';\r\n    e.dataTransfer.setData('text/plain', questionId);\r\n    \r\n    e.currentTarget.style.opacity = '0.4';\r\n  };\r\n\r\n  const handleDragOver = (e, questionId) => {\r\n    if (expandedQuestions.size > 0 || !draggingQuestion) return;\r\n    \r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = 'move';\r\n    setDragOverQuestion(questionId);\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    setDragOverQuestion(null);\r\n  };\r\n\r\n  const handleDrop = async (e, targetQuestionId) => {\r\n    if (expandedQuestions.size > 0 || !draggingQuestion) return;\r\n    \r\n    e.preventDefault();\r\n    \r\n    if (draggingQuestion !== targetQuestionId) {\r\n      const fromIndex = sortedQuestions.findIndex(q => q.id === draggingQuestion);\r\n      const toIndex = sortedQuestions.findIndex(q => q.id === targetQuestionId);\r\n      \r\n      const newQuestions = [...sortedQuestions];\r\n      const [movedQuestion] = newQuestions.splice(fromIndex, 1);\r\n      newQuestions.splice(toIndex, 0, movedQuestion);\r\n      \r\n      try {\r\n        await updateQuestionMutation.mutateAsync({\r\n          questionId: movedQuestion.id,\r\n          data: { appearanceLevel: movedQuestion.appearanceLevel }\r\n        });\r\n        console.log('排序保存成功');\r\n      } catch (error) {\r\n        console.error('保存排序失败:', error);\r\n        refetch();\r\n      }\r\n    }\r\n    \r\n    setDraggingQuestion(null);\r\n    setDragOverQuestion(null);\r\n  };\r\n\r\n  const handleDragEnd = (e) => {\r\n    setDraggingQuestion(null);\r\n    setDragOverQuestion(null);\r\n    e.currentTarget.style.opacity = '1';\r\n  };\r\n\r\n  // 调试信息\r\n  useEffect(() => {\r\n    console.log('分页状态:', {\r\n      hasNextPage,\r\n      isFetchingNextPage,\r\n      totalQuestions: allQuestions.length,\r\n      pages: data?.pages?.length || 0\r\n    });\r\n  }, [hasNextPage, isFetchingNextPage, allQuestions.length, data]);\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"category-detail-page\">\r\n        <div className=\"auth-required-container\">\r\n          <div className=\"auth-required-icon\">🔐</div>\r\n          <h2>请先登录</h2>\r\n          <p>登录后即可查看和管理题目</p>\r\n          <div className=\"auth-required-actions\">\r\n            <button \r\n              onClick={() => window.dispatchEvent(new CustomEvent('showAuthModal'))}\r\n              className=\"login-btn\"\r\n            >\r\n              立即登录\r\n            </button>\r\n            <button onClick={handleBack} className=\"btn-back\">\r\n              返回首页\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading && !category) {\r\n    return (\r\n      <div className=\"category-detail-page\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载题目中...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  if (error && !category) {\r\n    return (\r\n      <div className=\"category-detail-page\">\r\n        <div className=\"error-container\">\r\n          <div className=\"error-icon\">⚠️</div>\r\n          <h2>加载失败</h2>\r\n          <p>{error.message}</p>\r\n          <div className=\"error-actions\">\r\n            <button onClick={handleRetry} className=\"btn-retry\">\r\n              重新加载\r\n            </button>\r\n            <button onClick={handleBack} className=\"btn-back\">\r\n              返回首页\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!category) {\r\n    return (\r\n      <div className=\"category-detail-page\">\r\n        <div className=\"error-container\">\r\n          <div className=\"error-icon\">📁</div>\r\n          <h2>分类不存在</h2>\r\n          <p>未找到指定的分类，可能已被删除</p>\r\n          <button onClick={handleBack} className=\"btn-back\">\r\n            返回首页\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"category-detail-page\">\r\n      {/* 现代化头部 */}\r\n      <header className=\"modern-header\">\r\n        <div className=\"container\">\r\n          <div className=\"header-content\">\r\n          <button \r\n  onClick={handleBack} \r\n  className=\"back-button\"\r\n  style={{\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    gap: '8px',\r\n    padding: '10px 20px',\r\n    backgroundColor: 'transparent',\r\n    color: '#667eea',\r\n    border: '2px solid #667eea',\r\n    borderRadius: '8px',\r\n    fontSize: '16px',\r\n    fontWeight: '500',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.3s ease',\r\n    textDecoration: 'none',\r\n    fontFamily: 'inherit'\r\n  }}\r\n  onMouseEnter={(e) => {\r\n    e.target.style.backgroundColor = '#667eea';\r\n    e.target.style.color = 'white';\r\n    e.target.style.transform = 'translateY(-2px)';\r\n    e.target.style.boxShadow = '0 4px 12px rgba(102, 126, 234, 0.3)';\r\n  }}\r\n  onMouseLeave={(e) => {\r\n    e.target.style.backgroundColor = 'transparent';\r\n    e.target.style.color = '#667eea';\r\n    e.target.style.transform = 'translateY(0)';\r\n    e.target.style.boxShadow = 'none';\r\n  }}\r\n>\r\n  <span \r\n    className=\"back-icon\"\r\n    style={{\r\n      fontSize: '18px',\r\n      fontWeight: 'bold',\r\n      transition: 'transform 0.3s ease'\r\n    }}\r\n  >\r\n    ←\r\n  </span>\r\n  返回知识库\r\n</button>\r\n            <div className=\"category-hero\">\r\n              <div className=\"category-badge\">\r\n                <span className=\"category-emoji\">📚</span>\r\n                <span className=\"category-name\">{category.name}</span>\r\n              </div>\r\n              <div className=\"user-welcome\">\r\n                <span className=\"welcome-text\">欢迎, {currentUser.getUsername()}!</span>\r\n              </div>\r\n              <div className=\"hero-stats\">\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-number\">{category.questionCount}</span>\r\n                  <span className=\"stat-label\">总题目</span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-number\">{allQuestions.length}</span>\r\n                  <span className=\"stat-label\">已加载</span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-number\">{expandedQuestions.size}</span>\r\n                  <span className=\"stat-label\">已展开</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* 同步消息提示 */}\r\n      {syncMessage && (\r\n        <div className=\"sync-message\">\r\n          {syncMessage}\r\n        </div>\r\n      )}\r\n\r\n      {/* 控制面板 */}\r\n      <section className=\"control-panel\">\r\n        <div className=\"container\">\r\n          <div className=\"panel-grid\">\r\n            {/* 搜索区域 */}\r\n            <div className=\"search-panel\">\r\n              <div className=\"search-wrapper\">\r\n                <div className=\"search-icon\">🔍</div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"搜索题目、答案或标签...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"modern-search\"\r\n                  style={{ color: '#333', backgroundColor: '#fff' }}\r\n                />\r\n                {searchTerm && (\r\n                  <button \r\n                    onClick={() => setSearchTerm('')}\r\n                    className=\"clear-search\"\r\n                  >\r\n                    ✕\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* 控制区域 */}\r\n            <div className=\"controls-panel\">\r\n              <div className=\"controls-group\">\r\n                <label>排序方式</label>\r\n                <select \r\n                  value={sortBy}\r\n                  onChange={(e) => setSortBy(e.target.value)}\r\n                  className=\"modern-select\"\r\n                  style={{ color: '#333', backgroundColor: '#fff' }}\r\n                >\r\n                  <option value=\"appearanceLevel\">出现频率</option>\r\n                  <option value=\"updatedAt\">最近更新</option>\r\n                  <option value=\"createdAt\">创建时间</option>\r\n                  <option value=\"title\">标题顺序</option>\r\n                  <option value=\"difficulty\">难度等级</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"controls-group\">\r\n                <label>批量操作</label>\r\n                <div className=\"batch-actions\">\r\n                  <button \r\n                    onClick={expandAllQuestions}\r\n                    className=\"action-btn expand-btn\"\r\n                    disabled={sortedQuestions.length === 0}\r\n                  >\r\n                    📖 展开全部\r\n                  </button>\r\n                  <button \r\n                    onClick={collapseAllQuestions}\r\n                    className=\"action-btn collapse-btn\"\r\n                    disabled={expandedQuestions.size === 0}\r\n                  >\r\n                    📕 折叠全部\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <button \r\n                className=\"add-question-btn primary\"\r\n                onClick={handleAddQuestion}\r\n              >\r\n                <span className=\"btn-icon\">+</span>\r\n                添加题目\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 调试控制面板 */}\r\n          <div className=\"debug-controls\" style={{ marginTop: '10px', padding: '10px', background: '#f0f0f0', borderRadius: '4px' }}>\r\n            <button \r\n              onClick={handleManualLoadMore}\r\n              disabled={!hasNextPage || isFetchingNextPage}\r\n              style={{ \r\n                padding: '5px 10px', \r\n                fontSize: '12px',\r\n                background: hasNextPage ? '#1890ff' : '#ccc',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '3px'\r\n              }}\r\n            >\r\n              {isFetchingNextPage ? '加载中...' : hasNextPage ? '手动加载更多' : '已无更多'}\r\n            </button>\r\n            <span style={{ marginLeft: '10px', fontSize: '12px', color: '#666' }}>\r\n              状态: {hasNextPage ? `有更多 (${allQuestions.length}/?)` : '已加载全部'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* 内容区域 */}\r\n      <section className=\"content-section\">\r\n        <div className=\"container\">\r\n          {sortedQuestions.length === 0 ? (\r\n            <div className=\"modern-empty\">\r\n              <div className=\"empty-illustration\">\r\n                {searchTerm ? '🔍' : '📝'}\r\n              </div>\r\n              <h3>{searchTerm ? '没有找到匹配的题目' : '此分类下暂无题目'}</h3>\r\n              <p>\r\n                {searchTerm \r\n                  ? `尝试调整搜索条件或清除搜索框来查看所有题目`\r\n                  : '点击\"添加题目\"按钮创建第一个题目，开始你的学习之旅'\r\n                }\r\n              </p>\r\n              {searchTerm ? (\r\n                <button \r\n                  onClick={() => setSearchTerm('')}\r\n                  className=\"clear-search-btn\"\r\n                >\r\n                  清除搜索条件\r\n                </button>\r\n              ) : (\r\n                <button \r\n                  onClick={handleAddQuestion}\r\n                  className=\"add-first-btn\"\r\n                >\r\n                  🚀 创建第一个题目\r\n                </button>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* 统计信息 */}\r\n              <div className=\"results-stats\">\r\n                <span className=\"results-count\">\r\n                  找到 {sortedQuestions.length} 个题目\r\n                  {searchTerm && <span>（搜索关键词: \"{searchTerm}\"）</span>}\r\n                  {hasNextPage && <span> - 滚动加载更多</span>}\r\n                </span>\r\n                <span className=\"expand-count\">\r\n                  {expandedQuestions.size} / {sortedQuestions.length} 已展开\r\n                </span>\r\n                {expandedQuestions.size === 0 && (\r\n                  <span className=\"drag-hint\">\r\n                    🎯 提示: 可以拖拽题目调整顺序\r\n                  </span>\r\n                )}\r\n              </div>\r\n\r\n              {/* 调试信息 */}\r\n              <div className=\"debug-info\" style={{ fontSize: '12px', color: '#666', padding: '8px', background: '#f5f5f5', borderRadius: '4px', marginBottom: '10px' }}>\r\n                分页状态: 已加载 {allQuestions.length} 题, 还有更多: {hasNextPage ? '是' : '否'}, 正在加载: {isFetchingNextPage ? '是' : '否'}\r\n              </div>\r\n\r\n              {/* 虚拟化题目列表 */}\r\n              <div \r\n                ref={containerRef}\r\n                className={`questions-container ${viewMode}`}\r\n                style={{ \r\n                  height: 'calc(100vh - 400px)',\r\n                  overflow: 'auto',\r\n                  position: 'relative',\r\n                  border: '1px solid #e1e5e9',\r\n                  borderRadius: '8px'\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    height: `${virtualizer.getTotalSize()}px`,\r\n                    width: '100%',\r\n                    position: 'relative',\r\n                  }}\r\n                >\r\n                  {virtualizer.getVirtualItems().map((virtualItem) => {\r\n                    const question = sortedQuestions[virtualItem.index];\r\n                    \r\n                    return (\r\n                      <div\r\n                        key={question.id}\r\n                        data-index={virtualItem.index}\r\n                        ref={virtualizer.measureElement}\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          top: 0,\r\n                          left: 0,\r\n                          width: \"100%\",\r\n                          transform: `translateY(${virtualItem.start}px)`,\r\n                        }}\r\n                      >\r\n                        <QuestionAccordion\r\n                          question={question}\r\n                          index={virtualItem.index}\r\n                          isExpanded={expandedQuestions.has(question.id)}\r\n                          onToggle={() => toggleQuestion(question.id)}\r\n                          onDelete={handleDeleteQuestion}\r\n                          onEdit={handleEditQuestion}\r\n                          onUpdateField={handleUpdateQuestionField}\r\n                          viewMode={viewMode}\r\n                          isDragging={draggingQuestion === question.id}\r\n                          isDragOver={dragOverQuestion === question.id}\r\n                          onDragStart={(e) => handleDragStart(e, question.id)}\r\n                          onDragOver={(e) => handleDragOver(e, question.id)}\r\n                          onDragLeave={handleDragLeave}\r\n                          onDrop={(e) => handleDrop(e, question.id)}\r\n                          onDragEnd={handleDragEnd}\r\n                          canDrag={expandedQuestions.size === 0}\r\n                          showQuestionForm={showQuestionForm}\r\n                          setShowQuestionForm={setShowQuestionForm}\r\n                          editingQuestion={editingQuestion}\r\n                          setEditingQuestion={setEditingQuestion}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n\r\n                {/* 加载更多触发元素 */}\r\n                {hasNextPage && (\r\n                  <div\r\n                    ref={loadMoreTriggerRef}\r\n                    style={{\r\n                      height: '60px',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      position: 'relative',\r\n                      background: 'transparent'\r\n                    }}\r\n                  >\r\n                    {isFetchingNextPage ? (\r\n                      <div className=\"loading-more\">\r\n                        <div className=\"modern-spinner small\"></div>\r\n                        <span>加载更多题目...</span>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"load-more-trigger\" style={{ padding: '10px', color: '#666' }}>\r\n                        <span>↓ 继续滚动加载更多</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                {!hasNextPage && allQuestions.length > 0 && (\r\n                  <div style={{ \r\n                    textAlign: 'center', \r\n                    padding: '20px', \r\n                    color: '#999',\r\n                    fontStyle: 'italic'\r\n                  }}>\r\n                    已加载全部 {allQuestions.length} 个题目\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </section>\r\n\r\n      {/* 在虚拟化容器之外渲染编辑表单 */}\r\n      {showQuestionForm && (\r\n        <div \r\n          className=\"form-modal-overlay\"\r\n          style={{\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            zIndex: 9999,\r\n            padding: '20px'\r\n          }}\r\n        >\r\n          <QuestionForm\r\n            question={editingQuestion}\r\n            onSave={() => {\r\n              setShowQuestionForm(false);\r\n              setEditingQuestion(null);\r\n              queryClient.invalidateQueries(['questions', categoryId]);\r\n            }}\r\n            onCancel={() => {\r\n              setShowQuestionForm(false);\r\n              setEditingQuestion(null);\r\n            }}\r\n            defaultCategoryId={categoryId}\r\n            onCategoryChange={handleQuestionCategoryChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// QuestionAccordion 组件保持不变\r\nconst QuestionAccordion = ({ \r\n  question, \r\n  index, \r\n  isExpanded, \r\n  onToggle, \r\n  onDelete,\r\n  onEdit,\r\n  onUpdateField,\r\n  viewMode,\r\n  isDragging,\r\n  isDragOver,\r\n  onDragStart,\r\n  onDragOver,\r\n  onDragLeave,\r\n  onDrop,\r\n  onDragEnd,\r\n  canDrag,\r\n  showQuestionForm,\r\n  setShowQuestionForm,\r\n  editingQuestion,\r\n  setEditingQuestion\r\n}) => {\r\n  const getDifficultyColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#52c41a';\r\n      case 'medium': return '#faad14';\r\n      case 'hard': return '#f5222d';\r\n      default: return '#666';\r\n    }\r\n  };\r\n\r\n  const getDifficultyBorderColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#b7eb8f';\r\n      case 'medium': return '#ffe58f';\r\n      case 'hard': return '#ffa39e';\r\n      default: return '#d9d9d9';\r\n    }\r\n  };\r\n\r\n  const getDifficultyBackgroundColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#f6ffed';\r\n      case 'medium': return '#fffbe6';\r\n      case 'hard': return '#fff2f0';\r\n      default: return '#fafafa';\r\n    }\r\n  };\r\n\r\n  const getDifficultyText = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '简单';\r\n      case 'medium': return '中等';\r\n      case 'hard': return '困难';\r\n      default: return difficulty;\r\n    }\r\n  };\r\n\r\n  const getProficiencyColor = (proficiency) => {\r\n    switch (proficiency) {\r\n      case 'beginner': return '#ff6b6b';\r\n      case 'intermediate': return '#4ecdc4';\r\n      case 'advanced': return '#45b7d1';\r\n      case 'master': return '#96ceb4';\r\n      default: return '#95a5a6';\r\n    }\r\n  };\r\n\r\n  const getProficiencyIcon = (proficiency) => {\r\n    switch (proficiency) {\r\n      case 'beginner': return '🎀';\r\n      case 'intermediate': return '🎗️';\r\n      case 'advanced': return '🏅';\r\n      case 'master': return '👑';\r\n      default: return '🎯';\r\n    }\r\n  };\r\n\r\n  const getProficiencyText = (proficiency) => {\r\n    switch (proficiency) {\r\n      case 'beginner': return '初级';\r\n      case 'intermediate': return '中级';\r\n      case 'advanced': return '高级';\r\n      case 'master': return '精通';\r\n      default: return proficiency;\r\n    }\r\n  };\r\n\r\n  const getAppearanceLevelColor = (level) => {\r\n    if (level >= 80) return '#ff6b6b';\r\n    if (level >= 60) return '#ffa726';\r\n    if (level >= 40) return '#4ecdc4';\r\n    return '#95a5a6';\r\n  };\r\n\r\n  const formatTime = (date) => {\r\n    return new Date(date).toLocaleDateString('zh-CN', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  // 获取答案预览文本\r\n  const getAnswerPreview = () => {\r\n    const answerText = question.oralAnswer || question.detailedAnswer;\r\n    if (!answerText) {\r\n      return '暂无答案内容';\r\n    }\r\n    return answerText.substring(0, 150) + (answerText.length > 150 ? '...' : '');\r\n  };\r\n\r\n  // 如果已经展开，显示扩展视图\r\n  if (isExpanded) {\r\n    return (\r\n      <div className=\"expanded-question-view\" data-question-id={question.id}>\r\n        <div className=\"expanded-header\">\r\n          <button onClick={onToggle} className=\"back-to-list-btn\">\r\n            <span className=\"back-icon\">←</span>\r\n            返回列表\r\n          </button>\r\n          <div className=\"expanded-title\">\r\n            <span className=\"question-index\">#{index + 1}</span>\r\n            <h3>{question.title}</h3>\r\n          </div>\r\n          <div className=\"expanded-actions\">\r\n            <button \r\n              onClick={() => onEdit(question)}\r\n              className=\"btn-edit\"\r\n            >\r\n              ✏️ 编辑\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"expanded-content\">\r\n          <QuestionDetailCard\r\n            question={question}\r\n            onDelete={onDelete}\r\n            onUpdateField={onUpdateField}\r\n            isExpandedView={true}\r\n            onEdit={onEdit}\r\n            showQuestionForm={showQuestionForm}\r\n            setShowQuestionForm={setShowQuestionForm}\r\n            editingQuestion={editingQuestion}\r\n            setEditingQuestion={setEditingQuestion}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 折叠状态下的显示\r\n  if (viewMode === 'grid') {\r\n    return (\r\n      <div \r\n        className={`question-grid-card ${isDragging ? 'dragging' : ''} ${isDragOver ? 'drag-over' : ''}`}\r\n        onClick={onToggle}\r\n        draggable={canDrag}\r\n        onDragStart={onDragStart}\r\n        onDragOver={onDragOver}\r\n        onDragLeave={onDragLeave}\r\n        onDrop={onDrop}\r\n        onDragEnd={onDragEnd}\r\n        data-question-id={question.id}\r\n        style={{\r\n          borderLeft: `4px solid ${getDifficultyColor(question.difficulty)}`,\r\n          backgroundColor: getDifficultyBackgroundColor(question.difficulty),\r\n          border: `1px solid ${getDifficultyBorderColor(question.difficulty)}`\r\n        }}\r\n      >\r\n        {/* 掌握程度蝴蝶结标识 */}\r\n        <div \r\n          className=\"proficiency-ribbon\"\r\n          style={{ backgroundColor: getProficiencyColor(question.proficiency) }}\r\n        >\r\n          <span className=\"ribbon-icon\">{getProficiencyIcon(question.proficiency)}</span>\r\n          <span className=\"ribbon-text\">{getProficiencyText(question.proficiency)}</span>\r\n        </div>\r\n\r\n        <div className=\"grid-header\">\r\n          <span className=\"question-index\">#{index + 1}</span>\r\n          <span \r\n            className=\"difficulty-tag\"\r\n            style={{ backgroundColor: getDifficultyColor(question.difficulty) }}\r\n          >\r\n            {getDifficultyText(question.difficulty)}\r\n          </span>\r\n        </div>\r\n        <h4 className=\"grid-title\">{question.title}</h4>\r\n        \r\n        {/* 出现频率指示器 */}\r\n        <div className=\"appearance-level-indicator\">\r\n          <div \r\n            className=\"appearance-bar\"\r\n            style={{ \r\n              width: `${question.appearanceLevel || 50}%`,\r\n              backgroundColor: getAppearanceLevelColor(question.appearanceLevel || 50)\r\n            }}\r\n          ></div>\r\n          <span className=\"appearance-text\">{question.appearanceLevel || 50}%</span>\r\n        </div>\r\n\r\n        <div className=\"grid-meta\">\r\n          <span className=\"update-time\">更新: {formatTime(question.updatedAt)}</span>\r\n        </div>\r\n        <div className=\"grid-preview\">\r\n          <div className=\"preview-content\">\r\n            {getAnswerPreview()}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 拖拽手柄 */}\r\n        {canDrag && <div className=\"drag-handle\">⋮⋮</div>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 列表视图下的折叠状态\r\n  return (\r\n    <div \r\n      className={`modern-accordion ${isExpanded ? 'expanded' : ''} ${isDragging ? 'dragging' : ''} ${isDragOver ? 'drag-over' : ''}`}\r\n      draggable={canDrag}\r\n      onDragStart={onDragStart}\r\n      onDragOver={onDragOver}\r\n      onDragLeave={onDragLeave}\r\n      onDrop={onDrop}\r\n      onDragEnd={onDragEnd}\r\n      data-question-id={question.id}\r\n      style={{\r\n        borderLeft: `4px solid ${getDifficultyColor(question.difficulty)}`,\r\n        backgroundColor: getDifficultyBackgroundColor(question.difficulty),\r\n        border: `1px solid ${getDifficultyBorderColor(question.difficulty)}`\r\n      }}\r\n    >\r\n      {/* 掌握程度蝴蝶结标识 */}\r\n      <div \r\n        className=\"proficiency-ribbon\"\r\n        style={{ backgroundColor: getProficiencyColor(question.proficiency) }}\r\n      >\r\n        <span className=\"ribbon-icon\">{getProficiencyIcon(question.proficiency)}</span>\r\n        <span className=\"ribbon-text\">{getProficiencyText(question.proficiency)}</span>\r\n      </div>\r\n\r\n      <div className=\"accordion-header\" onClick={onToggle}>\r\n        <div className=\"header-main\">\r\n          <div className=\"question-meta\">\r\n            <span className=\"question-index\">#{index + 1}</span>\r\n            <span \r\n              className=\"difficulty-badge\"\r\n              style={{ backgroundColor: getDifficultyColor(question.difficulty) }}\r\n            >\r\n              {getDifficultyText(question.difficulty)}\r\n            </span>\r\n            <span className=\"appearance-badge\">\r\n              📊 {question.appearanceLevel || 50}%\r\n            </span>\r\n            <span className=\"time-badge\">\r\n              ⏱️ {formatTime(question.updatedAt)}\r\n            </span>\r\n          </div>\r\n          <h3 className=\"question-title\">{question.title}</h3>\r\n          <div className=\"question-preview\">\r\n            {getAnswerPreview()}\r\n          </div>\r\n        </div>\r\n        <div className=\"header-actions\">\r\n          {/* 拖拽手柄 */}\r\n          {canDrag && (\r\n            <div \r\n              className=\"drag-handle\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              ⋮⋮\r\n            </div>\r\n          )}\r\n          <span className=\"accordion-icon\">\r\n            {isExpanded ? '▼' : '►'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryDetailPage;","// services/userService.js\r\nimport AV from 'leancloud-storage';\r\n\r\nexport const UserService = {\r\n  /**\r\n   * 用户注册\r\n   */\r\n  register: async (username, password, email) => {\r\n    try {\r\n      const user = new AV.User();\r\n      user.setUsername(username);\r\n      user.setPassword(password);\r\n      user.setEmail(email);\r\n      \r\n      const result = await user.signUp();\r\n      console.log('注册成功:', result);\r\n      return result;\r\n    } catch (error) {\r\n      console.error('注册失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 用户登录\r\n   */\r\n  login: async (username, password) => {\r\n    try {\r\n      const result = await AV.User.logIn(username, password);\r\n      console.log('登录成功:', result);\r\n      return result;\r\n    } catch (error) {\r\n      console.error('登录失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 用户退出\r\n   */\r\n  logout: async () => {\r\n    try {\r\n      await AV.User.logOut();\r\n      console.log('退出成功');\r\n    } catch (error) {\r\n      console.error('退出失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 获取当前用户\r\n   */\r\n  getCurrentUser: () => {\r\n    return AV.User.current();\r\n  },\r\n\r\n  /**\r\n   * 检查登录状态\r\n   */\r\n  isLoggedIn: () => {\r\n    return !!AV.User.current();\r\n  },\r\n\r\n  /**\r\n   * 更新用户信息\r\n   */\r\n  updateProfile: async (updates) => {\r\n    try {\r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n\r\n      Object.keys(updates).forEach(key => {\r\n        currentUser.set(key, updates[key]);\r\n      });\r\n\r\n      await currentUser.save();\r\n      return currentUser;\r\n    } catch (error) {\r\n      console.error('更新用户信息失败:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};","// components/UserTestPanel.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { UserService } from '../services/userService';\r\nimport { createCategory } from '../services/categoryService';\r\nimport { createQuestion } from '../services/questionService';\r\nimport './UserTestPanel.css';\r\n\r\nconst UserTestPanel = () => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [testData, setTestData] = useState({\r\n    register: { username: '', password: '', email: '', nickname: '' },\r\n    login: { username: '', password: '' },\r\n    category: { name: '', description: '' },\r\n    question: { title: '', detailedAnswer: '', categoryId: '' }\r\n  });\r\n\r\n  // 检查当前登录状态\r\n  useEffect(() => {\r\n    checkCurrentUser();\r\n  }, []);\r\n\r\n  const checkCurrentUser = () => {\r\n    const user = UserService.getCurrentUser();\r\n    setCurrentUser(user);\r\n    console.log('当前用户:', user);\r\n  };\r\n\r\n  // 用户注册\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await UserService.register(testData.register);\r\n      setMessage(`✅ 注册成功！用户ID: ${result.id}`);\r\n      setCurrentUser(result);\r\n      \r\n      // 清空表单\r\n      setTestData(prev => ({\r\n        ...prev,\r\n        register: { username: '', password: '', email: '', nickname: '' }\r\n      }));\r\n    } catch (error) {\r\n      setMessage(`❌ 注册失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 用户登录\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await UserService.login(testData.login.username, testData.login.password);\r\n      setMessage(`✅ 登录成功！欢迎 ${result.username}`);\r\n      setCurrentUser(result);\r\n      \r\n      // 清空表单\r\n      setTestData(prev => ({\r\n        ...prev,\r\n        login: { username: '', password: '' }\r\n      }));\r\n    } catch (error) {\r\n      setMessage(`❌ 登录失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 用户登出\r\n  const handleLogout = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await UserService.logout();\r\n      setMessage('✅ 已退出登录');\r\n      setCurrentUser(null);\r\n    } catch (error) {\r\n      setMessage(`❌ 登出失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 创建测试分类\r\n  const handleCreateCategory = async (e) => {\r\n    e.preventDefault();\r\n    if (!currentUser) {\r\n      setMessage('❌ 请先登录');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const result = await createCategory(testData.category);\r\n      setMessage(`✅ 分类创建成功！ID: ${result.id}`);\r\n      \r\n      // 保存分类ID用于创建题目\r\n      setTestData(prev => ({\r\n        ...prev,\r\n        question: { ...prev.question, categoryId: result.id },\r\n        category: { name: '', description: '' }\r\n      }));\r\n    } catch (error) {\r\n      setMessage(`❌ 创建分类失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 创建测试题目\r\n  const handleCreateQuestion = async (e) => {\r\n    e.preventDefault();\r\n    if (!currentUser) {\r\n      setMessage('❌ 请先登录');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const result = await createQuestion({\r\n        ...testData.question,\r\n        categoryId: testData.question.categoryId,\r\n        oralAnswer: '这是口述版本的答案',\r\n        tags: ['测试', '示例'],\r\n        difficulty: 'medium',\r\n        proficiency: 'intermediate'\r\n      });\r\n      setMessage(`✅ 题目创建成功！ID: ${result.id}`);\r\n      \r\n      setTestData(prev => ({\r\n        ...prev,\r\n        question: { title: '', detailedAnswer: '', categoryId: prev.question.categoryId }\r\n      }));\r\n    } catch (error) {\r\n      setMessage(`❌ 创建题目失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateTestData = (section, field, value) => {\r\n    setTestData(prev => ({\r\n      ...prev,\r\n      [section]: {\r\n        ...prev[section],\r\n        [field]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-test-panel\">\r\n      <h2>🧪 用户系统测试面板</h2>\r\n      \r\n      {/* 当前用户状态 */}\r\n      <div className=\"user-status\">\r\n        <h3>当前状态</h3>\r\n        {currentUser ? (\r\n          <div className=\"user-info\">\r\n            <p>✅ 已登录</p>\r\n            <p>用户名: {currentUser.username}</p>\r\n            <p>邮箱: {currentUser.email}</p>\r\n            <p>用户ID: {currentUser.id}</p>\r\n            <button onClick={handleLogout} disabled={loading}>\r\n              退出登录\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <p>❌ 未登录</p>\r\n        )}\r\n      </div>\r\n\r\n      {message && (\r\n        <div className={`test-message ${message.includes('✅') ? 'success' : 'error'}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"test-sections\">\r\n        {/* 注册测试 */}\r\n        <div className=\"test-section\">\r\n          <h3>1. 用户注册测试</h3>\r\n          <form onSubmit={handleRegister}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"用户名\"\r\n              value={testData.register.username}\r\n              onChange={(e) => updateTestData('register', 'username', e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n              value={testData.register.password}\r\n              onChange={(e) => updateTestData('register', 'password', e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"邮箱\"\r\n              value={testData.register.email}\r\n              onChange={(e) => updateTestData('register', 'email', e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"昵称 (可选)\"\r\n              value={testData.register.nickname}\r\n              onChange={(e) => updateTestData('register', 'nickname', e.target.value)}\r\n            />\r\n            <button type=\"submit\" disabled={loading}>\r\n              {loading ? '注册中...' : '注册'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* 登录测试 */}\r\n        <div className=\"test-section\">\r\n          <h3>2. 用户登录测试</h3>\r\n          <form onSubmit={handleLogin}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"用户名\"\r\n              value={testData.login.username}\r\n              onChange={(e) => updateTestData('login', 'username', e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n              value={testData.login.password}\r\n              onChange={(e) => updateTestData('login', 'password', e.target.value)}\r\n              required\r\n            />\r\n            <button type=\"submit\" disabled={loading}>\r\n              {loading ? '登录中...' : '登录'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* 创建分类测试 */}\r\n        {currentUser && (\r\n          <div className=\"test-section\">\r\n            <h3>3. 创建测试分类</h3>\r\n            <form onSubmit={handleCreateCategory}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"分类名称\"\r\n                value={testData.category.name}\r\n                onChange={(e) => updateTestData('category', 'name', e.target.value)}\r\n                required\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"分类描述 (可选)\"\r\n                value={testData.category.description}\r\n                onChange={(e) => updateTestData('category', 'description', e.target.value)}\r\n              />\r\n              <button type=\"submit\" disabled={loading}>\r\n                {loading ? '创建中...' : '创建分类'}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {/* 创建题目测试 */}\r\n        {currentUser && testData.question.categoryId && (\r\n          <div className=\"test-section\">\r\n            <h3>4. 创建测试题目</h3>\r\n            <p>分类ID: {testData.question.categoryId}</p>\r\n            <form onSubmit={handleCreateQuestion}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"题目标题\"\r\n                value={testData.question.title}\r\n                onChange={(e) => updateTestData('question', 'title', e.target.value)}\r\n                required\r\n              />\r\n              <textarea\r\n                placeholder=\"详细答案\"\r\n                value={testData.question.detailedAnswer}\r\n                onChange={(e) => updateTestData('question', 'detailedAnswer', e.target.value)}\r\n                required\r\n              />\r\n              <button type=\"submit\" disabled={loading}>\r\n                {loading ? '创建中...' : '创建题目'}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 快速测试按钮 */}\r\n      <div className=\"quick-test\">\r\n        <h3>🚀 快速测试</h3>\r\n        <button \r\n          onClick={() => {\r\n            setTestData({\r\n              register: {\r\n                username: `testuser_${Date.now()}`,\r\n                password: '123456',\r\n                email: `test_${Date.now()}@example.com`,\r\n                nickname: '测试用户'\r\n              },\r\n              login: { username: '', password: '' },\r\n              category: { name: '测试分类', description: '这是一个测试分类' },\r\n              question: { title: '', detailedAnswer: '', categoryId: '' }\r\n            });\r\n          }}\r\n        >\r\n          填充测试数据\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTestPanel;","\r\n// services/dataMigrationService.js\r\nimport AV from 'leancloud-storage';\r\nimport { UserService } from './userService';\r\n\r\n/**\r\n * 数据迁移服务 - 将现有数据关联到管理员账户\r\n */\r\nexport const DataMigrationService = {\r\n  /**\r\n   * 创建管理员账户（使用当前登录用户作为管理员）\r\n   */\r\n  setupAdminUser: async () => {\r\n    try {\r\n      console.log('设置当前用户为管理员...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('请先登录一个账户作为管理员');\r\n      }\r\n      \r\n      console.log('使用当前用户作为管理员:', currentUser.id);\r\n      return {\r\n        id: currentUser.id,\r\n        username: currentUser.getUsername(),\r\n        email: currentUser.getEmail(),\r\n        nickname: currentUser.get('nickname')\r\n      };\r\n    } catch (error) {\r\n      console.error('设置管理员失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 迁移现有分类到当前用户\r\n   */\r\n  migrateCategoriesToCurrentUser: async () => {\r\n    try {\r\n      console.log('开始迁移分类数据...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n      \r\n      const query = new AV.Query('Category');\r\n      \r\n      // 获取所有没有 createdBy 字段的分类\r\n      query.doesNotExist('createdBy');\r\n      const categories = await query.find();\r\n      \r\n      console.log(`找到 ${categories.length} 个需要迁移的分类`);\r\n      \r\n      let migratedCount = 0;\r\n      for (const category of categories) {\r\n        try {\r\n          category.set('createdBy', currentUser);\r\n          \r\n          // 更新 ACL 权限\r\n          const acl = new AV.ACL();\r\n          acl.setReadAccess(currentUser, true);\r\n          acl.setWriteAccess(currentUser, true);\r\n          acl.setPublicReadAccess(true); // 保持公开可读\r\n          category.setACL(acl);\r\n          \r\n          await category.save();\r\n          migratedCount++;\r\n          console.log(`✅ 迁移分类: ${category.get('name')}`);\r\n        } catch (error) {\r\n          console.error(`迁移分类失败 ${category.id}:`, error);\r\n        }\r\n      }\r\n      \r\n      console.log(`分类迁移完成: ${migratedCount}/${categories.length}`);\r\n      return { migrated: migratedCount, total: categories.length };\r\n    } catch (error) {\r\n      console.error('迁移分类数据失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 迁移现有题目到当前用户\r\n   */\r\n  migrateQuestionsToCurrentUser: async () => {\r\n    try {\r\n      console.log('开始迁移题目数据...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n      \r\n      const query = new AV.Query('Question');\r\n      \r\n      // 获取所有没有 createdBy 字段的题目\r\n      query.doesNotExist('createdBy');\r\n      const questions = await query.find();\r\n      \r\n      console.log(`找到 ${questions.length} 个需要迁移的题目`);\r\n      \r\n      let migratedCount = 0;\r\n      for (const question of questions) {\r\n        try {\r\n          question.set('createdBy', currentUser);\r\n          \r\n          // 更新 ACL 权限\r\n          const acl = new AV.ACL();\r\n          acl.setReadAccess(currentUser, true);\r\n          acl.setWriteAccess(currentUser, true);\r\n          acl.setPublicReadAccess(true); // 保持公开可读\r\n          question.setACL(acl);\r\n          \r\n          await question.save();\r\n          migratedCount++;\r\n          console.log(`✅ 迁移题目: ${question.get('title')}`);\r\n        } catch (error) {\r\n          console.error(`迁移题目失败 ${question.id}:`, error);\r\n        }\r\n      }\r\n      \r\n      console.log(`题目迁移完成: ${migratedCount}/${questions.length}`);\r\n      return { migrated: migratedCount, total: questions.length };\r\n    } catch (error) {\r\n      console.error('迁移题目数据失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 执行完整的数据迁移（使用当前登录用户）\r\n   */\r\n  performFullMigration: async () => {\r\n    try {\r\n      console.log('🚀 开始完整数据迁移...');\r\n      \r\n      // 1. 使用当前用户作为管理员\r\n      const adminUser = await DataMigrationService.setupAdminUser();\r\n      \r\n      // 2. 迁移分类数据\r\n      const categoryResult = await DataMigrationService.migrateCategoriesToCurrentUser();\r\n      \r\n      // 3. 迁移题目数据\r\n      const questionResult = await DataMigrationService.migrateQuestionsToCurrentUser();\r\n      \r\n      console.log('🎉 数据迁移完成！');\r\n      \r\n      return {\r\n        success: true,\r\n        adminUser,\r\n        categories: categoryResult,\r\n        questions: questionResult,\r\n        message: `迁移完成: ${categoryResult.migrated}个分类, ${questionResult.migrated}个题目`\r\n      };\r\n    } catch (error) {\r\n      console.error('数据迁移失败:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message\r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 检查数据迁移状态\r\n   */\r\n  checkMigrationStatus: async () => {\r\n    try {\r\n      // 检查没有 createdBy 的分类数量\r\n      const categoryQuery = new AV.Query('Category');\r\n      categoryQuery.doesNotExist('createdBy');\r\n      const orphanCategories = await categoryQuery.count();\r\n      \r\n      // 检查没有 createdBy 的题目数量\r\n      const questionQuery = new AV.Query('Question');\r\n      questionQuery.doesNotExist('createdBy');\r\n      const orphanQuestions = await questionQuery.count();\r\n      \r\n      // 检查总数据量\r\n      const totalCategories = await new AV.Query('Category').count();\r\n      const totalQuestions = await new AV.Query('Question').count();\r\n      \r\n      return {\r\n        orphanCategories,\r\n        orphanQuestions,\r\n        totalCategories,\r\n        totalQuestions,\r\n        migrationNeeded: orphanCategories > 0 || orphanQuestions > 0\r\n      };\r\n    } catch (error) {\r\n      console.error('检查迁移状态失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  migrateQuestionCreatedBy: async () => {\r\n    try {\r\n      console.log('开始专门迁移 Question 的 createdBy 属性...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n      \r\n      const query = new AV.Query('Question');\r\n      \r\n      // 获取所有没有 createdBy 字段的题目\r\n      query.doesNotExist('createdBy');\r\n      const questions = await query.find();\r\n      \r\n      console.log(`找到 ${questions.length} 个需要添加 createdBy 的题目`);\r\n      \r\n      let migratedCount = 0;\r\n      for (const question of questions) {\r\n        try {\r\n          question.set('createdBy', currentUser);\r\n          \r\n          // 更新 ACL 权限\r\n          const acl = new AV.ACL();\r\n          acl.setReadAccess(currentUser, true);\r\n          acl.setWriteAccess(currentUser, true);\r\n          acl.setPublicReadAccess(false);\r\n          question.setACL(acl);\r\n          \r\n          await question.save();\r\n          migratedCount++;\r\n          console.log(`✅ 为题目添加 createdBy: ${question.get('title')}`);\r\n        } catch (error) {\r\n          console.error(`迁移题目失败 ${question.id}:`, error);\r\n        }\r\n      }\r\n      \r\n      console.log(`Question createdBy 迁移完成: ${migratedCount}/${questions.length}`);\r\n      return { migrated: migratedCount, total: questions.length };\r\n    } catch (error) {\r\n      console.error('迁移 Question createdBy 失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * 只迁移 Question 的完整流程\r\n   */\r\n  performQuestionMigrationOnly: async () => {\r\n    try {\r\n      console.log('🚀 开始专门迁移 Question 数据...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('请先登录');\r\n      }\r\n      \r\n      // 只迁移 Question\r\n      const questionResult = await DataMigrationService.migrateQuestionCreatedBy();\r\n      \r\n      console.log('🎉 Question 迁移完成！');\r\n      \r\n      return {\r\n        success: true,\r\n        questions: questionResult,\r\n        message: `Question 迁移完成: ${questionResult.migrated}个题目`\r\n      };\r\n    } catch (error) {\r\n      console.error('Question 迁移失败:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n};","// components/DataMigrationPanel.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataMigrationService } from '../services/dataMigrationService';\r\nimport { UserService } from '../services/userService';\r\nimport './DataMigrationPanel.css';\r\n\r\nconst DataMigrationPanel = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [migrationStatus, setMigrationStatus] = useState(null);\r\n  const [migrationResult, setMigrationResult] = useState(null);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  // 检查当前用户状态和迁移状态\r\n  useEffect(() => {\r\n    checkCurrentUser();\r\n    checkMigrationStatus();\r\n  }, []);\r\n\r\n  const checkCurrentUser = () => {\r\n    const user = UserService.getCurrentUser();\r\n    setCurrentUser(user);\r\n  };\r\n\r\n  const checkMigrationStatus = async () => {\r\n    try {\r\n      const status = await DataMigrationService.checkMigrationStatus();\r\n      setMigrationStatus(status);\r\n    } catch (error) {\r\n      console.error('检查迁移状态失败:', error);\r\n    }\r\n  };\r\n\r\n  const handleMigration = async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录一个账户作为管理员');\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(`确定要将所有现有数据关联到当前用户 \"${currentUser.username}\" 吗？`)) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMigrationResult(null);\r\n    \r\n    try {\r\n      const result = await DataMigrationService.performFullMigration();\r\n      setMigrationResult(result);\r\n      \r\n      // 重新检查状态\r\n      await checkMigrationStatus();\r\n    } catch (error) {\r\n      setMigrationResult({\r\n        success: false,\r\n        error: error.message\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-migration-panel\">\r\n      <h2>🔄 数据迁移工具</h2>\r\n      <p>将现有分类和题目数据关联到当前登录用户</p>\r\n\r\n      {/* 当前用户状态 */}\r\n      <div className=\"user-status-section\">\r\n        <h3>当前用户状态</h3>\r\n        {currentUser ? (\r\n          <div className=\"user-info\">\r\n            <p>✅ 已登录: <strong>{currentUser.username}</strong></p>\r\n            <p>邮箱: {currentUser.email}</p>\r\n            <p>用户ID: {currentUser.id}</p>\r\n            <p className=\"admin-note\">此用户将被设置为所有现有数据的管理员</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"user-info not-logged-in\">\r\n            <p>❌ 未登录</p>\r\n            <p className=\"login-required\">请先登录一个账户作为管理员</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 迁移状态 */}\r\n      {migrationStatus && (\r\n        <div className=\"migration-status\">\r\n          <h3>当前数据状态</h3>\r\n          <div className=\"status-grid\">\r\n            <div className=\"status-item\">\r\n              <span className=\"label\">总分类数:</span>\r\n              <span className=\"value\">{migrationStatus.totalCategories}</span>\r\n            </div>\r\n            <div className=\"status-item\">\r\n              <span className=\"label\">总题目数:</span>\r\n              <span className=\"value\">{migrationStatus.totalQuestions}</span>\r\n            </div>\r\n            <div className=\"status-item warning\">\r\n              <span className=\"label\">未关联分类:</span>\r\n              <span className=\"value\">{migrationStatus.orphanCategories}</span>\r\n            </div>\r\n            <div className=\"status-item warning\">\r\n              <span className=\"label\">未关联题目:</span>\r\n              <span className=\"value\">{migrationStatus.orphanQuestions}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          {migrationStatus.migrationNeeded ? (\r\n            <div className=\"migration-needed\">\r\n              ⚠️ 检测到未关联的数据，需要执行迁移\r\n            </div>\r\n          ) : (\r\n            <div className=\"migration-complete\">\r\n              ✅ 所有数据都已关联到用户\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* 迁移操作 */}\r\n      <div className=\"migration-actions\">\r\n        <button\r\n          onClick={handleMigration}\r\n          disabled={loading || !currentUser || !migrationStatus?.migrationNeeded}\r\n          className=\"migrate-btn\"\r\n        >\r\n          {loading ? '迁移中...' : '执行数据迁移'}\r\n        </button>\r\n        \r\n        <button\r\n          onClick={checkMigrationStatus}\r\n          disabled={loading}\r\n          className=\"refresh-btn\"\r\n        >\r\n          刷新状态\r\n        </button>\r\n      </div>\r\n\r\n      {/* 迁移结果 */}\r\n      {migrationResult && (\r\n        <div className={`migration-result ${migrationResult.success ? 'success' : 'error'}`}>\r\n          <h4>{migrationResult.success ? '✅ 迁移成功' : '❌ 迁移失败'}</h4>\r\n          {migrationResult.success ? (\r\n            <div>\r\n              <p>{migrationResult.message}</p>\r\n              {migrationResult.adminUser && (\r\n                <div className=\"admin-info\">\r\n                  <p><strong>管理员账户:</strong> {migrationResult.adminUser.username}</p>\r\n                  <p><strong>用户ID:</strong> {migrationResult.adminUser.id}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <p>错误: {migrationResult.error}</p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* 使用说明 */}\r\n      <div className=\"migration-instructions\">\r\n        <h3>📖 使用说明</h3>\r\n        <ol>\r\n          <li><strong>首先登录一个账户</strong>（可以是新注册的或现有的）</li>\r\n          <li>确认上方显示有未关联的数据</li>\r\n          <li>点击\"执行数据迁移\"按钮</li>\r\n          <li>迁移完成后，所有现有数据将关联到当前登录用户</li>\r\n          <li>之后可以使用此账户登录系统管理所有数据</li>\r\n        </ol>\r\n        \r\n        <div className=\"important-notes\">\r\n          <h4>⚠️ 重要提示</h4>\r\n          <ul>\r\n            <li>迁移过程不会删除或修改现有数据内容</li>\r\n            <li>只会添加 createdBy 字段和更新权限</li>\r\n            <li>迁移后，只有当前用户可以看到所有现有数据</li>\r\n            <li>新注册的用户只能看到自己创建的数据</li>\r\n            <li><strong>建议使用一个专门的账户作为管理员</strong></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataMigrationPanel;","// pages/TestPage.jsx\r\nimport React from 'react';\r\nimport UserTestPanel from '../components/UserTestPanel';\r\nimport DataMigrationPanel from '../components/DataMigrationPanel';\r\n\r\nconst TestPage = () => {\r\n  return (\r\n    <div className=\"test-page\">\r\n      <div className=\"container\">\r\n        <h1>用户系统测试与数据迁移</h1>\r\n        \r\n        <div className=\"test-sections\">\r\n          <section className=\"test-section\">\r\n            <h2>🔄 数据迁移</h2>\r\n            <DataMigrationPanel />\r\n          </section>\r\n          \r\n          <section className=\"test-section\">\r\n            <h2>🧪 用户功能测试</h2>\r\n            <UserTestPanel />\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestPage;","// components/Navigation.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AV from 'leancloud-storage';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ onShowAuthModal }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [showUserMenu, setShowUserMenu] = useState(false);\r\n  const userMenuRef = useRef(null);\r\n\r\n  // 检查用户登录状态\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n  }, []);\r\n\r\n  // 点击外部关闭用户菜单\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (userMenuRef.current && !userMenuRef.current.contains(event.target)) {\r\n        setShowUserMenu(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  // 添加头像更新事件监听\r\n  useEffect(() => {\r\n    const handleAvatarUpdate = async () => {\r\n      console.log('收到头像更新事件，重新加载用户数据');\r\n      const user = AV.User.current();\r\n      if (user) {\r\n        try {\r\n          const freshUser = await user.fetch();\r\n          setCurrentUser(freshUser);\r\n        } catch (error) {\r\n          console.error('重新加载用户数据失败:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('userAvatarUpdated', handleAvatarUpdate);\r\n    \r\n    return () => {\r\n      window.removeEventListener('userAvatarUpdated', handleAvatarUpdate);\r\n    };\r\n  }, []);\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await AV.User.logOut();\r\n      setCurrentUser(null);\r\n      setShowUserMenu(false);\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error('退出失败:', error);\r\n      alert('退出失败，请重试');\r\n    }\r\n  };\r\n\r\n  const handleUserMenuToggle = () => {\r\n    setShowUserMenu(!showUserMenu);\r\n  };\r\n\r\n  // 检查是否为特定邮箱用户\r\n  const isAuthorizedEmail = () => {\r\n    if (!currentUser) return false;\r\n    const userEmail = currentUser.getEmail();\r\n    return userEmail === 'wu1149823510@outlook.com';\r\n  };\r\n\r\n  // 优化的头像组件 - 支持缓存清除和完全覆盖\r\n  const UserAvatar = ({ user, size = 'normal' }) => {\r\n    const avatar = user.get('avatar');\r\n    const fallbackText = user.getUsername()?.charAt(0).toUpperCase();\r\n    \r\n    // 添加时间戳避免缓存\r\n    const getAvatarUrl = () => {\r\n      if (!avatar) return null;\r\n      \r\n      if (typeof avatar === 'string') {\r\n        const timestamp = new Date().getTime();\r\n        return `${avatar}?t=${timestamp}`;\r\n      } else if (typeof avatar.get === 'function') {\r\n        return avatar.get('url');\r\n      }\r\n      return null;\r\n    };\r\n    \r\n    const avatarUrl = getAvatarUrl();\r\n    \r\n    return (\r\n      <div className={`user-avatar ${size === 'large' ? 'user-avatar-large' : ''}`}>\r\n        {avatarUrl ? (\r\n          <>\r\n            <img \r\n              src={avatarUrl} \r\n              alt=\"用户头像\"\r\n              onLoad={() => console.log('✅ Navigation 头像加载成功')}\r\n              onError={(e) => {\r\n                console.error('❌ Navigation 头像加载失败:', avatarUrl);\r\n                e.target.style.display = 'none';\r\n                // 显示占位符\r\n                const fallback = e.target.nextSibling;\r\n                if (fallback) fallback.style.display = 'flex';\r\n              }}\r\n              style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                objectFit: 'cover',\r\n                objectPosition: 'center'\r\n              }}\r\n            />\r\n            <div \r\n              className={`avatar-fallback ${size === 'large' ? 'avatar-fallback-large' : ''}`}\r\n              style={{ display: 'none' }}\r\n            >\r\n              {fallbackText}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className={`avatar-fallback ${size === 'large' ? 'avatar-fallback-large' : ''}`}>\r\n            {fallbackText}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <nav className=\"modern-nav\">\r\n      <div className=\"nav-container\">\r\n        {/* 左侧导航链接 */}\r\n        <div className=\"nav-left\">\r\n          <Link to=\"/\" className=\"nav-brand\">\r\n            <span className=\"brand-icon\">📚</span>\r\n            <span className=\"brand-text\">知识题库</span>\r\n          </Link>\r\n          \r\n          <div className=\"nav-links\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              <span className=\"link-icon\">🏠</span>\r\n              首页\r\n            </Link>\r\n            {/* 只有特定邮箱用户才能看到初始化数据库选项 */}\r\n            {currentUser && isAuthorizedEmail() && (\r\n              <Link to=\"/init\" className=\"nav-link\">\r\n                <span className=\"link-icon\">⚙️</span>\r\n                初始化数据库\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* 右侧用户区域 */}\r\n        <div className=\"nav-right\">\r\n          {currentUser ? (\r\n            <div className=\"user-section\" ref={userMenuRef}>\r\n              <button \r\n                className=\"user-menu-trigger\"\r\n                onClick={handleUserMenuToggle}\r\n              >\r\n                <UserAvatar user={currentUser} />\r\n                <span className=\"user-name\">{currentUser.getUsername()}</span>\r\n                {isAuthorizedEmail() && (\r\n                  <span className=\"admin-badge\" title=\"管理员\">⚡</span>\r\n                )}\r\n                <span className={`dropdown-arrow ${showUserMenu ? 'open' : ''}`}>\r\n                  ▼\r\n                </span>\r\n              </button>\r\n\r\n              {/* 用户下拉菜单 */}\r\n              {showUserMenu && (\r\n                <div className=\"user-dropdown-menu\">\r\n                  <div className=\"dropdown-header\">\r\n                    <div className=\"user-info-card\">\r\n                      <UserAvatar user={currentUser} size=\"large\" />\r\n                      <div className=\"user-details\">\r\n                        <div className=\"user-display-name\">\r\n                          {currentUser.get('nickname') || currentUser.getUsername()}\r\n                          {isAuthorizedEmail() && (\r\n                            <span className=\"admin-tag\">管理员</span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"user-email\">\r\n                          {currentUser.getEmail() || '未设置邮箱'}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"dropdown-divider\"></div>\r\n\r\n                  <div className=\"dropdown-items\">\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.dispatchEvent(new CustomEvent('showUserSettings'));\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">👤</span>\r\n                      <span className=\"item-text\">账户设置</span>\r\n                    </button>\r\n\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.dispatchEvent(new CustomEvent('showUserSettings', { \r\n                          detail: { tab: 'stats' } \r\n                        }));\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">📊</span>\r\n                      <span className=\"item-text\">学习统计</span>\r\n                    </button>\r\n\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.dispatchEvent(new CustomEvent('showUserSettings', { \r\n                          detail: { tab: 'preferences' } \r\n                        }));\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">🔔</span>\r\n                      <span className=\"item-text\">通知设置</span>\r\n                    </button>\r\n                  </div>\r\n\r\n                  {/* 管理员专属功能区域 */}\r\n                  {isAuthorizedEmail() && (\r\n                    <>\r\n                      <div className=\"dropdown-divider\"></div>\r\n                      <div className=\"dropdown-section\">\r\n                        <div className=\"section-label\">管理员功能</div>\r\n                        <div className=\"dropdown-items\">\r\n                          <Link \r\n                            to=\"/init\" \r\n                            className=\"dropdown-item\"\r\n                            onClick={() => setShowUserMenu(false)}\r\n                          >\r\n                            <span className=\"item-icon\">⚙️</span>\r\n                            <span className=\"item-text\">初始化数据库</span>\r\n                          </Link>\r\n                          <button \r\n                            className=\"dropdown-item\"\r\n                            onClick={() => {\r\n                              setShowUserMenu(false);\r\n                              console.log('管理员功能');\r\n                            }}\r\n                          >\r\n                            <span className=\"item-icon\">🔧</span>\r\n                            <span className=\"item-text\">系统管理</span>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  <div className=\"dropdown-divider\"></div>\r\n\r\n                  <div className=\"dropdown-items\">\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.open('/help', '_blank');\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">❓</span>\r\n                      <span className=\"item-text\">帮助文档</span>\r\n                    </button>\r\n\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.open('mailto:support@example.com', '_blank');\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">💬</span>\r\n                      <span className=\"item-text\">意见反馈</span>\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"dropdown-divider\"></div>\r\n\r\n                  <div className=\"dropdown-items\">\r\n                    <button \r\n                      className=\"dropdown-item logout-item\"\r\n                      onClick={handleLogout}\r\n                    >\r\n                      <span className=\"item-icon\">🚪</span>\r\n                      <span className=\"item-text\">退出登录</span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"auth-buttons\">\r\n              <button \r\n                className=\"auth-btn login-btn\"\r\n                onClick={() => onShowAuthModal('login')}\r\n              >\r\n                登录\r\n              </button>\r\n              <button \r\n                className=\"auth-btn login-btn\"\r\n                onClick={() => onShowAuthModal('register')}\r\n              >\r\n                注册\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;","// components/AuthModal.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { UserService } from '../services/userService';\r\nimport { WechatAuthService } from '../services/wechatAuthService';\r\nimport './AuthModal.css';\r\n\r\nconst AuthModal = ({ isOpen, onClose, defaultTab = 'login', onAuthSuccess }) => {\r\n  const [activeTab, setActiveTab] = useState(defaultTab);\r\n  const [formData, setFormData] = useState({\r\n    loginUsername: '',\r\n    loginPassword: '',\r\n    registerUsername: '',\r\n    registerEmail: '',\r\n    registerPassword: '',\r\n    registerConfirmPassword: ''\r\n  });\r\n  const [isWechatLoading, setIsWechatLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setActiveTab(defaultTab);\r\n      setFormData({\r\n        loginUsername: '',\r\n        loginPassword: '',\r\n        registerUsername: '',\r\n        registerEmail: '',\r\n        registerPassword: '',\r\n        registerConfirmPassword: ''\r\n      });\r\n    }\r\n  }, [isOpen, defaultTab]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await UserService.login(formData.loginUsername, formData.loginPassword);\r\n      if (onAuthSuccess) onAuthSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      alert(`登录失败: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.registerPassword !== formData.registerConfirmPassword) {\r\n      alert('两次输入的密码不一致');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await UserService.register(\r\n        formData.registerUsername,\r\n        formData.registerPassword,\r\n        formData.registerEmail\r\n      );\r\n      if (onAuthSuccess) onAuthSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      alert(`注册失败: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleWechatLogin = async () => {\r\n    setIsWechatLoading(true);\r\n    try {\r\n      await WechatAuthService.wechatLogin();\r\n      if (onAuthSuccess) onAuthSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      alert(`微信登录失败: ${error.message}`);\r\n    } finally {\r\n      setIsWechatLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleWechatQRLogin = async () => {\r\n    setIsWechatLoading(true);\r\n    try {\r\n      await WechatAuthService.wechatQRLogin();\r\n      if (onAuthSuccess) onAuthSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      alert(`微信扫码登录失败: ${error.message}`);\r\n    } finally {\r\n      setIsWechatLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"auth-modal\" onClick={onClose}>\r\n      <div className=\"auth-content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"auth-header\">\r\n          <h3>{activeTab === 'login' ? '用户登录' : '用户注册'}</h3>\r\n          <button className=\"close-btn\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <div className=\"auth-tabs\">\r\n          <button \r\n            className={`auth-tab ${activeTab === 'login' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('login')}\r\n          >\r\n            登录\r\n          </button>\r\n          <button \r\n            className={`auth-tab ${activeTab === 'register' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('register')}\r\n          >\r\n            注册\r\n          </button>\r\n        </div>\r\n\r\n        {/* 第三方登录选项 \r\n        <div className=\"social-auth-section\">\r\n          <div className=\"social-auth-buttons\">\r\n            <button \r\n              className=\"social-auth-btn wechat-btn\"\r\n              onClick={handleWechatLogin}\r\n              disabled={isWechatLoading}\r\n            >\r\n              <span className=\"social-icon\">💬</span>\r\n              <span className=\"social-text\">\r\n                {isWechatLoading ? '登录中...' : '微信登录'}\r\n              </span>\r\n            </button>\r\n            \r\n            <button \r\n              className=\"social-auth-btn wechat-qr-btn\"\r\n              onClick={handleWechatQRLogin}\r\n              disabled={isWechatLoading}\r\n            >\r\n              <span className=\"social-icon\">📱</span>\r\n              <span className=\"social-text\">\r\n                {isWechatLoading ? '加载中...' : '微信扫码登录'}\r\n              </span>\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"divider\">\r\n            <span>或</span>\r\n          </div>\r\n        </div>\r\n*/}\r\n        {/* 登录表单 */}\r\n        <form \r\n          className={`auth-form ${activeTab === 'login' ? 'active' : ''}`}\r\n          onSubmit={handleLogin}\r\n        >\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"loginUsername\">用户名</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"loginUsername\" \r\n              value={formData.loginUsername}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"loginPassword\">密码</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"loginPassword\" \r\n              value={formData.loginPassword}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"auth-btn primary\">登录</button>\r\n        </form>\r\n\r\n        {/* 注册表单 */}\r\n        <form \r\n          className={`auth-form ${activeTab === 'register' ? 'active' : ''}`}\r\n          onSubmit={handleRegister}\r\n        >\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerUsername\">用户名</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"registerUsername\" \r\n              value={formData.registerUsername}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerEmail\">邮箱</label>\r\n            <input \r\n              type=\"email\" \r\n              id=\"registerEmail\" \r\n              value={formData.registerEmail}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerPassword\">密码</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"registerPassword\" \r\n              value={formData.registerPassword}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerConfirmPassword\">确认密码</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"registerConfirmPassword\" \r\n              value={formData.registerConfirmPassword}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"auth-btn secondary\">注册</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthModal;","// components/UserSettingsModal.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport AV from 'leancloud-storage';\r\nimport './UserSettingsModal.css';\r\n\r\nconst UserSettingsModal = ({ isOpen, onClose }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('profile');\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [message, setMessage] = useState({ type: '', text: '' });\r\n  const [avatarFile, setAvatarFile] = useState(null);\r\n  const [avatarPreview, setAvatarPreview] = useState('');\r\n\r\n  // 学习统计数据状态\r\n  const [studyStats, setStudyStats] = useState({\r\n    totalCategories: 0,\r\n    totalQuestions: 0,\r\n    reviewQuestions: 0,\r\n    todayReviewed: 0\r\n  });\r\n\r\n  // 表单状态\r\n  const [profileForm, setProfileForm] = useState({\r\n    username: '',\r\n    email: '',\r\n    nickname: '',\r\n    bio: ''\r\n  });\r\n\r\n  const [passwordForm, setPasswordForm] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const [preferencesForm, setPreferencesForm] = useState({\r\n    theme: 'light',\r\n    language: 'zh-CN',\r\n    notifications: true,\r\n    emailUpdates: false\r\n  });\r\n\r\n  const [securityForm, setSecurityForm] = useState({\r\n    emailVerified: false\r\n  });\r\n\r\n  // 调试用户信息\r\n  const debugUserInfo = (user) => {\r\n    if (!user) return;\r\n   \r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      const user = AV.User.current();\r\n      setCurrentUser(user);\r\n      if (user) {\r\n        debugUserInfo(user);\r\n        loadUserData(user);\r\n        loadStudyStats(user);\r\n      }\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const loadUserData = async (user) => {\r\n    try {\r\n      // 确保获取最新的用户数据\r\n      const freshUser = await user.fetch();\r\n      \r\n    \r\n\r\n      setProfileForm({\r\n        username: freshUser.getUsername() || '',\r\n        email: freshUser.getEmail() || '',\r\n        nickname: freshUser.get('nickname') || '',\r\n        bio: freshUser.get('bio') || ''\r\n      });\r\n\r\n      setPreferencesForm({\r\n        theme: freshUser.get('theme') || 'light',\r\n        language: freshUser.get('language') || 'zh-CN',\r\n        notifications: freshUser.get('notifications') !== false,\r\n        emailUpdates: freshUser.get('emailUpdates') || false\r\n      });\r\n\r\n      setSecurityForm({\r\n        emailVerified: freshUser.get('emailVerified') || false\r\n      });\r\n\r\n      // 加载用户头像 - 添加时间戳避免缓存\r\n      const avatar = freshUser.get('avatar');\r\n      if (avatar && typeof avatar === 'string') {\r\n        const timestamp = new Date().getTime();\r\n        const avatarUrlWithCacheBust = `${avatar}?t=${timestamp}`;\r\n        setAvatarPreview(avatarUrlWithCacheBust);\r\n      } else {\r\n        setAvatarPreview('');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('加载用户数据失败:', error);\r\n    }\r\n  };\r\n\r\n  const loadStudyStats = async (user) => {\r\n    try {\r\n      // 获取分类数量\r\n      const categoriesQuery = new AV.Query('Category');\r\n      categoriesQuery.equalTo('createdBy', user);\r\n      const categories = await categoriesQuery.find();\r\n\r\n      // 获取题目数量\r\n      const questionsQuery = new AV.Query('Question');\r\n      questionsQuery.equalTo('createdBy', user);\r\n      const questions = await questionsQuery.find();\r\n\r\n      // 计算待复习题目\r\n      const now = new Date();\r\n      const reviewThreshold = 1;\r\n      const reviewQuestions = questions.filter(question => {\r\n        const lastReviewed = new Date(question.get('lastReviewedAt') || question.get('createdAt'));\r\n        const daysSinceReview = Math.floor((now - lastReviewed) / (1000 * 60 * 60 * 24));\r\n        return daysSinceReview >= reviewThreshold;\r\n      });\r\n\r\n      // 计算今日复习题目\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      const todayReviewed = questions.filter(question => {\r\n        const lastReviewed = new Date(question.get('lastReviewedAt'));\r\n        return lastReviewed >= today;\r\n      }).length;\r\n\r\n      setStudyStats({\r\n        totalCategories: categories.length,\r\n        totalQuestions: questions.length,\r\n        reviewQuestions: reviewQuestions.length,\r\n        todayReviewed: todayReviewed\r\n      });\r\n    } catch (error) {\r\n      console.error('加载学习统计失败:', error);\r\n      setStudyStats({\r\n        totalCategories: 0,\r\n        totalQuestions: 0,\r\n        reviewQuestions: 0,\r\n        todayReviewed: 0\r\n      });\r\n    }\r\n  };\r\n\r\n  const showMessage = (type, text, duration = 3000) => {\r\n    setMessage({ type, text });\r\n    setTimeout(() => setMessage({ type: '', text: '' }), duration);\r\n  };\r\n\r\n  // 头像上传处理\r\n  const handleAvatarUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    // 检查文件类型\r\n    if (!file.type.startsWith('image/')) {\r\n      showMessage('error', '请选择图片文件（JPG、PNG、GIF）');\r\n      return;\r\n    }\r\n\r\n    // 检查文件大小\r\n    if (file.size > 2 * 1024 * 1024) {\r\n      showMessage('error', '图片大小不能超过 2MB');\r\n      return;\r\n    }\r\n\r\n    setAvatarFile(file);\r\n    \r\n    // 创建预览\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      setAvatarPreview(e.target.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleAvatarSave = async () => {\r\n    if (!avatarFile || !currentUser) {\r\n      showMessage('error', '请先选择图片');\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    try {\r\n\r\n      // 首先清除旧的头像预览\r\n      setAvatarPreview('');\r\n      \r\n      // 将文件转换为 base64\r\n      const fileData = await new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          const base64Data = e.target.result.split(',')[1];\r\n          resolve(base64Data);\r\n        };\r\n        reader.onerror = () => reject(new Error('文件读取失败'));\r\n        reader.readAsDataURL(avatarFile);\r\n      });\r\n\r\n      // 调用云函数\r\n      const result = await AV.Cloud.run('updateUserAvatar', {\r\n        fileData: fileData,\r\n        fileName: avatarFile.name,\r\n        mimeType: avatarFile.type\r\n      });\r\n\r\n      if (result.success) {\r\n        showMessage('success', '头像上传成功！');\r\n        \r\n        // 使用时间戳避免浏览器缓存\r\n        const timestamp = new Date().getTime();\r\n        const avatarUrlWithCacheBust = `${result.avatarUrl}?t=${timestamp}`;\r\n        \r\n        console.log('设置带时间戳的头像URL:', avatarUrlWithCacheBust);\r\n        \r\n        // 更新本地预览\r\n        setAvatarPreview(avatarUrlWithCacheBust);\r\n        \r\n        // 清除文件选择状态\r\n        setAvatarFile(null);\r\n        \r\n        // 重新获取用户数据\r\n        setTimeout(async () => {\r\n          try {\r\n            const updatedUser = await AV.User.current().fetch();\r\n            setCurrentUser(updatedUser);\r\n            console.log('用户数据已更新');\r\n            \r\n            // 强制重新渲染 Navigation 组件\r\n            window.dispatchEvent(new CustomEvent('userAvatarUpdated'));\r\n          } catch (fetchError) {\r\n            console.error('获取更新后的用户数据失败:', fetchError);\r\n          }\r\n        }, 1000);\r\n        \r\n      } else {\r\n        throw new Error(result.message || '头像上传失败');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('❌ 头像上传失败:', error);\r\n      showMessage('error', `上传失败: ${error.message}`);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleProfileUpdate = async (e) => {\r\n    e.preventDefault();\r\n    if (!currentUser) return;\r\n\r\n    setSaving(true);\r\n    try {\r\n      console.log('开始更新个人信息...', {\r\n        nickname: profileForm.nickname,\r\n        bio: profileForm.bio\r\n      });\r\n\r\n      // 使用云函数更新个人信息\r\n      const result = await AV.Cloud.run('updateUserProfile', {\r\n        nickname: profileForm.nickname,\r\n        bio: profileForm.bio\r\n      });\r\n\r\n      if (result.success) {\r\n        showMessage('success', '个人信息更新成功！');\r\n        \r\n        // 重新获取用户数据\r\n        setTimeout(async () => {\r\n          try {\r\n            const updatedUser = await AV.User.current().fetch();\r\n            setCurrentUser(updatedUser);\r\n            console.log('用户数据已更新');\r\n          } catch (fetchError) {\r\n            console.error('获取更新后的用户数据失败:', fetchError);\r\n          }\r\n        }, 500);\r\n      } else {\r\n        throw new Error(result.message || '更新失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('更新个人信息失败:', error);\r\n      \r\n      let errorMessage = '更新失败，请重试';\r\n      if (error.code === 401) {\r\n        errorMessage = '请先登录';\r\n      } else if (error.message.includes('network')) {\r\n        errorMessage = '网络连接失败，请检查网络';\r\n      } else {\r\n        errorMessage = `更新失败: ${error.message}`;\r\n      }\r\n      \r\n      showMessage('error', errorMessage);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (passwordForm.newPassword !== passwordForm.confirmPassword) {\r\n      showMessage('error', '新密码和确认密码不一致');\r\n      return;\r\n    }\r\n\r\n    if (passwordForm.newPassword.length < 6) {\r\n      showMessage('error', '新密码至少需要6位字符');\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    try {\r\n      await currentUser.updatePassword(\r\n        passwordForm.currentPassword,\r\n        passwordForm.newPassword\r\n      );\r\n      \r\n      showMessage('success', '密码修改成功！');\r\n      setPasswordForm({\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      });\r\n    } catch (error) {\r\n      console.error('修改密码失败:', error);\r\n      showMessage('error', `密码修改失败: ${error.message}`);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handlePreferencesUpdate = async (e) => {\r\n    e.preventDefault();\r\n    if (!currentUser) return;\r\n\r\n    setSaving(true);\r\n    try {\r\n      console.log('开始更新偏好设置...', preferencesForm);\r\n\r\n      // 使用云函数更新偏好设置\r\n      const result = await AV.Cloud.run('updateUserPreferences', {\r\n        theme: preferencesForm.theme,\r\n        language: preferencesForm.language,\r\n        notifications: preferencesForm.notifications,\r\n        emailUpdates: preferencesForm.emailUpdates\r\n      });\r\n\r\n      if (result.success) {\r\n        showMessage('success', '偏好设置更新成功！');\r\n        \r\n        // 重新获取用户数据\r\n        setTimeout(async () => {\r\n          try {\r\n            const updatedUser = await AV.User.current().fetch();\r\n            setCurrentUser(updatedUser);\r\n          } catch (fetchError) {\r\n            console.error('获取更新后的用户数据失败:', fetchError);\r\n          }\r\n        }, 500);\r\n      } else {\r\n        throw new Error(result.message || '更新失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('更新偏好设置失败:', error);\r\n      showMessage('error', `更新失败: ${error.message}`);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  // 邮箱验证\r\n  const handleEmailVerification = async () => {\r\n    if (!currentUser || !currentUser.getEmail()) {\r\n      showMessage('error', '请先设置邮箱地址');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await AV.User.requestEmailVerify(currentUser.getEmail());\r\n      showMessage('success', '验证邮件已发送，请检查您的邮箱');\r\n    } catch (error) {\r\n      console.error('发送验证邮件失败:', error);\r\n      showMessage('error', `发送验证邮件失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 密码重置\r\n  const handlePasswordReset = async () => {\r\n    if (!currentUser || !currentUser.getEmail()) {\r\n      showMessage('error', '请先设置邮箱地址');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await AV.User.requestPasswordReset(currentUser.getEmail());\r\n      showMessage('success', '密码重置邮件已发送，请检查您的邮箱');\r\n    } catch (error) {\r\n      console.error('发送重置邮件失败:', error);\r\n      showMessage('error', `发送重置邮件失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 数据导出\r\n  const handleDataExport = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [categories, questions] = await Promise.all([\r\n        new AV.Query('Category')\r\n          .equalTo('createdBy', currentUser)\r\n          .find(),\r\n        new AV.Query('Question')\r\n          .equalTo('createdBy', currentUser)\r\n          .include('category')\r\n          .find()\r\n      ]);\r\n\r\n      const exportData = {\r\n        exportTime: new Date().toISOString(),\r\n        user: {\r\n          username: currentUser.getUsername(),\r\n          email: currentUser.getEmail(),\r\n          nickname: currentUser.get('nickname')\r\n        },\r\n        categories: categories.map(cat => ({\r\n          id: cat.id,\r\n          name: cat.get('name'),\r\n          description: cat.get('description'),\r\n          questionCount: cat.get('questionCount') || 0,\r\n          createdAt: cat.get('createdAt'),\r\n          updatedAt: cat.get('updatedAt')\r\n        })),\r\n        questions: questions.map(q => ({\r\n          id: q.id,\r\n          title: q.get('title'),\r\n          detailedAnswer: q.get('detailedAnswer'),\r\n          oralAnswer: q.get('oralAnswer'),\r\n          code: q.get('code'),\r\n          difficulty: q.get('difficulty'),\r\n          proficiency: q.get('proficiency'),\r\n          appearanceLevel: q.get('appearanceLevel'),\r\n          tags: q.get('tags') || [],\r\n          category: q.get('category') ? {\r\n            id: q.get('category').id,\r\n            name: q.get('category').get('name')\r\n          } : null,\r\n          createdAt: q.get('createdAt'),\r\n          updatedAt: q.get('updatedAt')\r\n        }))\r\n      };\r\n\r\n      const dataStr = JSON.stringify(exportData, null, 2);\r\n      const dataBlob = new Blob([dataStr], { type: 'application/json' });\r\n      const url = URL.createObjectURL(dataBlob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `knowledge-base-export-${new Date().toISOString().split('T')[0]}.json`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      URL.revokeObjectURL(url);\r\n\r\n      showMessage('success', '数据导出成功！');\r\n    } catch (error) {\r\n      console.error('数据导出失败:', error);\r\n      showMessage('error', `数据导出失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (formType, field, value) => {\r\n    switch (formType) {\r\n      case 'profile':\r\n        setProfileForm(prev => ({ ...prev, [field]: value }));\r\n        break;\r\n      case 'password':\r\n        setPasswordForm(prev => ({ ...prev, [field]: value }));\r\n        break;\r\n      case 'preferences':\r\n        setPreferencesForm(prev => ({ ...prev, [field]: value }));\r\n        break;\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"user-settings-overlay\">\r\n      <div className=\"user-settings-modal\">\r\n        {/* 头部 */}\r\n        <div className=\"settings-header\">\r\n          <div className=\"header-content\">\r\n            <h2>账户设置</h2>\r\n            <p>管理您的账户信息和偏好设置</p>\r\n          </div>\r\n          <button \r\n            className=\"close-button\"\r\n            onClick={onClose}\r\n            disabled={saving}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        {/* 消息提示 */}\r\n        {message.text && (\r\n          <div className={`message ${message.type}`}>\r\n            {message.text}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"settings-content\">\r\n          {/* 侧边栏导航 */}\r\n          <div className=\"settings-sidebar\">\r\n            <button \r\n              className={`sidebar-item ${activeTab === 'profile' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('profile')}\r\n            >\r\n              <span className=\"item-icon\">👤</span>\r\n              <span className=\"item-text\">个人信息</span>\r\n            </button>\r\n            \r\n            <button \r\n              className={`sidebar-item ${activeTab === 'security' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('security')}\r\n            >\r\n              <span className=\"item-icon\">🔒</span>\r\n              <span className=\"item-text\">安全设置</span>\r\n            </button>\r\n            \r\n            <button \r\n              className={`sidebar-item ${activeTab === 'preferences' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('preferences')}\r\n            >\r\n              <span className=\"item-icon\">⚙️</span>\r\n              <span className=\"item-text\">偏好设置</span>\r\n            </button>\r\n            \r\n            <button \r\n              className={`sidebar-item ${activeTab === 'data' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('data')}\r\n            >\r\n              <span className=\"item-icon\">📊</span>\r\n              <span className=\"item-text\">学习统计</span>\r\n            </button>\r\n          </div>\r\n\r\n          {/* 主要内容区域 */}\r\n          <div className=\"settings-main\">\r\n            {activeTab === 'profile' && (\r\n              <div className=\"tab-content\">\r\n                <h3>个人信息</h3>\r\n                \r\n                {/* 头像上传区域 */}\r\n                <div className=\"avatar-section\">\r\n                  <div className=\"avatar-upload\">\r\n                    <div className=\"avatar-preview\">\r\n                      {avatarPreview ? (\r\n                        <img \r\n                          src={avatarPreview} \r\n                          alt=\"头像预览\"\r\n                          style={{\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            objectFit: 'cover',\r\n                            objectPosition: 'center'\r\n                          }}\r\n                          onLoad={() => console.log('✅ 头像预览加载成功')}\r\n                          onError={(e) => {\r\n                            console.error('❌ 头像预览加载失败:', avatarPreview);\r\n                            e.target.style.display = 'none';\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <div className=\"avatar-placeholder\">\r\n                          {profileForm.username?.charAt(0).toUpperCase()}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"avatar-controls\">\r\n                      <input\r\n                        type=\"file\"\r\n                        id=\"avatar-upload\"\r\n                        accept=\"image/*\"\r\n                        onChange={handleAvatarUpload}\r\n                        className=\"avatar-input\"\r\n                      />\r\n                      <label htmlFor=\"avatar-upload\" className=\"avatar-upload-btn\">\r\n                        选择图片\r\n                      </label>\r\n                      {avatarFile && (\r\n                        <button \r\n                          className=\"avatar-save-btn\"\r\n                          onClick={handleAvatarSave}\r\n                          disabled={saving}\r\n                        >\r\n                          {saving ? '上传中...' : '保存头像'}\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"avatar-hint\">\r\n                    支持 JPG、PNG 格式，大小不超过 2MB\r\n                  </div>\r\n                </div>\r\n\r\n                <form onSubmit={handleProfileUpdate} className=\"settings-form\">\r\n                  <div className=\"form-group\">\r\n                    <label>用户名</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={profileForm.username}\r\n                      disabled\r\n                      className=\"disabled-input\"\r\n                    />\r\n                    <div className=\"field-hint\">用户名创建后不可修改</div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>邮箱地址</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      value={profileForm.email}\r\n                      disabled\r\n                      className=\"disabled-input\"\r\n                    />\r\n                    <div className=\"field-hint\">\r\n                      {profileForm.email ? '邮箱已验证' : '未设置邮箱'}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>昵称</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={profileForm.nickname}\r\n                      onChange={(e) => handleInputChange('profile', 'nickname', e.target.value)}\r\n                      placeholder=\"请输入您的昵称\"\r\n                      maxLength={20}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>个人简介</label>\r\n                    <textarea\r\n                      value={profileForm.bio}\r\n                      onChange={(e) => handleInputChange('profile', 'bio', e.target.value)}\r\n                      placeholder=\"介绍一下您自己...\"\r\n                      rows=\"3\"\r\n                      maxLength={200}\r\n                    />\r\n                    <div className=\"char-count\">\r\n                      {profileForm.bio.length}/200\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-actions\">\r\n                    <button \r\n                      type=\"submit\" \r\n                      className=\"save-button\"\r\n                      disabled={saving}\r\n                    >\r\n                      {saving ? '保存中...' : '保存更改'}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'security' && (\r\n              <div className=\"tab-content\">\r\n                <h3>安全设置</h3>\r\n                \r\n                {/* 邮箱验证 */}\r\n                <div className=\"security-section\">\r\n                  <h4>邮箱验证</h4>\r\n                  <div className=\"security-item\">\r\n                    <div className=\"security-info\">\r\n                      <span className=\"security-label\">邮箱状态</span>\r\n                      <span className={`security-status ${securityForm.emailVerified ? 'verified' : 'unverified'}`}>\r\n                        {securityForm.emailVerified ? '已验证' : '未验证'}\r\n                      </span>\r\n                    </div>\r\n                    {!securityForm.emailVerified && (\r\n                      <button \r\n                        className=\"security-action-btn\"\r\n                        onClick={handleEmailVerification}\r\n                        disabled={loading || !profileForm.email}\r\n                      >\r\n                        {loading ? '发送中...' : '发送验证邮件'}\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 密码修改 */}\r\n                <div className=\"security-section\">\r\n                  <h4>修改密码</h4>\r\n                  <form onSubmit={handlePasswordChange} className=\"settings-form\">\r\n                    <div className=\"form-group\">\r\n                      <label>当前密码</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        value={passwordForm.currentPassword}\r\n                        onChange={(e) => handleInputChange('password', 'currentPassword', e.target.value)}\r\n                        placeholder=\"请输入当前密码\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>新密码</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        value={passwordForm.newPassword}\r\n                        onChange={(e) => handleInputChange('password', 'newPassword', e.target.value)}\r\n                        placeholder=\"请输入新密码（至少6位）\"\r\n                        minLength={6}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>确认新密码</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        value={passwordForm.confirmPassword}\r\n                        onChange={(e) => handleInputChange('password', 'confirmPassword', e.target.value)}\r\n                        placeholder=\"请再次输入新密码\"\r\n                        minLength={6}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"password-strength\">\r\n                      <div className=\"strength-bar\">\r\n                        <div \r\n                          className={`strength-fill ${\r\n                            passwordForm.newPassword.length >= 6 ? 'strong' : 'weak'\r\n                          }`}\r\n                          style={{ \r\n                            width: `${Math.min((passwordForm.newPassword.length / 6) * 100, 100)}%` \r\n                          }}\r\n                        ></div>\r\n                      </div>\r\n                      <div className=\"strength-text\">\r\n                        {passwordForm.newPassword.length >= 6 ? '密码强度足够' : '密码至少需要6位'}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-actions\">\r\n                      <button \r\n                        type=\"submit\" \r\n                        className=\"save-button\"\r\n                        disabled={saving}\r\n                      >\r\n                        {saving ? '更新中...' : '修改密码'}\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n\r\n                {/* 密码重置 */}\r\n                <div className=\"security-section\">\r\n                  <h4>密码重置</h4>\r\n                  <div className=\"security-item\">\r\n                    <div className=\"security-info\">\r\n                      <span className=\"security-label\">忘记密码？</span>\r\n                      <span className=\"security-description\">\r\n                        通过邮箱重置您的密码\r\n                      </span>\r\n                    </div>\r\n                    <button \r\n                      className=\"security-action-btn secondary\"\r\n                      onClick={handlePasswordReset}\r\n                      disabled={loading || !profileForm.email}\r\n                    >\r\n                      {loading ? '发送中...' : '发送重置邮件'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'preferences' && (\r\n              <div className=\"tab-content\">\r\n                <h3>偏好设置</h3>\r\n                <form onSubmit={handlePreferencesUpdate} className=\"settings-form\">\r\n                  <div className=\"form-group\">\r\n                    <label>主题模式</label>\r\n                    <div className=\"radio-group\">\r\n                      <label className=\"radio-option\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          name=\"theme\"\r\n                          value=\"light\"\r\n                          checked={preferencesForm.theme === 'light'}\r\n                          onChange={(e) => handleInputChange('preferences', 'theme', e.target.value)}\r\n                        />\r\n                        <span className=\"radio-label\">\r\n                          <span className=\"radio-icon\">🌞</span>\r\n                          浅色模式\r\n                        </span>\r\n                      </label>\r\n                      <label className=\"radio-option\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          name=\"theme\"\r\n                          value=\"dark\"\r\n                          checked={preferencesForm.theme === 'dark'}\r\n                          onChange={(e) => handleInputChange('preferences', 'theme', e.target.value)}\r\n                        />\r\n                        <span className=\"radio-label\">\r\n                          <span className=\"radio-icon\">🌙</span>\r\n                          深色模式\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>语言</label>\r\n                    <select\r\n                      value={preferencesForm.language}\r\n                      onChange={(e) => handleInputChange('preferences', 'language', e.target.value)}\r\n                    >\r\n                      <option value=\"zh-CN\">简体中文</option>\r\n                      <option value=\"en-US\">English</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>通知设置</label>\r\n                    <div className=\"switch-group\">\r\n                      <label className=\"switch\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={preferencesForm.notifications}\r\n                          onChange={(e) => handleInputChange('preferences', 'notifications', e.target.checked)}\r\n                        />\r\n                        <span className=\"slider\"></span>\r\n                      </label>\r\n                      <span className=\"switch-label\">\r\n                        启用浏览器通知\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>邮件更新</label>\r\n                    <div className=\"switch-group\">\r\n                      <label className=\"switch\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={preferencesForm.emailUpdates}\r\n                          onChange={(e) => handleInputChange('preferences', 'emailUpdates', e.target.checked)}\r\n                        />\r\n                        <span className=\"slider\"></span>\r\n                      </label>\r\n                      <span className=\"switch-label\">\r\n                        接收产品更新邮件\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-actions\">\r\n                    <button \r\n                      type=\"submit\" \r\n                      className=\"save-button\"\r\n                      disabled={saving}\r\n                    >\r\n                      {saving ? '保存中...' : '保存设置'}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'data' && (\r\n              <div className=\"tab-content\">\r\n                <h3>学习统计</h3>\r\n                \r\n                {/* 使用与 HomePage 相同的统计样式 */}\r\n                <div className=\"stats-overview\">\r\n                  <div className=\"stats-grid\">\r\n                    <div className=\"stat-card\">\r\n                      <div className=\"stat-icon\">📚</div>\r\n                      <div className=\"stat-content\">\r\n                        <div className=\"stat-number\">{studyStats.totalCategories}</div>\r\n                        <div className=\"stat-label\">知识分类</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"stat-card\">\r\n                      <div className=\"stat-icon\">❓</div>\r\n                      <div className=\"stat-content\">\r\n                        <div className=\"stat-number\">{studyStats.totalQuestions}</div>\r\n                        <div className=\"stat-label\">题目总数</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"stat-card\">\r\n                      <div className=\"stat-icon\">📖</div>\r\n                      <div className=\"stat-content\">\r\n                        <div className=\"stat-number\">{studyStats.reviewQuestions}</div>\r\n                        <div className=\"stat-label\">待复习</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"stat-card\">\r\n                      <div className=\"stat-icon\">⚡</div>\r\n                      <div className=\"stat-content\">\r\n                        <div className=\"stat-number\">{studyStats.todayReviewed}</div>\r\n                        <div className=\"stat-label\">今日复习</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 进度统计 */}\r\n                <div className=\"progress-section\">\r\n                  <div className=\"progress-item\">\r\n                    <div className=\"progress-header\">\r\n                      <span className=\"progress-label\">复习进度</span>\r\n                      <span className=\"progress-percent\">\r\n                        {studyStats.totalQuestions > 0 \r\n                          ? Math.round(((studyStats.totalQuestions - studyStats.reviewQuestions) / studyStats.totalQuestions) * 100)\r\n                          : 0\r\n                        }%\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"progress-bar\">\r\n                      <div \r\n                        className=\"progress-fill\"\r\n                        style={{ \r\n                          width: `${studyStats.totalQuestions > 0 \r\n                            ? ((studyStats.totalQuestions - studyStats.reviewQuestions) / studyStats.totalQuestions) * 100 \r\n                            : 0\r\n                          }%` \r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"progress-text\">\r\n                      已复习 {studyStats.totalQuestions - studyStats.reviewQuestions} / {studyStats.totalQuestions} 题目\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 数据导出 */}\r\n                <div className=\"data-section\">\r\n                  <h4>数据导出</h4>\r\n                  <div className=\"data-item\">\r\n                    <div className=\"data-info\">\r\n                      <span className=\"data-label\">导出学习数据</span>\r\n                      <span className=\"data-description\">\r\n                        导出您的所有分类和题目数据为 JSON 格式\r\n                      </span>\r\n                    </div>\r\n                    <button \r\n                      className=\"data-action-btn\"\r\n                      onClick={handleDataExport}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? '导出中...' : '导出数据'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 数据清理 */}\r\n                <div className=\"data-section\">\r\n                  <h4>数据清理</h4>\r\n                  <div className=\"data-item danger\">\r\n                    <div className=\"data-info\">\r\n                      <span className=\"data-label\">删除账户数据</span>\r\n                      <span className=\"data-description\">\r\n                        永久删除您的所有学习数据，此操作不可撤销\r\n                      </span>\r\n                    </div>\r\n                    <button \r\n                      className=\"data-action-btn danger\"\r\n                      disabled\r\n                    >\r\n                      即将开放\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSettingsModal;","// src/pages/ReviewPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport { getAllQuestions, updateQuestion } from '../services/questionService';\r\nimport AV from 'leancloud-storage';\r\nimport ReviewReminderSection from '../components/ReviewReminderSection';\r\nimport './ReviewPage.css';\r\n\r\n// 创建 React Query 客户端\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      staleTime: 5 * 60 * 1000,\r\n      cacheTime: 10 * 60 * 1000,\r\n      retry: 1,\r\n    },\r\n  },\r\n});\r\n\r\nconst ReviewPage = () => {\r\n  const navigate = useNavigate();\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // 复习提醒相关状态\r\n  const [reviewThreshold, setReviewThreshold] = useState(7);\r\n  const [reviewQuestions, setReviewQuestions] = useState([]);\r\n  const [showReviewSettings, setShowReviewSettings] = useState(false);\r\n\r\n  // 用户状态\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  // 检查用户登录状态\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n    \r\n    if (user) {\r\n      initializeData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const initializeData = async () => {\r\n    try {\r\n      const questionsData = await getAllQuestions();\r\n      setQuestions(questionsData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 计算需要复习的题目\r\n  useEffect(() => {\r\n    const calculateReviewQuestions = () => {\r\n      const now = new Date();\r\n      const thresholdMs = reviewThreshold * 24 * 60 * 60 * 1000;\r\n      \r\n      const needReview = questions.filter(question => {\r\n        const lastReviewed = new Date(question.updatedAt || question.createdAt);\r\n        const timeDiff = now - lastReviewed;\r\n        return timeDiff >= thresholdMs;\r\n      }).sort((a, b) => {\r\n        return new Date(a.updatedAt || a.createdAt) - new Date(b.updatedAt || b.createdAt);\r\n      });\r\n      \r\n      setReviewQuestions(needReview);\r\n    };\r\n\r\n    if (questions.length > 0) {\r\n      calculateReviewQuestions();\r\n    }\r\n  }, [questions, reviewThreshold]);\r\n\r\n  // 更新题目复习时间\r\n  const handleUpdateQuestionTime = async (questionId) => {\r\n    try {\r\n      console.log('更新题目复习时间:', questionId);\r\n      \r\n      const currentTime = new Date().toISOString();\r\n      \r\n      await updateQuestion(questionId, {\r\n        updatedAt: currentTime\r\n      });\r\n      \r\n      setQuestions(prev => prev.map(q => \r\n        q.id === questionId \r\n          ? { ...q, updatedAt: currentTime }\r\n          : q\r\n      ));\r\n      \r\n      console.log(`题目 ${questionId} 复习时间已更新`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('更新题目时间失败:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleQuestionClick = (questionId) => {\r\n    const question = questions.find(q => q.id === questionId);\r\n    if (question && question.category) {\r\n      navigate(`/category/${question.category.id}`);\r\n    }\r\n  };\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"review-page\">\r\n        <div className=\"auth-required-container\">\r\n          <div className=\"auth-required-icon\">🔐</div>\r\n          <h2>请先登录</h2>\r\n          <p>登录后即可使用复习提醒功能</p>\r\n          <div className=\"auth-required-actions\">\r\n            <button \r\n              onClick={() => {\r\n                window.dispatchEvent(new CustomEvent('showAuthModal', { \r\n                  detail: { tab: 'login' } \r\n                }));\r\n              }}\r\n              className=\"login-btn primary\"\r\n            >\r\n              🚀 立即登录\r\n            </button>\r\n            <button \r\n              onClick={() => {\r\n                window.dispatchEvent(new CustomEvent('showAuthModal', { \r\n                  detail: { tab: 'register' } \r\n                }));\r\n              }}\r\n              className=\"login-btn secondary\"\r\n            >\r\n              📝 注册账号\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"review-page\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载复习数据中...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"review-page\">\r\n        <div className=\"error-container\">\r\n          <h2>加载失败</h2>\r\n          <p>{error}</p>\r\n          <button onClick={() => window.location.reload()} className=\"retry-btn\">\r\n            重试\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <div className=\"review-page\">\r\n        <header className=\"review-hero-section\">\r\n          <div className=\"hero-content\">\r\n            <div className=\"user-welcome\">\r\n              <h1 className=\"hero-title\">📚 复习提醒</h1>\r\n              <p className=\"hero-subtitle\">\r\n                智能管理您的学习进度，{reviewQuestions.length > 0 ? \r\n                  `有 ${reviewQuestions.length} 道题目需要复习` : \r\n                  '所有题目都已及时复习'\r\n                }\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"review-stats-overview\">\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-number\">{questions.length}</div>\r\n                <div className=\"stat-label\">总题目数</div>\r\n              </div>\r\n              <div className=\"stat-card warning\">\r\n                <div className=\"stat-number\">{reviewQuestions.length}</div>\r\n                <div className=\"stat-label\">待复习</div>\r\n              </div>\r\n              <div className=\"stat-card success\">\r\n                <div className=\"stat-number\">{questions.length - reviewQuestions.length}</div>\r\n                <div className=\"stat-label\">已复习</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <ReviewReminderSection\r\n          reviewQuestions={reviewQuestions}\r\n          setReviewQuestions={setReviewQuestions}\r\n          reviewThreshold={reviewThreshold}\r\n          setReviewThreshold={setReviewThreshold}\r\n          showReviewSettings={showReviewSettings}\r\n          setShowReviewSettings={setShowReviewSettings}\r\n          onQuestionClick={handleQuestionClick}\r\n          onUpdateQuestionTime={handleUpdateQuestionTime}\r\n          questions={questions}\r\n        />\r\n\r\n        <footer className=\"review-footer\">\r\n          <div className=\"footer-actions\">\r\n            <button \r\n              onClick={() => navigate('/')}\r\n              className=\"back-to-home-btn\"\r\n            >\r\n              ← 返回首页\r\n            </button>\r\n            <div className=\"footer-info\">\r\n              基于间隔重复原理，帮助您高效记忆\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n\r\nexport default ReviewPage;","// src/components/PWAInstallPrompt.jsx\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst PWAInstallPrompt = () => {\r\n  const [deferredPrompt, setDeferredPrompt] = useState(null);\r\n  const [showPrompt, setShowPrompt] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleBeforeInstallPrompt = (e) => {\r\n      // 阻止默认的安装提示\r\n      e.preventDefault();\r\n      // 保存事件以便后续使用\r\n      setDeferredPrompt(e);\r\n      setShowPrompt(true);\r\n    };\r\n\r\n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\r\n    };\r\n  }, []);\r\n\r\n  const handleInstallClick = async () => {\r\n    if (!deferredPrompt) return;\r\n\r\n    // 显示安装提示\r\n    deferredPrompt.prompt();\r\n    \r\n    // 等待用户选择\r\n    const { outcome } = await deferredPrompt.userChoice;\r\n    \r\n    if (outcome === 'accepted') {\r\n      console.log('用户接受了安装');\r\n    } else {\r\n      console.log('用户拒绝了安装');\r\n    }\r\n    \r\n    setDeferredPrompt(null);\r\n    setShowPrompt(false);\r\n  };\r\n\r\n  const handleDismiss = () => {\r\n    setDeferredPrompt(null);\r\n    setShowPrompt(false);\r\n  };\r\n\r\n  if (!showPrompt) return null;\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      bottom: '20px',\r\n      right: '20px',\r\n      background: 'white',\r\n      padding: '16px',\r\n      borderRadius: '8px',\r\n      boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\r\n      zIndex: 1000,\r\n      maxWidth: '300px'\r\n    }}>\r\n      <h4>安装应用</h4>\r\n      <p>将此应用安装到您的设备上以获得更好的体验</p>\r\n      <div style={{ display: 'flex', gap: '8px', marginTop: '12px' }}>\r\n        <button \r\n          onClick={handleInstallClick}\r\n          style={{\r\n            background: '#007bff',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '8px 16px',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          安装\r\n        </button>\r\n        <button \r\n          onClick={handleDismiss}\r\n          style={{\r\n            background: 'transparent',\r\n            border: '1px solid #ccc',\r\n            padding: '8px 16px',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          稍后\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PWAInstallPrompt;","// pages/OfflineQuestionsPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { cacheService } from '../services/cacheService';\r\nimport './OfflineQuestionsPage.css';\r\n\r\n// 临时内联组件，避免依赖问题\r\nconst OfflineQuestionDetailCard = ({ \r\n  questionId, \r\n  onBack,\r\n  onNavigateToQuestion \r\n}) => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [offlineQuestions, setOfflineQuestions] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    loadOfflineQuestions();\r\n  }, [questionId]);\r\n\r\n  const loadOfflineQuestions = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const cacheData = await cacheService.getCachedQuestions();\r\n      const questions = cacheData.questions || [];\r\n      \r\n      setOfflineQuestions(questions);\r\n      \r\n      // 查找当前题目\r\n      let targetQuestion = null;\r\n      let targetIndex = 0;\r\n      \r\n      if (questionId) {\r\n        // 通过 ID 查找\r\n        targetQuestion = questions.find(q => q.id === questionId);\r\n        targetIndex = questions.findIndex(q => q.id === questionId);\r\n      } else {\r\n        // 没有指定 ID，显示第一题\r\n        targetQuestion = questions[0] || null;\r\n        targetIndex = 0;\r\n      }\r\n      \r\n      if (targetQuestion) {\r\n        setCurrentQuestion(targetQuestion);\r\n        setCurrentIndex(targetIndex);\r\n      } else {\r\n        setError('未找到该题目或题目不在缓存中');\r\n      }\r\n    } catch (error) {\r\n      console.error('加载离线题目失败:', error);\r\n      setError('加载离线题目失败: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 导航到上一题\r\n  const goToPrevious = () => {\r\n    if (currentIndex > 0) {\r\n      const newIndex = currentIndex - 1;\r\n      setCurrentIndex(newIndex);\r\n      setCurrentQuestion(offlineQuestions[newIndex]);\r\n      \r\n      // 通知父组件 URL 变化\r\n      if (onNavigateToQuestion) {\r\n        onNavigateToQuestion(offlineQuestions[newIndex].id);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 导航到下一题\r\n  const goToNext = () => {\r\n    if (currentIndex < offlineQuestions.length - 1) {\r\n      const newIndex = currentIndex + 1;\r\n      setCurrentIndex(newIndex);\r\n      setCurrentQuestion(offlineQuestions[newIndex]);\r\n      \r\n      // 通知父组件 URL 变化\r\n      if (onNavigateToQuestion) {\r\n        onNavigateToQuestion(offlineQuestions[newIndex].id);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"offline-detail-container\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载离线题目...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"offline-detail-container\">\r\n        <div className=\"error-container\">\r\n          <div className=\"error-icon\">❌</div>\r\n          <h3>加载失败</h3>\r\n          <p>{error}</p>\r\n          <button onClick={onBack} className=\"back-btn\">\r\n            返回列表\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!currentQuestion) {\r\n    return (\r\n      <div className=\"offline-detail-container\">\r\n        <div className=\"empty-state\">\r\n          <div className=\"empty-icon\">📭</div>\r\n          <h3>题目不存在</h3>\r\n          <p>该题目可能已被删除或不在缓存中</p>\r\n          <button onClick={onBack} className=\"back-btn\">\r\n            返回列表\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"offline-detail-container\">\r\n      {/* 离线模式头部 */}\r\n      <div className=\"offline-detail-header\">\r\n        <div className=\"header-left\">\r\n          <button onClick={onBack} className=\"back-button\">\r\n            ← 返回\r\n          </button>\r\n          <div className=\"offline-badge\">离线模式</div>\r\n        </div>\r\n        \r\n        <div className=\"header-center\">\r\n          <h3>题目详情</h3>\r\n          <span className=\"question-counter\">\r\n            {currentIndex + 1} / {offlineQuestions.length}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"header-right\">\r\n          <button \r\n            onClick={goToPrevious}\r\n            disabled={currentIndex === 0}\r\n            className=\"nav-button\"\r\n          >\r\n            ← 上一题\r\n          </button>\r\n          <button \r\n            onClick={goToNext}\r\n            disabled={currentIndex === offlineQuestions.length - 1}\r\n            className=\"nav-button\"\r\n          >\r\n            下一题 →\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 离线模式提示 */}\r\n      <div className=\"offline-notice\">\r\n        <div className=\"notice-icon\">📶</div>\r\n        <div className=\"notice-content\">\r\n          <strong>离线模式</strong>\r\n          <span>当前处于离线状态，部分功能受限</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 简化版题目详情显示 */}\r\n      <div className=\"question-card-wrapper\">\r\n        <div className=\"offline-question-card\">\r\n          <div className=\"question-header\">\r\n            <h2 className=\"question-title\">{currentQuestion.title}</h2>\r\n            <div className=\"question-meta\">\r\n              <span \r\n                className=\"difficulty-badge\"\r\n                style={{ backgroundColor: getDifficultyColor(currentQuestion.difficulty) }}\r\n              >\r\n                {getDifficultyText(currentQuestion.difficulty)}\r\n              </span>\r\n              <span className=\"category-tag\">\r\n                {currentQuestion.category?.name || '未分类'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"question-content\">\r\n            <div className=\"answer-section\">\r\n              <h4>详细答案</h4>\r\n              <div className=\"answer-text\">\r\n                {currentQuestion.detailedAnswer || currentQuestion.oralAnswer || '暂无答案'}\r\n              </div>\r\n            </div>\r\n\r\n            {currentQuestion.code && (\r\n              <div className=\"code-section\">\r\n                <h4>代码</h4>\r\n                <pre className=\"code-block\">\r\n                  <code>{currentQuestion.code}</code>\r\n                </pre>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 底部导航 */}\r\n      <div className=\"offline-detail-footer\">\r\n        <button \r\n          onClick={goToPrevious}\r\n          disabled={currentIndex === 0}\r\n          className=\"footer-nav-button\"\r\n        >\r\n          ← 上一题\r\n        </button>\r\n        \r\n        <div className=\"progress-info\">\r\n          <div className=\"progress-bar\">\r\n            <div \r\n              className=\"progress-fill\"\r\n              style={{\r\n                width: `${((currentIndex + 1) / offlineQuestions.length) * 100}%`\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <span>进度: {currentIndex + 1} / {offlineQuestions.length}</span>\r\n        </div>\r\n        \r\n        <button \r\n          onClick={goToNext}\r\n          disabled={currentIndex === offlineQuestions.length - 1}\r\n          className=\"footer-nav-button\"\r\n        >\r\n          下一题 →\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 工具函数\r\nconst getDifficultyColor = (difficulty) => {\r\n  switch (difficulty) {\r\n    case 'easy': return '#52c41a';\r\n    case 'medium': return '#faad14';\r\n    case 'hard': return '#f5222d';\r\n    default: return '#666';\r\n  }\r\n};\r\n\r\nconst getDifficultyText = (difficulty) => {\r\n  switch (difficulty) {\r\n    case 'easy': return '简单';\r\n    case 'medium': return '中等';\r\n    case 'hard': return '困难';\r\n    default: return difficulty;\r\n  }\r\n};\r\n\r\nconst OfflineQuestionsPage = () => {\r\n  const { categoryName, questionId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [offlineQuestions, setOfflineQuestions] = useState([]);\r\n  const [filteredQuestions, setFilteredQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [viewMode, setViewMode] = useState('list'); // 'list' 或 'detail'\r\n\r\n  useEffect(() => {\r\n    loadOfflineData();\r\n  }, [categoryName, questionId]);\r\n\r\n  const loadOfflineData = async () => {\r\n    try {\r\n      const cacheData = await cacheService.getCachedQuestions();\r\n      const questions = cacheData.questions || [];\r\n      \r\n      setOfflineQuestions(questions);\r\n      \r\n      // 根据分类过滤题目\r\n      if (categoryName && categoryName !== 'all') {\r\n        const filtered = questions.filter(q => \r\n          q.category?.name === categoryName || '未分类' === categoryName\r\n        );\r\n        setFilteredQuestions(filtered);\r\n      } else {\r\n        setFilteredQuestions(questions);\r\n      }\r\n\r\n      // 检查是否直接进入详情模式\r\n      if (questionId) {\r\n        setViewMode('detail');\r\n      }\r\n    } catch (error) {\r\n      console.error('加载离线题目失败:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleQuestionClick = (question) => {\r\n    setViewMode('detail');\r\n    navigate(`/offline/questions/${question.id}`);\r\n  };\r\n\r\n  const handleBackToList = () => {\r\n    setViewMode('list');\r\n    navigate('/offline/questions');\r\n  };\r\n\r\n  const handleNavigateToQuestion = (newQuestionId) => {\r\n    navigate(`/offline/questions/${newQuestionId}`);\r\n  };\r\n\r\n  // 详情视图\r\n  if (viewMode === 'detail') {\r\n    return (\r\n      <OfflineQuestionDetailCard \r\n        questionId={questionId}\r\n        onBack={handleBackToList}\r\n        onNavigateToQuestion={handleNavigateToQuestion}\r\n      />\r\n    );\r\n  }\r\n\r\n  // 列表视图\r\n  if (loading) {\r\n    return (\r\n      <div className=\"offline-page\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载离线数据...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (filteredQuestions.length === 0) {\r\n    return (\r\n      <div className=\"offline-page\">\r\n        <div className=\"empty-state\">\r\n          <div className=\"empty-icon\">📦</div>\r\n          <h3>暂无离线题目</h3>\r\n          <p>当前没有缓存的题目数据，请连接网络后缓存题目</p>\r\n          <button \r\n            onClick={() => window.history.back()}\r\n            className=\"back-btn\"\r\n          >\r\n            返回\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"offline-page\">\r\n      <div className=\"offline-header\">\r\n        <button \r\n          onClick={() => window.history.back()}\r\n          className=\"back-button\"\r\n        >\r\n          ← 返回主页\r\n        </button>\r\n        <h2>📦 离线题目</h2>\r\n        {categoryName && categoryName !== 'all' && (\r\n          <p>分类: {categoryName}</p>\r\n        )}\r\n        <div className=\"offline-stats\">\r\n          共 {filteredQuestions.length} 道题目 • 离线模式\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"offline-actions\">\r\n        <div className=\"view-options\">\r\n          <span>排序方式:</span>\r\n          <select className=\"sort-select\">\r\n            <option value=\"default\">默认顺序</option>\r\n            <option value=\"difficulty\">按难度</option>\r\n            <option value=\"title\">按标题</option>\r\n          </select>\r\n        </div>\r\n        \r\n        <div className=\"cache-info\">\r\n          缓存时间: {new Date().toLocaleString()}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"offline-questions-list\">\r\n        {filteredQuestions.map((question, index) => (\r\n          <div\r\n            key={question.id || index}\r\n            className=\"offline-question-card\"\r\n            onClick={() => handleQuestionClick(question)}\r\n          >\r\n            <div className=\"question-card-header\">\r\n              <h4 className=\"question-title\">{question.title}</h4>\r\n              <span \r\n                className=\"difficulty-badge\"\r\n                style={{ \r\n                  backgroundColor: getDifficultyColor(question.difficulty) \r\n                }}\r\n              >\r\n                {getDifficultyText(question.difficulty)}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className=\"question-card-body\">\r\n              <p className=\"question-preview\">\r\n                {getAnswerPreview(question)}\r\n              </p>\r\n              \r\n              <div className=\"question-meta\">\r\n                <span className=\"category-tag\">\r\n                  {question.category?.name || '未分类'}\r\n                </span>\r\n                <span className=\"offline-tag\">离线</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"question-card-footer\">\r\n              <span className=\"question-date\">\r\n                创建: {new Date(question.createdAt).toLocaleDateString()}\r\n              </span>\r\n              <button className=\"view-detail-btn\">\r\n                查看详情 →\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getAnswerPreview = (question) => {\r\n  const answer = question.oralAnswer || question.detailedAnswer || '';\r\n  const preview = answer.substring(0, 120).replace(/[#*`]/g, '');\r\n  return preview + (answer.length > 120 ? '...' : '');\r\n};\r\n\r\nexport default OfflineQuestionsPage;","// App.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport HomePage from './pages/HomePage';\r\nimport InitPage from './components/InitPage';\r\nimport CategoryDetailPage from './pages/CategoryDetailPage';\r\nimport TestPage from './pages/TestPage';\r\nimport Navigation from './components/Navigation';\r\nimport AuthModal from './components/AuthModal';\r\nimport UserSettingsModal from './components/UserSettingsModal';\r\nimport ReviewPage from './pages/ReviewPage';\r\nimport './App.css';\r\nimport PWAInstallPrompt from './components/PWAInstallPrompt';\r\nimport OfflineQuestionsPage from './pages/OfflineQuestionsPage';\r\n\r\n\r\nconsole.log('Dialogflow Config:', {\r\n  projectId: process.env.REACT_APP_DIALOGFLOW_PROJECT_ID,\r\n  clientEmail: process.env.REACT_APP_DIALOGFLOW_CLIENT_EMAIL,\r\n  hasPrivateKey: !!process.env.REACT_APP_DIALOGFLOW_PRIVATE_KEY\r\n});\r\n\r\n// 在组件外部创建 QueryClient 实例\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      refetchOnWindowFocus: false,\r\n      retry: 1,\r\n      staleTime: 5 * 60 * 1000, // 5分钟\r\n      gcTime: 10 * 60 * 1000, // 缓存时间10分钟\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const [isAuthModalOpen, setIsAuthModalOpen] = useState(false);\r\n  const [authModalTab, setAuthModalTab] = useState('login');\r\n  const [isUserSettingsOpen, setIsUserSettingsOpen] = useState(false);\r\n  const [userSettingsTab, setUserSettingsTab] = useState('profile');\r\n\r\n  // 监听自定义事件\r\n  useEffect(() => {\r\n    const handleShowAuthModal = (event) => {\r\n      const tab = event.detail?.tab || 'login';\r\n      setAuthModalTab(tab);\r\n      setIsAuthModalOpen(true);\r\n    };\r\n\r\n    const handleShowUserSettings = (event) => {\r\n      const tab = event.detail?.tab || 'profile';\r\n      setUserSettingsTab(tab);\r\n      setIsUserSettingsOpen(true);\r\n    };\r\n\r\n    window.addEventListener('showAuthModal', handleShowAuthModal);\r\n    window.addEventListener('showUserSettings', handleShowUserSettings);\r\n\r\n    return () => {\r\n      window.removeEventListener('showAuthModal', handleShowAuthModal);\r\n      window.removeEventListener('showUserSettings', handleShowUserSettings);\r\n    };\r\n  }, []);\r\n\r\n  const handleShowAuthModal = (tab = 'login') => {\r\n    setAuthModalTab(tab);\r\n    setIsAuthModalOpen(true);\r\n  };\r\n\r\n  // 添加认证成功回调\r\n  const handleAuthSuccess = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <Router>\r\n        <Navigation onShowAuthModal={handleShowAuthModal} />\r\n        \r\n        <Routes>\r\n          <Route path=\"/\" element={<HomePage />} />\r\n          <Route path=\"/init\" element={<InitPage />} />\r\n          <Route path=\"/category/:categoryId\" element={<CategoryDetailPage />} />\r\n          <Route path=\"/test\" element={<TestPage />} />\r\n          <Route path=\"/review\" element={<ReviewPage />} />\r\n          <Route path=\"/offline/questions\" element={<OfflineQuestionsPage />} />\r\n<Route path=\"/offline/questions/:questionId\" element={<OfflineQuestionsPage />} />\r\n<Route path=\"/offline/category/:categoryName\" element={<OfflineQuestionsPage />} />\r\n<Route path=\"/offline/category/:categoryName/question/:questionId\" element={<OfflineQuestionsPage />} />\r\n        </Routes>\r\n\r\n        <AuthModal \r\n          isOpen={isAuthModalOpen}\r\n          onClose={() => setIsAuthModalOpen(false)}\r\n          defaultTab={authModalTab}\r\n          onAuthSuccess={handleAuthSuccess}\r\n        />\r\n\r\n        <UserSettingsModal \r\n          isOpen={isUserSettingsOpen}\r\n          onClose={() => setIsUserSettingsOpen(false)}\r\n        />\r\n                <PWAInstallPrompt />\r\n\r\n      </Router>\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import 'core-js/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// 注册 Service Worker\r\nif ('serviceWorker' in navigator) {\r\n  window.addEventListener('load', async () => {\r\n    try {\r\n      // 先检查 sw.js 文件是否存在\r\n      const response = await fetch('/sw.js');\r\n      if (!response.ok) {\r\n        throw new Error(`sw.js not found: ${response.status}`);\r\n      }\r\n      \r\n      const contentType = response.headers.get('content-type');\r\n      if (!contentType || !contentType.includes('javascript')) {\r\n        throw new Error(`Invalid MIME type: ${contentType}`);\r\n      }\r\n      \r\n      // 文件存在且类型正确，进行注册\r\n      const registration = await navigator.serviceWorker.register('/sw.js');\r\n      console.log('SW registered successfully: ', registration);\r\n    } catch (error) {\r\n      console.log('SW registration failed: ', error);\r\n      console.log('Error details:', error.message);\r\n    }\r\n  });\r\n}"],"names":["PROJECT_ID","process","PRIVATE_KEY","replace","getAccessToken","async","jwt","now","Math","floor","Date","payload","iss","scope","aud","exp","iat","signatureInput","btoa","JSON","stringify","alg","typ","privateKey","crypto","subtle","importKey","str2ab","atob","name","hash","signature","sign","TextEncoder","encode","String","fromCharCode","Uint8Array","generateJWT","response","fetch","method","headers","body","ok","Error","status","json","access_token","error","console","extractActions","queryResult","actions","parameters","log","intent","displayName","category","categoryName","push","type","target","label","buttonId","toLowerCase","detectIntentWithActions","text","sessionId","accessToken","sessionPath","request","queryInput","languageCode","API_URL","data","fulfillmentText","hasFulfillmentText","responseText","result","quickReplies","str","buf","ArrayBuffer","length","bufView","i","charCodeAt","userId","Chatbox","onNavigate","onTriggerCategory","categories","questions","currentUser","isOpen","setIsOpen","useState","messages","setMessages","inputText","setInputText","isTyping","setIsTyping","messagesEndRef","useRef","useEffect","sendWelcomeMessage","DialogflowService","id","welcomeMessage","isBot","timestamp","fallbackMessage","getUsername","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","prev","botResponse","processMessage","botMessage","_jsxs","_Fragment","children","className","onClick","title","_jsx","clearConversation","map","message","split","line","toLocaleTimeString","hour","minute","reply","index","setTimeout","action","confirmMessage","searchMessage","handleFunctionAction","warn","handleActionClick","ref","value","onChange","e","onKeyPress","key","shiftKey","preventDefault","placeholder","rows","disabled","offlineService","constructor","this","isOnline","setupOnlineListeners","window","addEventListener","dispatchEvent","navigator","onLine","isOnlineMode","shouldUseOfflineData","simulateNetworkRequest","Promise","resolve","reject","eventName","CustomEvent","detail","callback","removeEventListener","initAV","AV","appId","appKey","serverURL","QueryOptions","SORT_BY_NAME","SORT_BY_QUESTION_COUNT","SORT_BY_UPDATED_AT","cacheConfig","ttl","categoryDetails","Map","categoryDetailTtl","questionCounts","questionCountTtl","OFFLINE_CATEGORIES_KEY","isCacheValid","getOfflineCategories","cached","localStorage","getItem","parse","total","page","pageSize","saveCategoriesToOffline","setItem","getCategoriesQuestionCounts","counts","forEach","cat","categoryIds","categoryId","uncachedCategoryIds","get","count","countPromises","categoryPointer","createWithoutData","questionQuery","equalTo","countResults","all","set","batchError","categoryPointers","containedIn","select","find","question","fallbackError","getAllCategories","query","include","descending","description","questionCount","undefined","createdAt","updatedAt","createdBy","includes","getCategories","options","isDefaultQuery","sortBy","SORT_BY_CREATED_AT","skip","limit","categoriesWithCount","createCategory","extend","categoryData","acl","setReadAccess","setWriteAccess","setPublicReadAccess","setACL","save","clear","cacheService","isSupported","checkSupport","cacheLimit","cacheVersion","cacheExpiry","CACHE_KEYS","SW_CACHE","LOCAL_STORAGE","FALLBACK","META","cacheState","swAvailable","localStorageAvailable","lastSync","strategy","init","checkSWCacheSupport","checkLocalStorageSupport","determineCacheStrategy","sw","ls","testCache","caches","open","put","Request","Response","delete","testKey","removeItem","setCacheLimit","updateCacheMetadata","getCacheLimit","cacheQuestions","cacheData","slice","version","min","cachePromises","cacheToServiceWorker","cacheToLocalStorage","allSettled","cache","cacheRequest","cacheResponse","fallbackData","getCachedQuestions","getEmptyCacheData","getFromServiceWorker","getFromLocalStorage","isCacheExpired","clearCache","match","fallback","getCacheStatus","getDefaultCacheStatus","isExpired","metadata","getCacheMetadata","supported","hasCache","lsAvailable","lastUpdated","dataInfo","clearPromises","catch","Object","values","getCacheConfig","maxLimit","minLimit","defaultLimit","expiryDays","resetToDefault","testCachePerformance","testData","Array","from","_","answer","startTime","performance","retrievedData","endTime","success","duration","耗时","toFixed","策略","数据量","service","DifficultyOptions","ProficiencyOptions","getCategoryId","objectId","createCategoryPointer","batchUpdateQueue","batchUpdateTimer","scheduleBatchUpdate","change","clearTimeout","updates","categoryUpdates","updatePromises","entries","totalChange","categoryQuery","freshCategory","currentCount","newCount","max","batchUpdateCategoryCounts","formatQuestionResponse","detailedAnswer","oralAnswer","code","url","tags","difficulty","proficiency","appearanceLevel","lastReviewedAt","delay","ms","checkUserAuth","checkOfflineMode","operation","createQuestion","questionData","updateCategoryCountImmediately","deleteQuestion","questionId","first","destroy","getAllQuestions","allQuestions","hasMore","batchResults","题目总数","批次","最新题目","q","updateQuestion","updateData","oldCategory","keys","newCategoryId","oldCategoryId","updatedQuestion","OfflineIndicator","setIsOnline","cacheStatus","setCacheStatus","handleOnline","handleOffline","interval","setInterval","clearInterval","CacheManagementTab","onCacheUpdate","navigate","useNavigate","syncing","setSyncing","cacheSettings","setCacheSettings","autoCache","cacheStrategy","tempCacheLimit","setTempCacheLimit","showSettings","setShowSettings","debouncedCacheLimit","useDebounce","debouncedValue","setDebouncedValue","handler","throttledCacheLimit","useThrottle","throttledValue","setThrottledValue","lastRan","handleManualCache","useCallback","newStatus","alert","handleClearCache","handleSliderChange","CacheSettingsModal","htmlFor","step","parseInt","onInput","progress","style","setProperty","ReviewReminderSection","reviewQuestions","setReviewQuestions","reviewThreshold","setReviewThreshold","showReviewSettings","setShowReviewSettings","onQuestionClick","onUpdateQuestionTime","selectedUrgency","setSelectedUrgency","searchTerm","setSearchTerm","updatingQuestions","setUpdatingQuestions","Set","setCurrentUser","formatTimeAgo","date","diffMs","diffDays","diffWeeks","diffMonths","getUrgencyLevel","lastReviewed","daysAgo","getUrgencyText","urgency","getUrgencyDaysDescription","handleQuestionClick","categoryUrl","history","pushState","PopStateEvent","location","href","filteredQuestions","filter","matchesSearch","questionsByUrgency","high","medium","low","getProgressPercentage","totalQuestions","reviewedQuestions","round","width","days","backgroundColor","urgencyColor","getUrgencyColor","isUpdating","has","substring","tag","tagIndex","stopPropagation","add","newList","errorMessage","newSet","handleReviewNow","handlePostpone","QuestionItem","React","getDifficultyColor","color","getDifficultyText","CalendarTooltip","dayData","position","onClose","isVisible","tooltipRef","queryClient","useQueryClient","cachedQuestions","setCachedQuestions","itemHeights","setItemHeights","questionsData","isLoading","useQuery","queryKey","toISOString","join","queryFn","missingQuestionIds","getQueryData","questionIds","batches","results","batch","getQuestionsBatch","setQueryData","enabled","staleTime","cacheTime","retry","retryDelay","parentRef","virtualizer","useVirtualizer","getScrollElement","estimateSize","overscan","handleClickOutside","event","contains","document","handleEscape","virtualQuestions","getVirtualItems","left","x","innerWidth","top","y","transform","getDate","toLocaleDateString","weekday","year","month","day","height","viewBox","fill","d","overflow","getTotalSize","virtualRow","size","start","Documents","selectedDoc","setSelectedDoc","currentQuoteIndex","setCurrentQuoteIndex","techQuotes","author","prevIndex","documents","icon","doc","filteredDocs","handleCloseModal","prevQuote","nextQuote","categoryDocs","handleDocClick","handleVisitSite","CommunityService","getPosts","sortOrder","keyword","authorId","titleQuery","contentQuery","or","createPost","postData","post","content","isPublic","getPostById","increment","getComments","postId","ascending","addComment","parentId","comment","parent","toggleLike","Like","existingLike","postObj","liked","like","getPopularTags","posts","tagCount","sort","a","b","CreatePostModal","onSuccess","formData","setFormData","submitting","setSubmitting","errors","setErrors","charCount","setCharCount","suggestedTags","setSuggestedTags","textareaRef","maxLengths","popularTags","scrollHeight","matchedTags","handleInputChange","field","onSubmit","validateForm","newErrors","tagsArray","newPost","submit","getTitleCharCountColor","ratio","maxLength","getContentCharCountColor","currentTags","t","newTags","handleTagSuggestionClick","checked","SearchBar","onSearch","setKeyword","isFocused","setIsFocused","showSuggestions","setShowSuggestions","searchInputRef","timeoutId","handleSuggestionClick","suggestion","handleSearch","onFocus","handleFocus","onBlur","handleBlur","onKeyDown","blur","handleClear","focus","TagCloud","onTagClick","maxTags","setTags","loading","setLoading","selectedTag","setSelectedTag","defaultTags","loadPopularTags","tagsWithColors","tagData","getTagColor","colors","handleClearFilter","maxCount","totalPosts","reduce","sum","getTagSize","sizes","isSelected","handleTagClick","CommunityStats","stats","setStats","totalComments","totalLikes","activeUsers","todayPosts","trendingTags","setLastUpdated","loadStats","today","setHours","greaterThanOrEqualTo","weekAgo","setDate","distinct","postQuery","formatNumber","num","toString","formatTime","diffMins","diffHours","CommentItem","onReply","onUpdate","likes","setLikes","isLiked","setIsLiked","showActions","setShowActions","editing","setEditing","editContent","setEditContent","saving","setSaving","isAuthor","handleReplyClick","onMouseEnter","onMouseLeave","src","alt","handleEdit","confirm","handleCancelEdit","dangerouslySetInnerHTML","__html","CommentSection","comments","setComments","newComment","setNewComment","setSortBy","replyingTo","setReplyingTo","loadComments","sortedComments","handleSubmitComment","showSuccessMessage","handleReply","getCommentCountText","cancelReply","ctrlKey","metaKey","PostCard","showComments","setShowComments","views","setViews","borderColor","handleToggleComments","CommunityPage","activeTab","setActiveTab","setPosts","allPosts","setAllPosts","showCreateModal","setShowCreateModal","searchKeyword","setSearchKeyword","pagination","setPagination","loadPosts","filtered","reset","currentPage","postsData","newAllPosts","getSearchStats","matchCount","handleLoadMore","QueryClient","defaultOptions","queries","HomePage","setCategories","setQuestions","setError","syncMessage","setSyncMessage","selectedMonth","setSelectedMonth","showAddCategory","setShowAddCategory","newCategoryName","setNewCategoryName","newCategoryDescription","setNewCategoryDescription","addingCategory","setAddingCategory","showDeleteConfirm","setShowDeleteConfirm","categoryToDelete","setCategoryToDelete","deletingCategory","setDeletingCategory","hoveredDay","setHoveredDay","tooltipPosition","setTooltipPosition","tooltipVisible","setTooltipVisible","calendarRef","offlineQuestions","setOfflineQuestions","showOfflineMode","setShowOfflineMode","swStatus","setSwStatus","activated","categoryRefs","preCacheQuestions","setShowCacheSettings","showCacheSettings","loadOfflineData","user","initializeData","handleCacheUpdated","handleSwActivated","timer","handleManualRefresh","handleQuestionCreated","handleAddCategory","newCategory","handleDeleteClick","handleConfirmDelete","deletedQuestions","destroyAll","clearCategoryCacheById","deleteCategory","handleCancelDelete","handleUpdateQuestionTime","currentTime","errorStack","stack","handleGlobalError","calculateReviewQuestions","thresholdMs","needReview","categoriesData","分类数据","题目数据","模式","err","cacheError","filteredCategories","useMemo","categoryStats","totalCategories","categoriesWithQuestions","totalQuestionsFromCategories","分类总数","基于分类的题目总数","基于所有题目的题目总数","差异","abs","有题目的分类数","对象","各分类详情","分类名称","服务层题目数","前端计算题目数","是否匹配","getDayQuestions","dateStr","getDayColor","getMonthlyCalendarData","monthStart","getFullYear","getMonth","monthEnd","dateCounts","questionDate","calendarData","currentDate","dayQuestions","isToday","handleDayMouseEnter","calendarRect","getBoundingClientRect","dayRect","currentTarget","handleDayMouseLeave","querySelector","handleTooltipClose","navigateMonth","direction","newDate","setMonth","getMonthStats","monthData","daysWithQuestions","maxDaily","getCategoryChartData","categoryMap","fullName","percentage","getDifficultyData","difficultyMap","getActiveDays","toDateString","handleCategoryClick","navigateToOfflineCategory","getProgressWidth","c","defaultColors","chartData","difficultyData","activeDays","monthStats","monthName","renderOfflineCategories","offlineCategories","reload","charAt","QueryClientProvider","client","renderContent","autoFocus","actualQuestionCount","displayCount","el","ResponsiveContainer","PieChart","Pie","cx","cy","labelLine","outerRadius","dataKey","entry","Cell","Tooltip","formatter","Legend","BarChart","CartesianGrid","strokeDasharray","XAxis","YAxis","Bar","scrollTo","handleTriggerCategory","targetCategory","catNameLower","searchNameLower","exactMatch","containsMatch","fuzzyMatch","categoryKey","click","looseMatch","tab","CommunityClasses","PostStatusOptions","NotionFieldMapping","createCommunityClasses","Post","createPostClass","Comment","createCommentClass","createLikeClass","Follow","createFollowClass","exists","testPost","setPublicWriteAccess","testComment","testLike","testFollow","generateCommunitySampleData","createSamplePosts","createSampleComments","createSampleLikes","samplePosts","isPinned","random","saved","sampleComments","commentQuery","clearCommunityData","deletedCount","follows","likeQuery","followQuery","syncProblemsFromNotion","REACT_APP_NOTION_TOKEN","REACT_APP_NOTION_DATABASE_ID","run","cloudError","syncWithClientVersion","synced","mode","parseNotionPage","properties","getNotionPropertyValue","completionTime","isArray","notionPageId","notionUrl","lastEditedTime","last_edited_time","isActive","fieldNames","expectedType","fieldName","property","rich_text","multi_select","item","number","saveNotionProblemsToLeanCloud","Question","savedCount","problemData","problems","findOrCreateCategory","updateAllCategoryCounts","Category","checkNotionConnection","connected","generateSampleData","clearAllData","createCategories","createQuestions","updateCategoryCounts","categoriesCount","questionsCount","categoryIndex","deletedCategories","checkDataStatus","categoryCount","hasData","defineNotionCloudFunctions","define","Client","require","notion","auth","NOTION_INTEGRATION_TOKEN","databases","database_id","NOTION_DATABASE_ID","sorts","syncedCount","fetched","database","retrieve","plain_text","InitPage","setMessage","dataStatus","setDataStatus","notionStatus","setNotionStatus","syncResult","setSyncResult","communityStatus","setCommunityStatus","handleCheckStatus","handleCheckCommunityStatus","postCount","commentCount","likeCount","followCount","rel","problem","failedTables","QuestionForm","onSave","onCancel","defaultCategoryId","onCategoryChange","images","newTag","setNewTag","loadingCategories","setLoadingCategories","activeAnswerTab","setActiveAnswerTab","uploadingImages","setUploadingImages","fileInputRef","detailedAnswerRef","oralAnswerRef","isEditing","loadCategories","userCategories","总数","用户分类","当前用户","分类详情","handleFiles","files","answerType","imageFiles","file","uploadImage","uploadingId","avFile","savedFile","imageInfo","insertImageMarkdown","markdown","currentText","newText","handleAddTag","renderAnswerTab","hint","img","isUploading","onDragOver","handleDragOver","textarea","classList","onDragLeave","handleDragLeave","remove","onDrop","handleDrop","dataTransfer","setAttribute","triggerFileInput","image","removeImage","imageId","string","URL","isValidUrl","categoryChanged","handleRemoveTag","tagToRemove","display","accept","multiple","getAttribute","handleFileSelect","QuestionDetailCard","onDelete","isExpandedView","onUpdateField","onEdit","showQuestionForm","setShowQuestionForm","editingQuestion","setEditingQuestion","setIsEditing","showFullAnswer","setShowFullAnswer","deleteLoading","setDeleteLoading","editLoading","setEditLoading","localAppearanceLevel","setLocalAppearanceLevel","updatingAppearance","setUpdatingAppearance","showReviewConfirm","setShowReviewConfirm","reviewDays","setReviewDays","confirmingReview","setConfirmingReview","showRemoveReview","setShowRemoveReview","removeDays","setRemoveDays","removingReview","setRemovingReview","getAppearanceLevelColor","level","formatText","lines","elements","inCodeBlock","codeBlockContent","codeLanguage","startsWith","imageMatch","altText","imageUrl","processedLine","listItem","orderedListMatch","parseMarkdown","handleDelete","handleSave","handleCancel","getProficiencyText","新值","newLevel","当前prop值","当前本地状态值","handleAppearanceLevelChange","background","toggleAnswer","formatCode","nextReviewDate","right","bottom","justifyContent","alignItems","zIndex","padding","QuestionAccordion","isExpanded","onToggle","viewMode","isDragging","isDragOver","onDragStart","onDragEnd","canDrag","getDifficultyBorderColor","getDifficultyBackgroundColor","getProficiencyColor","getProficiencyIcon","getAnswerPreview","answerText","draggable","borderLeft","border","CategoryDetailPage","useParams","setCategory","allCategories","setAllCategories","expandedQuestions","setExpandedQuestions","setViewMode","draggingQuestion","setDraggingQuestion","dragOverQuestion","setDragOverQuestion","loadMoreTriggerRef","containerRef","handleScrollToQuestion","questionElement","block","boxShadow","toggleQuestion","loadCategoryInfo","loadAllCategories","formattedQuestions","getCategoryWithQuestions","fetchNextPage","hasNextPage","isFetchingNextPage","refetch","useInfiniteQuery","pageParam","addAscending","addDescending","getQuestionsByCategory","dataLength","nextPage","getNextPageParam","lastPage","allPages","initialPageParam","pages","flatMap","acc","some","sortedQuestions","sorted","localeCompare","difficultyOrder","handleScroll","container","scrollTop","clientHeight","distanceFromBottom","shouldLoad","debouncedScroll","debounce","func","timeout","args","later","observer","IntersectionObserver","isIntersecting","threshold","root","rootMargin","observe","disconnect","deleteQuestionMutation","useMutation","mutationFn","invalidateQueries","onError","updateQuestionMutation","handleAddQuestion","handleEditQuestion","handleDeleteQuestion","questionToDelete","mutate","handleUpdateQuestionField","mutateAsync","handleBack","handleDragEnd","opacity","handleRetry","gap","borderRadius","fontSize","fontWeight","cursor","transition","textDecoration","fontFamily","expandAllQuestions","allQuestionIds","collapseAllQuestions","marginTop","handleManualLoadMore","marginLeft","marginBottom","virtualItem","measureElement","handleDragStart","effectAllowed","setData","dropEffect","targetQuestionId","fromIndex","findIndex","toIndex","newQuestions","movedQuestion","splice","textAlign","fontStyle","handleQuestionCategoryChange","UserService","username","password","email","setUsername","setPassword","setEmail","signUp","logIn","getCurrentUser","UserTestPanel","setTestData","register","nickname","login","checkCurrentUser","updateTestData","section","logOut","required","DataMigrationService","setupAdminUser","getEmail","migrateCategoriesToCurrentUser","doesNotExist","migratedCount","migrated","migrateQuestionsToCurrentUser","performFullMigration","adminUser","categoryResult","questionResult","checkMigrationStatus","orphanCategories","orphanQuestions","migrationNeeded","migrateQuestionCreatedBy","performQuestionMigrationOnly","DataMigrationPanel","migrationStatus","setMigrationStatus","migrationResult","setMigrationResult","TestPage","Navigation","onShowAuthModal","showUserMenu","setShowUserMenu","userMenuRef","handleAvatarUpdate","freshUser","isAuthorizedEmail","UserAvatar","avatar","fallbackText","toUpperCase","avatarUrl","getAvatarUrl","getTime","onLoad","nextSibling","objectFit","objectPosition","Link","to","handleUserMenuToggle","AuthModal","defaultTab","onAuthSuccess","loginUsername","loginPassword","registerUsername","registerEmail","registerPassword","registerConfirmPassword","isWechatLoading","setIsWechatLoading","UserSettingsModal","avatarFile","setAvatarFile","avatarPreview","setAvatarPreview","studyStats","setStudyStats","todayReviewed","profileForm","setProfileForm","bio","passwordForm","setPasswordForm","currentPassword","newPassword","confirmPassword","preferencesForm","setPreferencesForm","theme","language","notifications","emailUpdates","securityForm","setSecurityForm","emailVerified","loadUserData","loadStudyStats","categoriesQuery","questionsQuery","showMessage","formType","reader","FileReader","onload","readAsDataURL","fileData","base64Data","onerror","fileName","mimeType","avatarUrlWithCacheBust","updatedUser","fetchError","requestEmailVerify","updatePassword","minLength","requestPasswordReset","exportData","exportTime","dataStr","dataBlob","Blob","createObjectURL","link","createElement","download","appendChild","removeChild","revokeObjectURL","ReviewPage","PWAInstallPrompt","deferredPrompt","setDeferredPrompt","showPrompt","setShowPrompt","handleBeforeInstallPrompt","maxWidth","prompt","outcome","userChoice","handleDismiss","OfflineQuestionDetailCard","onBack","onNavigateToQuestion","currentQuestion","setCurrentQuestion","currentIndex","setCurrentIndex","loadOfflineQuestions","targetQuestion","targetIndex","goToPrevious","newIndex","goToNext","OfflineQuestionsPage","setFilteredQuestions","handleBackToList","newQuestionId","back","toLocaleString","projectId","clientEmail","hasPrivateKey","refetchOnWindowFocus","gcTime","isAuthModalOpen","setIsAuthModalOpen","authModalTab","setAuthModalTab","isUserSettingsOpen","setIsUserSettingsOpen","userSettingsTab","setUserSettingsTab","handleShowAuthModal","handleShowUserSettings","Router","Routes","Route","path","element","handleAuthSuccess","ReactDOM","getElementById","render","App","contentType","registration","serviceWorker"],"sourceRoot":""}