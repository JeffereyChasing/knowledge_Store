{"version":3,"file":"static/js/main.92afc617.js","mappings":"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","sources":["webpack://bagu/./src/services/dialogflowService.js","webpack://bagu/./src/components/Chatbox.jsx","webpack://bagu/./src/services/categoryService.js","webpack://bagu/./src/services/questionService.js","webpack://bagu/./src/components/ReviewReminderSection.jsx","webpack://bagu/./src/components/CalendarTooltip.jsx","webpack://bagu/./src/components/Documents.jsx","webpack://bagu/./src/services/communityService.js","webpack://bagu/./src/components/community/CreatePostModal.jsx","webpack://bagu/./src/components/community/SearchBar.jsx","webpack://bagu/./src/components/community/TagCloud.jsx","webpack://bagu/./src/components/community/CommunityStats.jsx","webpack://bagu/./src/components/community/CommentItem.jsx","webpack://bagu/./src/components/community/CommentSection.jsx","webpack://bagu/./src/components/community/PostCard.jsx","webpack://bagu/./src/components/community/CommunityPage.jsx","webpack://bagu/./src/pages/HomePage.jsx","webpack://bagu/./src/services/initClasses.js","webpack://bagu/./src/components/InitPage.jsx","webpack://bagu/./src/components/QuestionForm.jsx","webpack://bagu/./src/components/QuestionDetailCard.jsx","webpack://bagu/./src/pages/CategoryDetailPage.jsx","webpack://bagu/./src/services/userService.js","webpack://bagu/./src/components/UserTestPanel.jsx","webpack://bagu/./src/services/dataMigrationService.js","webpack://bagu/./src/components/DataMigrationPanel.jsx","webpack://bagu/./src/pages/TestPage.jsx","webpack://bagu/./src/components/Navigation.jsx","webpack://bagu/./src/components/AuthModal.jsx","webpack://bagu/./src/components/UserSettingsModal.jsx","webpack://bagu/./src/pages/ReviewPage.jsx","webpack://bagu/./src/components/PWAInstallPrompt.jsx","webpack://bagu/./src/App.js","webpack://bagu/./src/index.js"],"sourcesContent":["// src/services/dialogflowService.js\r\nconst PROXY_BASE_URL = 'http://localhost:3001';\r\n\r\nclass DialogflowService {\r\n  constructor() {\r\n    this.baseUrl = PROXY_BASE_URL;\r\n    this.sessions = new Map();\r\n  }\r\n\r\n  // 检查服务器状态\r\n  async checkServerStatus() {\r\n    try {\r\n      console.log('🔍 检查代理服务器状态...');\r\n      const response = await fetch(`${this.baseUrl}/api/health`);\r\n      const data = await response.json();\r\n      console.log('📊 服务器状态:', data);\r\n      return response.ok;\r\n    } catch (error) {\r\n      console.error('❌ 代理服务器未响应:', error.message);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // 发送欢迎消息\r\n  async sendWelcome(userId) {\r\n    console.log('🔄 开始发送欢迎消息...');\r\n    console.log('用户ID:', userId);\r\n    console.log('目标URL:', `${this.baseUrl}/api/dialogflow/welcome`);\r\n\r\n    // 先检查服务器状态\r\n    const isServerRunning = await this.checkServerStatus();\r\n    if (!isServerRunning) {\r\n      console.error('❌ 代理服务器未运行');\r\n      return this.getFallbackWelcome();\r\n    }\r\n\r\n    try {\r\n      console.log('📤 发送欢迎消息请求...');\r\n      \r\n      const requestBody = {\r\n        userId: userId\r\n      };\r\n      console.log('请求体:', requestBody);\r\n\r\n      const response = await fetch(`${this.baseUrl}/api/dialogflow/welcome`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestBody)\r\n      });\r\n\r\n      console.log('📥 收到响应状态:', response.status, response.statusText);\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('❌ HTTP 错误:', response.status, errorText);\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('✅ 欢迎消息响应数据:', data);\r\n      \r\n      if (!data.success) {\r\n        console.warn('⚠️ 欢迎消息返回失败:', data.error);\r\n        return this.getFallbackWelcome();\r\n      }\r\n\r\n      console.log('🎉 欢迎消息成功');\r\n      return {\r\n        text: data.text,\r\n        intent: data.intent,\r\n        success: true\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('💥 欢迎消息请求失败:', error.message);\r\n      console.error('错误堆栈:', error.stack);\r\n      return this.getFallbackWelcome();\r\n    }\r\n  }\r\n\r\n  // 检测意图\r\n  async detectIntent(message, userId) {\r\n    console.log('🔄 开始检测意图...');\r\n    console.log('消息:', message);\r\n    console.log('用户ID:', userId);\r\n\r\n    // 先检查服务器状态\r\n    const isServerRunning = await this.checkServerStatus();\r\n    if (!isServerRunning) {\r\n      console.error('❌ 代理服务器未运行');\r\n      return this.getFallbackResponse(message);\r\n    }\r\n\r\n    try {\r\n      console.log('📤 发送聊天消息请求...');\r\n      \r\n      const requestBody = {\r\n        message: message,\r\n        userId: userId\r\n      };\r\n      console.log('请求体:', requestBody);\r\n\r\n      const response = await fetch(`${this.baseUrl}/api/dialogflow/chat`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestBody)\r\n      });\r\n\r\n      console.log('📥 收到响应状态:', response.status, response.statusText);\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('❌ HTTP 错误:', response.status, errorText);\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('✅ 聊天消息响应数据:', data);\r\n      \r\n      if (!data.success) {\r\n        console.warn('⚠️ 聊天消息返回失败:', data.error);\r\n        return this.getFallbackResponse(message);\r\n      }\r\n\r\n      console.log('🎉 聊天消息成功');\r\n      return {\r\n        text: data.text,\r\n        intent: data.intent,\r\n        confidence: data.confidence,\r\n        parameters: data.parameters,\r\n        success: true\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('💥 聊天消息请求失败:', error.message);\r\n      return this.getFallbackResponse(message);\r\n    }\r\n  }\r\n\r\n  // 回退欢迎消息\r\n  getFallbackWelcome() {\r\n    console.log('🔄 使用回退欢迎消息');\r\n    return {\r\n      text: '👋 你好！我是你的学习助手，我可以帮你：\\n\\n📚 管理学习分类和题目\\n🔍 搜索特定内容\\n🔄 安排复习计划\\n📊 查看学习统计\\n\\n请问需要什么帮助？',\r\n      intent: 'welcome_fallback',\r\n      success: true\r\n    };\r\n  }\r\n\r\n  // 回退响应\r\n  getFallbackResponse(message) {\r\n    console.log('🔄 使用回退响应');\r\n    const msg = message.toLowerCase();\r\n    \r\n    if (msg.includes('分类') || msg.includes('类别')) {\r\n      return {\r\n        text: '📚 正在加载学习分类...',\r\n        intent: 'categories_fallback',\r\n        success: true\r\n      };\r\n    } else if (msg.includes('搜索') || msg.includes('查找') || msg.includes('找题')) {\r\n      return {\r\n        text: '🔍 请告诉我你想搜索什么题目？',\r\n        intent: 'search_fallback',\r\n        success: true\r\n      };\r\n    } else if (msg.includes('复习')) {\r\n      return {\r\n        text: '🔄 开始复习！我会安排合适的学习计划。',\r\n        intent: 'review_fallback',\r\n        success: true\r\n      };\r\n    } else if (msg.includes('统计') || msg.includes('数据')) {\r\n      return {\r\n        text: '📊 正在生成学习统计报告...',\r\n        intent: 'stats_fallback',\r\n        success: true\r\n      };\r\n    } else if (msg.includes('你好') || msg.includes('hello') || msg.includes('hi')) {\r\n      return {\r\n        text: '👋 你好！我是学习助手，可以帮你管理分类、搜索题目、安排复习。',\r\n        intent: 'greeting_fallback',\r\n        success: true\r\n      };\r\n    } else {\r\n      return {\r\n        text: '🤔 我不太明白。你可以问我关于分类、题目、复习或统计的问题。',\r\n        intent: 'general_fallback',\r\n        success: true\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport default new DialogflowService();","// components/Chatbox.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport DialogflowService from '../services/dialogflowService';\r\nimport './Chatbox.css';\r\n\r\nconst Chatbox = ({ onNavigate, categories, questions, currentUser }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // 初始欢迎消息\r\n  useEffect(() => {\r\n    if (isOpen && messages.length === 0) {\r\n      sendWelcomeMessage();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const sendWelcomeMessage = async () => {\r\n    setIsTyping(true);\r\n    \r\n    try {\r\n      // 使用新的代理服务器 API\r\n      const response = await DialogflowService.sendWelcome(currentUser?.id);\r\n      \r\n      const welcomeMessage = {\r\n        id: Date.now(),\r\n        text: response.text,\r\n        isBot: true,\r\n        timestamp: new Date(),\r\n        quickReplies: [\r\n          '查看所有分类',\r\n          '需要复习的题目',\r\n          '学习统计',\r\n          '创建新分类'\r\n        ]\r\n      };\r\n\r\n      setMessages([welcomeMessage]);\r\n    } catch (error) {\r\n      console.error('Welcome message error:', error);\r\n      // 回退到本地欢迎消息\r\n      const fallbackMessage = {\r\n        id: 1,\r\n        text: `👋 你好${currentUser ? ` ${currentUser.getUsername()}` : ''}！我是你的学习助手，我可以帮你：\\n\\n• 导航到不同功能页面\\n• 查找分类和题目\\n• 管理复习计划\\n• 查看学习统计\\n\\n请问需要什么帮助？`,\r\n        isBot: true,\r\n        timestamp: new Date(),\r\n        quickReplies: [\r\n          '查看所有分类',\r\n          '需要复习的题目',\r\n          '学习统计',\r\n          '创建新分类'\r\n        ]\r\n      };\r\n      setMessages([fallbackMessage]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // 使用新的代理服务器处理消息\r\n  const processMessage = async (userMessage) => {\r\n    setIsTyping(true);\r\n    \r\n    try {\r\n      const response = await DialogflowService.detectIntent(userMessage, currentUser?.id);\r\n      \r\n      setIsTyping(false);\r\n      \r\n      return {\r\n        text: response.text,\r\n        quickReplies: [\r\n          '查看分类',\r\n          '搜索题目', \r\n          '开始复习',\r\n          '学习统计'\r\n        ],\r\n        actions: []\r\n      };\r\n      \r\n    } catch (error) {\r\n      console.error('Message processing error:', error);\r\n      setIsTyping(false);\r\n      \r\n      return {\r\n        text: '网络错误，请稍后重试。',\r\n        quickReplies: ['查看分类', '搜索题目', '开始复习', '学习统计']\r\n      };\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputText.trim()) return;\r\n\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      text: inputText,\r\n      isBot: false,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputText('');\r\n\r\n    // 处理消息并获取回复\r\n    const botResponse = await processMessage(inputText);\r\n    \r\n    const botMessage = {\r\n      id: Date.now() + 1,\r\n      text: botResponse.text,\r\n      isBot: true,\r\n      timestamp: new Date(),\r\n      actions: botResponse.actions,\r\n      quickReplies: botResponse.quickReplies\r\n    };\r\n\r\n    setMessages(prev => [...prev, botMessage]);\r\n  };\r\n\r\n  const handleQuickReply = (text) => {\r\n    setInputText(text);\r\n    setTimeout(() => {\r\n      handleSendMessage();\r\n    }, 100);\r\n  };\r\n\r\n  const handleActionClick = (action) => {\r\n    if (action.type === 'navigate' && onNavigate) {\r\n      onNavigate(action.target);\r\n      \r\n      // 添加导航确认消息\r\n      const confirmMessage = {\r\n        id: Date.now(),\r\n        text: `✅ 正在为你跳转到 ${action.label}...`,\r\n        isBot: true,\r\n        timestamp: new Date()\r\n      };\r\n      setMessages(prev => [...prev, confirmMessage]);\r\n    } else if (action.type === 'function') {\r\n      // 处理功能型动作\r\n      handleFunctionAction(action);\r\n    }\r\n  };\r\n\r\n  const handleFunctionAction = (action) => {\r\n    switch (action.target) {\r\n      case 'searchQuestions':\r\n        // 触发搜索功能\r\n        const searchMessage = {\r\n          id: Date.now(),\r\n          text: '请告诉我你想搜索题目的关键词：',\r\n          isBot: true,\r\n          timestamp: new Date()\r\n        };\r\n        setMessages(prev => [...prev, searchMessage]);\r\n        break;\r\n      default:\r\n        console.log('Function action:', action);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  // 清除对话历史\r\n  const clearConversation = () => {\r\n    setMessages([]);\r\n    sendWelcomeMessage();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* 悬浮按钮 */}\r\n      {!isOpen && (\r\n        <button \r\n          className=\"chatbox-floating-btn\"\r\n          onClick={() => setIsOpen(true)}\r\n          title=\"AI学习助手\"\r\n        >\r\n          <span className=\"chatbot-icon\">🤖</span>\r\n          <span className=\"pulse-dot\"></span>\r\n        </button>\r\n      )}\r\n\r\n      {/* 聊天窗口 */}\r\n      {isOpen && (\r\n        <div className=\"chatbox-container\">\r\n          <div className=\"chatbox-header\">\r\n            <div className=\"chatbox-title\">\r\n              <span className=\"bot-avatar\">🤖</span>\r\n              <div className=\"title-text\">\r\n                <h4>AI学习助手</h4>\r\n                <span className=\"status\">AI在线</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"header-actions\">\r\n              <button \r\n                className=\"clear-btn\"\r\n                onClick={clearConversation}\r\n                title=\"清除对话\"\r\n              >\r\n                🗑️\r\n              </button>\r\n              <button \r\n                className=\"close-btn\"\r\n                onClick={() => setIsOpen(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chatbox-messages\">\r\n            {messages.map((message) => (\r\n              <div\r\n                key={message.id}\r\n                className={`message ${message.isBot ? 'bot-message' : 'user-message'}`}\r\n              >\r\n                <div className=\"message-content\">\r\n                  <div className=\"message-text\">\r\n                    {message.text.split('\\n').map((line, i) => (\r\n                      <span key={i}>\r\n                        {line}\r\n                        <br />\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"message-time\">\r\n                    {message.timestamp.toLocaleTimeString('zh-CN', { \r\n                      hour: '2-digit', \r\n                      minute: '2-digit' \r\n                    })}\r\n                  </div>\r\n                  \r\n                  {/* 快速回复按钮 */}\r\n                  {message.quickReplies && (\r\n                    <div className=\"quick-replies\">\r\n                      {message.quickReplies.map((reply, index) => (\r\n                        <button\r\n                          key={index}\r\n                          className=\"quick-reply-btn\"\r\n                          onClick={() => handleQuickReply(reply)}\r\n                        >\r\n                          {reply}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {/* 操作按钮 */}\r\n                  {message.actions && (\r\n                    <div className=\"action-buttons\">\r\n                      {message.actions.map((action, index) => (\r\n                        <button\r\n                          key={index}\r\n                          className=\"action-btn\"\r\n                          onClick={() => handleActionClick(action)}\r\n                        >\r\n                          {action.label}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            \r\n            {isTyping && (\r\n              <div className=\"message bot-message\">\r\n                <div className=\"message-content\">\r\n                  <div className=\"typing-indicator\">\r\n                    <span>AI正在思考</span>\r\n                    <div className=\"typing-dots\">\r\n                      <span></span>\r\n                      <span></span>\r\n                      <span></span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n\r\n          <div className=\"chatbox-input\">\r\n            <div className=\"input-container\">\r\n              <textarea\r\n                value={inputText}\r\n                onChange={(e) => setInputText(e.target.value)}\r\n                onKeyPress={handleKeyPress}\r\n                placeholder=\"向AI助手提问...\"\r\n                rows=\"1\"\r\n                className=\"message-input\"\r\n              />\r\n              <button \r\n                onClick={handleSendMessage}\r\n                disabled={!inputText.trim() || isTyping}\r\n                className=\"send-btn\"\r\n              >\r\n                {isTyping ? '⏳' : '📤'}\r\n              </button>\r\n            </div>\r\n            <div className=\"input-hint\">\r\n              按 Enter 发送，Shift + Enter 换行\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatbox;","// services/categoryService.js\r\nimport AV from 'leancloud-storage';\r\n\r\n// 初始化\r\nexport const initAV = () => {\r\n  AV.init({\r\n    appId: process.env.REACT_APP_LC_APP_ID,\r\n    appKey: process.env.REACT_APP_LC_APP_KEY,\r\n    serverURL: process.env.REACT_APP_LC_SERVER_URL\r\n  });\r\n};\r\n\r\n/**\r\n * 查询选项\r\n */\r\nexport const QueryOptions = {\r\n  SORT_BY_NAME: 'name',\r\n  SORT_BY_QUESTION_COUNT: 'questionCount',\r\n  SORT_BY_UPDATED_AT: 'updatedAt'\r\n};\r\n\r\n// 缓存配置\r\nconst cacheConfig = {\r\n  // 分类列表缓存（5分钟）\r\n  categories: {\r\n    data: null,\r\n    timestamp: 0,\r\n    ttl: 5 * 60 * 1000\r\n  },\r\n  // 分类详情缓存（3分钟）\r\n  categoryDetails: new Map(),\r\n  categoryDetailTtl: 3 * 60 * 1000,\r\n  // 题目数量统计缓存（2分钟）\r\n  questionCounts: new Map(),\r\n  questionCountTtl: 2 * 60 * 1000\r\n};\r\n\r\n/**\r\n * 清除所有缓存\r\n */\r\nexport const clearCategoryCache = () => {\r\n  cacheConfig.categories.data = null;\r\n  cacheConfig.categories.timestamp = 0;\r\n  cacheConfig.categoryDetails.clear();\r\n  cacheConfig.questionCounts.clear();\r\n};\r\n\r\n/**\r\n * 清除特定分类的缓存\r\n */\r\nexport const clearCategoryCacheById = (categoryId) => {\r\n  if (categoryId) {\r\n    cacheConfig.categoryDetails.delete(categoryId);\r\n    cacheConfig.questionCounts.delete(categoryId);\r\n  }\r\n  // 同时清除分类列表缓存\r\n  cacheConfig.categories.data = null;\r\n  cacheConfig.categories.timestamp = 0;\r\n};\r\n\r\n/**\r\n * 检查缓存是否有效\r\n */\r\nconst isCacheValid = (timestamp, ttl) => {\r\n  return timestamp && (Date.now() - timestamp < ttl);\r\n};\r\n\r\n/**\r\n * 批量获取分类题目数量（优化版本）\r\n */\r\n// services/categoryService.js\r\n\r\n/**\r\n * 批量获取分类题目数量（修复版本）\r\n */\r\nconst getCategoriesQuestionCounts = async (categories) => {\r\n  try {\r\n    const categoryIds = categories.map(cat => cat.id);\r\n    const questionCounts = {};\r\n    const now = Date.now();\r\n    \r\n    // 初始化所有分类的计数为0\r\n    categoryIds.forEach(categoryId => {\r\n      questionCounts[categoryId] = 0;\r\n    });\r\n    \r\n    // 检查缓存中已有的数据\r\n    const uncachedCategoryIds = [];\r\n    \r\n    categoryIds.forEach(categoryId => {\r\n      const cached = cacheConfig.questionCounts.get(categoryId);\r\n      if (cached && isCacheValid(cached.timestamp, cacheConfig.questionCountTtl)) {\r\n        questionCounts[categoryId] = cached.count;\r\n      } else {\r\n        uncachedCategoryIds.push(categoryId);\r\n      }\r\n    });\r\n    \r\n    // 如果有未缓存的分类，批量查询\r\n    if (uncachedCategoryIds.length > 0) {\r\n      try {\r\n        // 方法1: 分别查询每个分类的题目数量（更准确）\r\n        const countPromises = uncachedCategoryIds.map(async (categoryId) => {\r\n          try {\r\n            const categoryPointer = AV.Object.createWithoutData('Category', categoryId);\r\n            const questionQuery = new AV.Query('Question');\r\n            questionQuery.equalTo('category', categoryPointer);\r\n            const count = await questionQuery.count();\r\n            return { categoryId, count };\r\n          } catch (error) {\r\n            console.warn(`获取分类 ${categoryId} 题目数量失败:`, error);\r\n            return { categoryId, count: 0 };\r\n          }\r\n        });\r\n        \r\n        const countResults = await Promise.all(countPromises);\r\n        \r\n        // 更新计数\r\n        countResults.forEach(({ categoryId, count }) => {\r\n          questionCounts[categoryId] = count;\r\n        });\r\n        \r\n        // 更新缓存\r\n        countResults.forEach(({ categoryId, count }) => {\r\n          cacheConfig.questionCounts.set(categoryId, {\r\n            count,\r\n            timestamp: now\r\n          });\r\n        });\r\n        \r\n      } catch (batchError) {\r\n        console.warn('批量获取题目数量失败，尝试备用方案:', batchError);\r\n        \r\n        // 备用方案：使用 containedIn 查询\r\n        try {\r\n          const categoryPointers = uncachedCategoryIds.map(id => \r\n            AV.Object.createWithoutData('Category', id)\r\n          );\r\n          \r\n          const questionQuery = new AV.Query('Question');\r\n          questionQuery.containedIn('category', categoryPointers);\r\n          questionQuery.select(['category']);\r\n          \r\n          const questions = await questionQuery.find();\r\n          \r\n          // 统计题目数量\r\n          questions.forEach(question => {\r\n            const category = question.get('category');\r\n            if (category) {\r\n              const categoryId = category.id;\r\n              questionCounts[categoryId] = (questionCounts[categoryId] || 0) + 1;\r\n            }\r\n          });\r\n          \r\n          // 更新缓存\r\n          uncachedCategoryIds.forEach(categoryId => {\r\n            const count = questionCounts[categoryId] || 0;\r\n            cacheConfig.questionCounts.set(categoryId, {\r\n              count,\r\n              timestamp: now\r\n            });\r\n          });\r\n        } catch (fallbackError) {\r\n          console.warn('备用方案也失败:', fallbackError);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return questionCounts;\r\n  } catch (error) {\r\n    console.warn('批量获取题目数量失败:', error);\r\n    return {};\r\n  }\r\n};\r\n\r\n/**\r\n * 获取所有类别（不分页）- 带缓存\r\n */\r\nexport const getAllCategories = async () => {\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    // 检查缓存\r\n    const now = Date.now();\r\n    if (cacheConfig.categories.data && \r\n        isCacheValid(cacheConfig.categories.timestamp, cacheConfig.categories.ttl)) {\r\n      return cacheConfig.categories.data;\r\n    }\r\n\r\n    const query = new AV.Query('Category');\r\n    query.equalTo('createdBy', currentUser);\r\n    query.include('createdBy');\r\n    query.descending('updatedAt');\r\n    \r\n    const categories = await query.find();\r\n    \r\n    // 批量获取题目数量\r\n    const questionCounts = await getCategoriesQuestionCounts(categories);\r\n    \r\n    const result = categories.map(category => ({\r\n      id: category.id,\r\n      name: category.get('name'),\r\n      description: category.get('description'),\r\n      questionCount: questionCounts[category.id] !== undefined \r\n        ? questionCounts[category.id] \r\n        : category.get('questionCount') || 0,\r\n      createdAt: category.get('createdAt'),\r\n      updatedAt: category.get('updatedAt'),\r\n      createdBy: category.get('createdBy')\r\n    }));\r\n\r\n    // 更新缓存\r\n    cacheConfig.categories.data = result;\r\n    cacheConfig.categories.timestamp = now;\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取所有分类失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 分页获取类别列表 - 带缓存\r\n */\r\nexport const getCategories = async (options = {}) => {\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    // 检查缓存（仅对默认查询使用缓存）\r\n    const isDefaultQuery = !options.page && !options.pageSize && \r\n                          (!options.sortBy || options.sortBy === QueryOptions.SORT_BY_UPDATED_AT);\r\n    \r\n    const now = Date.now();\r\n    if (isDefaultQuery && cacheConfig.categories.data && \r\n        isCacheValid(cacheConfig.categories.timestamp, cacheConfig.categories.ttl)) {\r\n      return {\r\n        data: cacheConfig.categories.data,\r\n        total: cacheConfig.categories.data.length,\r\n        page: 1,\r\n        pageSize: cacheConfig.categories.data.length\r\n      };\r\n    }\r\n\r\n    const query = new AV.Query('Category');\r\n    query.equalTo('createdBy', currentUser);\r\n    \r\n    // 设置排序\r\n    if (options.sortBy === QueryOptions.SORT_BY_UPDATED_AT) {\r\n      query.descending('updatedAt');\r\n    } else if (options.sortBy === QueryOptions.SORT_BY_CREATED_AT) {\r\n      query.descending('createdAt');\r\n    } else {\r\n      query.descending('updatedAt');\r\n    }\r\n\r\n    // 设置分页\r\n    if (options.page && options.pageSize) {\r\n      const skip = (options.page - 1) * options.pageSize;\r\n      query.limit(options.pageSize);\r\n      query.skip(skip);\r\n    }\r\n\r\n    const categories = await query.find();\r\n    \r\n    // 批量获取题目数量\r\n    const questionCounts = await getCategoriesQuestionCounts(categories);\r\n\r\n    const categoriesWithCount = categories.map((category) => ({\r\n      id: category.id,\r\n      name: category.get('name'),\r\n      description: category.get('description'),\r\n      questionCount: questionCounts[category.id] !== undefined \r\n        ? questionCounts[category.id] \r\n        : category.get('questionCount') || 0,\r\n      createdAt: category.get('createdAt'),\r\n      updatedAt: category.get('updatedAt'),\r\n      createdBy: category.get('createdBy')\r\n    }));\r\n\r\n    const result = {\r\n      data: categoriesWithCount,\r\n      total: categoriesWithCount.length,\r\n      page: options.page || 1,\r\n      pageSize: options.pageSize || categoriesWithCount.length\r\n    };\r\n\r\n    // 如果是默认查询，更新缓存\r\n    if (isDefaultQuery) {\r\n      cacheConfig.categories.data = categoriesWithCount;\r\n      cacheConfig.categories.timestamp = now;\r\n    }\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取分类失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 根据ID获取单个类别详情 - 带缓存\r\n */\r\nexport const getCategoryById = async (categoryId) => {\r\n  try {\r\n    // 检查缓存\r\n    const cached = cacheConfig.categoryDetails.get(categoryId);\r\n    const now = Date.now();\r\n    if (cached && isCacheValid(cached.timestamp, cacheConfig.categoryDetailTtl)) {\r\n      return cached.data;\r\n    }\r\n\r\n    const query = new AV.Query('Category');\r\n    const category = await query.get(categoryId);\r\n    \r\n    if (!category) {\r\n      throw new Error('未找到该类别');\r\n    }\r\n    \r\n    // 获取准确的题目数量\r\n    let questionCount = category.get('questionCount') || 0;\r\n    try {\r\n      const questionQuery = new AV.Query('Question');\r\n      questionQuery.equalTo('category', category);\r\n      questionCount = await questionQuery.count();\r\n    } catch (countError) {\r\n      console.warn('获取题目数量失败，使用缓存值:', countError);\r\n    }\r\n    \r\n    const result = {\r\n      id: category.id,\r\n      name: category.get('name'),\r\n      questionCount,\r\n      updatedAt: category.updatedAt,\r\n      createdAt: category.createdAt\r\n    };\r\n\r\n    // 更新缓存\r\n    cacheConfig.categoryDetails.set(categoryId, {\r\n      data: result,\r\n      timestamp: now\r\n    });\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取类别详情失败:', error);\r\n    throw new Error(`获取详情失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取分类及其题目列表 - 带缓存\r\n */\r\nexport const getCategoryWithQuestions = async (categoryId) => {\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    // 获取分类\r\n    const categoryQuery = new AV.Query('Category');\r\n    const category = await categoryQuery.get(categoryId);\r\n    \r\n    // 验证分类是否属于当前用户\r\n    const categoryCreator = category.get('createdBy');\r\n    if (categoryCreator.id !== currentUser.id) {\r\n      throw new Error('无权访问此分类');\r\n    }\r\n\r\n    // 获取该分类下的题目\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    questionQuery.equalTo('createdBy', currentUser);\r\n    questionQuery.include('category');\r\n    questionQuery.descending('updatedAt');\r\n    \r\n    const questions = await questionQuery.find();\r\n    \r\n    const formattedQuestions = questions.map(question => ({\r\n      id: question.id,\r\n      title: question.get('title'),\r\n      detailedAnswer: question.get('detailedAnswer'),\r\n      oralAnswer: question.get('oralAnswer'),\r\n      code: question.get('code'),\r\n      difficulty: question.get('difficulty'),\r\n      appearanceLevel: question.get('appearanceLevel'),\r\n      proficiency: question.get('proficiency'),\r\n      tags: question.get('tags') || [],\r\n      category: {\r\n        id: question.get('category').id,\r\n        name: question.get('category').get('name')\r\n      },\r\n      createdAt: question.get('createdAt'),\r\n      updatedAt: question.get('updatedAt')\r\n    }));\r\n\r\n    const result = {\r\n      category: {\r\n        id: category.id,\r\n        name: category.get('name'),\r\n        description: category.get('description'),\r\n        questionCount: questions.length,\r\n        createdAt: category.get('createdAt'),\r\n        updatedAt: category.get('updatedAt')\r\n      },\r\n      questions: formattedQuestions\r\n    };\r\n\r\n    // 更新题目数量缓存\r\n    const now = Date.now();\r\n    cacheConfig.questionCounts.set(categoryId, {\r\n      count: questions.length,\r\n      timestamp: now\r\n    });\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取分类详情失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 创建新类别 - 清除相关缓存\r\n */\r\nexport const createCategory = async (categoryData) => {\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    const Category = AV.Object.extend('Category');\r\n    const category = new Category();\r\n    \r\n    category.set('name', categoryData.name);\r\n    category.set('description', categoryData.description || '');\r\n    category.set('createdBy', currentUser);\r\n\r\n    // 设置 ACL 权限\r\n    const acl = new AV.ACL();\r\n    acl.setReadAccess(currentUser, true);\r\n    acl.setWriteAccess(currentUser, true);\r\n    acl.setPublicReadAccess(false);\r\n    category.setACL(acl);\r\n\r\n    await category.save();\r\n    \r\n    // 清除分类列表缓存\r\n    clearCategoryCache();\r\n\r\n    return {\r\n      id: category.id,\r\n      name: category.get('name'),\r\n      description: category.get('description'),\r\n      questionCount: 0,\r\n      createdAt: category.get('createdAt'),\r\n      updatedAt: category.get('updatedAt')\r\n    };\r\n  } catch (error) {\r\n    console.error('创建分类失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新类别 - 清除相关缓存\r\n */\r\nexport const updateCategory = async (categoryId, updateData) => {\r\n  try {\r\n    if (updateData.name && updateData.name.trim() === '') {\r\n      throw new Error('类别名不能为空');\r\n    }\r\n\r\n    const category = AV.Object.createWithoutData('Category', categoryId);\r\n    \r\n    if (updateData.name) {\r\n      category.set('name', updateData.name.trim());\r\n    }\r\n    \r\n    const updatedCategory = await category.save();\r\n    \r\n    // 清除相关缓存\r\n    clearCategoryCacheById(categoryId);\r\n\r\n    return {\r\n      id: updatedCategory.id,\r\n      name: updatedCategory.get('name'),\r\n      questionCount: updatedCategory.get('questionCount'),\r\n      updatedAt: updatedCategory.updatedAt\r\n    };\r\n  } catch (error) {\r\n    console.error('更新类别失败:', error);\r\n    throw new Error(`更新失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 更新类别题目计数 - 清除相关缓存\r\n */\r\nexport const updateCategoryQuestionCount = async (categoryId) => {\r\n  try {\r\n    const category = AV.Object.createWithoutData('Category', categoryId);\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    \r\n    const count = await questionQuery.count();\r\n    \r\n    category.set('questionCount', count);\r\n    await category.save();\r\n    \r\n    // 清除相关缓存\r\n    clearCategoryCacheById(categoryId);\r\n\r\n    return count;\r\n  } catch (error) {\r\n    console.error('更新题目计数失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 删除类别 - 清除相关缓存\r\n */\r\nexport const deleteCategory = async (categoryId) => {\r\n  try {\r\n    const category = AV.Object.createWithoutData('Category', categoryId);\r\n    \r\n    // 先删除该类别下的所有题目\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    const questions = await questionQuery.find();\r\n    \r\n    let deletedQuestions = 0;\r\n    if (questions.length > 0) {\r\n      await AV.Object.destroyAll(questions);\r\n      deletedQuestions = questions.length;\r\n    }\r\n    \r\n    // 再删除类别本身\r\n    await category.destroy();\r\n    \r\n    // 清除相关缓存\r\n    clearCategoryCacheById(categoryId);\r\n\r\n    return { \r\n      success: true, \r\n      message: `类别及关联的 ${deletedQuestions} 个题目已删除`,\r\n      deletedQuestions\r\n    };\r\n  } catch (error) {\r\n    console.error('删除类别失败:', error);\r\n    throw new Error(`删除失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 批量获取类别统计信息 - 带缓存\r\n */\r\nexport const getCategoriesStats = async () => {\r\n  try {\r\n    const categories = await getAllCategories(); // 使用带缓存的函数\r\n    \r\n    const stats = {\r\n      totalCategories: categories.length,\r\n      totalQuestions: categories.reduce((sum, cat) => sum + (cat.questionCount || 0), 0),\r\n      averageQuestionsPerCategory: categories.length > 0 \r\n        ? (categories.reduce((sum, cat) => sum + (cat.questionCount || 0), 0) / categories.length).toFixed(1)\r\n        : 0,\r\n      categoriesWithQuestions: categories.filter(cat => (cat.questionCount || 0) > 0).length,\r\n      emptyCategories: categories.filter(cat => (cat.questionCount || 0) === 0).length\r\n    };\r\n    \r\n    return stats;\r\n  } catch (error) {\r\n    console.error('获取类别统计失败:', error);\r\n    throw new Error(`获取统计失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 搜索类别 - 不使用缓存\r\n */\r\nexport const searchCategories = async (searchTerm, options = {}) => {\r\n  try {\r\n    const { page = 1, pageSize = 10 } = options;\r\n    \r\n    const query = new AV.Query('Category');\r\n    query.contains('name', searchTerm);\r\n    query.addDescending('updatedAt');\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    \r\n    const results = await query.find();\r\n    const totalCount = await query.count();\r\n    \r\n    return {\r\n      data: results.map(result => ({\r\n        id: result.id,\r\n        name: result.get('name'),\r\n        questionCount: result.get('questionCount') || 0,\r\n        updatedAt: result.updatedAt,\r\n        createdAt: result.createdAt\r\n      })),\r\n      pagination: {\r\n        current: page,\r\n        pageSize,\r\n        total: totalCount,\r\n        totalPages: Math.ceil(totalCount / pageSize)\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.error('搜索类别失败:', error);\r\n    throw new Error(`搜索失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取分类下的题目 - 不使用缓存（因为题目经常变动）\r\n */\r\nexport const getQuestionsByCategory = async (categoryId, options = {}) => {\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    const { \r\n      page = 1, \r\n      pageSize = 20,\r\n      sortBy = 'updatedAt',\r\n      sortOrder = 'desc'\r\n    } = options;\r\n    \r\n    const categoryPointer = AV.Object.createWithoutData('Category', categoryId);\r\n    const query = new AV.Query('Question');\r\n    \r\n    query.equalTo('category', categoryPointer);\r\n    query.equalTo('createdBy', currentUser);\r\n    query.include('category');\r\n    \r\n    // 排序\r\n    if (sortOrder === 'asc') {\r\n      query.addAscending(sortBy);\r\n    } else {\r\n      query.addDescending(sortBy);\r\n    }\r\n    \r\n    // 分页\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    \r\n    const results = await query.find();\r\n    \r\n    return {\r\n      data: results.map(question => {\r\n        const category = question.get('category');\r\n        return {\r\n          id: question.id,\r\n          title: question.get('title'),\r\n          detailedAnswer: question.get('detailedAnswer'),\r\n          oralAnswer: question.get('oralAnswer'),\r\n          code: question.get('code'),\r\n          url: question.get('url'),\r\n          tags: question.get('tags') || [],\r\n          difficulty: question.get('difficulty'),\r\n          proficiency: question.get('proficiency'),\r\n          appearanceLevel: question.get('appearanceLevel') || 50,\r\n          category: category ? {\r\n            id: category.id,\r\n            objectId: category.id,\r\n            name: category.get('name'),\r\n            description: category.get('description'),\r\n            questionCount: category.get('questionCount') || 0\r\n          } : null,\r\n          createdAt: question.get('createdAt'),\r\n          updatedAt: question.get('updatedAt'),\r\n          lastReviewedAt: question.get('lastReviewedAt')\r\n        };\r\n      })\r\n    };\r\n  } catch (error) {\r\n    console.error('获取分类题目失败:', error);\r\n    throw new Error(`获取题目失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n// services/categoryService.js\r\n// 在现有方法基础上添加：\r\n\r\n// 获取所有题目（分页方式）\r\nexport const getAllQuestionsPaginated = async (options = {}) => {\r\n  const {\r\n    page = 0,\r\n    pageSize = 50,\r\n    sortBy = 'updatedAt',\r\n    sortOrder = 'desc'\r\n  } = options;\r\n\r\n  try {\r\n    const query = new AV.Query('Question');\r\n    \r\n    // 包含分类信息\r\n    query.include('category');\r\n    \r\n    // 排序\r\n    if (sortBy === 'title') {\r\n      query.addAscending('title');\r\n    } else if (sortBy === 'difficulty') {\r\n      query.addAscending('difficulty');\r\n    } else if (sortBy === 'appearanceLevel') {\r\n      query.addDescending('appearanceLevel');\r\n    } else {\r\n      query.addDescending('updatedAt');\r\n    }\r\n    \r\n    // 分页\r\n    query.limit(pageSize);\r\n    query.skip(page * pageSize);\r\n    \r\n    const results = await query.find();\r\n    \r\n    const questions = results.map(item => ({\r\n      id: item.id,\r\n      title: item.get('title'),\r\n      detailedAnswer: item.get('detailedAnswer'),\r\n      oralAnswer: item.get('oralAnswer'),\r\n      code: item.get('code'),\r\n      difficulty: item.get('difficulty'),\r\n      proficiency: item.get('proficiency'),\r\n      appearanceLevel: item.get('appearanceLevel'),\r\n      tags: item.get('tags') || [],\r\n      lastReviewedAt: item.get('lastReviewedAt'),\r\n      createdAt: item.get('createdAt'),\r\n      updatedAt: item.get('updatedAt'),\r\n      category: item.get('category') ? {\r\n        id: item.get('category').id,\r\n        name: item.get('category').get('name'),\r\n        description: item.get('category').get('description')\r\n      } : null\r\n    }));\r\n    \r\n    return {\r\n      data: questions,\r\n      total: questions.length,\r\n      hasMore: questions.length === pageSize\r\n    };\r\n  } catch (error) {\r\n    console.error('获取题目失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n","// services/questionService.js\r\nimport AV from 'leancloud-storage';\r\n\r\n// 请求管理工具\r\nclass RequestManager {\r\n  constructor() {\r\n    this.pendingRequests = new Map();\r\n    this.cache = new Map();\r\n    this.cacheTimeout = 5 * 60 * 1000; // 5分钟缓存\r\n  }\r\n\r\n  // 防抖请求\r\n  debounce(key, fn, delay = 300) {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.pendingRequests.has(key)) {\r\n        clearTimeout(this.pendingRequests.get(key));\r\n      }\r\n\r\n      const timer = setTimeout(async () => {\r\n        this.pendingRequests.delete(key);\r\n        try {\r\n          const result = await fn();\r\n          resolve(result);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }, delay);\r\n\r\n      this.pendingRequests.set(key, timer);\r\n    });\r\n  }\r\n\r\n  // 缓存请求\r\n  async cachedRequest(key, fn, useCache = true) {\r\n    if (useCache) {\r\n      const cached = this.cache.get(key);\r\n      if (cached && Date.now() - cached.timestamp < this.cacheTimeout) {\r\n        return cached.data;\r\n      }\r\n    }\r\n\r\n    const result = await fn();\r\n    \r\n    if (useCache) {\r\n      this.cache.set(key, {\r\n        data: result,\r\n        timestamp: Date.now()\r\n      });\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  // 清除缓存\r\n  clearCache(key = null) {\r\n    if (key) {\r\n      this.cache.delete(key);\r\n    } else {\r\n      this.cache.clear();\r\n    }\r\n  }\r\n}\r\n\r\n// 创建全局请求管理器实例\r\nexport const requestManager = new RequestManager();\r\n\r\n/**\r\n * 难度选项\r\n */\r\nexport const DifficultyOptions = {\r\n  EASY: 'easy',\r\n  MEDIUM: 'medium',\r\n  HARD: 'hard'\r\n};\r\n\r\n/**\r\n * 掌握程度选项\r\n */\r\nexport const ProficiencyOptions = {\r\n  BEGINNER: 'beginner',\r\n  INTERMEDIATE: 'intermediate',\r\n  ADVANCED: 'advanced',\r\n  MASTER: 'master'\r\n};\r\n\r\n// 请求配置\r\nconst REQUEST_DELAY = 1000; // 1秒延迟\r\nconst BATCH_SIZE = 10; // 批量请求大小\r\n\r\n/**\r\n * 获取分类ID的辅助函数\r\n */\r\nconst getCategoryId = (category) => {\r\n  if (category && category.objectId) return category.objectId;\r\n  if (typeof category === 'string') return category;\r\n  if (category && category.id) return category.id;\r\n  return null;\r\n};\r\n\r\n/**\r\n * 创建分类 Pointer 对象的辅助函数\r\n */\r\nconst createCategoryPointer = (categoryId) => {\r\n  if (!categoryId) return null;\r\n  return AV.Object.createWithoutData('Category', categoryId);\r\n};\r\n\r\n/**\r\n * 批量更新分类题目数量的辅助函数\r\n */\r\nconst batchUpdateCategoryCounts = async (updates) => {\r\n  if (updates.length === 0) return;\r\n\r\n  try {\r\n    // 按分类分组更新\r\n    const categoryUpdates = {};\r\n    updates.forEach(({ categoryId, change }) => {\r\n      if (categoryId && !categoryUpdates[categoryId]) {\r\n        categoryUpdates[categoryId] = 0;\r\n      }\r\n      if (categoryId) {\r\n        categoryUpdates[categoryId] += change;\r\n      }\r\n    });\r\n\r\n    // 批量更新分类\r\n    const updatePromises = Object.entries(categoryUpdates).map(async ([categoryId, totalChange]) => {\r\n      try {\r\n        const categoryQuery = new AV.Query('Category');\r\n        const freshCategory = await categoryQuery.get(categoryId);\r\n        \r\n        const currentCount = freshCategory.get('questionCount') || 0;\r\n        const newCount = Math.max(0, currentCount + totalChange);\r\n        \r\n        freshCategory.set('questionCount', newCount);\r\n        await freshCategory.save();\r\n        \r\n        console.log(`分类 ${freshCategory.get('name')} 题目数量批量更新: ${currentCount} -> ${newCount}`);\r\n      } catch (error) {\r\n        console.error(`更新分类 ${categoryId} 题目数量失败:`, error);\r\n      }\r\n    });\r\n\r\n    await Promise.all(updatePromises);\r\n  } catch (error) {\r\n    console.error('批量更新分类题目数量失败:', error);\r\n  }\r\n};\r\n\r\n// 批量更新队列\r\nlet batchUpdateQueue = [];\r\nlet batchUpdateTimer = null;\r\n\r\n/**\r\n * 调度批量更新\r\n */\r\nconst scheduleBatchUpdate = (category, change) => {\r\n  const categoryId = getCategoryId(category);\r\n  if (!categoryId) return;\r\n\r\n  batchUpdateQueue.push({ categoryId, change });\r\n\r\n  if (batchUpdateTimer) {\r\n    clearTimeout(batchUpdateTimer);\r\n  }\r\n\r\n  batchUpdateTimer = setTimeout(() => {\r\n    const updates = [...batchUpdateQueue];\r\n    batchUpdateQueue = [];\r\n    batchUpdateTimer = null;\r\n    \r\n    batchUpdateCategoryCounts(updates);\r\n  }, 2000); // 2秒后执行批量更新\r\n};\r\n\r\n/**\r\n * 格式化题目响应\r\n */\r\nconst formatQuestionResponse = (question) => {\r\n  const category = question.get('category');\r\n  return {\r\n    id: question.id,\r\n    objectId: question.id,\r\n    title: question.get('title'),\r\n    detailedAnswer: question.get('detailedAnswer'),\r\n    oralAnswer: question.get('oralAnswer'),\r\n    code: question.get('code'),\r\n    url: question.get('url'),\r\n    tags: question.get('tags') || [],\r\n    difficulty: question.get('difficulty'),\r\n    proficiency: question.get('proficiency'),\r\n    appearanceLevel: question.get('appearanceLevel') || 50,\r\n    category: category ? {\r\n      id: category.id,\r\n      objectId: category.id,\r\n      name: category.get('name'),\r\n      description: category.get('description'),\r\n      questionCount: category.get('questionCount') || 0\r\n    } : null,\r\n    createdAt: question.get('createdAt'),\r\n    updatedAt: question.get('updatedAt'),\r\n    lastReviewedAt: question.get('lastReviewedAt')\r\n  };\r\n};\r\n\r\n/**\r\n * 创建题目\r\n */\r\nexport const createQuestion = async (questionData) => {\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    const Question = AV.Object.extend('Question');\r\n    const question = new Question();\r\n    \r\n    // 设置题目字段\r\n    question.set('title', questionData.title || '');\r\n    question.set('detailedAnswer', questionData.detailedAnswer || '');\r\n    question.set('oralAnswer', questionData.oralAnswer || '');\r\n    question.set('code', questionData.code || '');\r\n    question.set('url', questionData.url || '');\r\n    question.set('tags', questionData.tags || []);\r\n    question.set('difficulty', questionData.difficulty || DifficultyOptions.MEDIUM);\r\n    question.set('proficiency', questionData.proficiency || ProficiencyOptions.BEGINNER);\r\n    question.set('appearanceLevel', questionData.appearanceLevel || 50);\r\n    question.set('createdBy', currentUser);\r\n\r\n    // 设置分类\r\n    if (questionData.categoryId) {\r\n      const categoryPointer = createCategoryPointer(questionData.categoryId);\r\n      question.set('category', categoryPointer);\r\n    }\r\n\r\n    // 设置 ACL 权限\r\n    const acl = new AV.ACL();\r\n    acl.setReadAccess(currentUser, true);\r\n    acl.setWriteAccess(currentUser, true);\r\n    acl.setPublicReadAccess(false);\r\n    question.setACL(acl);\r\n\r\n    await question.save();\r\n    \r\n    // 立即更新分类计数\r\n    if (questionData.categoryId) {\r\n      await updateCategoryCountImmediately(questionData.categoryId, 1);\r\n    }\r\n    \r\n    // 清除相关缓存\r\n    if (questionData.categoryId) {\r\n      requestManager.clearCache(`questions-${questionData.categoryId}`);\r\n    }\r\n    requestManager.clearCache('all-questions');\r\n    \r\n    return formatQuestionResponse(question);\r\n  } catch (error) {\r\n    console.error('创建题目失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取类别的题目列表（带缓存和防抖）\r\n */\r\nexport const getQuestionsByCategory = async (categoryId, options = {}) => {\r\n  const cacheKey = `questions-${categoryId}-${JSON.stringify(options)}`;\r\n  \r\n  return requestManager.cachedRequest(cacheKey, async () => {\r\n    await new Promise(resolve => setTimeout(resolve, REQUEST_DELAY));\r\n    \r\n    try {\r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n\r\n      const { \r\n        page = 1, \r\n        pageSize = 10, \r\n        sortBy = 'updatedAt',\r\n        sortOrder = 'desc',\r\n        difficulty,\r\n        proficiency,\r\n        tag\r\n      } = options;\r\n      \r\n      const categoryPointer = createCategoryPointer(categoryId);\r\n      const query = new AV.Query('Question');\r\n      \r\n      query.equalTo('category', categoryPointer);\r\n      query.equalTo('createdBy', currentUser);\r\n      query.include('category'); // 包含分类信息\r\n      \r\n      // 过滤条件\r\n      if (difficulty) query.equalTo('difficulty', difficulty);\r\n      if (proficiency) query.equalTo('proficiency', proficiency);\r\n      if (tag) query.containsAll('tags', [tag]);\r\n      \r\n      // 排序\r\n      if (sortOrder === 'asc') {\r\n        query.addAscending(sortBy);\r\n      } else {\r\n        query.addDescending(sortBy);\r\n      }\r\n      \r\n      // 分页\r\n      query.limit(pageSize);\r\n      query.skip((page - 1) * pageSize);\r\n      \r\n      const results = await query.find();\r\n      const totalCount = await query.count();\r\n      \r\n      return {\r\n        data: results.map(result => formatQuestionResponse(result)),\r\n        pagination: {\r\n          current: page,\r\n          pageSize,\r\n          total: totalCount,\r\n          totalPages: Math.ceil(totalCount / pageSize)\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('获取题目列表失败:', error);\r\n      throw new Error(`获取题目失败: ${error.message}`);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * 根据ID获取单个题目详情（带缓存）\r\n */\r\nexport const getQuestionById = async (id) => {\r\n  return requestManager.cachedRequest(`question_${id}`, async () => {\r\n    try {\r\n      const query = new AV.Query('Question');\r\n      query.equalTo('objectId', id);\r\n      query.include('category');\r\n      \r\n      const question = await query.first();\r\n      \r\n      if (!question) {\r\n        throw new Error('题目不存在');\r\n      }\r\n      \r\n      return formatQuestionResponse(question);\r\n    } catch (error) {\r\n      console.error(`获取题目 ${id} 失败:`, error);\r\n      throw error;\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * 批量获取题目详情（优化性能）\r\n */\r\nexport const getQuestionsBatch = async (questionIds) => {\r\n  if (!questionIds || questionIds.length === 0) return [];\r\n\r\n  // 分批处理，避免过多请求\r\n  const batches = [];\r\n  for (let i = 0; i < questionIds.length; i += BATCH_SIZE) {\r\n    batches.push(questionIds.slice(i, i + BATCH_SIZE));\r\n  }\r\n\r\n  const results = [];\r\n  \r\n  for (const batch of batches) {\r\n    await new Promise(resolve => setTimeout(resolve, REQUEST_DELAY));\r\n    \r\n    try {\r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) continue;\r\n\r\n      const query = new AV.Query('Question');\r\n      query.containedIn('objectId', batch);\r\n      query.equalTo('createdBy', currentUser);\r\n      query.include('category');\r\n      \r\n      const batchResults = await query.find();\r\n      results.push(...batchResults.map(q => formatQuestionResponse(q)));\r\n    } catch (error) {\r\n      console.error('批量获取题目失败:', error);\r\n      // 继续处理其他批次\r\n    }\r\n  }\r\n\r\n  return results;\r\n};\r\n\r\n/**\r\n * 删除题目\r\n */\r\nexport const deleteQuestion = async (questionId) => {\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    // 验证题目是否属于当前用户\r\n    const query = new AV.Query('Question');\r\n    query.equalTo('objectId', questionId);\r\n    query.equalTo('createdBy', currentUser);\r\n    query.include('category');\r\n    const question = await query.first();\r\n    \r\n    if (!question) {\r\n      throw new Error('题目不存在或无权删除');\r\n    }\r\n\r\n    // 获取分类信息用于更新计数\r\n    const category = question.get('category');\r\n    \r\n    await question.destroy();\r\n    \r\n    // 立即更新分类计数\r\n    if (category) {\r\n      await updateCategoryCountImmediately(category, -1);\r\n    }\r\n    \r\n    // 清除缓存\r\n    requestManager.clearCache(`question-${questionId}`);\r\n    requestManager.clearCache('all-questions');\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('删除题目失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 搜索题目\r\n */\r\nexport const searchQuestions = async (searchTerm, options = {}) => {\r\n  const cacheKey = `search-${searchTerm}-${JSON.stringify(options)}`;\r\n  \r\n  return requestManager.cachedRequest(cacheKey, async () => {\r\n    await new Promise(resolve => setTimeout(resolve, REQUEST_DELAY));\r\n    \r\n    try {\r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n\r\n      const { page = 1, pageSize = 10 } = options;\r\n      \r\n      const titleQuery = new AV.Query('Question');\r\n      titleQuery.contains('title', searchTerm);\r\n      titleQuery.equalTo('createdBy', currentUser);\r\n      \r\n      const detailedAnswerQuery = new AV.Query('Question');\r\n      detailedAnswerQuery.contains('detailedAnswer', searchTerm);\r\n      detailedAnswerQuery.equalTo('createdBy', currentUser);\r\n      \r\n      const oralAnswerQuery = new AV.Query('Question');\r\n      oralAnswerQuery.contains('oralAnswer', searchTerm);\r\n      oralAnswerQuery.equalTo('createdBy', currentUser);\r\n      \r\n      const codeQuery = new AV.Query('Question');\r\n      codeQuery.contains('code', searchTerm);\r\n      codeQuery.equalTo('createdBy', currentUser);\r\n      \r\n      const tagsQuery = new AV.Query('Question');\r\n      tagsQuery.containsAll('tags', [searchTerm]);\r\n      tagsQuery.equalTo('createdBy', currentUser);\r\n      \r\n      const query = AV.Query.or(\r\n        titleQuery, \r\n        detailedAnswerQuery, \r\n        oralAnswerQuery, \r\n        codeQuery, \r\n        tagsQuery\r\n      );\r\n      \r\n      query.include('category');\r\n      query.addDescending('updatedAt');\r\n      query.limit(pageSize);\r\n      query.skip((page - 1) * pageSize);\r\n      \r\n      const results = await query.find();\r\n      const totalCount = await query.count();\r\n      \r\n      return {\r\n        data: results.map(result => formatQuestionResponse(result)),\r\n        pagination: {\r\n          current: page,\r\n          pageSize,\r\n          total: totalCount,\r\n          totalPages: Math.ceil(totalCount / pageSize)\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('搜索题目失败:', error);\r\n      throw new Error(`搜索失败: ${error.message}`);\r\n    }\r\n  }, false); // 搜索不缓存\r\n};\r\n\r\n/**\r\n * 获取所有题目（带缓存）\r\n */\r\n// services/questionService.js\r\n\r\n/**\r\n * 获取所有题目（禁用缓存）- 确保实时数据\r\n */\r\n/**\r\n * 获取所有题目（修复分页限制）- 确保获取全部数据\r\n */\r\nexport const getAllQuestions = async (useCache = false) => {\r\n  if (!useCache) {\r\n    // 清除缓存\r\n    requestManager.clearCache('all-questions');\r\n\r\n    await new Promise(resolve => setTimeout(resolve, REQUEST_DELAY));\r\n    \r\n    try {\r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n\r\n      const allQuestions = [];\r\n      let skip = 0;\r\n      const limit = 100; // LeanCloud 单次查询限制\r\n      let hasMore = true;\r\n\r\n      // 循环获取所有数据\r\n      while (hasMore) {\r\n        const query = new AV.Query('Question');\r\n        query.equalTo('createdBy', currentUser);\r\n        query.include('category');\r\n        query.descending('updatedAt');\r\n        query.limit(limit);\r\n        query.skip(skip);\r\n        \r\n        const batchResults = await query.find();\r\n        allQuestions.push(...batchResults);\r\n        \r\n        // 检查是否还有更多数据\r\n        hasMore = batchResults.length === limit;\r\n        skip += limit;\r\n        \r\n        console.log(`📦 批量获取题目: 第 ${skip/limit} 批, 获取 ${batchResults.length} 条`);\r\n      }\r\n\r\n      const result = allQuestions.map(question => formatQuestionResponse(question));\r\n      \r\n      console.log('📊 getAllQuestions 实时查询结果:', {\r\n        题目总数: result.length,\r\n        批次: `${skip/limit} 批`,\r\n        最新题目: result.slice(0, 3).map(q => ({ id: q.id, title: q.title }))\r\n      });\r\n      \r\n      return result;\r\n    } catch (error) {\r\n      console.error('获取所有题目失败:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  // 原有缓存逻辑\r\n  return requestManager.cachedRequest('all-questions', async () => {\r\n    // 同样需要修复分页问题\r\n    const allQuestions = [];\r\n    let skip = 0;\r\n    const limit = 100;\r\n    let hasMore = true;\r\n\r\n    while (hasMore) {\r\n      const query = new AV.Query('Question');\r\n      query.equalTo('createdBy', currentUser);\r\n      query.include('category');\r\n      query.descending('updatedAt');\r\n      query.limit(limit);\r\n      query.skip(skip);\r\n      \r\n      const batchResults = await query.find();\r\n      allQuestions.push(...batchResults);\r\n      \r\n      hasMore = batchResults.length === limit;\r\n      skip += limit;\r\n    }\r\n\r\n    return allQuestions.map(question => formatQuestionResponse(question));\r\n  });\r\n};\r\n\r\n/**\r\n * 更新题目\r\n */\r\nexport const updateQuestion = async (questionId, updateData) => {\r\n  try {\r\n    console.log('questionService: 更新题目', questionId, updateData);\r\n    \r\n    const question = AV.Object.createWithoutData('Question', questionId);\r\n    \r\n    // 记录旧的分类信息\r\n    let oldCategory = null;\r\n    if (updateData.categoryId) {\r\n      const oldQuestion = await new AV.Query('Question')\r\n        .include('category')\r\n        .get(questionId);\r\n      oldCategory = oldQuestion.get('category');\r\n    }\r\n    \r\n    // 设置更新字段\r\n    Object.keys(updateData).forEach(key => {\r\n      if (updateData[key] !== undefined) {\r\n        // 如果是 categoryId，转换为 Pointer 对象\r\n        if (key === 'categoryId') {\r\n          const categoryPointer = createCategoryPointer(updateData[key]);\r\n          question.set('category', categoryPointer);\r\n        } else {\r\n          question.set(key, updateData[key]);\r\n        }\r\n      }\r\n    });\r\n    \r\n    const result = await question.save();\r\n    console.log('questionService: 更新成功', result);\r\n    \r\n    // 如果分类发生变化，更新分类计数\r\n    if (updateData.categoryId && oldCategory) {\r\n      const newCategoryId = updateData.categoryId;\r\n      const oldCategoryId = getCategoryId(oldCategory);\r\n      \r\n      if (oldCategoryId !== newCategoryId) {\r\n        // 减少旧分类的计数\r\n        if (oldCategoryId) {\r\n          scheduleBatchUpdate(oldCategoryId, -1);\r\n        }\r\n        // 增加新分类的计数\r\n        if (newCategoryId) {\r\n          scheduleBatchUpdate(newCategoryId, 1);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 清除缓存\r\n    requestManager.clearCache(`question-${questionId}`);\r\n    requestManager.clearCache('all-questions');\r\n    \r\n    // 重新获取更新后的题目信息\r\n    const updatedQuestion = await new AV.Query('Question')\r\n      .include('category')\r\n      .get(questionId);\r\n    \r\n    return formatQuestionResponse(updatedQuestion);\r\n  } catch (error) {\r\n    console.error('questionService: 更新题目失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新题目复习时间\r\n */\r\nexport const updateQuestionReviewTime = async (questionId) => {\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    const question = AV.Object.createWithoutData('Question', questionId);\r\n    question.set('lastReviewedAt', new Date());\r\n    \r\n    const result = await question.save();\r\n    \r\n    // 清除缓存\r\n    requestManager.clearCache(`question-${questionId}`);\r\n    requestManager.clearCache('all-questions');\r\n    \r\n    return result;\r\n  } catch (error) {\r\n    console.error('更新题目复习时间失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取需要复习的题目\r\n */\r\nexport const getReviewQuestions = async (thresholdDays = 7) => {\r\n  const cacheKey = `review-questions-${thresholdDays}`;\r\n  \r\n  return requestManager.cachedRequest(cacheKey, async () => {\r\n    try {\r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n\r\n      const thresholdDate = new Date();\r\n      thresholdDate.setDate(thresholdDate.getDate() - thresholdDays);\r\n\r\n      const query = new AV.Query('Question');\r\n      query.equalTo('createdBy', currentUser);\r\n      query.lessThan('lastReviewedAt', thresholdDate);\r\n      query.include('category');\r\n      query.addAscending('lastReviewedAt');\r\n      \r\n      const questions = await query.find();\r\n      \r\n      return questions.map(question => formatQuestionResponse(question));\r\n    } catch (error) {\r\n      console.error('获取复习题目失败:', error);\r\n      throw error;\r\n    }\r\n  });\r\n};\r\n\r\nconst updateCategoryCountImmediately = async (category, change) => {\r\n  if (!category) return;\r\n  \r\n  const categoryId = getCategoryId(category);\r\n  if (!categoryId) return;\r\n\r\n  try {\r\n    const categoryQuery = new AV.Query('Category');\r\n    const freshCategory = await categoryQuery.get(categoryId);\r\n    \r\n    const currentCount = freshCategory.get('questionCount') || 0;\r\n    const newCount = Math.max(0, currentCount + change);\r\n    \r\n    freshCategory.set('questionCount', newCount);\r\n    await freshCategory.save();\r\n    \r\n    console.log(`分类 ${freshCategory.get('name')} 题目数量立即更新: ${currentCount} -> ${newCount}`);\r\n    \r\n    // 清除相关缓存\r\n    cacheConfig.categories.data = null;\r\n    cacheConfig.categories.timestamp = 0;\r\n    cacheConfig.questionCounts.delete(categoryId);\r\n    \r\n  } catch (error) {\r\n    console.error(`立即更新分类 ${categoryId} 题目数量失败:`, error);\r\n  }\r\n};\r\n\r\n/**\r\n * 清除所有缓存\r\n */\r\nexport const clearAllCache = () => {\r\n  requestManager.clearCache();\r\n};\r\n\r\n// 导出辅助函数\r\nexport { batchUpdateCategoryCounts, createCategoryPointer };","// components/ReviewReminderSection.jsx\r\nimport React, { useState } from 'react';\r\nimport AV from 'leancloud-storage';\r\nimport './ReviewReminderSection.css';\r\n\r\nconst ReviewReminderSection = ({\r\n  reviewQuestions,\r\n  setReviewQuestions,\r\n  reviewThreshold,\r\n  setReviewThreshold,\r\n  showReviewSettings,\r\n  setShowReviewSettings,\r\n  onQuestionClick, // 添加这个prop\r\n  onUpdateQuestionTime,\r\n  questions\r\n}) => {\r\n  const [selectedUrgency, setSelectedUrgency] = useState('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [updatingQuestions, setUpdatingQuestions] = useState(new Set());\r\n  \r\n  // 添加用户状态\r\n  const [currentUser, setCurrentUser] = useState(AV.User.current());\r\n\r\n  // 格式化时间显示\r\n  const formatTimeAgo = (date) => {\r\n    const now = new Date();\r\n    const diffMs = now - new Date(date);\r\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n    const diffWeeks = Math.floor(diffDays / 7);\r\n    const diffMonths = Math.floor(diffDays / 30);\r\n\r\n    if (diffDays === 0) return '今天';\r\n    if (diffDays === 1) return '昨天';\r\n    if (diffDays < 7) return `${diffDays}天前`;\r\n    if (diffWeeks < 4) return `${diffWeeks}周前`;\r\n    return `${diffMonths}月前`;\r\n  };\r\n\r\n  // 获取紧急程度 - 修改后的版本：1天=急需，3天=建议，5天=稍后\r\n  const getUrgencyLevel = (question) => {\r\n    // 使用 lastReviewedAt 字段，如果不存在则使用 createdAt\r\n    const lastReviewed = new Date(question.lastReviewedAt || question.createdAt);\r\n    const daysAgo = Math.floor((new Date() - lastReviewed) / (1000 * 60 * 60 * 24));\r\n    \r\n    if (daysAgo >= 5) return 'high';     // 5天及以上 = 急需复习\r\n    if (daysAgo >= 3) return 'medium';   // 3-4天 = 建议复习\r\n    return 'low';                        // 1-2天 = 可稍后复习\r\n  };\r\n\r\n  // 获取紧急程度颜色\r\n  const getUrgencyColor = (urgency) => {\r\n    switch (urgency) {\r\n      case 'high': return '#ff6b6b';\r\n      case 'medium': return '#ffa726';\r\n      case 'low': return '#4ecdc4';\r\n      default: return '#95a5a6';\r\n    }\r\n  };\r\n\r\n  // 获取紧急程度文本\r\n  const getUrgencyText = (urgency) => {\r\n    switch (urgency) {\r\n      case 'high': return '急需复习';\r\n      case 'medium': return '建议复习';\r\n      case 'low': return '可稍后复习';\r\n      default: return '未知';\r\n    }\r\n  };\r\n\r\n  // 获取紧急程度对应的天数描述\r\n  const getUrgencyDaysDescription = (urgency) => {\r\n    switch (urgency) {\r\n      case 'high': return '5天以上未复习';\r\n      case 'medium': return '3-4天未复习';\r\n      case 'low': return '1-2天未复习';\r\n      default: return '';\r\n    }\r\n  };\r\n\r\n  // 处理立即复习 - 修复版本\r\n  const handleReviewNow = async (questionId, e) => {\r\n    e.stopPropagation(); // 阻止事件冒泡，避免触发卡片点击\r\n    \r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    \r\n\r\n    // 验证题目是否存在\r\n    const question = questions.find(q => q.id === questionId);\r\n    if (!question) {\r\n      console.error('未找到题目:', questionId);\r\n      alert('题目不存在，请刷新页面重试');\r\n      return;\r\n    }\r\n\r\n\r\n    // 添加到更新中的集合\r\n    setUpdatingQuestions(prev => new Set(prev).add(questionId));\r\n    \r\n    try {\r\n      console.log('开始调用 onUpdateQuestionTime...');\r\n      \r\n      // 1. 首先更新题目的复习时间\r\n      await onUpdateQuestionTime(questionId);\r\n      \r\n      console.log('onUpdateQuestionTime 调用成功');\r\n      \r\n      // 2. 从复习列表中移除该题目\r\n      setReviewQuestions(prev => {\r\n        const newList = prev.filter(q => q.id !== questionId);\r\n        console.log('从复习列表移除后:', newList.length);\r\n        return newList;\r\n      });\r\n      \r\n      console.log('准备跳转到题目...');\r\n      \r\n      // 3. 找到题目信息并跳转到分类页面\r\n      if (question && question.category) {\r\n        console.log('跳转到分类:', question.category.id);\r\n        \r\n        // 调用父组件传递的跳转函数\r\n        if (onQuestionClick) {\r\n          onQuestionClick(questionId);\r\n        } else {\r\n          // 备用跳转逻辑\r\n          handleQuestionClick(question);\r\n        }\r\n      } else {\r\n        console.warn('无法找到题目对应的分类信息');\r\n        alert('复习时间已更新，但无法跳转到题目位置');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('更新复习时间失败:', error);\r\n      console.error('错误详情:', {\r\n        questionId,\r\n        currentUser: currentUser?.id,\r\n        errorMessage: error.message\r\n      });\r\n      \r\n      // 更详细的错误处理\r\n      let errorMessage = '更新失败，请重试';\r\n      \r\n      if (error.message.includes('permission')) {\r\n        errorMessage = '更新失败：没有权限修改此题目';\r\n      } else if (error.message.includes('Object not found')) {\r\n        errorMessage = '更新失败：题目不存在或已被删除';\r\n      } else if (error.message.includes('未找到对应的题目')) {\r\n        errorMessage = '更新失败：本地数据中未找到该题目';\r\n      } else if (error.message.includes('reserved')) {\r\n        errorMessage = '更新失败：数据字段冲突，请刷新页面重试';\r\n      }\r\n      \r\n      alert(errorMessage);\r\n    } finally {\r\n      // 从更新中的集合移除\r\n      setUpdatingQuestions(prev => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(questionId);\r\n        return newSet;\r\n      });\r\n    }\r\n  };\r\n\r\n  // 处理稍后提醒\r\n  const handlePostpone = (questionId, e) => {\r\n    e.stopPropagation();\r\n    // 这里可以添加更复杂的逻辑，比如推迟到明天等\r\n    alert('已推迟提醒，该题目将在明天再次出现在复习列表中');\r\n  };\r\n\r\n  // 处理题目点击 - 跳转到分类详情页\r\n  const handleQuestionClick = (question) => {\r\n    if (!question.category?.id) {\r\n      console.warn('题目没有分类信息，无法跳转');\r\n      alert('该题目没有分类信息，无法跳转');\r\n      return;\r\n    }\r\n\r\n    // 构建跳转URL\r\n    const categoryUrl = `/category/${question.category.id}`;\r\n    \r\n    // 使用 navigate 或 window.location 进行跳转\r\n    if (window.history.pushState) {\r\n      window.history.pushState(null, '', categoryUrl);\r\n      // 触发路由变化\r\n      window.dispatchEvent(new PopStateEvent('popstate'));\r\n    } else {\r\n      window.location.href = categoryUrl;\r\n    }\r\n    \r\n    // 可以添加一个滚动到特定题目的逻辑\r\n    // 这里需要在 CategoryDetailPage 中添加相应的处理\r\n    setTimeout(() => {\r\n      // 触发自定义事件，让 CategoryDetailPage 知道要滚动到哪个题目\r\n      window.dispatchEvent(new CustomEvent('scrollToQuestion', { \r\n        detail: { questionId: question.id } \r\n      }));\r\n    }, 100);\r\n  };\r\n\r\n  // 过滤题目\r\n  const filteredQuestions = reviewQuestions.filter(question => {\r\n    const matchesSearch = question.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         (question.category?.name || '').toLowerCase().includes(searchTerm.toLowerCase());\r\n    \r\n    if (selectedUrgency === 'all') return matchesSearch;\r\n    \r\n    const urgency = getUrgencyLevel(question);\r\n    return matchesSearch && urgency === selectedUrgency;\r\n  });\r\n\r\n  // 按紧急程度分组 - 使用新的天数标准\r\n  const questionsByUrgency = {\r\n    high: filteredQuestions.filter(q => getUrgencyLevel(q) === 'high'),    // 5天以上\r\n    medium: filteredQuestions.filter(q => getUrgencyLevel(q) === 'medium'), // 3-4天\r\n    low: filteredQuestions.filter(q => getUrgencyLevel(q) === 'low')        // 1-2天\r\n  };\r\n\r\n  // 获取进度百分比\r\n  const getProgressPercentage = () => {\r\n    const totalQuestions = questions.length;\r\n    const reviewedQuestions = totalQuestions - reviewQuestions.length;\r\n    return totalQuestions > 0 ? (reviewedQuestions / totalQuestions) * 100 : 0;\r\n  };\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <section className=\"review-reminder-section\">\r\n        <div className=\"container\">\r\n          <div className=\"auth-required-container\">\r\n            <div className=\"auth-required-icon\">🔐</div>\r\n            <h2>请先登录</h2>\r\n            <p>登录后即可查看复习提醒</p>\r\n            <div className=\"auth-required-actions\">\r\n              <button \r\n                onClick={() => window.dispatchEvent(new CustomEvent('showAuthModal'))}\r\n                className=\"login-btn\"\r\n              >\r\n                立即登录\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"review-reminder-section\">\r\n      <div className=\"container\">\r\n        {/* 用户欢迎信息 */}\r\n        <div className=\"user-welcome-banner\">\r\n          <h3>📚 复习提醒 - {currentUser.getUsername()}</h3>\r\n          <p>及时复习是巩固知识的关键，以下是需要您关注的题目</p>\r\n        </div>\r\n\r\n        {/* 头部统计信息 */}\r\n        <div className=\"review-header\">\r\n          <div className=\"review-stats\">\r\n            <div className=\"stat-card urgent\">\r\n              <div className=\"stat-icon\">🔥</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">{questionsByUrgency.high.length}</div>\r\n                <div className=\"stat-label\">急需复习</div>\r\n                <div className=\"stat-description\">5天以上</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stat-card medium\">\r\n              <div className=\"stat-icon\">⚠️</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">{questionsByUrgency.medium.length}</div>\r\n                <div className=\"stat-label\">建议复习</div>\r\n                <div className=\"stat-description\">3-4天</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stat-card low\">\r\n              <div className=\"stat-icon\">💡</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">{questionsByUrgency.low.length}</div>\r\n                <div className=\"stat-label\">可稍后复习</div>\r\n                <div className=\"stat-description\">1-2天</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stat-card total\">\r\n              <div className=\"stat-icon\">📚</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">{reviewQuestions.length}</div>\r\n                <div className=\"stat-label\">待复习题目</div>\r\n                <div className=\"stat-description\">总计</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 进度条 */}\r\n          <div className=\"review-progress\">\r\n            <div className=\"progress-header\">\r\n              <span>复习进度</span>\r\n              <span>{Math.round(getProgressPercentage())}%</span>\r\n            </div>\r\n            <div className=\"progress-bar\">\r\n              <div \r\n                className=\"progress-fill\"\r\n                style={{ width: `${getProgressPercentage()}%` }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"progress-stats\">\r\n              <span>{questions.length - reviewQuestions.length} / {questions.length} 题目已及时复习</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 控制面板 */}\r\n        <div className=\"review-controls\">\r\n          <div className=\"controls-left\">\r\n            <div className=\"search-box\">\r\n              <span className=\"search-icon\">🔍</span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"搜索题目或分类...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"search-input\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"urgency-filter\">\r\n              <button\r\n                className={`urgency-btn ${selectedUrgency === 'all' ? 'active' : ''}`}\r\n                onClick={() => setSelectedUrgency('all')}\r\n              >\r\n                全部\r\n              </button>\r\n              <button\r\n                className={`urgency-btn high ${selectedUrgency === 'high' ? 'active' : ''}`}\r\n                onClick={() => setSelectedUrgency('high')}\r\n              >\r\n                🔥 急需 (5天+)\r\n              </button>\r\n              <button\r\n                className={`urgency-btn medium ${selectedUrgency === 'medium' ? 'active' : ''}`}\r\n                onClick={() => setSelectedUrgency('medium')}\r\n              >\r\n                ⚠️ 建议 (3-4天)\r\n              </button>\r\n              <button\r\n                className={`urgency-btn low ${selectedUrgency === 'low' ? 'active' : ''}`}\r\n                onClick={() => setSelectedUrgency('low')}\r\n              >\r\n                💡 稍后 (1-2天)\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"controls-right\">\r\n            <button\r\n              className=\"settings-btn\"\r\n              onClick={() => setShowReviewSettings(true)}\r\n            >\r\n              ⚙️ 复习设置\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 复习设置弹窗 */}\r\n        {showReviewSettings && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h3>复习提醒设置</h3>\r\n                <button \r\n                  className=\"close-btn\"\r\n                  onClick={() => setShowReviewSettings(false)}\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"settings-content\">\r\n                <div className=\"setting-item\">\r\n                  <label htmlFor=\"reviewThreshold\">\r\n                    复习提醒阈值\r\n                    <span className=\"hint\">（超过这个天数的题目会出现在复习列表中）</span>\r\n                  </label>\r\n                  <div className=\"threshold-control\">\r\n                    <input\r\n                      id=\"reviewThreshold\"\r\n                      type=\"range\"\r\n                      min=\"1\"\r\n                      max=\"30\"\r\n                      step=\"1\"\r\n                      value={reviewThreshold}\r\n                      onChange={(e) => setReviewThreshold(parseInt(e.target.value))}\r\n                      className=\"threshold-slider\"\r\n                    />\r\n                    <span className=\"threshold-value\">{reviewThreshold} 天</span>\r\n                  </div>\r\n                  <div className=\"threshold-presets\">\r\n                    {[1, 3, 5, 7, 14, 30].map(days => (\r\n                      <button\r\n                        key={days}\r\n                        className={`preset-btn ${reviewThreshold === days ? 'active' : ''}`}\r\n                        onClick={() => setReviewThreshold(days)}\r\n                      >\r\n                        {days}天\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"urgency-explanation\">\r\n                  <h4>📋 紧急程度说明</h4>\r\n                  <div className=\"urgency-levels\">\r\n                    <div className=\"urgency-level high\">\r\n                      <span className=\"urgency-color\" style={{backgroundColor: '#ff6b6b'}}></span>\r\n                      <div className=\"urgency-info\">\r\n                        <strong>急需复习 (红色)</strong>\r\n                        <span>5天以上未复习的题目</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"urgency-level medium\">\r\n                      <span className=\"urgency-color\" style={{backgroundColor: '#ffa726'}}></span>\r\n                      <div className=\"urgency-info\">\r\n                        <strong>建议复习 (橙色)</strong>\r\n                        <span>3-4天未复习的题目</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"urgency-level low\">\r\n                      <span className=\"urgency-color\" style={{backgroundColor: '#4ecdc4'}}></span>\r\n                      <div className=\"urgency-info\">\r\n                        <strong>可稍后复习 (青色)</strong>\r\n                        <span>1-2天未复习的题目</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                \r\n              </div>\r\n              \r\n              <div className=\"modal-actions\">\r\n                <button\r\n                  className=\"cancel-btn\"\r\n                  onClick={() => setShowReviewSettings(false)}\r\n                >\r\n                  取消\r\n                </button>\r\n                <button\r\n                  className=\"confirm-btn\"\r\n                  onClick={() => setShowReviewSettings(false)}\r\n                >\r\n                  确认设置\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 题目列表 */}\r\n        <div className=\"review-questions\">\r\n          {filteredQuestions.length === 0 ? (\r\n            <div className=\"empty-review-state\">\r\n              <div className=\"empty-icon\">🎉</div>\r\n              <h3>太棒了！没有需要复习的题目</h3>\r\n              <p>继续保持良好的复习习惯，或者调整复习设置来查看更多题目</p>\r\n              <button\r\n                className=\"adjust-settings-btn\"\r\n                onClick={() => setShowReviewSettings(true)}\r\n              >\r\n                调整复习设置\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"questions-grid\">\r\n              {filteredQuestions.map((question, index) => {\r\n                const urgency = getUrgencyLevel(question);\r\n                const urgencyColor = getUrgencyColor(urgency);\r\n                // 使用 lastReviewedAt 字段\r\n                const lastReviewed = new Date(question.lastReviewedAt || question.createdAt);\r\n                const daysAgo = Math.floor((new Date() - lastReviewed) / (1000 * 60 * 60 * 24));\r\n                const isUpdating = updatingQuestions.has(question.id);\r\n                \r\n                return (\r\n                  <div\r\n                    key={question.id}\r\n                    className={`review-question-card ${isUpdating ? 'updating' : ''}`}\r\n                    onClick={() => handleQuestionClick(question)}\r\n                    style={{ '--urgency-color': urgencyColor }}\r\n                  >\r\n                    <div className=\"card-header\">\r\n                      <div className=\"urgency-indicator\" style={{ backgroundColor: urgencyColor }}></div>\r\n                      <div className=\"question-meta\">\r\n                        <span className=\"urgency-badge\" style={{ backgroundColor: urgencyColor }}>\r\n                          {getUrgencyText(urgency)}\r\n                        </span>\r\n                        <span className=\"category-tag\">\r\n                          {question.category?.name || '未分类'}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"time-info\">\r\n                        <span className=\"last-reviewed\">\r\n                          上次复习: {formatTimeAgo(question.lastReviewedAt || question.createdAt)}\r\n                        </span>\r\n                        <span className=\"days-ago\">({daysAgo}天前)</span>\r\n                        <span className=\"urgency-description\">\r\n                          {getUrgencyDaysDescription(urgency)}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"card-content\">\r\n                      <h4 className=\"question-title\">{question.title}</h4>\r\n                      \r\n                      {question.detailedAnswer && (\r\n                        <div className=\"answer-preview\">\r\n                          {question.detailedAnswer.substring(0, 100)}...\r\n                        </div>\r\n                      )}\r\n                      \r\n                      <div className=\"question-tags\">\r\n                        <span className={`difficulty-tag difficulty-${question.difficulty}`}>\r\n                          {question.difficulty === 'easy' ? '简单' : \r\n                           question.difficulty === 'medium' ? '中等' : '困难'}\r\n                        </span>\r\n                        {question.tags && question.tags.slice(0, 3).map((tag, tagIndex) => (\r\n                          <span key={tagIndex} className=\"tag\">\r\n                            #{tag}\r\n                          </span>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"card-footer\">\r\n                      <div className=\"review-actions\">\r\n                        <button \r\n                          className=\"review-now-btn\"\r\n                          onClick={(e) => handleReviewNow(question.id, e)}\r\n                          disabled={isUpdating}\r\n                        >\r\n                          {isUpdating ? '🔄 更新中...' : '🔍 立即复习'}\r\n                        </button>\r\n                        <button \r\n                          className=\"postpone-btn\"\r\n                          onClick={(e) => handlePostpone(question.id, e)}\r\n                          disabled={isUpdating}\r\n                        >\r\n                          ⏰ 稍后提醒\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {isUpdating && (\r\n                      <div className=\"updating-overlay\">\r\n                        <div className=\"updating-spinner\"></div>\r\n                        <span>更新中...</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ReviewReminderSection;","import React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport { useVirtualizer } from '@tanstack/react-virtual';\r\nimport { getQuestionsBatch } from '../services/questionService';\r\nimport './CalendarTooltip.css';\r\n\r\nconst CalendarTooltip = ({ \r\n  dayData, \r\n  position, \r\n  onClose,\r\n  isVisible \r\n}) => {\r\n  const tooltipRef = useRef(null);\r\n  const queryClient = useQueryClient();\r\n  const [cachedQuestions, setCachedQuestions] = useState([]);\r\n  const [itemHeights, setItemHeights] = useState(new Map());\r\n\r\n  // 批量获取问题数据的查询\r\n  const { data: questionsData, isLoading } = useQuery({\r\n    queryKey: ['day-questions-batch', dayData?.date?.toISOString(), dayData?.questions?.map(q => q.id).join(',')],\r\n    queryFn: async () => {\r\n      if (!dayData?.questions?.length) return [];\r\n      \r\n      // 检查缓存中已有的数据\r\n      const cachedQuestions = [];\r\n      const missingQuestionIds = [];\r\n      \r\n      dayData.questions.forEach(question => {\r\n        const cached = queryClient.getQueryData(['question', question.id]);\r\n        if (cached) {\r\n          cachedQuestions.push(cached);\r\n        } else {\r\n          missingQuestionIds.push(question.id);\r\n        }\r\n      });\r\n      \r\n      // 如果有缺失的数据，批量获取\r\n      if (missingQuestionIds.length > 0) {\r\n        try {\r\n          const batchResults = await getQuestionsBatch(missingQuestionIds);\r\n          // 将批量获取的数据存入缓存\r\n          batchResults.forEach(question => {\r\n            queryClient.setQueryData(['question', question.id], question);\r\n          });\r\n          return [...cachedQuestions, ...batchResults];\r\n        } catch (error) {\r\n          console.warn('批量获取题目失败，使用基础数据:', error);\r\n          // 失败时使用基础数据\r\n          const fallbackQuestions = dayData.questions.map(q => \r\n            queryClient.getQueryData(['question', q.id]) || q\r\n          );\r\n          return fallbackQuestions;\r\n        }\r\n      }\r\n      \r\n      return cachedQuestions;\r\n    },\r\n    enabled: isVisible && !!dayData?.questions?.length,\r\n    staleTime: 10 * 60 * 1000,\r\n    cacheTime: 30 * 60 * 1000,\r\n    retry: 1,\r\n    retryDelay: 1000,\r\n  });\r\n\r\n  // 缓存更新\r\n  useEffect(() => {\r\n    if (questionsData && questionsData.length > 0) {\r\n      setCachedQuestions(questionsData);\r\n    } else if (dayData?.questions) {\r\n      setCachedQuestions(dayData.questions);\r\n    }\r\n  }, [questionsData, dayData?.questions]);\r\n\r\n  // 虚拟化容器引用\r\n  const parentRef = useRef(null);\r\n\r\n  // 使用固定高度避免无限循环\r\n  const virtualizer = useVirtualizer({\r\n    count: cachedQuestions.length,\r\n    getScrollElement: () => parentRef.current,\r\n    estimateSize: () => 140, // 固定高度，避免动态测量导致的循环\r\n    overscan: 5,\r\n  });\r\n\r\n  // 点击外部关闭\r\n  const handleClickOutside = useCallback((event) => {\r\n    if (tooltipRef.current && !tooltipRef.current.contains(event.target)) {\r\n      onClose();\r\n    }\r\n  }, [onClose]);\r\n\r\n  useEffect(() => {\r\n    if (isVisible) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }\r\n  }, [isVisible, handleClickOutside]);\r\n\r\n  // ESC键关闭\r\n  const handleEscape = useCallback((event) => {\r\n    if (event.key === 'Escape') {\r\n      onClose();\r\n    }\r\n  }, [onClose]);\r\n\r\n  useEffect(() => {\r\n    if (isVisible) {\r\n      document.addEventListener('keydown', handleEscape);\r\n      return () => document.removeEventListener('keydown', handleEscape);\r\n    }\r\n  }, [isVisible, handleEscape]);\r\n\r\n  if (!isVisible || !dayData) return null;\r\n\r\n  const virtualQuestions = virtualizer.getVirtualItems();\r\n  const totalQuestions = dayData.questions?.length || 0;\r\n\r\n  return (\r\n    <div \r\n      ref={tooltipRef}\r\n      className=\"calendar-tooltip\"\r\n      style={{\r\n        left: `${Math.min(position.x, window.innerWidth - 500)}px`,\r\n        top: `${position.y}px`,\r\n        transform: 'translateX(-50%)'\r\n      }}\r\n    >\r\n      <div className=\"tooltip-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"date-display\">\r\n            <span className=\"date-day\">{dayData.date.getDate()}</span>\r\n            <div className=\"date-info\">\r\n              <span className=\"date-weekday\">\r\n                {dayData.date.toLocaleDateString('zh-CN', { weekday: 'long' })}\r\n              </span>\r\n              <span className=\"date-full\">\r\n                {dayData.date.toLocaleDateString('zh-CN', { \r\n                  year: 'numeric', \r\n                  month: 'long',\r\n                  day: 'numeric'\r\n                })}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"stats-badge\">\r\n            <span className=\"stat-icon\">📚</span>\r\n            <span className=\"stat-count\">{totalQuestions}</span>\r\n            <span className=\"stat-label\">道题目</span>\r\n          </div>\r\n        </div>\r\n        <button \r\n          className=\"tooltip-close-btn\"\r\n          onClick={onClose}\r\n          aria-label=\"关闭\"\r\n        >\r\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\r\n            <path d=\"M12.707 3.293a1 1 0 00-1.414 0L8 6.586 4.707 3.293a1 1 0 00-1.414 1.414L6.586 8l-3.293 3.293a1 1 0 101.414 1.414L8 9.414l3.293 3.293a1 1 0 001.414-1.414L9.414 8l3.293-3.293a1 1 0 000-1.414z\"/>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"tooltip-content\">\r\n        {isLoading ? (\r\n          <div className=\"loading-state\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <span className=\"loading-text\">加载题目中...</span>\r\n          </div>\r\n        ) : cachedQuestions.length > 0 ? (\r\n          <div \r\n            ref={parentRef}\r\n            className=\"questions-virtual-container\"\r\n            style={{\r\n              height: '500px',\r\n              overflow: 'auto'\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: `${virtualizer.getTotalSize()}px`,\r\n                width: '100%',\r\n                position: 'relative'\r\n              }}\r\n            >\r\n              {virtualQuestions.map((virtualRow) => {\r\n                const question = cachedQuestions[virtualRow.index];\r\n                \r\n                return (\r\n                  <div\r\n                    key={question.id}\r\n                    className=\"question-virtual-item\"\r\n                    style={{\r\n                      position: 'absolute',\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: '100%',\r\n                      height: `${virtualRow.size}px`,\r\n                      transform: `translateY(${virtualRow.start}px)`\r\n                    }}\r\n                  >\r\n                    <QuestionItem \r\n                      question={question} \r\n                      index={virtualRow.index}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"empty-state\">\r\n            <div className=\"empty-icon\">📝</div>\r\n            <h4 className=\"empty-title\">这一天没有学习记录</h4>\r\n            <p className=\"empty-description\">开始记录你的学习进度吧</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {cachedQuestions.length > 0 && (\r\n        <div className=\"tooltip-footer\">\r\n          <div className=\"footer-stats\">\r\n            <span className=\"virtual-info\">\r\n              显示 {virtualQuestions.length} / {totalQuestions} 道题目\r\n            </span>\r\n            <span className=\"scroll-hint\">滚动查看更多</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"tooltip-arrow\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 简化的单个题目项组件 - 移除动态高度测量\r\nconst QuestionItem = React.memo(({ question, index }) => {\r\n  const getDifficultyColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#10b981';\r\n      case 'medium': return '#f59e0b';\r\n      case 'hard': return '#ef4444';\r\n      default: return '#6b7280';\r\n    }\r\n  };\r\n\r\n  const getDifficultyText = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '简单';\r\n      case 'medium': return '中等';\r\n      case 'hard': return '困难';\r\n      default: return '未知';\r\n    }\r\n  };\r\n\r\n  const formatTime = (date) => {\r\n    return new Date(date).toLocaleTimeString('zh-CN', {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-item\">\r\n      <div className=\"question-main\">\r\n        <div className=\"question-header\">\r\n          <div className=\"question-meta\">\r\n            <span className=\"question-index\">#{index + 1}</span>\r\n            <span \r\n              className=\"difficulty-badge\"\r\n              style={{ \r\n                backgroundColor: getDifficultyColor(question.difficulty),\r\n                color: 'white'\r\n              }}\r\n            >\r\n              {getDifficultyText(question.difficulty)}\r\n            </span>\r\n            <span className=\"question-time\">\r\n              {formatTime(question.createdAt)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <h4 className=\"question-title\">{question.title}</h4>\r\n        \r\n        <div className=\"question-category\">\r\n          <span className=\"category-tag\">\r\n            {question.category?.name || '未分类'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nQuestionItem.displayName = 'QuestionItem';\r\n\r\nexport default CalendarTooltip;","// Documents.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Documents.css';\r\n\r\nconst Documents = () => {\r\n  const [selectedDoc, setSelectedDoc] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentQuoteIndex, setCurrentQuoteIndex] = useState(0);\r\n\r\n  // 技术名言数据\r\n  const techQuotes = [\r\n    {\r\n      text: \"任何足够先进的技术都与魔法无异。\",\r\n      author: \"亚瑟·C·克拉克\",\r\n      category: \"科技哲学\"\r\n    },\r\n    {\r\n      text: \"代码就像是幽默，当你需要解释它时，它就不再有趣了。\",\r\n      author: \"Cory House\",\r\n      category: \"编程\"\r\n    },\r\n    {\r\n      text: \"首先，解决问题。然后，编写代码。\",\r\n      author: \"John Johnson\",\r\n      category: \"开发方法\"\r\n    },\r\n    {\r\n      text: \"编程不是关于你知道什么，而是关于你能弄清楚什么。\",\r\n      author: \"Chris Pine\",\r\n      category: \"学习\"\r\n    },\r\n    {\r\n      text: \"简单性是可靠性的先决条件。\",\r\n      author: \"Edsger W. Dijkstra\",\r\n      category: \"软件工程\"\r\n    },\r\n    {\r\n      text: \"测试只能证明 bug 的存在，而不能证明它们的不存在。\",\r\n      author: \"Edsger W. Dijkstra\",\r\n      category: \"测试\"\r\n    },\r\n    {\r\n      text: \"最好的错误信息是根本不需要错误信息。\",\r\n      author: \"Jef Raskin\",\r\n      category: \"用户体验\"\r\n    },\r\n    {\r\n      text: \"过早优化是万恶之源。\",\r\n      author: \"Donald Knuth\",\r\n      category: \"性能优化\"\r\n    },\r\n    {\r\n      text: \"代码的阅读次数远多于编写次数。\",\r\n      author: \"Guido van Rossum\",\r\n      category: \"代码质量\"\r\n    },\r\n    {\r\n      text: \"完美不是在没有东西可加时达到的，而是在没有东西可拿走时达到的。\",\r\n      author: \"Antoine de Saint-Exupéry\",\r\n      category: \"设计\"\r\n    },\r\n    {\r\n      text: \"计算机科学的核心是解决问题。\",\r\n      author: \"Abelson and Sussman\",\r\n      category: \"计算机科学\"\r\n    },\r\n    {\r\n      text: \"未来已经到来，只是分布不均。\",\r\n      author: \"William Gibson\",\r\n      category: \"科技创新\"\r\n    },\r\n    {\r\n      text: \"最危险的代码是你看不到问题的代码。\",\r\n      author: \"Douglas Crockford\",\r\n      category: \"代码安全\"\r\n    },\r\n    {\r\n      text: \"编程是理解的艺术。\",\r\n      author: \"Kristen Nygaard\",\r\n      category: \"编程哲学\"\r\n    },\r\n    {\r\n      text: \"技术应该改善生活，而不是支配生活。\",\r\n      author: \"Tim Cook\",\r\n      category: \"科技伦理\"\r\n    }\r\n  ];\r\n\r\n  // 自动轮播名言\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentQuoteIndex((prevIndex) => \r\n        prevIndex === techQuotes.length - 1 ? 0 : prevIndex + 1\r\n      );\r\n    }, 5000); // 每5秒切换一次\r\n\r\n    return () => clearInterval(interval);\r\n  }, [techQuotes.length]);\r\n\r\n  // 手动切换名言\r\n  const nextQuote = () => {\r\n    setCurrentQuoteIndex((prevIndex) => \r\n      prevIndex === techQuotes.length - 1 ? 0 : prevIndex + 1\r\n    );\r\n  };\r\n\r\n  const prevQuote = () => {\r\n    setCurrentQuoteIndex((prevIndex) => \r\n      prevIndex === 0 ? techQuotes.length - 1 : prevIndex - 1\r\n    );\r\n  };\r\n\r\n  // 扩展的知名文档数据（专注于前端和后端）\r\n  const documents = [\r\n    // 前端框架\r\n    {\r\n      id: 1,\r\n      title: 'React 官方文档',\r\n      description: '用于构建用户界面的 JavaScript 库',\r\n      category: '前端框架',\r\n      url: 'https://react.dev',\r\n      icon: '⚛️'\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Vue.js 文档',\r\n      description: '渐进式 JavaScript 框架',\r\n      category: '前端框架',\r\n      url: 'https://vuejs.org',\r\n      icon: '🟢'\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Angular 文档',\r\n      description: 'Google 开发的前端框架',\r\n      category: '前端框架',\r\n      url: 'https://angular.io',\r\n      icon: '🅰️'\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Svelte 文档',\r\n      description: '编译时框架，无虚拟DOM',\r\n      category: '前端框架',\r\n      url: 'https://svelte.dev',\r\n      icon: '⚡'\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'SolidJS 文档',\r\n      description: '用于构建用户界面的声明式 JavaScript 库',\r\n      category: '前端框架',\r\n      url: 'https://solidjs.com',\r\n      icon: '🔷'\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Next.js 文档',\r\n      description: 'React 全栈框架',\r\n      category: '前端框架',\r\n      url: 'https://nextjs.org',\r\n      icon: '⏭️'\r\n    },\r\n    {\r\n      id: 7,\r\n      title: 'Nuxt.js 文档',\r\n      description: 'Vue.js 全栈框架',\r\n      category: '前端框架',\r\n      url: 'https://nuxtjs.org',\r\n      icon: '🔥'\r\n    },\r\n\r\n    // 前端状态管理\r\n    {\r\n      id: 8,\r\n      title: 'Redux 文档',\r\n      description: 'JavaScript 应用状态容器',\r\n      category: '前端状态管理',\r\n      url: 'https://redux.js.org',\r\n      icon: '📦'\r\n    },\r\n    {\r\n      id: 9,\r\n      title: 'Zustand 文档',\r\n      description: '小型、快速、可扩展的状态管理',\r\n      category: '前端状态管理',\r\n      url: 'https://github.com/pmndrs/zustand',\r\n      icon: '🐻'\r\n    },\r\n    {\r\n      id: 10,\r\n      title: 'MobX 文档',\r\n      description: '简单、可扩展的状态管理',\r\n      category: '前端状态管理',\r\n      url: 'https://mobx.js.org',\r\n      icon: '🔄'\r\n    },\r\n    {\r\n      id: 11,\r\n      title: 'Vuex 文档',\r\n      description: 'Vue.js 的状态管理库',\r\n      category: '前端状态管理',\r\n      url: 'https://vuex.vuejs.org',\r\n      icon: '🏪'\r\n    },\r\n\r\n    // CSS 框架和预处理器\r\n    {\r\n      id: 12,\r\n      title: 'Tailwind CSS 文档',\r\n      description: '实用优先的 CSS 框架',\r\n      category: 'CSS 框架',\r\n      url: 'https://tailwindcss.com',\r\n      icon: '🎨'\r\n    },\r\n    {\r\n      id: 13,\r\n      title: 'Bootstrap 文档',\r\n      description: '最流行的前端框架',\r\n      category: 'CSS 框架',\r\n      url: 'https://getbootstrap.com',\r\n      icon: '🎯'\r\n    },\r\n    {\r\n      id: 14,\r\n      title: 'Sass 文档',\r\n      description: '专业级 CSS 扩展语言',\r\n      category: 'CSS 框架',\r\n      url: 'https://sass-lang.com',\r\n      icon: '💎'\r\n    },\r\n    {\r\n      id: 15,\r\n      title: 'Less 文档',\r\n      description: 'CSS 预处理器',\r\n      category: 'CSS 框架',\r\n      url: 'http://lesscss.org',\r\n      icon: '➖'\r\n    },\r\n    {\r\n      id: 16,\r\n      title: 'Styled Components',\r\n      description: 'CSS-in-JS 样式库',\r\n      category: 'CSS 框架',\r\n      url: 'https://styled-components.com',\r\n      icon: '💅'\r\n    },\r\n\r\n    // 前端构建工具\r\n    {\r\n      id: 17,\r\n      title: 'Webpack 文档',\r\n      description: '模块打包工具',\r\n      category: '前端构建工具',\r\n      url: 'https://webpack.js.org',\r\n      icon: '📦'\r\n    },\r\n    {\r\n      id: 18,\r\n      title: 'Vite 文档',\r\n      description: '下一代前端构建工具',\r\n      category: '前端构建工具',\r\n      url: 'https://vitejs.dev',\r\n      icon: '⚡'\r\n    },\r\n    {\r\n      id: 19,\r\n      title: 'Parcel 文档',\r\n      description: '零配置构建工具',\r\n      category: '前端构建工具',\r\n      url: 'https://parceljs.org',\r\n      icon: '📮'\r\n    },\r\n    {\r\n      id: 20,\r\n      title: 'Rollup 文档',\r\n      description: 'JavaScript 模块打包器',\r\n      category: '前端构建工具',\r\n      url: 'https://rollupjs.org',\r\n      icon: '🔄'\r\n    },\r\n\r\n    // 前端测试\r\n    {\r\n      id: 21,\r\n      title: 'Jest 文档',\r\n      description: 'JavaScript 测试框架',\r\n      category: '前端测试',\r\n      url: 'https://jestjs.io',\r\n      icon: '🎭'\r\n    },\r\n    {\r\n      id: 22,\r\n      title: 'Cypress 文档',\r\n      description: '端到端测试框架',\r\n      category: '前端测试',\r\n      url: 'https://docs.cypress.io',\r\n      icon: '🎯'\r\n    },\r\n    {\r\n      id: 23,\r\n      title: 'Testing Library',\r\n      description: 'DOM 测试工具库',\r\n      category: '前端测试',\r\n      url: 'https://testing-library.com',\r\n      icon: '🧪'\r\n    },\r\n    {\r\n      id: 24,\r\n      title: 'Vitest 文档',\r\n      description: '基于 Vite 的测试框架',\r\n      category: '前端测试',\r\n      url: 'https://vitest.dev',\r\n      icon: '⚡'\r\n    },\r\n\r\n    // 后端框架 (Node.js)\r\n    {\r\n      id: 25,\r\n      title: 'Express.js 文档',\r\n      description: 'Node.js Web 应用框架',\r\n      category: '后端框架',\r\n      url: 'https://expressjs.com',\r\n      icon: '🚂'\r\n    },\r\n    {\r\n      id: 26,\r\n      title: 'Koa 文档',\r\n      description: '下一代 Node.js 框架',\r\n      category: '后端框架',\r\n      url: 'https://koajs.com',\r\n      icon: '🎋'\r\n    },\r\n    {\r\n      id: 27,\r\n      title: 'NestJS 文档',\r\n      description: '用于构建高效、可扩展的服务器端应用',\r\n      category: '后端框架',\r\n      url: 'https://nestjs.com',\r\n      icon: '🪺'\r\n    },\r\n    {\r\n      id: 28,\r\n      title: 'Fastify 文档',\r\n      description: '快速且低开销的 Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://fastify.io',\r\n      icon: '🚀'\r\n    },\r\n    {\r\n      id: 29,\r\n      title: 'Hapi 文档',\r\n      description: '丰富的框架用于构建应用和服务',\r\n      category: '后端框架',\r\n      url: 'https://hapi.dev',\r\n      icon: '🎯'\r\n    },\r\n\r\n    // 后端框架 (Python)\r\n    {\r\n      id: 30,\r\n      title: 'Django 文档',\r\n      description: 'Python Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://docs.djangoproject.com',\r\n      icon: '🎸'\r\n    },\r\n    {\r\n      id: 31,\r\n      title: 'Flask 文档',\r\n      description: 'Python 微框架',\r\n      category: '后端框架',\r\n      url: 'https://flask.palletsprojects.com',\r\n      icon: '🍶'\r\n    },\r\n    {\r\n      id: 32,\r\n      title: 'FastAPI 文档',\r\n      description: '现代、快速的 Python Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://fastapi.tiangolo.com',\r\n      icon: '⚡'\r\n    },\r\n\r\n    // 后端框架 (Java)\r\n    {\r\n      id: 33,\r\n      title: 'Spring 文档',\r\n      description: 'Java 应用框架',\r\n      category: '后端框架',\r\n      url: 'https://spring.io/docs',\r\n      icon: '🌱'\r\n    },\r\n    {\r\n      id: 34,\r\n      title: 'Spring Boot 文档',\r\n      description: '简化 Spring 应用开发',\r\n      category: '后端框架',\r\n      url: 'https://spring.io/projects/spring-boot',\r\n      icon: '👢'\r\n    },\r\n\r\n    // 后端框架 (其他语言)\r\n    {\r\n      id: 35,\r\n      title: 'Laravel 文档',\r\n      description: 'PHP Web 应用框架',\r\n      category: '后端框架',\r\n      url: 'https://laravel.com/docs',\r\n      icon: '🔨'\r\n    },\r\n    {\r\n      id: 36,\r\n      title: 'Ruby on Rails 文档',\r\n      description: 'Ruby Web 应用框架',\r\n      category: '后端框架',\r\n      url: 'https://rubyonrails.org',\r\n      icon: '💎'\r\n    },\r\n    {\r\n      id: 37,\r\n      title: 'ASP.NET Core 文档',\r\n      description: '.NET Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://docs.microsoft.com/aspnet/core',\r\n      icon: '🌐'\r\n    },\r\n    {\r\n      id: 38,\r\n      title: 'Gin 文档',\r\n      description: 'Go 语言 Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://gin-gonic.com',\r\n      icon: '🍸'\r\n    },\r\n\r\n    // 数据库和 ORM\r\n    {\r\n      id: 39,\r\n      title: 'MySQL 文档',\r\n      description: 'MySQL 数据库官方文档',\r\n      category: '数据库',\r\n      url: 'https://dev.mysql.com/doc',\r\n      icon: '🐬'\r\n    },\r\n    {\r\n      id: 40,\r\n      title: 'PostgreSQL 文档',\r\n      description: 'PostgreSQL 数据库文档',\r\n      category: '数据库',\r\n      url: 'https://www.postgresql.org/docs',\r\n      icon: '🐘'\r\n    },\r\n    {\r\n      id: 41,\r\n      title: 'MongoDB 文档',\r\n      description: 'MongoDB NoSQL 数据库文档',\r\n      category: '数据库',\r\n      url: 'https://docs.mongodb.com',\r\n      icon: '🍃'\r\n    },\r\n    {\r\n      id: 42,\r\n      title: 'Redis 文档',\r\n      description: 'Redis 内存数据结构存储',\r\n      category: '数据库',\r\n      url: 'https://redis.io/documentation',\r\n      icon: '🔴'\r\n    },\r\n    {\r\n      id: 43,\r\n      title: 'Prisma 文档',\r\n      description: '下一代 Node.js TypeScript ORM',\r\n      category: '数据库',\r\n      url: 'https://www.prisma.io',\r\n      icon: '🛡️'\r\n    },\r\n    {\r\n      id: 44,\r\n      title: 'Sequelize 文档',\r\n      description: 'Node.js 的 ORM',\r\n      category: '数据库',\r\n      url: 'https://sequelize.org',\r\n      icon: '🗄️'\r\n    },\r\n    {\r\n      id: 45,\r\n      title: 'Mongoose 文档',\r\n      description: 'MongoDB 对象建模工具',\r\n      category: '数据库',\r\n      url: 'https://mongoosejs.com',\r\n      icon: '🐍'\r\n    },\r\n\r\n    // API 和微服务\r\n    {\r\n      id: 46,\r\n      title: 'GraphQL 文档',\r\n      description: 'API 查询语言',\r\n      category: 'API 和微服务',\r\n      url: 'https://graphql.org',\r\n      icon: '📈'\r\n    },\r\n    {\r\n      id: 47,\r\n      title: 'Apollo 文档',\r\n      description: 'GraphQL 平台',\r\n      category: 'API 和微服务',\r\n      url: 'https://www.apollographql.com',\r\n      icon: '🚀'\r\n    },\r\n    {\r\n      id: 48,\r\n      title: 'Swagger 文档',\r\n      description: 'API 设计和文档工具',\r\n      category: 'API 和微服务',\r\n      url: 'https://swagger.io',\r\n      icon: '📝'\r\n    },\r\n    {\r\n      id: 49,\r\n      title: 'gRPC 文档',\r\n      description: '高性能 RPC 框架',\r\n      category: 'API 和微服务',\r\n      url: 'https://grpc.io',\r\n      icon: '🔧'\r\n    },\r\n    {\r\n      id: 50,\r\n      title: 'RESTful API 指南',\r\n      description: 'REST API 最佳实践',\r\n      category: 'API 和微服务',\r\n      url: 'https://restfulapi.net',\r\n      icon: '🌐'\r\n    },\r\n\r\n    // 认证和授权\r\n    {\r\n      id: 51,\r\n      title: 'JWT 文档',\r\n      description: 'JSON Web Tokens 官方文档',\r\n      category: '认证和授权',\r\n      url: 'https://jwt.io',\r\n      icon: '🔐'\r\n    },\r\n    {\r\n      id: 52,\r\n      title: 'OAuth 2.0 指南',\r\n      description: 'OAuth 2.0 授权框架',\r\n      category: '认证和授权',\r\n      url: 'https://oauth.net/2',\r\n      icon: '🔑'\r\n    },\r\n    {\r\n      id: 53,\r\n      title: 'Passport.js 文档',\r\n      description: 'Node.js 认证中间件',\r\n      category: '认证和授权',\r\n      url: 'http://www.passportjs.org',\r\n      icon: '🛂'\r\n    },\r\n    {\r\n      id: 54,\r\n      title: 'Auth0 文档',\r\n      description: '身份验证和授权平台',\r\n      category: '认证和授权',\r\n      url: 'https://auth0.com/docs',\r\n      icon: '🔒'\r\n    },\r\n\r\n    // 部署和 DevOps\r\n    {\r\n      id: 55,\r\n      title: 'Docker 文档',\r\n      description: '容器化平台文档',\r\n      category: '部署和 DevOps',\r\n      url: 'https://docs.docker.com',\r\n      icon: '🐳'\r\n    },\r\n    {\r\n      id: 56,\r\n      title: 'Kubernetes 文档',\r\n      description: '容器编排系统文档',\r\n      category: '部署和 DevOps',\r\n      url: 'https://kubernetes.io/docs',\r\n      icon: '⚓'\r\n    },\r\n    {\r\n      id: 57,\r\n      title: 'PM2 文档',\r\n      description: 'Node.js 进程管理器',\r\n      category: '部署和 DevOps',\r\n      url: 'https://pm2.keymetrics.io',\r\n      icon: '🔄'\r\n    },\r\n    {\r\n      id: 58,\r\n      title: 'Nginx 文档',\r\n      description: 'Web 服务器和反向代理',\r\n      category: '部署和 DevOps',\r\n      url: 'https://nginx.org/en/docs',\r\n      icon: '🔧'\r\n    },\r\n\r\n    // 编程语言\r\n    {\r\n      id: 59,\r\n      title: 'TypeScript 文档',\r\n      description: 'TypeScript 语言文档',\r\n      category: '编程语言',\r\n      url: 'https://www.typescriptlang.org',\r\n      icon: '🔷'\r\n    },\r\n    {\r\n      id: 60,\r\n      title: 'JavaScript MDN',\r\n      description: 'JavaScript 语言参考文档',\r\n      category: '编程语言',\r\n      url: 'https://developer.mozilla.org/javascript',\r\n      icon: '📜'\r\n    },\r\n    {\r\n      id: 61,\r\n      title: 'Python 官方文档',\r\n      description: 'Python 编程语言官方文档',\r\n      category: '编程语言',\r\n      url: 'https://docs.python.org',\r\n      icon: '🐍'\r\n    },\r\n    {\r\n      id: 62,\r\n      title: 'Node.js 文档',\r\n      description: 'Node.js 运行时文档',\r\n      category: '编程语言',\r\n      url: 'https://nodejs.org',\r\n      icon: '📦'\r\n    },\r\n\r\n    // 工具和包管理\r\n    {\r\n      id: 63,\r\n      title: 'Git 文档',\r\n      description: '分布式版本控制系统',\r\n      category: '开发工具',\r\n      url: 'https://git-scm.com/doc',\r\n      icon: '📚'\r\n    },\r\n    {\r\n      id: 64,\r\n      title: 'NPM 文档',\r\n      description: 'Node 包管理器文档',\r\n      category: '开发工具',\r\n      url: 'https://docs.npmjs.com',\r\n      icon: '📦'\r\n    },\r\n    {\r\n      id: 65,\r\n      title: 'Yarn 文档',\r\n      description: '快速、可靠、安全的依赖管理',\r\n      category: '开发工具',\r\n      url: 'https://yarnpkg.com',\r\n      icon: '🧶'\r\n    },\r\n    {\r\n      id: 66,\r\n      title: 'VS Code 文档',\r\n      description: 'Visual Studio Code 编辑器文档',\r\n      category: '开发工具',\r\n      url: 'https://code.visualstudio.com/docs',\r\n      icon: '💻'\r\n    },\r\n\r\n    // 性能和优化\r\n    {\r\n      id: 67,\r\n      title: 'Lighthouse 文档',\r\n      description: '自动化网站质量评估工具',\r\n      category: '性能和优化',\r\n      url: 'https://developers.google.com/web/tools/lighthouse',\r\n      icon: '💡'\r\n    },\r\n    {\r\n      id: 68,\r\n      title: 'Web Vitals',\r\n      description: '网站用户体验质量指标',\r\n      category: '性能和优化',\r\n      url: 'https://web.dev/vitals',\r\n      icon: '📊'\r\n    },\r\n    {\r\n      id: 69,\r\n      title: 'Bundlephobia',\r\n      description: '检查 npm 包大小对性能的影响',\r\n      category: '性能和优化',\r\n      url: 'https://bundlephobia.com',\r\n      icon: '📦'\r\n    }\r\n  ];\r\n\r\n  // 按类别分组\r\n  const categories = [...new Set(documents.map(doc => doc.category))];\r\n\r\n  // 过滤文档\r\n  const filteredDocs = documents.filter(doc =>\r\n    doc.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    doc.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    doc.category.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleDocClick = (doc) => {\r\n    setSelectedDoc(doc);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedDoc(null);\r\n  };\r\n\r\n  const handleVisitSite = () => {\r\n    if (selectedDoc) {\r\n      window.open(selectedDoc.url, '_blank');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"documents-container\">\r\n      {/* 技术名言轮播屏 */}\r\n      <div className=\"quotes-carousel\">\r\n        <div className=\"carousel-container\">\r\n          <button className=\"carousel-btn prev-btn\" onClick={prevQuote}>\r\n            ‹\r\n          </button>\r\n          \r\n          <div className=\"quote-slide\">\r\n            <div className=\"quote-content\">\r\n              <div className=\"quote-icon\">💭</div>\r\n              <div className=\"quote-text\">\r\n                <p className=\"quote-main\">\"{techQuotes[currentQuoteIndex].text}\"</p>\r\n                <div className=\"quote-meta\">\r\n                  <span className=\"quote-author\">— {techQuotes[currentQuoteIndex].author}</span>\r\n                  <span className=\"quote-category\">{techQuotes[currentQuoteIndex].category}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <button className=\"carousel-btn next-btn\" onClick={nextQuote}>\r\n            ›\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"carousel-indicators\">\r\n          {techQuotes.map((_, index) => (\r\n            <button\r\n              key={index}\r\n              className={`indicator ${index === currentQuoteIndex ? 'active' : ''}`}\r\n              onClick={() => setCurrentQuoteIndex(index)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"documents-header\">\r\n        <h1>📚 开发文档库</h1>\r\n        <p>专注于前端和后端开发文档 - 共 {documents.length} 个资源</p>\r\n        \r\n        <div className=\"search-section\">\r\n          <div className=\"search-box\">\r\n            <span className=\"search-icon\">🔍</span>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"搜索文档名称、描述或类别...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"search-input\"\r\n            />\r\n            {searchTerm && (\r\n              <button \r\n                className=\"clear-search\"\r\n                onClick={() => setSearchTerm('')}\r\n              >\r\n                ✕\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"documents-content\">\r\n        {categories.map(category => {\r\n          const categoryDocs = filteredDocs.filter(doc => doc.category === category);\r\n          \r\n          if (categoryDocs.length === 0) return null;\r\n          \r\n          return (\r\n            <div key={category} className=\"category-section\">\r\n              <h2 className=\"category-title\">\r\n                {category} \r\n                <span className=\"category-count\">({categoryDocs.length})</span>\r\n              </h2>\r\n              <div className=\"documents-grid\">\r\n                {categoryDocs.map(doc => (\r\n                  <div\r\n                    key={doc.id}\r\n                    className=\"document-card\"\r\n                    onClick={() => handleDocClick(doc)}\r\n                  >\r\n                    <div className=\"doc-header\">\r\n                      <div className=\"doc-icon\">{doc.icon}</div>\r\n                      <div className=\"doc-info\">\r\n                        <h3 className=\"doc-title\">{doc.title}</h3>\r\n                        <p className=\"doc-description\">{doc.description}</p>\r\n                        <div className=\"doc-category\">{doc.category}</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"doc-footer\">\r\n                      <button className=\"visit-button\">\r\n                        访问网站 →\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        {filteredDocs.length === 0 && (\r\n          <div className=\"no-results\">\r\n            <div className=\"no-results-icon\">🔍</div>\r\n            <h3>未找到匹配的文档</h3>\r\n            <p>尝试调整搜索关键词</p>\r\n            <button \r\n              className=\"clear-search-btn\"\r\n              onClick={() => setSearchTerm('')}\r\n            >\r\n              清除搜索\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 文档详情模态框 */}\r\n      {selectedDoc && (\r\n        <div className=\"modal-overlay\" onClick={handleCloseModal}>\r\n          <div className=\"modal-content doc-modal\" onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"modal-header\">\r\n              <div className=\"modal-title-section\">\r\n                <span className=\"doc-modal-icon\">{selectedDoc.icon}</span>\r\n                <div>\r\n                  <h3>{selectedDoc.title}</h3>\r\n                  <span className=\"doc-category-badge\">{selectedDoc.category}</span>\r\n                </div>\r\n              </div>\r\n              <button className=\"close-btn\" onClick={handleCloseModal}>\r\n                ×\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"modal-body\">\r\n              <p className=\"doc-modal-description\">{selectedDoc.description}</p>\r\n              \r\n              <div className=\"doc-url-section\">\r\n                <label>网站地址:</label>\r\n                <div className=\"url-display\">\r\n                  <span className=\"url-text\">{selectedDoc.url}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"modal-actions\">\r\n              <button className=\"cancel-btn\" onClick={handleCloseModal}>\r\n                关闭\r\n              </button>\r\n              <button className=\"visit-site-btn\" onClick={handleVisitSite}>\r\n                🌐 访问网站\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Documents;","// services/communityService.js\r\nimport AV from 'leancloud-storage';\r\n\r\nexport class CommunityService {\r\n  // 获取帖子列表\r\n  static async getPosts(options = {}) {\r\n    const {\r\n      page = 1,\r\n      pageSize = 20,\r\n      sortBy = 'createdAt',\r\n      sortOrder = 'desc',\r\n      keyword = '',\r\n      tag = '',\r\n      authorId = ''\r\n    } = options;\r\n\r\n    const query = new AV.Query('Post');\r\n    query.equalTo('isPublic', true);\r\n    query.equalTo('status', 'published');\r\n    \r\n    // 关键词搜索\r\n    if (keyword) {\r\n      const titleQuery = new AV.Query('Post');\r\n      titleQuery.contains('title', keyword);\r\n      \r\n      const contentQuery = new AV.Query('Post');\r\n      contentQuery.contains('content', keyword);\r\n      \r\n      query = AV.Query.or(titleQuery, contentQuery);\r\n    }\r\n    \r\n    // 标签筛选\r\n    if (tag) {\r\n      query.equalTo('tags', tag);\r\n    }\r\n    \r\n    // 作者筛选\r\n    if (authorId) {\r\n      const author = AV.Object.createWithoutData('_User', authorId);\r\n      query.equalTo('author', author);\r\n    }\r\n    \r\n    query.include('author');\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    query.descending(sortBy);\r\n    \r\n    return query.find();\r\n  }\r\n\r\n  // 创建帖子\r\n  static async createPost(postData) {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) throw new Error('请先登录');\r\n    \r\n    const Post = AV.Object.extend('Post');\r\n    const post = new Post();\r\n    \r\n    post.set('title', postData.title);\r\n    post.set('content', postData.content);\r\n    post.set('author', currentUser);\r\n    post.set('tags', postData.tags || []);\r\n    post.set('isPublic', postData.isPublic !== false);\r\n    post.set('status', 'published');\r\n    post.set('likes', 0);\r\n    post.set('views', 0);\r\n    post.set('commentCount', 0);\r\n    \r\n    return post.save();\r\n  }\r\n\r\n  // 获取帖子详情\r\n  static async getPostById(id) {\r\n    const query = new AV.Query('Post');\r\n    query.include('author');\r\n    const post = await query.get(id);\r\n    \r\n    // 增加浏览数\r\n    post.increment('views', 1);\r\n    await post.save();\r\n    \r\n    return post;\r\n  }\r\n\r\n  // 获取评论\r\n  static async getComments(postId, options = {}) {\r\n    const { page = 1, pageSize = 50 } = options;\r\n    \r\n    const query = new AV.Query('Comment');\r\n    const post = AV.Object.createWithoutData('Post', postId);\r\n    query.equalTo('post', post);\r\n    query.include('author');\r\n    query.include('parent');\r\n    query.ascending('createdAt');\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    \r\n    return query.find();\r\n  }\r\n\r\n  // 添加评论\r\n  static async addComment(postId, content, parentId = null) {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) throw new Error('请先登录');\r\n    \r\n    const Comment = AV.Object.extend('Comment');\r\n    const comment = new Comment();\r\n    \r\n    const post = AV.Object.createWithoutData('Post', postId);\r\n    comment.set('post', post);\r\n    comment.set('author', currentUser);\r\n    comment.set('content', content);\r\n    comment.set('likes', 0);\r\n    \r\n    if (parentId) {\r\n      const parent = AV.Object.createWithoutData('Comment', parentId);\r\n      comment.set('parent', parent);\r\n    }\r\n    \r\n    // 更新帖子的评论数和最后评论时间\r\n    post.increment('commentCount', 1);\r\n    post.set('lastCommentedAt', new Date());\r\n    await post.save();\r\n    \r\n    return comment.save();\r\n  }\r\n\r\n  // 点赞/取消点赞\r\n  static async toggleLike(postId) {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) throw new Error('请先登录');\r\n    \r\n    const Like = AV.Object.extend('Like');\r\n    const query = new AV.Query('Like');\r\n    const post = AV.Object.createWithoutData('Post', postId);\r\n    \r\n    query.equalTo('user', currentUser);\r\n    query.equalTo('post', post);\r\n    \r\n    const existingLike = await query.first();\r\n    \r\n    if (existingLike) {\r\n      // 取消点赞\r\n      await existingLike.destroy();\r\n      \r\n      const postObj = await new AV.Query('Post').get(postId);\r\n      postObj.increment('likes', -1);\r\n      await postObj.save();\r\n      \r\n      return { liked: false };\r\n    } else {\r\n      // 添加点赞\r\n      const like = new Like();\r\n      like.set('user', currentUser);\r\n      like.set('post', post);\r\n      await like.save();\r\n      \r\n      const postObj = await new AV.Query('Post').get(postId);\r\n      postObj.increment('likes', 1);\r\n      await postObj.save();\r\n      \r\n      return { liked: true };\r\n    }\r\n  }\r\n\r\n  // 获取热门标签\r\n  static async getPopularTags(limit = 10) {\r\n    // 这里可以使用 LeanCloud 的聚合查询\r\n    // 简化版本：从所有帖子中统计标签\r\n    const query = new AV.Query('Post');\r\n    query.equalTo('isPublic', true);\r\n    query.equalTo('status', 'published');\r\n    const posts = await query.find();\r\n    \r\n    const tagCount = {};\r\n    posts.forEach(post => {\r\n      const tags = post.get('tags') || [];\r\n      tags.forEach(tag => {\r\n        tagCount[tag] = (tagCount[tag] || 0) + 1;\r\n      });\r\n    });\r\n    \r\n    return Object.entries(tagCount)\r\n      .sort(([,a], [,b]) => b - a)\r\n      .slice(0, limit)\r\n      .map(([tag, count]) => ({ tag, count }));\r\n  }\r\n}","// components/community/CreatePostModal.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport AV from 'leancloud-storage';\r\nimport './CreatePostModal.css';\r\n\r\nconst CreatePostModal = ({ onClose, onSuccess }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    content: '',\r\n    tags: '',\r\n    isPublic: true\r\n  });\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [charCount, setCharCount] = useState({ title: 0, content: 0 });\r\n  const [suggestedTags, setSuggestedTags] = useState([]);\r\n  const textareaRef = useRef(null);\r\n\r\n  const maxLengths = {\r\n    title: 100,\r\n    content: 5000\r\n  };\r\n\r\n  // 热门标签建议\r\n  const popularTags = [\r\n    'JavaScript', 'React', '算法', 'LeetCode', '前端', \r\n    '面试', 'TypeScript', 'Vue', 'CSS', 'Node.js',\r\n    '数据库', '计算机网络', '操作系统', '数据结构'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // 自动调整文本域高度\r\n    if (textareaRef.current) {\r\n      textareaRef.current.style.height = 'auto';\r\n      textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px';\r\n    }\r\n  }, [formData.content]);\r\n\r\n  useEffect(() => {\r\n    // 根据标题内容推荐标签\r\n    if (formData.title.length > 5) {\r\n      const matchedTags = popularTags.filter(tag =>\r\n        formData.title.toLowerCase().includes(tag.toLowerCase())\r\n      );\r\n      setSuggestedTags(matchedTags.slice(0, 3));\r\n    } else {\r\n      setSuggestedTags([]);\r\n    }\r\n  }, [formData.title]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.title.trim()) {\r\n      newErrors.title = '请输入帖子标题';\r\n    } else if (formData.title.length < 5) {\r\n      newErrors.title = '标题至少需要5个字符';\r\n    } else if (formData.title.length > maxLengths.title) {\r\n      newErrors.title = `标题不能超过${maxLengths.title}个字符`;\r\n    }\r\n\r\n    if (!formData.content.trim()) {\r\n      newErrors.content = '请输入帖子内容';\r\n    } else if (formData.content.length < 10) {\r\n      newErrors.content = '内容至少需要10个字符';\r\n    } else if (formData.content.length > maxLengths.content) {\r\n      newErrors.content = `内容不能超过${maxLengths.content}个字符`;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    setCharCount(prev => ({ ...prev, [field]: value.length }));\r\n    \r\n    // 清除对应字段的错误\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const handleTagSuggestionClick = (tag) => {\r\n    const currentTags = formData.tags.split(',').map(t => t.trim()).filter(t => t);\r\n    if (!currentTags.includes(tag)) {\r\n      const newTags = [...currentTags, tag].join(', ');\r\n      handleInputChange('tags', newTags);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      const tagsArray = formData.tags\r\n        .split(',')\r\n        .map(tag => tag.trim())\r\n        .filter(tag => tag)\r\n        .slice(0, 5); // 最多5个标签\r\n\r\n      const postData = {\r\n        title: formData.title.trim(),\r\n        content: formData.content.trim(),\r\n        tags: tagsArray,\r\n        isPublic: formData.isPublic\r\n      };\r\n\r\n      const newPost = await CommunityService.createPost(postData);\r\n      \r\n      // 显示成功消息\r\n      setSubmitting(false);\r\n      onSuccess(newPost);\r\n      \r\n    } catch (error) {\r\n      console.error('发布失败:', error);\r\n      setErrors({ submit: error.message || '发布失败，请重试' });\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const getTitleCharCountColor = () => {\r\n    const ratio = charCount.title / maxLengths.title;\r\n    if (ratio > 0.9) return '#ff6b6b';\r\n    if (ratio > 0.7) return '#ffa726';\r\n    return '#4ecdc4';\r\n  };\r\n\r\n  const getContentCharCountColor = () => {\r\n    const ratio = charCount.content / maxLengths.content;\r\n    if (ratio > 0.9) return '#ff6b6b';\r\n    if (ratio > 0.7) return '#ffa726';\r\n    return '#4ecdc4';\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"create-post-modal\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <div className=\"header-content\">\r\n            <h3>✏️ 发布新帖子</h3>\r\n            <p>分享你的学习心得和经验</p>\r\n          </div>\r\n          <button className=\"close-btn\" onClick={onClose}>\r\n            ✕\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"post-form\">\r\n          {/* 标题输入 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"post-title\">\r\n              帖子标题 *\r\n              <span \r\n                className=\"char-count\"\r\n                style={{ color: getTitleCharCountColor() }}\r\n              >\r\n                {charCount.title}/{maxLengths.title}\r\n              </span>\r\n            </label>\r\n            <input\r\n              id=\"post-title\"\r\n              type=\"text\"\r\n              placeholder=\"请输入有吸引力的标题...\"\r\n              value={formData.title}\r\n              onChange={(e) => handleInputChange('title', e.target.value)}\r\n              className={errors.title ? 'error' : ''}\r\n              maxLength={maxLengths.title}\r\n            />\r\n            {errors.title && <span className=\"error-message\">{errors.title}</span>}\r\n          </div>\r\n\r\n          {/* 内容输入 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"post-content\">\r\n              帖子内容 *\r\n              <span \r\n                className=\"char-count\"\r\n                style={{ color: getContentCharCountColor() }}\r\n              >\r\n                {charCount.content}/{maxLengths.content}\r\n              </span>\r\n            </label>\r\n            <textarea\r\n              ref={textareaRef}\r\n              id=\"post-content\"\r\n              placeholder=\"详细描述你的问题或分享你的经验...（支持 Markdown 格式）\"\r\n              value={formData.content}\r\n              onChange={(e) => handleInputChange('content', e.target.value)}\r\n              className={errors.content ? 'error' : ''}\r\n              maxLength={maxLengths.content}\r\n              rows=\"6\"\r\n            />\r\n            {errors.content && <span className=\"error-message\">{errors.content}</span>}\r\n            \r\n            {/* 内容格式提示 */}\r\n            <div className=\"format-tips\">\r\n              <span className=\"tip-title\">格式提示：</span>\r\n              <span className=\"tip-item\">**粗体**</span>\r\n              <span className=\"tip-item\">*斜体*</span>\r\n              <span className=\"tip-item\">`代码`</span>\r\n              <span className=\"tip-item\">- 列表项</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 标签输入 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"post-tags\">\r\n              标签\r\n              <span className=\"optional\">（可选）</span>\r\n            </label>\r\n            <input\r\n              id=\"post-tags\"\r\n              type=\"text\"\r\n              placeholder=\"输入标签，用逗号分隔（例如：JavaScript,算法,LeetCode）\"\r\n              value={formData.tags}\r\n              onChange={(e) => handleInputChange('tags', e.target.value)}\r\n            />\r\n            \r\n            {/* 标签建议 */}\r\n            {suggestedTags.length > 0 && (\r\n              <div className=\"tag-suggestions\">\r\n                <span className=\"suggestions-label\">推荐标签：</span>\r\n                {suggestedTags.map(tag => (\r\n                  <button\r\n                    key={tag}\r\n                    type=\"button\"\r\n                    className=\"tag-suggestion\"\r\n                    onClick={() => handleTagSuggestionClick(tag)}\r\n                  >\r\n                    {tag}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"tags-hint\">\r\n              最多5个标签，用逗号分隔。合适的标签有助于更多人看到你的帖子。\r\n            </div>\r\n          </div>\r\n\r\n          {/* 发布设置 */}\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-label\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={formData.isPublic}\r\n                onChange={(e) => handleInputChange('isPublic', e.target.checked)}\r\n              />\r\n              <span className=\"checkmark\"></span>\r\n              公开帖子（所有人可见）\r\n            </label>\r\n            <div className=\"privacy-hint\">\r\n              {formData.isPublic \r\n                ? '✅ 你的帖子将对所有用户可见'\r\n                : '🔒 只有你自己可以看到此帖子'\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n          {/* 提交错误 */}\r\n          {errors.submit && (\r\n            <div className=\"submit-error\">\r\n              <span className=\"error-icon\">⚠️</span>\r\n              {errors.submit}\r\n            </div>\r\n          )}\r\n\r\n          {/* 表单操作 */}\r\n          <div className=\"form-actions\">\r\n            <button \r\n              type=\"button\" \r\n              onClick={onClose}\r\n              className=\"cancel-btn\"\r\n              disabled={submitting}\r\n            >\r\n              取消\r\n            </button>\r\n            <button \r\n              type=\"submit\" \r\n              className=\"submit-btn\"\r\n              disabled={submitting}\r\n            >\r\n              {submitting ? (\r\n                <>\r\n                  <div className=\"submit-spinner\"></div>\r\n                  发布中...\r\n                </>\r\n              ) : (\r\n                '🚀 发布帖子'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePostModal;","// components/community/SearchBar.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst SearchBar = ({ onSearch, placeholder = \"搜索帖子标题或内容...\" }) => {\r\n  const [keyword, setKeyword] = useState('');\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const searchInputRef = useRef(null);\r\n\r\n  // 热门搜索建议\r\n  const popularSuggestions = [\r\n    'JavaScript',\r\n    'React',\r\n    '算法',\r\n    'LeetCode',\r\n    '前端',\r\n    '面试',\r\n    'TypeScript',\r\n    'Vue'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // 防抖搜索\r\n    const timeoutId = setTimeout(() => {\r\n      onSearch(keyword);\r\n    }, 300);\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [keyword, onSearch]);\r\n\r\n  const handleSearch = (value) => {\r\n    setKeyword(value);\r\n    setShowSuggestions(value.length > 0);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setKeyword('');\r\n    setShowSuggestions(false);\r\n    onSearch('');\r\n    searchInputRef.current?.focus();\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    setKeyword(suggestion);\r\n    setShowSuggestions(false);\r\n    onSearch(suggestion);\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    setIsFocused(true);\r\n    if (keyword.length > 0) {\r\n      setShowSuggestions(true);\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsFocused(false);\r\n    // 延迟隐藏建议列表，以便点击建议项\r\n    setTimeout(() => setShowSuggestions(false), 200);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Escape') {\r\n      setShowSuggestions(false);\r\n      searchInputRef.current?.blur();\r\n    } else if (e.key === 'Enter') {\r\n      setShowSuggestions(false);\r\n      onSearch(keyword);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <div className={`search-input-container ${isFocused ? 'focused' : ''}`}>\r\n        <div className=\"search-icon\">🔍</div>\r\n        \r\n        <input\r\n          ref={searchInputRef}\r\n          type=\"text\"\r\n          placeholder={placeholder}\r\n          value={keyword}\r\n          onChange={(e) => handleSearch(e.target.value)}\r\n          onFocus={handleFocus}\r\n          onBlur={handleBlur}\r\n          onKeyDown={handleKeyDown}\r\n          className=\"search-input\"\r\n        />\r\n\r\n        {keyword && (\r\n          <button \r\n            className=\"clear-search\"\r\n            onClick={handleClear}\r\n            type=\"button\"\r\n          >\r\n            ✕\r\n          </button>\r\n        )}\r\n\r\n        {/* 搜索建议下拉框 */}\r\n        {showSuggestions && (\r\n          <div className=\"search-suggestions\">\r\n            <div className=\"suggestions-header\">\r\n              <span className=\"suggestions-title\">搜索建议</span>\r\n              <button \r\n                className=\"close-suggestions\"\r\n                onClick={() => setShowSuggestions(false)}\r\n              >\r\n                ✕\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"suggestions-list\">\r\n              {/* 精确匹配建议 */}\r\n              {keyword.length > 0 && (\r\n                <div \r\n                  className=\"suggestion-item exact-match\"\r\n                  onClick={() => handleSuggestionClick(keyword)}\r\n                >\r\n                  <span className=\"suggestion-icon\">🔍</span>\r\n                  <span className=\"suggestion-text\">搜索: \"{keyword}\"</span>\r\n                </div>\r\n              )}\r\n\r\n              {/* 热门搜索建议 */}\r\n              <div className=\"suggestions-section\">\r\n                <div className=\"section-title\">热门搜索</div>\r\n                {popularSuggestions\r\n                  .filter(suggestion => \r\n                    suggestion.toLowerCase().includes(keyword.toLowerCase())\r\n                  )\r\n                  .map((suggestion, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"suggestion-item\"\r\n                      onClick={() => handleSuggestionClick(suggestion)}\r\n                    >\r\n                      <span className=\"suggestion-icon\">🔥</span>\r\n                      <span className=\"suggestion-text\">{suggestion}</span>\r\n                    </div>\r\n                  ))\r\n                }\r\n              </div>\r\n\r\n              {/* 搜索提示 */}\r\n              <div className=\"search-tips\">\r\n                <div className=\"tips-title\">搜索提示</div>\r\n                <div className=\"tips-list\">\r\n                  <div className=\"tip-item\">\r\n                    <span className=\"tip-icon\">💡</span>\r\n                    <span>支持搜索帖子标题、内容和标签</span>\r\n                  </div>\r\n                  <div className=\"tip-item\">\r\n                    <span className=\"tip-icon\">⏎</span>\r\n                    <span>按 Enter 键快速搜索</span>\r\n                  </div>\r\n                  <div className=\"tip-item\">\r\n                    <span className=\"tip-icon\">⎋</span>\r\n                    <span>按 ESC 键清除搜索</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 搜索统计信息 */}\r\n      {keyword && (\r\n        <div className=\"search-stats\">\r\n          <span className=\"stats-text\">\r\n            正在搜索: <strong>\"{keyword}\"</strong>\r\n          </span>\r\n          <button \r\n            className=\"advanced-search-btn\"\r\n            onClick={() => setShowSuggestions(true)}\r\n          >\r\n            高级搜索\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;","// components/community/TagCloud.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport './TagCloud.css';\r\n\r\nconst TagCloud = ({ onTagClick, maxTags = 20 }) => {\r\n  const [tags, setTags] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedTag, setSelectedTag] = useState('');\r\n\r\n  // 默认热门标签（作为回退）\r\n  const defaultTags = [\r\n    { tag: 'JavaScript', count: 25, color: '#f7df1e' },\r\n    { tag: 'React', count: 18, color: '#61dafb' },\r\n    { tag: '算法', count: 22, color: '#4ecdc4' },\r\n    { tag: 'LeetCode', count: 20, color: '#ff6b6b' },\r\n    { tag: '前端', count: 15, color: '#667eea' },\r\n    { tag: '面试', count: 12, color: '#f093fb' },\r\n    { tag: 'TypeScript', count: 10, color: '#3178c6' },\r\n    { tag: 'Vue', count: 8, color: '#41b883' },\r\n    { tag: 'CSS', count: 6, color: '#264de4' },\r\n    { tag: 'Node.js', count: 5, color: '#68a063' },\r\n    { tag: '数据库', count: 7, color: '#ffa726' },\r\n    { tag: '计算机网络', count: 4, color: '#26c6da' },\r\n    { tag: '操作系统', count: 3, color: '#ab47bc' },\r\n    { tag: '数据结构', count: 9, color: '#ec407a' },\r\n    { tag: 'Git', count: 5, color: '#f4511e' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    loadPopularTags();\r\n  }, []);\r\n\r\n  const loadPopularTags = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const popularTags = await CommunityService.getPopularTags(maxTags);\r\n      if (popularTags && popularTags.length > 0) {\r\n        // 为标签添加颜色\r\n        const tagsWithColors = popularTags.map((tagData, index) => ({\r\n          ...tagData,\r\n          color: getTagColor(index)\r\n        }));\r\n        setTags(tagsWithColors);\r\n      } else {\r\n        // 使用默认标签\r\n        setTags(defaultTags.slice(0, maxTags));\r\n      }\r\n    } catch (error) {\r\n      console.error('加载热门标签失败:', error);\r\n      // 使用默认标签作为回退\r\n      setTags(defaultTags.slice(0, maxTags));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 根据索引生成标签颜色\r\n  const getTagColor = (index) => {\r\n    const colors = [\r\n      '#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57',\r\n      '#ff9ff3', '#54a0ff', '#5f27cd', '#00d2d3', '#ff9f43',\r\n      '#f368e0', '#ff9f43', '#a55eea', '#fd79a8', '#e17055',\r\n      '#00b894', '#00cec9', '#0984e3', '#6c5ce7', '#b2bec3'\r\n    ];\r\n    return colors[index % colors.length];\r\n  };\r\n\r\n  // 根据标签数量计算字体大小\r\n  const getTagSize = (count, maxCount) => {\r\n    const sizes = ['xs', 'sm', 'md', 'lg', 'xl'];\r\n    const ratio = count / maxCount;\r\n    \r\n    if (ratio > 0.8) return sizes[4];      // xl\r\n    if (ratio > 0.6) return sizes[3];      // lg\r\n    if (ratio > 0.4) return sizes[2];      // md\r\n    if (ratio > 0.2) return sizes[1];      // sm\r\n    return sizes[0];                       // xs\r\n  };\r\n\r\n  const handleTagClick = (tag) => {\r\n    setSelectedTag(tag === selectedTag ? '' : tag);\r\n    onTagClick(tag === selectedTag ? '' : tag);\r\n  };\r\n\r\n  const handleClearFilter = () => {\r\n    setSelectedTag('');\r\n    onTagClick('');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"tag-cloud-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <span>加载标签中...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const maxCount = Math.max(...tags.map(t => t.count));\r\n  const totalPosts = tags.reduce((sum, tag) => sum + tag.count, 0);\r\n\r\n  return (\r\n    <div className=\"tag-cloud-container\">\r\n      {/* 标签云头部信息 */}\r\n      <div className=\"tag-cloud-header\">\r\n        <div className=\"tag-cloud-stats\">\r\n          <span className=\"stats-text\">\r\n            {tags.length} 个标签 • {totalPosts} 个帖子\r\n          </span>\r\n          {selectedTag && (\r\n            <button \r\n              className=\"clear-filter-btn\"\r\n              onClick={handleClearFilter}\r\n            >\r\n              清除筛选\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 标签云主体 */}\r\n      <div className=\"tag-cloud\">\r\n        {tags.map(({ tag, count, color }) => {\r\n          const size = getTagSize(count, maxCount);\r\n          const isSelected = tag === selectedTag;\r\n          \r\n          return (\r\n            <span\r\n              key={tag}\r\n              className={`tag ${size} ${isSelected ? 'selected' : ''}`}\r\n              style={{\r\n                '--tag-color': color,\r\n                '--tag-bg-color': isSelected ? color : `${color}20`,\r\n                '--tag-border-color': isSelected ? color : `${color}40`\r\n              }}\r\n              onClick={() => handleTagClick(tag)}\r\n              title={`${tag} - ${count} 个帖子`}\r\n            >\r\n              <span className=\"tag-text\">{tag}</span>\r\n              <span className=\"tag-count\">{count}</span>\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* 选中的标签提示 */}\r\n      {selectedTag && (\r\n        <div className=\"selected-tag-info\">\r\n          <span className=\"selected-tag-badge\">\r\n            <span className=\"selected-tag-text\">已选择: {selectedTag}</span>\r\n            <button \r\n              className=\"remove-selection\"\r\n              onClick={handleClearFilter}\r\n            >\r\n              ✕\r\n            </button>\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {/* 标签云说明 */}\r\n      <div className=\"tag-cloud-footer\">\r\n        <div className=\"tag-cloud-tips\">\r\n          <span className=\"tip-icon\">💡</span>\r\n          <span className=\"tip-text\">点击标签筛选相关帖子</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagCloud;","// components/community/CommunityStats.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport AV from 'leancloud-storage';\r\nimport './CommunityStats.css';\r\n\r\nconst CommunityStats = () => {\r\n  const [stats, setStats] = useState({\r\n    totalPosts: 0,\r\n    totalComments: 0,\r\n    totalLikes: 0,\r\n    activeUsers: 0,\r\n    todayPosts: 0,\r\n    trendingTags: []\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadStats();\r\n    // 每5分钟刷新一次数据\r\n    const interval = setInterval(loadStats, 5 * 60 * 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const loadStats = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // 获取帖子总数\r\n      const totalPosts = await new AV.Query('Post')\r\n        .equalTo('status', 'published')\r\n        .count()\r\n        .catch(() => 0);\r\n\r\n      // 获取评论总数\r\n      const totalComments = await new AV.Query('Comment').count().catch(() => 0);\r\n\r\n      // 获取点赞总数（需要从 Like 表统计）\r\n      const totalLikes = await new AV.Query('Like').count().catch(() => 0);\r\n\r\n      // 获取今日帖子数\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      const todayPosts = await new AV.Query('Post')\r\n        .greaterThanOrEqualTo('createdAt', today)\r\n        .count()\r\n        .catch(() => 0);\r\n\r\n      // 获取活跃用户数（最近7天有活动的用户）\r\n      const weekAgo = new Date();\r\n      weekAgo.setDate(weekAgo.getDate() - 7);\r\n      const activeUsers = await new AV.Query('Post')\r\n        .greaterThanOrEqualTo('createdAt', weekAgo)\r\n        .distinct('author')\r\n        .count()\r\n        .catch(() => 0);\r\n\r\n      // 获取热门标签\r\n      const postQuery = new AV.Query('Post');\r\n      const posts = await postQuery\r\n        .equalTo('status', 'published')\r\n        .limit(1000)\r\n        .find()\r\n        .catch(() => []);\r\n\r\n      const tagCount = {};\r\n      posts.forEach(post => {\r\n        const tags = post.get('tags') || [];\r\n        tags.forEach(tag => {\r\n          tagCount[tag] = (tagCount[tag] || 0) + 1;\r\n        });\r\n      });\r\n\r\n      const trendingTags = Object.entries(tagCount)\r\n        .sort(([,a], [,b]) => b - a)\r\n        .slice(0, 5)\r\n        .map(([tag, count]) => ({ tag, count }));\r\n\r\n      setStats({\r\n        totalPosts,\r\n        totalComments,\r\n        totalLikes,\r\n        activeUsers,\r\n        todayPosts,\r\n        trendingTags\r\n      });\r\n      setLastUpdated(new Date());\r\n    } catch (error) {\r\n      console.error('加载统计信息失败:', error);\r\n      // 使用默认数据\r\n      setStats({\r\n        totalPosts: 0,\r\n        totalComments: 0,\r\n        totalLikes: 0,\r\n        activeUsers: 0,\r\n        todayPosts: 0,\r\n        trendingTags: []\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatNumber = (num) => {\r\n    if (num >= 10000) {\r\n      return (num / 10000).toFixed(1) + '万';\r\n    }\r\n    if (num >= 1000) {\r\n      return (num / 1000).toFixed(1) + '千';\r\n    }\r\n    return num.toString();\r\n  };\r\n\r\n  const getGrowthRate = (current, previous) => {\r\n    if (previous === 0) return 100;\r\n    return ((current - previous) / previous * 100).toFixed(1);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"community-stats\">\r\n        <div className=\"stats-header\">\r\n          <h4>📊 社区统计</h4>\r\n          <button className=\"refresh-btn\" onClick={loadStats}>\r\n            🔄\r\n          </button>\r\n        </div>\r\n        <div className=\"stats-loading\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <span>加载统计中...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"community-stats\">\r\n      <div className=\"stats-header\">\r\n        <h4>📊 社区统计</h4>\r\n        <div className=\"header-actions\">\r\n          {lastUpdated && (\r\n            <span className=\"update-time\">\r\n              更新于 {lastUpdated.toLocaleTimeString('zh-CN', { \r\n                hour: '2-digit', \r\n                minute: '2-digit' \r\n              })}\r\n            </span>\r\n          )}\r\n          <button \r\n            className=\"refresh-btn\"\r\n            onClick={loadStats}\r\n            title=\"刷新数据\"\r\n          >\r\n            🔄\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"stats-grid\">\r\n        {/* 帖子统计 */}\r\n        <div className=\"stat-card primary\">\r\n          <div className=\"stat-icon\">📝</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-number\">{formatNumber(stats.totalPosts)}</div>\r\n            <div className=\"stat-label\">总帖子</div>\r\n            <div className=\"stat-subtext\">\r\n              +{stats.todayPosts} 今日\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 评论统计 */}\r\n        <div className=\"stat-card success\">\r\n          <div className=\"stat-icon\">💬</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-number\">{formatNumber(stats.totalComments)}</div>\r\n            <div className=\"stat-label\">总评论</div>\r\n            <div className=\"stat-subtext\">\r\n              互动活跃\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 点赞统计 */}\r\n        <div className=\"stat-card warning\">\r\n          <div className=\"stat-icon\">👍</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-number\">{formatNumber(stats.totalLikes)}</div>\r\n            <div className=\"stat-label\">总点赞</div>\r\n            <div className=\"stat-subtext\">\r\n              社区认可\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 活跃用户 */}\r\n        <div className=\"stat-card info\">\r\n          <div className=\"stat-icon\">👥</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-number\">{formatNumber(stats.activeUsers)}</div>\r\n            <div className=\"stat-label\">活跃用户</div>\r\n            <div className=\"stat-subtext\">\r\n              最近7天\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 热门标签 */}\r\n      {stats.trendingTags.length > 0 && (\r\n        <div className=\"trending-tags\">\r\n          <h5>🔥 热门标签</h5>\r\n          <div className=\"tags-list\">\r\n            {stats.trendingTags.map(({ tag, count }, index) => (\r\n              <div key={tag} className=\"trending-tag\">\r\n                <span className=\"tag-rank\">#{index + 1}</span>\r\n                <span className=\"tag-name\">{tag}</span>\r\n                <span className=\"tag-count\">{count}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 社区状态指示器 */}\r\n      <div className=\"community-health\">\r\n        <div className=\"health-indicator\">\r\n          <div className=\"health-label\">社区活跃度</div>\r\n          <div className=\"health-bar\">\r\n            <div \r\n              className=\"health-fill\"\r\n              style={{ \r\n                width: `${Math.min((stats.todayPosts / 10) * 100, 100)}%`,\r\n                backgroundColor: stats.todayPosts >= 5 ? '#4ecdc4' : \r\n                               stats.todayPosts >= 2 ? '#ffa726' : '#ff6b6b'\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"health-status\">\r\n            {stats.todayPosts >= 5 ? '🔥 非常活跃' :\r\n             stats.todayPosts >= 2 ? '💪 活跃' : '😴 安静'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommunityStats;","// components/community/CommentItem.jsx\r\nimport React, { useState } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport AV from 'leancloud-storage';\r\nimport './CommentItem.css';\r\n\r\n// 格式化时间函数\r\nconst formatTime = (date) => {\r\n  if (!date) return \"刚刚\";\r\n  const now = new Date();\r\n  const diffMs = now - new Date(date);\r\n  const diffMins = Math.floor(diffMs / 60000);\r\n  const diffHours = Math.floor(diffMs / 3600000);\r\n  const diffDays = Math.floor(diffMs / 86400000);\r\n\r\n  if (diffMins < 1) return \"刚刚\";\r\n  if (diffMins < 60) return `${diffMins}分钟前`;\r\n  if (diffHours < 24) return `${diffHours}小时前`;\r\n  if (diffDays < 7) return `${diffDays}天前`;\r\n  return new Date(date).toLocaleDateString('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric'\r\n  });\r\n};\r\n\r\nconst CommentItem = ({ comment, onReply, onUpdate }) => {\r\n  const [likes, setLikes] = useState(comment.get('likes') || 0);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [showActions, setShowActions] = useState(false);\r\n  const [editing, setEditing] = useState(false);\r\n  const [editContent, setEditContent] = useState(comment.get('content') || '');\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  // 获取用户信息\r\n  const getAvatarUrl = () => {\r\n    return comment.get('author')?.get('avatar') || '/default-avatar.png';\r\n  };\r\n\r\n  const getUsername = () => {\r\n    return comment.get('author')?.get('username') || '匿名用户';\r\n  };\r\n\r\n  // 检查当前用户是否是评论作者\r\n  const isAuthor = () => {\r\n    const currentUser = AV.User.current();\r\n    return currentUser && comment.get('author')?.id === currentUser.id;\r\n  };\r\n\r\n  // 处理点赞\r\n  const handleLike = async () => {\r\n    try {\r\n      const result = await CommunityService.toggleLike(comment.id, 'comment');\r\n      setLikes(result.liked ? likes + 1 : Math.max(0, likes - 1));\r\n      setIsLiked(result.liked);\r\n    } catch (error) {\r\n      console.error('点赞评论失败:', error);\r\n    }\r\n  };\r\n\r\n  // 处理回复\r\n  const handleReplyClick = () => {\r\n    onReply(comment);\r\n  };\r\n\r\n  // 处理编辑\r\n  const handleEdit = () => {\r\n    setEditing(true);\r\n    setEditContent(comment.get('content') || '');\r\n  };\r\n\r\n  // 保存编辑\r\n  const handleSaveEdit = async () => {\r\n    if (!editContent.trim()) return;\r\n\r\n    setSaving(true);\r\n    try {\r\n      // 这里需要实现更新评论的 API\r\n      // await CommunityService.updateComment(comment.id, { content: editContent });\r\n      setEditing(false);\r\n      onUpdate(); // 刷新评论列表\r\n    } catch (error) {\r\n      console.error('更新评论失败:', error);\r\n      alert('更新评论失败: ' + error.message);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  // 取消编辑\r\n  const handleCancelEdit = () => {\r\n    setEditing(false);\r\n    setEditContent(comment.get('content') || '');\r\n  };\r\n\r\n  // 处理删除\r\n  const handleDelete = async () => {\r\n    if (!window.confirm('确定要删除这条评论吗？此操作不可撤销。')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 这里需要实现删除评论的 API\r\n      // await CommunityService.deleteComment(comment.id);\r\n      onUpdate(); // 刷新评论列表\r\n    } catch (error) {\r\n      console.error('删除评论失败:', error);\r\n      alert('删除评论失败: ' + error.message);\r\n    }\r\n  };\r\n\r\n  // 渲染评论内容（支持简单的 Markdown）\r\n  const renderContent = () => {\r\n    const content = comment.get('content') || '';\r\n    \r\n    return content\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      .replace(/`(.*?)`/g, '<code>$1</code>')\r\n      .replace(/\\n/g, '<br>');\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"comment-item\"\r\n      onMouseEnter={() => setShowActions(true)}\r\n      onMouseLeave={() => setShowActions(false)}\r\n    >\r\n      {/* 评论头部 */}\r\n      <div className=\"comment-header\">\r\n        <div className=\"comment-author\">\r\n          <img \r\n            src={getAvatarUrl()} \r\n            alt=\"用户头像\"\r\n            className=\"comment-avatar\"\r\n          />\r\n          <div className=\"author-info\">\r\n            <span className=\"author-name\">{getUsername()}</span>\r\n            {isAuthor() && (\r\n              <span className=\"author-badge\">作者</span>\r\n            )}\r\n            <span className=\"comment-time\">\r\n              {formatTime(comment.get('createdAt'))}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 评论操作 */}\r\n        {showActions && (\r\n          <div className=\"comment-actions\">\r\n            <button \r\n              className=\"action-btn reply-btn\"\r\n              onClick={handleReplyClick}\r\n              title=\"回复\"\r\n            >\r\n              ↩️\r\n            </button>\r\n            \r\n            {isAuthor() && (\r\n              <>\r\n                <button \r\n                  className=\"action-btn edit-btn\"\r\n                  onClick={handleEdit}\r\n                  title=\"编辑\"\r\n                >\r\n                  ✏️\r\n                </button>\r\n                <button \r\n                  className=\"action-btn delete-btn\"\r\n                  onClick={handleDelete}\r\n                  title=\"删除\"\r\n                >\r\n                  🗑️\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 评论内容 */}\r\n      <div className=\"comment-content\">\r\n        {editing ? (\r\n          <div className=\"edit-comment\">\r\n            <textarea\r\n              value={editContent}\r\n              onChange={(e) => setEditContent(e.target.value)}\r\n              rows=\"3\"\r\n              className=\"edit-textarea\"\r\n              maxLength=\"1000\"\r\n            />\r\n            <div className=\"edit-actions\">\r\n              <button \r\n                onClick={handleCancelEdit}\r\n                className=\"cancel-edit-btn\"\r\n                disabled={saving}\r\n              >\r\n                取消\r\n              </button>\r\n              <button \r\n                onClick={handleSaveEdit}\r\n                className=\"save-edit-btn\"\r\n                disabled={!editContent.trim() || saving}\r\n              >\r\n                {saving ? '保存中...' : '保存'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div \r\n            className=\"comment-text\"\r\n            dangerouslySetInnerHTML={{ __html: renderContent() }}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {/* 评论底部 */}\r\n      <div className=\"comment-footer\">\r\n        <button \r\n          className={`like-btn ${isLiked ? 'liked' : ''}`}\r\n          onClick={handleLike}\r\n        >\r\n          <span className=\"like-icon\">👍</span>\r\n          <span className=\"like-count\">{likes}</span>\r\n        </button>\r\n\r\n        <button \r\n          className=\"reply-footer-btn\"\r\n          onClick={handleReplyClick}\r\n        >\r\n          回复\r\n        </button>\r\n      </div>\r\n\r\n      {/* 回复指示器 */}\r\n      {comment.get('parent') && (\r\n        <div className=\"reply-indicator\">\r\n          回复 <span className=\"reply-to\">@{comment.get('parent')?.get('author')?.get('username') || '用户'}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentItem;","// components/community/CommentSection.jsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport CommentItem from './CommentItem';\r\nimport AV from 'leancloud-storage';\r\nimport './CommentSection.css';\r\n\r\nconst CommentSection = ({ postId }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [sortBy, setSortBy] = useState('newest'); // newest, oldest, popular\r\n  const [replyingTo, setReplyingTo] = useState(null);\r\n  const textareaRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    loadComments();\r\n  }, [postId, sortBy]);\r\n\r\n  const loadComments = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const commentsData = await CommunityService.getComments(postId);\r\n      \r\n      // 排序评论\r\n      const sortedComments = [...commentsData].sort((a, b) => {\r\n        switch (sortBy) {\r\n          case 'oldest':\r\n            return new Date(a.get('createdAt')) - new Date(b.get('createdAt'));\r\n          case 'popular':\r\n            return (b.get('likes') || 0) - (a.get('likes') || 0);\r\n          case 'newest':\r\n          default:\r\n            return new Date(b.get('createdAt')) - new Date(a.get('createdAt'));\r\n        }\r\n      });\r\n\r\n      setComments(sortedComments);\r\n    } catch (error) {\r\n      console.error('加载评论失败:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmitComment = async () => {\r\n    if (!newComment.trim()) return;\r\n\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      alert('请先登录后再评论');\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      let parentId = null;\r\n      if (replyingTo) {\r\n        parentId = replyingTo.id;\r\n      }\r\n\r\n      await CommunityService.addComment(postId, newComment, parentId);\r\n      \r\n      // 清空输入框\r\n      setNewComment('');\r\n      setReplyingTo(null);\r\n      \r\n      // 重新加载评论\r\n      await loadComments();\r\n      \r\n      // 显示成功提示\r\n      showSuccessMessage('评论发布成功！');\r\n    } catch (error) {\r\n      console.error('发布评论失败:', error);\r\n      alert('发布评论失败: ' + error.message);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleReply = (comment) => {\r\n    setReplyingTo(comment);\r\n    setNewComment(`@${comment.get('author')?.get('username') || '用户'} `);\r\n    textareaRef.current?.focus();\r\n  };\r\n\r\n  const cancelReply = () => {\r\n    setReplyingTo(null);\r\n    setNewComment('');\r\n  };\r\n\r\n  const showSuccessMessage = (message) => {\r\n    // 可以在这里添加更美观的成功提示\r\n    console.log(message);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\r\n      handleSubmitComment();\r\n    }\r\n  };\r\n\r\n  const getCommentCountText = () => {\r\n    const count = comments.length;\r\n    if (count === 0) return '暂无评论';\r\n    if (count === 1) return '1 条评论';\r\n    return `${count} 条评论`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-section\">\r\n      {/* 评论头部 */}\r\n      <div className=\"comment-header\">\r\n        <h4 className=\"comment-title\">\r\n          💬 {getCommentCountText()}\r\n        </h4>\r\n        \r\n        <div className=\"comment-controls\">\r\n          <select \r\n            value={sortBy}\r\n            onChange={(e) => setSortBy(e.target.value)}\r\n            className=\"sort-select\"\r\n          >\r\n            <option value=\"newest\">最新</option>\r\n            <option value=\"oldest\">最早</option>\r\n            <option value=\"popular\">最热</option>\r\n          </select>\r\n          \r\n          <button \r\n            className=\"refresh-comments\"\r\n            onClick={loadComments}\r\n            disabled={loading}\r\n          >\r\n            {loading ? '🔄' : '🔄'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 评论输入框 */}\r\n      <div className=\"comment-input-section\">\r\n        {replyingTo && (\r\n          <div className=\"reply-indicator\">\r\n            <span>回复 @{replyingTo.get('author')?.get('username') || '用户'}</span>\r\n            <button onClick={cancelReply}>取消</button>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"comment-input-wrapper\">\r\n          <textarea\r\n            ref={textareaRef}\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder={replyingTo ? '写下你的回复...' : '写下你的评论...'}\r\n            rows=\"3\"\r\n            className=\"comment-textarea\"\r\n            maxLength=\"1000\"\r\n          />\r\n          \r\n          <div className=\"comment-input-footer\">\r\n            <div className=\"char-count\">\r\n              {newComment.length}/1000\r\n            </div>\r\n            \r\n            <button\r\n              onClick={handleSubmitComment}\r\n              disabled={!newComment.trim() || submitting}\r\n              className=\"submit-comment-btn\"\r\n            >\r\n              {submitting ? (\r\n                <>\r\n                  <div className=\"submit-spinner\"></div>\r\n                  发布中...\r\n                </>\r\n              ) : (\r\n                '发布评论'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"comment-tips\">\r\n          <span className=\"tip\">💡 支持 Markdown 语法</span>\r\n          <span className=\"tip\">⏎ + Ctrl 快速发布</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 评论列表 */}\r\n      <div className=\"comments-list\">\r\n        {loading ? (\r\n          <div className=\"comments-loading\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <span>加载评论中...</span>\r\n          </div>\r\n        ) : comments.length === 0 ? (\r\n          <div className=\"no-comments\">\r\n            <div className=\"no-comments-icon\">💬</div>\r\n            <h5>还没有评论</h5>\r\n            <p>成为第一个评论的人吧！</p>\r\n          </div>\r\n        ) : (\r\n          comments.map(comment => (\r\n            <CommentItem\r\n              key={comment.id}\r\n              comment={comment}\r\n              onReply={handleReply}\r\n              onUpdate={loadComments}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentSection;","// components/community/PostCard.jsx\r\nimport React, { useState } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport CommentSection from './CommentSection';\r\nimport './PostCard.css';\r\n\r\n// 格式化时间函数\r\nconst formatTime = (date) => {\r\n  if (!date) return \"刚刚\";\r\n  const now = new Date();\r\n  const diffMs = now - new Date(date);\r\n  const diffMins = Math.floor(diffMs / 60000);\r\n  const diffHours = Math.floor(diffMs / 3600000);\r\n  const diffDays = Math.floor(diffMs / 86400000);\r\n\r\n  if (diffMins < 1) return \"刚刚\";\r\n  if (diffMins < 60) return `${diffMins}分钟前`;\r\n  if (diffHours < 24) return `${diffHours}小时前`;\r\n  if (diffDays < 7) return `${diffDays}天前`;\r\n  return new Date(date).toLocaleDateString('zh-CN', {\r\n    month: 'short',\r\n    day: 'numeric'\r\n  });\r\n};\r\n\r\nconst PostCard = ({ post }) => {\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [likes, setLikes] = useState(post.get('likes') || 0);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [views, setViews] = useState(post.get('views') || 0);\r\n  \r\n  // 获取用户头像\r\n  const getAvatarUrl = () => {\r\n    return post.get('author')?.get('avatar') || '/default-avatar.png';\r\n  };\r\n\r\n  // 获取用户名\r\n  const getUsername = () => {\r\n    return post.get('author')?.get('username') || '匿名用户';\r\n  };\r\n\r\n  // 处理点赞\r\n  const handleLike = async () => {\r\n    try {\r\n      const result = await CommunityService.toggleLike(post.id);\r\n      setLikes(result.liked ? likes + 1 : Math.max(0, likes - 1));\r\n      setIsLiked(result.liked);\r\n    } catch (error) {\r\n      console.error('点赞失败:', error);\r\n    }\r\n  };\r\n\r\n  // 处理查看评论\r\n  const handleToggleComments = () => {\r\n    setShowComments(!showComments);\r\n    // 增加浏览数（只在第一次展开评论时）\r\n    if (!showComments) {\r\n      setViews(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  // 获取难度颜色\r\n  const getDifficultyColor = () => {\r\n    const difficulty = post.get('difficulty') || 'medium';\r\n    switch (difficulty) {\r\n      case 'easy': return '#52c41a';\r\n      case 'medium': return '#faad14';\r\n      case 'hard': return '#f5222d';\r\n      default: return '#666';\r\n    }\r\n  };\r\n\r\n  // 获取标签颜色\r\n  const getTagColor = (index) => {\r\n    const colors = [\r\n      '#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57',\r\n      '#ff9ff3', '#54a0ff', '#5f27cd', '#00d2d3', '#ff9f43'\r\n    ];\r\n    return colors[index % colors.length];\r\n  };\r\n\r\n  // 渲染内容（支持简单的 Markdown）\r\n  const renderContent = () => {\r\n    const content = post.get('content') || '';\r\n    \r\n    // 简单的 Markdown 处理\r\n    return content\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      .replace(/`(.*?)`/g, '<code>$1</code>')\r\n      .replace(/\\n/g, '<br>');\r\n  };\r\n\r\n  // 获取内容预览\r\n  const getContentPreview = () => {\r\n    const content = post.get('content') || '';\r\n    const plainText = content.replace(/[#*`]/g, '');\r\n    return plainText.length > 150 \r\n      ? plainText.substring(0, 150) + '...' \r\n      : plainText;\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-card\">\r\n      {/* 帖子头部 */}\r\n      <div className=\"post-header\">\r\n        <div className=\"author-section\">\r\n          <img \r\n            src={getAvatarUrl()} \r\n            alt=\"用户头像\"\r\n            className=\"author-avatar\"\r\n            style={{ width: '40px', height: '40px' }} // 内联样式作为备选\r\n\r\n          />\r\n          <div className=\"author-info\">\r\n            <div className=\"author-name\">{getUsername()}</div>\r\n            <div className=\"post-meta\">\r\n              <span className=\"post-time\">\r\n                {formatTime(post.get('createdAt'))}\r\n              </span>\r\n              {post.get('isPinned') && (\r\n                <span className=\"pinned-badge\">📌 置顶</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"post-status\">\r\n          {post.get('difficulty') && (\r\n            <span \r\n              className=\"difficulty-badge\"\r\n              style={{ backgroundColor: getDifficultyColor() }}\r\n            >\r\n              {post.get('difficulty') === 'easy' ? '简单' : \r\n               post.get('difficulty') === 'medium' ? '中等' : '困难'}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 帖子内容 */}\r\n      <div className=\"post-content\">\r\n        <h3 className=\"post-title\">{post.get('title')}</h3>\r\n        \r\n        <div \r\n          className=\"post-body\"\r\n          dangerouslySetInnerHTML={{ __html: renderContent() }}\r\n        />\r\n        \r\n        {/* 内容过长时的阅读更多 */}\r\n        {(post.get('content') || '').length > 150 && !showComments && (\r\n          <button \r\n            className=\"read-more-btn\"\r\n            onClick={() => setShowComments(true)}\r\n          >\r\n            阅读全文\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* 标签区域 */}\r\n      {post.get('tags') && post.get('tags').length > 0 && (\r\n        <div className=\"post-tags\">\r\n          {post.get('tags').map((tag, index) => (\r\n            <span\r\n              key={tag}\r\n              className=\"post-tag\"\r\n              style={{ \r\n                backgroundColor: getTagColor(index) + '20',\r\n                color: getTagColor(index),\r\n                borderColor: getTagColor(index) + '40'\r\n              }}\r\n            >\r\n              #{tag}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* 帖子统计和操作 */}\r\n      <div className=\"post-footer\">\r\n        <div className=\"post-stats\">\r\n          <button \r\n            className={`stat-btn like-btn ${isLiked ? 'liked' : ''}`}\r\n            onClick={handleLike}\r\n          >\r\n            <span className=\"stat-icon\">👍</span>\r\n            <span className=\"stat-count\">{likes}</span>\r\n          </button>\r\n          \r\n          <button \r\n            className={`stat-btn comment-btn ${showComments ? 'active' : ''}`}\r\n            onClick={handleToggleComments}\r\n          >\r\n            <span className=\"stat-icon\">💬</span>\r\n            <span className=\"stat-count\">{post.get('commentCount') || 0}</span>\r\n          </button>\r\n          \r\n          <div className=\"stat-btn view-btn\">\r\n            <span className=\"stat-icon\">👁️</span>\r\n            <span className=\"stat-count\">{views}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"post-actions\">\r\n          <button className=\"action-btn share-btn\">\r\n            🔗 分享\r\n          </button>\r\n          <button className=\"action-btn bookmark-btn\">\r\n            📌 收藏\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 评论区域 */}\r\n      {showComments && (\r\n        <CommentSection postId={post.id} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostCard;","// components/community/CommunityPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport CreatePostModal from './CreatePostModal';\r\nimport SearchBar from './SearchBar';\r\nimport TagCloud from './TagCloud';\r\nimport CommunityStats from './CommunityStats';\r\nimport PostCard from './PostCard';\r\nimport './CommunityPage.css';\r\n\r\nconst CommunityPage = () => {\r\n  const [activeTab, setActiveTab] = useState('latest');\r\n  const [posts, setPosts] = useState([]);\r\n  const [allPosts, setAllPosts] = useState([]); // 保存所有帖子用于搜索过滤\r\n  const [loading, setLoading] = useState(false);\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    pageSize: 20,\r\n    hasMore: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadPosts(true);\r\n  }, [activeTab]);\r\n\r\n  // 根据搜索关键词过滤帖子\r\n  useEffect(() => {\r\n    if (searchKeyword.trim() === '') {\r\n      // 如果没有搜索关键词，显示所有帖子\r\n      setPosts(allPosts);\r\n    } else {\r\n      // 只显示标题包含搜索关键词的帖子\r\n      const filtered = allPosts.filter(post => \r\n        post.get('title')?.toLowerCase().includes(searchKeyword.toLowerCase())\r\n      );\r\n      setPosts(filtered);\r\n    }\r\n  }, [searchKeyword, allPosts]);\r\n\r\n  const loadPosts = async (reset = false) => {\r\n    if (loading) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const currentPage = reset ? 1 : pagination.page;\r\n      const options = {\r\n        page: currentPage,\r\n        pageSize: pagination.pageSize,\r\n        sortBy: activeTab === 'latest' ? 'createdAt' : 'likes',\r\n        sortOrder: 'desc'\r\n      };\r\n\r\n      const postsData = await CommunityService.getPosts(options);\r\n      \r\n      if (reset) {\r\n        setAllPosts(postsData);\r\n        setPosts(postsData);\r\n      } else {\r\n        const newAllPosts = [...allPosts, ...postsData];\r\n        setAllPosts(newAllPosts);\r\n        \r\n        // 应用当前搜索过滤\r\n        if (searchKeyword.trim() === '') {\r\n          setPosts(newAllPosts);\r\n        } else {\r\n          const filtered = newAllPosts.filter(post => \r\n            post.get('title')?.toLowerCase().includes(searchKeyword.toLowerCase())\r\n          );\r\n          setPosts(filtered);\r\n        }\r\n      }\r\n\r\n      setPagination(prev => ({\r\n        ...prev,\r\n        page: currentPage,\r\n        hasMore: postsData.length === pagination.pageSize\r\n      }));\r\n    } catch (error) {\r\n      console.error('加载帖子失败:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (keyword) => {\r\n    setSearchKeyword(keyword);\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    if (!loading && pagination.hasMore) {\r\n      loadPosts(false);\r\n    }\r\n  };\r\n\r\n  const handlePostCreated = (newPost) => {\r\n    // 添加到所有帖子列表\r\n    setAllPosts(prev => [newPost, ...prev]);\r\n    \r\n    // 根据当前搜索条件决定是否显示新帖子\r\n    if (searchKeyword.trim() === '' || \r\n        newPost.get('title')?.toLowerCase().includes(searchKeyword.toLowerCase())) {\r\n      setPosts(prev => [newPost, ...prev]);\r\n    }\r\n    \r\n    setShowCreateModal(false);\r\n  };\r\n\r\n  // 获取搜索结果统计\r\n  const getSearchStats = () => {\r\n    if (searchKeyword.trim() === '') {\r\n      return `共 ${allPosts.length} 个帖子`;\r\n    } else {\r\n      const matchCount = allPosts.filter(post => \r\n        post.get('title')?.toLowerCase().includes(searchKeyword.toLowerCase())\r\n      ).length;\r\n      return `找到 ${posts.length} 个匹配标题的帖子（共 ${matchCount} 个）`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"community-section\">\r\n      <div className=\"container\">\r\n        {/* 头部区域 */}\r\n        <div className=\"community-header\">\r\n          <div className=\"header-content\">\r\n            <div className=\"header-text\">\r\n              <h2>学习社区</h2>\r\n              <p>与大家一起交流学习心得，分享刷题经验</p>\r\n            </div>\r\n            <button \r\n              className=\"create-post-btn modern-btn primary\"\r\n              onClick={() => setShowCreateModal(true)}\r\n            >\r\n              <span className=\"btn-icon\">✏️</span>\r\n              发布帖子\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 搜索和统计区域 */}\r\n        <div className=\"community-toolbar\">\r\n          <div className=\"toolbar-left\">\r\n            <SearchBar \r\n              onSearch={handleSearch}\r\n              placeholder=\"搜索帖子标题...\"\r\n            />\r\n          </div>\r\n          <div className=\"toolbar-right\">\r\n            <CommunityStats />\r\n          </div>\r\n        </div>\r\n\r\n        {/* 搜索统计信息 */}\r\n        {searchKeyword && (\r\n          <div className=\"search-results-info\">\r\n            <div className=\"results-stats\">\r\n              {getSearchStats()}\r\n              {searchKeyword && (\r\n                <span className=\"search-keyword\">\r\n                  搜索关键词: <strong>\"{searchKeyword}\"</strong>\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"community-layout\">\r\n          {/* 侧边栏 */}\r\n          <aside className=\"community-sidebar\">\r\n            <div className=\"sidebar-section\">\r\n              <h3>热门标签</h3>\r\n              <TagCloud \r\n                onTagClick={(tag) => handleSearch(tag)}\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"sidebar-section\">\r\n              <h3>社区指南</h3>\r\n              <div className=\"community-guidelines\">\r\n                <p>💡 分享学习心得</p>\r\n                <p>🤝 互相帮助解答</p>\r\n                <p>🎯 保持内容相关</p>\r\n                <p>👍 尊重他人观点</p>\r\n              </div>\r\n            </div>\r\n          </aside>\r\n\r\n          {/* 主内容区 */}\r\n          <main className=\"community-main\">\r\n            {/* 标签导航 */}\r\n            <div className=\"community-tabs\">\r\n              <button \r\n                className={`modern-tab ${activeTab === 'latest' ? 'active' : ''}`}\r\n                onClick={() => setActiveTab('latest')}\r\n              >\r\n                <span className=\"tab-icon\">🆕</span>\r\n                <span className=\"tab-text\">最新帖子</span>\r\n              </button>\r\n              <button \r\n                className={`modern-tab ${activeTab === 'popular' ? 'active' : ''}`}\r\n                onClick={() => setActiveTab('popular')}\r\n              >\r\n                <span className=\"tab-icon\">🔥</span>\r\n                <span className=\"tab-text\">热门内容</span>\r\n              </button>\r\n            </div>\r\n            \r\n            {/* 帖子列表 */}\r\n            <div className=\"post-list\">\r\n              {loading && (\r\n                <div className=\"loading\">\r\n                  <div className=\"spinner\"></div>\r\n                  <span>加载中...</span>\r\n                </div>\r\n              )}\r\n              \r\n              {posts.map(post => (\r\n                <PostCard key={post.id} post={post} />\r\n              ))}\r\n              \r\n              {!loading && posts.length === 0 && (\r\n                <div className=\"empty-state\">\r\n                  <div className=\"empty-icon\">\r\n                    {searchKeyword ? '🔍' : '💬'}\r\n                  </div>\r\n                  <h3>\r\n                    {searchKeyword ? '没有找到匹配的帖子' : '暂无帖子'}\r\n                  </h3>\r\n                  <p>\r\n                    {searchKeyword \r\n                      ? `没有标题包含 \"${searchKeyword}\" 的帖子，尝试调整搜索关键词`\r\n                      : '成为第一个分享学习心得的人吧！'\r\n                    }\r\n                  </p>\r\n                  {searchKeyword && (\r\n                    <button \r\n                      onClick={() => handleSearch('')}\r\n                      className=\"clear-search-btn\"\r\n                    >\r\n                      显示所有帖子\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {pagination.hasMore && posts.length > 0 && searchKeyword === '' && (\r\n              <div className=\"load-more-section\">\r\n                <button \r\n                  onClick={handleLoadMore}\r\n                  disabled={loading}\r\n                  className=\"load-more-btn\"\r\n                >\r\n                  {loading ? '加载中...' : '加载更多'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </main>\r\n        </div>\r\n        \r\n        {/* 创建帖子模态框 */}\r\n        {showCreateModal && (\r\n          <CreatePostModal \r\n            onClose={() => setShowCreateModal(false)}\r\n            onSuccess={handlePostCreated}\r\n          />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CommunityPage;","\r\n// HomePage.jsx\r\nimport React, { useState, useEffect, useRef, useMemo, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\r\nimport Chatbox from '../components/Chatbox';\r\nimport {\r\n  getCategories,\r\n  initAV,\r\n  QueryOptions,\r\n  createCategory,\r\n  deleteCategory,\r\n} from \"../services/categoryService\";\r\nimport { getAllQuestions, updateQuestion } from \"../services/questionService\";\r\nimport AV from \"leancloud-storage\";\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ReviewReminderSection from \"../components/ReviewReminderSection\";\r\nimport CalendarTooltip from \"../components/CalendarTooltip\";\r\nimport \"./HomePage.css\";\r\nimport Documents from \"../components/Documents\";\r\nimport CommunityPage from \"../components/community/CommunityPage\";\r\n\r\n// 创建 React Query 客户端\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      staleTime: 5 * 60 * 1000, // 5分钟\r\n      cacheTime: 10 * 60 * 1000, // 10分钟\r\n      retry: 1,\r\n    },\r\n  },\r\n});\r\n\r\nconst HomePage = () => {\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [syncing, setSyncing] = useState(false);\r\n  const [syncMessage, setSyncMessage] = useState(\"\");\r\n  const [activeTab, setActiveTab] = useState(\"categories\");\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date());\r\n  const [showAddCategory, setShowAddCategory] = useState(false);\r\n  const [newCategoryName, setNewCategoryName] = useState(\"\");\r\n  const [newCategoryDescription, setNewCategoryDescription] = useState(\"\");\r\n  const [addingCategory, setAddingCategory] = useState(false);\r\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n  const [categoryToDelete, setCategoryToDelete] = useState(null);\r\n  const [deletingCategory, setDeletingCategory] = useState(false);\r\n\r\n  // 复习提醒相关状态\r\n  const [reviewThreshold, setReviewThreshold] = useState(7); // 默认7天\r\n  const [reviewQuestions, setReviewQuestions] = useState([]);\r\n  const [showReviewSettings, setShowReviewSettings] = useState(false);\r\n\r\n  // 用户状态\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  // 日历hover相关状态\r\n  const [hoveredDay, setHoveredDay] = useState(null);\r\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\r\n  const [tooltipVisible, setTooltipVisible] = useState(false);\r\n  const calendarRef = useRef(null);\r\n\r\n\r\n  const handleManualRefresh = useCallback(async () => {\r\n    console.log('🔄 手动刷新数据...');\r\n    setSyncMessage('刷新数据中...');\r\n    \r\n    try {\r\n      // 清除所有缓存\r\n      clearAllCache();\r\n      clearCategoryCache();\r\n      \r\n      // 重新加载数据\r\n      await initializeData();\r\n      \r\n      setSyncMessage('数据刷新成功！');\r\n      setTimeout(() => setSyncMessage(''), 3000);\r\n    } catch (error) {\r\n      console.error('刷新数据失败:', error);\r\n      setSyncMessage('刷新失败: ' + error.message);\r\n      setTimeout(() => setSyncMessage(''), 5000);\r\n    }\r\n  }, []);\r\n\r\n   // 添加题目后自动刷新数据\r\n   useEffect(() => {\r\n    const handleQuestionCreated = () => {\r\n      console.log('📝 检测到题目创建，自动刷新数据...');\r\n      setTimeout(() => {\r\n        handleManualRefresh();\r\n      }, 1000);\r\n    };\r\n\r\n    // 监听题目创建事件\r\n    window.addEventListener('questionCreated', handleQuestionCreated);\r\n    \r\n    return () => {\r\n      window.removeEventListener('questionCreated', handleQuestionCreated);\r\n    };\r\n  }, [handleManualRefresh]);\r\n\r\n\r\n\r\n\r\n  // 检查用户登录状态\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n\r\n    if (user) {\r\n      initializeData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // 处理添加分类\r\n  const handleAddCategory = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!currentUser) {\r\n      alert(\"请先登录\");\r\n      return;\r\n    }\r\n\r\n    if (!newCategoryName.trim()) {\r\n      alert(\"请输入分类名称\");\r\n      return;\r\n    }\r\n\r\n    setAddingCategory(true);\r\n    try {\r\n      const newCategory = await createCategory({\r\n        name: newCategoryName.trim(),\r\n        description: newCategoryDescription.trim() || undefined,\r\n      });\r\n\r\n      // 添加新分类到列表\r\n      setCategories((prev) => [newCategory, ...prev]);\r\n\r\n      // 重置表单\r\n      setNewCategoryName(\"\");\r\n      setNewCategoryDescription(\"\");\r\n      setShowAddCategory(false);\r\n\r\n      // 显示成功消息\r\n      setSyncMessage(`分类 \"${newCategory.name}\" 创建成功！`);\r\n      setTimeout(() => setSyncMessage(\"\"), 3000);\r\n    } catch (error) {\r\n      console.error(\"创建分类失败:\", error);\r\n      setSyncMessage(\"创建分类失败: \" + (error.message || \"请检查网络连接\"));\r\n    } finally {\r\n      setAddingCategory(false);\r\n    }\r\n  };\r\n\r\n  // 处理删除分类确认\r\n  const handleDeleteClick = useCallback((category, e) => {\r\n    e.stopPropagation(); // 阻止事件冒泡，避免触发分类卡片点击\r\n    setCategoryToDelete(category);\r\n    setShowDeleteConfirm(true);\r\n  }, []);\r\n\r\n  // 确认删除分类\r\n  const handleConfirmDelete = async () => {\r\n    if (!categoryToDelete) return;\r\n\r\n    setDeletingCategory(true);\r\n    try {\r\n      await deleteCategory(categoryToDelete.id);\r\n\r\n      // 从列表中移除分类\r\n      setCategories((prev) =>\r\n        prev.filter((cat) => cat.id !== categoryToDelete.id)\r\n      );\r\n\r\n      // 关闭确认对话框\r\n      setShowDeleteConfirm(false);\r\n      setCategoryToDelete(null);\r\n\r\n      // 显示成功消息\r\n      setSyncMessage(`分类 \"${categoryToDelete.name}\" 删除成功！`);\r\n      setTimeout(() => setSyncMessage(\"\"), 3000);\r\n    } catch (error) {\r\n      console.error(\"删除分类失败:\", error);\r\n      setSyncMessage(\"删除分类失败: \" + (error.message || \"请检查网络连接\"));\r\n    } finally {\r\n      setDeletingCategory(false);\r\n    }\r\n  };\r\n\r\n  // 取消删除\r\n  const handleCancelDelete = useCallback(() => {\r\n    setShowDeleteConfirm(false);\r\n    setCategoryToDelete(null);\r\n  }, []);\r\n\r\n \r\n  const reloadData = async () => {\r\n    try {\r\n      const categoriesData = await getCategories({\r\n        page: 1,\r\n        pageSize: 50,\r\n        sortBy: QueryOptions.SORT_BY_UPDATED_AT,\r\n        sortOrder: \"desc\",\r\n      });\r\n      setCategories(categoriesData.data);\r\n\r\n      const questionsData = await getAllQuestions();\r\n      setQuestions(questionsData);\r\n    } catch (err) {\r\n      console.error(\"重新加载数据失败:\", err);\r\n    }\r\n  };\r\n\r\n  // 更新题目复习时间 - 修复版本\r\n  const handleUpdateQuestionTime = async (questionId) => {\r\n    try {\r\n      console.log(\"更新题目复习时间:\", questionId);\r\n\r\n      const question = questions.find((q) => q.id === questionId);\r\n      if (!question) {\r\n        throw new Error(\"未找到对应的题目\");\r\n      }\r\n\r\n      const currentTime = new Date();\r\n\r\n      // 只更新自定义字段，不要更新 reserved fields\r\n      await updateQuestion(questionId, {\r\n        lastReviewedAt: currentTime, // 只更新自定义的复习时间字段\r\n      });\r\n\r\n      console.log(\"LeanCloud 更新成功，开始更新本地状态\");\r\n\r\n      // 更新本地状态中的题目更新时间\r\n      setQuestions((prev) =>\r\n        prev.map((q) =>\r\n          q.id === questionId\r\n            ? {\r\n                ...q,\r\n                // updatedAt 由 LeanCloud 自动更新，我们只更新 lastReviewedAt\r\n                lastReviewedAt: currentTime.toISOString(),\r\n              }\r\n            : q\r\n        )\r\n      );\r\n\r\n      console.log(`题目 ${questionId} 复习时间已更新`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"更新题目时间失败:\", error);\r\n      console.error(\"错误详情:\", {\r\n        questionId,\r\n        errorMessage: error.message,\r\n        errorStack: error.stack,\r\n      });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // 计算需要复习的题目 - 修复版本\r\n  useEffect(() => {\r\n    const calculateReviewQuestions = () => {\r\n      const now = new Date();\r\n      const thresholdMs = reviewThreshold * 24 * 60 * 60 * 1000; // 转换为毫秒\r\n\r\n      const needReview = questions\r\n        .filter((question) => {\r\n          // 使用 lastReviewedAt 字段，如果不存在则使用 createdAt\r\n          const lastReviewed = new Date(\r\n            question.lastReviewedAt || question.createdAt\r\n          );\r\n          const timeDiff = now - lastReviewed;\r\n          return timeDiff >= thresholdMs;\r\n        })\r\n        .sort((a, b) => {\r\n          // 按复习时间正序排列，最久未复习的排在最前面\r\n          const timeA = new Date(a.lastReviewedAt || a.createdAt);\r\n          const timeB = new Date(b.lastReviewedAt || b.createdAt);\r\n          return timeA - timeB;\r\n        });\r\n\r\n      setReviewQuestions(needReview);\r\n    };\r\n\r\n    if (questions.length > 0) {\r\n      calculateReviewQuestions();\r\n    }\r\n  }, [questions, reviewThreshold]);\r\n\r\n\r\nconst handleChatboxNavigate = (target) => {\r\n    console.log('导航到:', target);\r\n    switch (target) {\r\n      case 'categories':\r\n        setActiveTab('categories');\r\n        break;\r\n      case 'review':\r\n        setActiveTab('review');\r\n        break;\r\n      case 'stats':\r\n        setActiveTab('stats');\r\n        break;\r\n      case 'calendar':\r\n        setActiveTab('calendar');\r\n        break;\r\n      case 'community':\r\n        setActiveTab('community');\r\n        break;\r\n      case 'documents':\r\n        setActiveTab('documents');\r\n        break;\r\n      case 'createCategory':\r\n        setShowAddCategory(true);\r\n        break;\r\n      default:\r\n        setActiveTab('categories');\r\n    }\r\n    \r\n    // 滚动到顶部\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n\r\n// 优化后的 initializeData 函数\r\nconst initializeData = async () => {\r\n  try {\r\n    initAV();\r\n    \r\n    console.log('🔄 开始加载数据...');\r\n    \r\n    // 明确禁用缓存\r\n    const [categoriesData, questionsData] = await Promise.all([\r\n      getCategories({\r\n        page: 1,\r\n        pageSize: 50,\r\n        sortBy: QueryOptions.SORT_BY_UPDATED_AT,\r\n        sortOrder: \"desc\",\r\n      }),\r\n      getAllQuestions(false) // 明确传递 false 禁用缓存\r\n    ]);\r\n\r\n    console.log('✅ 数据加载完成:', {\r\n      分类数据: categoriesData.data.length,\r\n      题目数据: questionsData.length,\r\n      题目详情: questionsData.slice(0, 5).map(q => ({ id: q.id, title: q.title }))\r\n    });\r\n    console.log(categoriesData)\r\n\r\n    setCategories(categoriesData.data);\r\n    setQuestions(questionsData);\r\n    setLoading(false);\r\n    \r\n  } catch (err) {\r\n    console.error('❌ 初始化数据失败:', err);\r\n    setError(err.message);\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n\r\n  // 使用 useMemo 优化计算密集型操作\r\n  const filteredCategories = useMemo(() => {\r\n    return categories.filter((category) =>\r\n      category.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n  }, [categories, searchTerm]);\r\n\r\n  // 计算准确的分类题目数量统计 - 完全基于 questions 数据\r\n  const categoryStats = useMemo(() => {\r\n    if (!categories.length) {\r\n      return {\r\n        totalCategories: 0,\r\n        totalQuestions: 0,\r\n        categoriesWithQuestions: 0\r\n      };\r\n    }\r\n  \r\n    const totalQuestionsFromCategories = categories.reduce((sum, cat) => sum + (cat.questionCount || 0), 0);\r\n    const categoriesWithQuestions = categories.filter(cat => (cat.questionCount || 0) > 0).length;\r\n  \r\n    // 详细的调试信息\r\n    console.log('🔍 详细统计信息:', {\r\n      分类总数: categories.length,\r\n      基于分类的题目总数: totalQuestionsFromCategories,\r\n      基于所有题目的题目总数: questions.length,\r\n      差异: Math.abs(totalQuestionsFromCategories - questions.length),\r\n      有题目的分类数: categoriesWithQuestions,\r\n      对象:questions,\r\n      各分类详情: categories.map(cat => ({\r\n        分类名称: cat.name,\r\n        服务层题目数: cat.questionCount,\r\n        前端计算题目数: questions.filter(q => q.category?.id === cat.id).length,\r\n        是否匹配: cat.questionCount === questions.filter(q => q.category?.id === cat.id).length,\r\n      }))\r\n    });\r\n  \r\n    return {\r\n      totalCategories: categories.length,\r\n      totalQuestions: totalQuestionsFromCategories,\r\n      categoriesWithQuestions: categoriesWithQuestions\r\n    };\r\n  }, [categories, questions]);\r\n\r\n  \r\n  // 获取某一天的题目详情\r\n  const getDayQuestions = useCallback((date) => {\r\n    const dateStr = date.toISOString().split(\"T\")[0];\r\n\r\n    const dayQuestions = questions.filter((question) => {\r\n      const questionDate = new Date(question.createdAt);\r\n      const questionDateStr = questionDate.toISOString().split(\"T\")[0];\r\n      return questionDateStr === dateStr;\r\n    });\r\n\r\n    // 按创建时间排序\r\n    return dayQuestions.sort(\r\n      (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\r\n    );\r\n  }, [questions]);\r\n\r\n  // 获取固定颜色\r\n  const getDayColor = useCallback((count) => {\r\n    if (count === 0) return \"#f8f9fa\"; // 无题目 - 浅灰色\r\n    if (count <= 1) return \"#4CAF50\"; // 1题 - 深绿色\r\n    if (count <= 3) return \"#8BC34A\"; // 2-3题 - 浅绿色\r\n    if (count <= 5) return \"#FFC107\"; // 4-5题 - 黄色\r\n    if (count <= 8) return \"#FF9800\"; // 6-8题 - 橙色\r\n    return \"#F44336\"; // 9题以上 - 红色\r\n  }, []);\r\n\r\n  // 生成月度日历数据 - 使用 useMemo 优化\r\n  const getMonthlyCalendarData = useCallback(() => {\r\n    const monthStart = new Date(\r\n      selectedMonth.getFullYear(),\r\n      selectedMonth.getMonth(),\r\n      1\r\n    );\r\n    const monthEnd = new Date(\r\n      selectedMonth.getFullYear(),\r\n      selectedMonth.getMonth() + 1,\r\n      0\r\n    );\r\n\r\n    const dateCounts = {};\r\n    questions.forEach((question) => {\r\n      const questionDate = new Date(question.createdAt);\r\n      if (questionDate >= monthStart && questionDate <= monthEnd) {\r\n        const dateStr = questionDate.toISOString().split(\"T\")[0];\r\n        dateCounts[dateStr] = (dateCounts[dateStr] || 0) + 1;\r\n      }\r\n    });\r\n\r\n    const calendarData = [];\r\n    const currentDate = new Date(monthStart);\r\n\r\n    while (currentDate <= monthEnd) {\r\n      const dateStr = currentDate.toISOString().split(\"T\")[0];\r\n      const dayQuestions = getDayQuestions(currentDate);\r\n      const questionCount = dayQuestions.length;\r\n\r\n      calendarData.push({\r\n        date: new Date(currentDate),\r\n        count: questionCount,\r\n        day: currentDate.getDate(),\r\n        isToday: dateStr === new Date().toISOString().split(\"T\")[0],\r\n        questions: dayQuestions,\r\n        color: getDayColor(questionCount),\r\n      });\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    return calendarData;\r\n  }, [selectedMonth, questions, getDayQuestions, getDayColor]);\r\n\r\n  // 处理日历日期的鼠标悬停\r\n  const handleDayMouseEnter = useCallback((dayData, event) => {\r\n    setHoveredDay(dayData);\r\n    setTooltipVisible(true);\r\n\r\n    // 计算相对于日历容器的位置\r\n    if (calendarRef.current) {\r\n      const calendarRect = calendarRef.current.getBoundingClientRect();\r\n      const dayRect = event.currentTarget.getBoundingClientRect();\r\n\r\n      setTooltipPosition({\r\n        x: dayRect.left + dayRect.width / 2 - calendarRect.left,\r\n        y: dayRect.top - calendarRect.top - 10,\r\n      });\r\n    }\r\n\r\n    setTooltipVisible(true);\r\n  }, []);\r\n\r\n  const handleDayMouseLeave = useCallback(() => {\r\n    // 延迟隐藏，给用户时间移动到提示框\r\n    setTimeout(() => {\r\n      if (!document.querySelector(\".calendar-tooltip:hover\")) {\r\n        setTooltipVisible(false);\r\n      }\r\n    }, 100);\r\n  }, []);\r\n\r\n  const handleTooltipClose = useCallback(() => {\r\n    setTooltipVisible(false);\r\n    setHoveredDay(null);\r\n  }, []);\r\n\r\n  // 月份导航\r\n  const navigateMonth = useCallback((direction) => {\r\n    const newDate = new Date(selectedMonth);\r\n    if (direction === \"prev\") {\r\n      newDate.setMonth(newDate.getMonth() - 1);\r\n    } else {\r\n      newDate.setMonth(newDate.getMonth() + 1);\r\n    }\r\n    setSelectedMonth(newDate);\r\n  }, [selectedMonth]);\r\n\r\n  // 获取月份统计 - 使用 useMemo 优化\r\n  const getMonthStats = useCallback(() => {\r\n    const monthData = getMonthlyCalendarData();\r\n    const daysWithQuestions = monthData.filter((day) => day.count > 0).length;\r\n    const totalQuestions = monthData.reduce((sum, day) => sum + day.count, 0);\r\n    const maxDaily = Math.max(...monthData.map((day) => day.count));\r\n\r\n    return { daysWithQuestions, totalQuestions, maxDaily };\r\n  }, [getMonthlyCalendarData]);\r\n\r\n  const getCategoryChartData = useCallback(() => {\r\n    const categoryMap = {};\r\n\r\n    questions.forEach((question) => {\r\n      const categoryName = question.category?.name || \"未分类\";\r\n      categoryMap[categoryName] = (categoryMap[categoryName] || 0) + 1;\r\n    });\r\n\r\n    return Object.entries(categoryMap)\r\n      .map(([name, count]) => ({\r\n        name: name.length > 8 ? name.substring(0, 8) + \"...\" : name,\r\n        fullName: name,\r\n        value: count,\r\n        percentage: ((count / questions.length) * 100).toFixed(1),\r\n      }))\r\n      .sort((a, b) => b.value - a.value);\r\n  }, [questions]);\r\n\r\n  const getDifficultyData = useCallback(() => {\r\n    const difficultyMap = {};\r\n\r\n    questions.forEach((question) => {\r\n      const difficulty = question.difficulty || \"unknown\";\r\n      difficultyMap[difficulty] = (difficultyMap[difficulty] || 0) + 1;\r\n    });\r\n\r\n    return Object.entries(difficultyMap).map(([name, count]) => ({\r\n      name: getDifficultyText(name),\r\n      value: count,\r\n      color: getDifficultyColor(name),\r\n    }));\r\n  }, [questions]);\r\n\r\n  const getDifficultyColor = useCallback((difficulty) => {\r\n    switch (difficulty) {\r\n      case \"easy\":\r\n        return \"#52c41a\";\r\n      case \"medium\":\r\n        return \"#faad14\";\r\n      case \"hard\":\r\n        return \"#f5222d\";\r\n      default:\r\n        return \"#666\";\r\n    }\r\n  }, []);\r\n\r\n  const getDifficultyText = useCallback((difficulty) => {\r\n    switch (difficulty) {\r\n      case \"easy\":\r\n        return \"简单\";\r\n      case \"medium\":\r\n        return \"中等\";\r\n      case \"hard\":\r\n        return \"困难\";\r\n      default:\r\n        return \"未知\";\r\n    }\r\n  }, []);\r\n\r\n  const getActiveDays = useCallback(() => {\r\n    const uniqueDays = new Set(\r\n      questions.map((q) => new Date(q.createdAt).toDateString())\r\n    );\r\n    return uniqueDays.size;\r\n  }, [questions]);\r\n\r\n  const handleCategoryClick = useCallback((categoryId) => {\r\n    navigate(`/category/${categoryId}`);\r\n  }, [navigate]);\r\n\r\n  const handleQuestionClick = useCallback((questionId) => {\r\n    // 找到题目对应的分类并跳转\r\n    const question = questions.find((q) => q.id === questionId);\r\n    if (question && question.category) {\r\n      navigate(`/category/${question.category.id}`);\r\n    }\r\n  }, [questions, navigate]);\r\n\r\n  const formatTime = useCallback((date) => {\r\n    if (!date) return \"暂无\";\r\n    const now = new Date();\r\n    const diffMs = now - new Date(date);\r\n    const diffMins = Math.floor(diffMs / 60000);\r\n    const diffHours = Math.floor(diffMs / 3600000);\r\n    const diffDays = Math.floor(diffMs / 86400000);\r\n\r\n    if (diffMins < 60) return `${diffMins}分钟前`;\r\n    if (diffHours < 24) return `${diffHours}小时前`;\r\n    if (diffDays < 30) return `${diffDays}天前`;\r\n    return new Date(date).toLocaleDateString();\r\n  }, []);\r\n\r\n  const getProgressWidth = useCallback((count) => {\r\n    if (!categories.length) return 0;\r\n    const maxCount = Math.max(...categories.map((c) => c.questionCount || 0));\r\n    return maxCount > 0 ? (count / maxCount) * 100 : 0;\r\n  }, [categories]);\r\n\r\n  const defaultColors = [\r\n    \"#ff6b6b\",\r\n    \"#4ecdc4\",\r\n    \"#45b7d1\",\r\n    \"#96ceb4\",\r\n    \"#feca57\",\r\n    \"#ff9ff3\",\r\n    \"#54a0ff\",\r\n    \"#5f27cd\",\r\n    \"#00d2d3\",\r\n    \"#ff9f43\",\r\n  ];\r\n\r\n  // 使用 useMemo 缓存计算结果\r\n  const chartData = useMemo(() => getCategoryChartData(), [getCategoryChartData]);\r\n  const difficultyData = useMemo(() => getDifficultyData(), [getDifficultyData]);\r\n  const calendarData = useMemo(() => getMonthlyCalendarData(), [getMonthlyCalendarData]);\r\n  const activeDays = useMemo(() => getActiveDays(), [getActiveDays]);\r\n  const monthStats = useMemo(() => getMonthStats(), [getMonthStats]);\r\n  \r\n  const monthName = useMemo(() => selectedMonth.toLocaleDateString(\"zh-CN\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n  }), [selectedMonth]);\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <div className=\"auth-required-container\">\r\n          <div className=\"auth-required-icon\">🔐</div>\r\n          <h2>请先登录</h2>\r\n          <p>登录后即可查看和管理您的刷题数据</p>\r\n          <div className=\"auth-required-actions\">\r\n            <button\r\n              onClick={() => {\r\n                window.dispatchEvent(\r\n                  new CustomEvent(\"showAuthModal\", {\r\n                    detail: { tab: \"login\" },\r\n                  })\r\n                );\r\n              }}\r\n              className=\"login-btn primary\"\r\n            >\r\n              🚀 立即登录\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                window.dispatchEvent(\r\n                  new CustomEvent(\"showAuthModal\", {\r\n                    detail: { tab: \"register\" },\r\n                  })\r\n                );\r\n              }}\r\n              className=\"login-btn secondary\"\r\n            >\r\n              📝 注册账号\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"auth-features\">\r\n            <div className=\"feature-list\">\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">📚</span>\r\n                <span>管理您的刷题分类</span>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">📊</span>\r\n                <span>查看学习统计</span>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">🔄</span>\r\n                <span>使用复习提醒功能</span>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">🗓️</span>\r\n                <span>记录学习日历</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载知识库中...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <div className=\"error-container\">\r\n          <h2>加载失败</h2>\r\n          <p>{error}</p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            className=\"retry-btn\"\r\n          >\r\n            重试\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <div className=\"homepage\">\r\n        <header className=\"hero-section\">\r\n          <div className=\"hero-content\">\r\n            <div className=\"user-welcome\">\r\n              <h1 className=\"hero-title\">我的知识题库</h1>\r\n              <p className=\"hero-subtitle\">\r\n                欢迎回来, {currentUser.getUsername()}！按类别管理您的学习内容\r\n              </p>\r\n            </div>\r\n\r\n           \r\n            <div className=\"search-container\">\r\n              <div className=\"search-box\">\r\n                <span className=\"search-icon\">🔍</span>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"搜索类别...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"search-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            \r\n          </div>\r\n        </header>\r\n\r\n        {/* 现代化标签导航 */}\r\n        <section className=\"modern-tabs-section\">\r\n          <div className=\"container\">\r\n            <div className=\"modern-tabs\">\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"categories\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"categories\")}\r\n              >\r\n                <span className=\"tab-icon\">📚</span>\r\n                <span className=\"tab-text\">分类浏览</span>\r\n                {activeTab === \"categories\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"review\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"review\")}\r\n              >\r\n                <span className=\"tab-icon\">🔄</span>\r\n                <span className=\"tab-text\">\r\n                  复习提醒\r\n                  {reviewQuestions.length > 0 && (\r\n                    <span className=\"tab-badge\">{reviewQuestions.length}</span>\r\n                  )}\r\n                </span>\r\n                {activeTab === \"review\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"stats\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"stats\")}\r\n              >\r\n                <span className=\"tab-icon\">📊</span>\r\n                <span className=\"tab-text\">数据统计</span>\r\n                {activeTab === \"stats\" && <div className=\"tab-indicator\"></div>}\r\n              </button>\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"calendar\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"calendar\")}\r\n              >\r\n                <span className=\"tab-icon\">🗓️</span>\r\n                <span className=\"tab-text\">学习日历</span>\r\n                {activeTab === \"calendar\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n              {/* 新增的 Documents 按钮 */}\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"documents\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"documents\")}\r\n              >\r\n                <span className=\"tab-icon\">📖</span>\r\n                <span className=\"tab-text\">开发文档</span>\r\n                {activeTab === \"documents\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"community\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"community\")}\r\n              >\r\n                <span className=\"tab-icon\">👥</span>\r\n                <span className=\"tab-text\">学习社区</span>\r\n                {activeTab === \"community\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n\r\n\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {activeTab === \"categories\" && (\r\n          <>\r\n            <section className=\"filters-section\">\r\n              <div className=\"container\">\r\n                <div className=\"filters\">\r\n                  <div className=\"stats\">\r\n                    找到 {filteredCategories.length} 个类别\r\n                    {categories.length > 0 &&\r\n                      ` • 总计 ${questions.length} 道题目`}\r\n                  </div>\r\n                  <button\r\n                    className=\"add-category-btn\"\r\n                    onClick={() => setShowAddCategory(true)}\r\n                  >\r\n                    <span className=\"btn-icon\">+</span>\r\n                    新建分类\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            {/* 添加分类弹窗 */}\r\n            {showAddCategory && (\r\n              <div className=\"modal-overlay\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3>创建新分类</h3>\r\n                    <button\r\n                      className=\"close-btn\"\r\n                      onClick={() => setShowAddCategory(false)}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n\r\n                  <form onSubmit={handleAddCategory} className=\"category-form\">\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"categoryName\">分类名称 *</label>\r\n    <input\r\n      id=\"categoryName\"\r\n      type=\"text\"\r\n      value={newCategoryName}\r\n      onChange={(e) => setNewCategoryName(e.target.value)}\r\n      placeholder=\"请输入分类名称\"\r\n      maxLength={50}\r\n      autoFocus\r\n      style={{ color: 'black' }}  // 输入框文字设为黑色\r\n    />\r\n  </div>\r\n\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"categoryDescription\">分类描述</label>\r\n    <textarea\r\n      id=\"categoryDescription\"\r\n      value={newCategoryDescription}\r\n      onChange={(e) => setNewCategoryDescription(e.target.value)}\r\n      placeholder=\"请输入分类描述（可选）\"\r\n      rows=\"3\"\r\n      maxLength={200}\r\n      style={{ color: 'black' }}  // 文本域文字设为黑色\r\n    />\r\n  </div>\r\n\r\n  <div className=\"form-actions\">\r\n    <button\r\n      type=\"button\"\r\n      className=\"cancel-btn\"\r\n      onClick={() => setShowAddCategory(false)}\r\n    >\r\n      取消\r\n    </button>\r\n    <button\r\n      type=\"submit\"\r\n      className=\"submit-btn\"\r\n      disabled={addingCategory || !newCategoryName.trim()}\r\n    >\r\n      {addingCategory ? \"创建中...\" : \"创建分类\"}\r\n    </button>\r\n  </div>\r\n</form>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* 删除分类确认弹窗 */}\r\n            {showDeleteConfirm && categoryToDelete && (\r\n              <div className=\"modal-overlay\">\r\n                <div className=\"modal-content delete-confirm-modal\">\r\n                  <div className=\"modal-header\">\r\n                    <h3>确认删除</h3>\r\n                    <button className=\"close-btn\" onClick={handleCancelDelete}>\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"delete-content\">\r\n                    <div className=\"delete-icon\">🗑️</div>\r\n                    <div className=\"delete-message\">\r\n                      <p>\r\n                        确定要删除分类{\" \"}\r\n                        <strong>\"{categoryToDelete.name}\"</strong> 吗？\r\n                      </p>\r\n                      {categoryToDelete.questionCount > 0 && (\r\n                        <p className=\"warning-text\">\r\n                          ⚠️ 此分类包含 {categoryToDelete.questionCount}{\" \"}\r\n                          道题目，删除后这些题目将变为未分类状态！\r\n                        </p>\r\n                      )}\r\n                      <p className=\"delete-hint\">\r\n                        此操作不可撤销，请谨慎操作。\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className=\"delete-actions\">\r\n                      <button\r\n                        className=\"cancel-delete-btn\"\r\n                        onClick={handleCancelDelete}\r\n                        disabled={deletingCategory}\r\n                      >\r\n                        取消\r\n                      </button>\r\n                      <button\r\n                        className=\"confirm-delete-btn\"\r\n                        onClick={handleConfirmDelete}\r\n                        disabled={deletingCategory}\r\n                      >\r\n                        {deletingCategory ? \"删除中...\" : \"确认删除\"}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <section className=\"categories-section\">\r\n              <div className=\"container\">\r\n                {filteredCategories.length === 0 ? (\r\n                  <div className=\"empty-state\">\r\n                    <div className=\"empty-icon\">📚</div>\r\n                    <h3>暂无类别数据</h3>\r\n                    <p>没有找到匹配的类别，尝试调整搜索条件或创建新分类</p>\r\n                    <button\r\n                      className=\"create-first-category-btn\"\r\n                      onClick={() => setShowAddCategory(true)}\r\n                    >\r\n                      + 创建第一个分类\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"categories-grid\">\r\n                    {filteredCategories.map((category, index) => {\r\n                      const color = defaultColors[index % defaultColors.length];\r\n                      \r\n                      // 基于 questions 计算该分类的实际题目数量\r\n                      const actualQuestionCount = questions.filter(q => \r\n                        q.category?.id === category.id\r\n                      ).length;\r\n                      \r\n                      // 优先显示实际数量，如果没有则显示服务层数量\r\n                      const displayCount = actualQuestionCount > 0 ? actualQuestionCount : (category.questionCount || 0);\r\n\r\n                      return (\r\n                        <div\r\n                          key={category.id}\r\n                          className=\"category-card\"\r\n                          onClick={() => handleCategoryClick(category.id)}\r\n                          style={{ \"--accent-color\": color }}\r\n                        >\r\n                          <div className=\"card-header\">\r\n                            <div\r\n                              className=\"category-icon\"\r\n                              style={{ backgroundColor: color }}\r\n                            >\r\n                              {category.name.charAt(0)}\r\n                            </div>\r\n                            <div className=\"category-info\">\r\n                              <h3 className=\"category-name\">{category.name}</h3>\r\n                              {category.description && (\r\n                                <p className=\"category-description\">\r\n                                  {category.description}\r\n                                </p>\r\n                              )}\r\n                              <span className=\"question-count\">\r\n                              {displayCount}题\r\n                              </span>\r\n                            </div>\r\n                            <button\r\n                              className=\"delete-category-btn\"\r\n                              onClick={(e) => handleDeleteClick(category, e)}\r\n                              title=\"删除分类\"\r\n                            >\r\n                              ×\r\n                            </button>\r\n                          </div>\r\n\r\n                          <div className=\"card-footer\">\r\n                            <div className=\"progress-info\">\r\n                              <div className=\"progress-stats\">\r\n                                <span>\r\n                                  最近更新: {formatTime(category.updatedAt)}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"progress-bar\">\r\n                                <div\r\n                                  className=\"progress-fill\"\r\n                                  style={{\r\n                                    width: `${getProgressWidth(\r\n                                      category.questionCount\r\n                                    )}%`,\r\n                                    backgroundColor: color,\r\n                                  }}\r\n                                ></div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <button className=\"explore-btn\">查看题目 →</button>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </section>\r\n          </>\r\n        )}\r\n\r\n        {/* 复习提醒标签页 */}\r\n        {activeTab === \"review\" && (\r\n          <ReviewReminderSection\r\n            reviewQuestions={reviewQuestions}\r\n            setReviewQuestions={setReviewQuestions}\r\n            reviewThreshold={reviewThreshold}\r\n            setReviewThreshold={setReviewThreshold}\r\n            showReviewSettings={showReviewSettings}\r\n            setShowReviewSettings={setShowReviewSettings}\r\n            onQuestionClick={handleQuestionClick} // 传递跳转函数\r\n            onUpdateQuestionTime={handleUpdateQuestionTime}\r\n            questions={questions}\r\n          />\r\n        )}\r\n\r\n        {activeTab === \"documents\" && (\r\n          <section className=\"documents-tab-section\">\r\n            <div className=\"container\">\r\n              <Documents />\r\n            </div>\r\n          </section>\r\n        )}\r\n\r\n        {activeTab === \"community\" && <CommunityPage />}\r\n\r\n        {activeTab === \"stats\" && (\r\n          <section className=\"stats-section\">\r\n            <div className=\"container\">\r\n              <div className=\"stats-overview\">\r\n                <div className=\"modern-stat-card primary\">\r\n                  <div className=\"stat-icon\">📚</div>\r\n                  <div className=\"stat-content\">\r\n                    <div className=\"stat-number\">{categoryStats.totalCategories}</div>\r\n                    <div className=\"stat-label\">总分类数</div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modern-stat-card success\">\r\n                  <div className=\"stat-icon\">❓</div>\r\n                  <div className=\"stat-content\">\r\n                    <div className=\"stat-number\">{questions.length}</div>\r\n                    <div className=\"stat-label\">总题目数</div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modern-stat-card warning\">\r\n                  <div className=\"stat-icon\">📅</div>\r\n                  <div className=\"stat-content\">\r\n                    <div className=\"stat-number\">{activeDays}</div>\r\n                    <div className=\"stat-label\">活跃天数</div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modern-stat-card info\">\r\n                  <div className=\"stat-icon\">⚡</div>\r\n                  <div className=\"stat-content\">\r\n                    <div className=\"stat-number\">\r\n                      {categoryStats.totalQuestions > 0\r\n                        ? (categoryStats.totalQuestions / activeDays).toFixed(1)\r\n                        : 0}\r\n                    </div>\r\n                    <div className=\"stat-label\">日均题目</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"charts-grid\">\r\n                <div className=\"modern-chart-card\">\r\n                  <div className=\"chart-header\">\r\n                    <h3>📊 分类题目分布</h3>\r\n                    <span className=\"chart-subtitle\">各分类题目数量占比</span>\r\n                  </div>\r\n                  <div className=\"chart-container\">\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                      <PieChart>\r\n                        <Pie\r\n                          data={chartData}\r\n                          cx=\"50%\"\r\n                          cy=\"50%\"\r\n                          labelLine={false}\r\n                          label={({ name, percentage }) =>\r\n                            `${name} ${percentage}%`\r\n                          }\r\n                          outerRadius={100}\r\n                          fill=\"#8884d8\"\r\n                          dataKey=\"value\"\r\n                        >\r\n                          {chartData.map((entry, index) => (\r\n                            <Cell\r\n                              key={`cell-${index}`}\r\n                              fill={defaultColors[index % defaultColors.length]}\r\n                            />\r\n                          ))}\r\n                        </Pie>\r\n                        <Tooltip\r\n                          formatter={(value, name) => [`${value} 题`, name]}\r\n                        />\r\n                        <Legend />\r\n                      </PieChart>\r\n                    </ResponsiveContainer>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"modern-chart-card\">\r\n                  <div className=\"chart-header\">\r\n                    <h3>🎯 难度分布</h3>\r\n                    <span className=\"chart-subtitle\">题目难度等级统计</span>\r\n                  </div>\r\n                  <div className=\"chart-container\">\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                      <BarChart data={difficultyData}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip\r\n                          formatter={(value) => [`${value} 题`, \"数量\"]}\r\n                        />\r\n                        <Bar dataKey=\"value\" name=\"题目数量\">\r\n                          {difficultyData.map((entry, index) => (\r\n                            <Cell key={`cell-${index}`} fill={entry.color} />\r\n                          ))}\r\n                        </Bar>\r\n                      </BarChart>\r\n                    </ResponsiveContainer>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        )}\r\n\r\n        {activeTab === \"calendar\" && (\r\n          <section className=\"modern-calendar-section\">\r\n            <div className=\"container\">\r\n              <div className=\"calendar-header\">\r\n                <h3>🗓️ 学习日历</h3>\r\n                <p>查看每月的学习活动分布</p>\r\n              </div>\r\n\r\n              <div className=\"modern-calendar-card\" ref={calendarRef}>\r\n                <div className=\"calendar-controls\">\r\n                  <button\r\n                    onClick={() => navigateMonth(\"prev\")}\r\n                    className=\"month-nav-btn\"\r\n                  >\r\n                    ← 上个月\r\n                  </button>\r\n                  <h4 className=\"current-month\">{monthName}</h4>\r\n                  <button\r\n                    onClick={() => navigateMonth(\"next\")}\r\n                    className=\"month-nav-btn\"\r\n                  >\r\n                    下个月 →\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"monthly-calendar\">\r\n                  <div className=\"calendar-weekdays\">\r\n                    {[\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"].map((day) => (\r\n                      <div key={day} className=\"weekday\">\r\n                        {day}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n\r\n                  <div className=\"calendar-days\">\r\n                    {calendarData.map((dayData, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className={`calendar-day ${\r\n                          dayData.count > 0 ? \"has-questions\" : \"\"\r\n                        } ${dayData.isToday ? \"today\" : \"\"}`}\r\n                        style={{ backgroundColor: dayData.color }}\r\n                        onMouseEnter={(e) => handleDayMouseEnter(dayData, e)}\r\n                        onMouseLeave={handleDayMouseLeave}\r\n                        data-count={dayData.count}\r\n                      >\r\n                        <span className=\"day-number\">{dayData.day}</span>\r\n                        {dayData.count > 0 && (\r\n                          <div className=\"question-count-badge\">\r\n                            {dayData.count}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n\r\n                  {/* 使用新的日历提示框组件 */}\r\n                  <CalendarTooltip\r\n                    dayData={hoveredDay}\r\n                    position={tooltipPosition}\r\n                    isVisible={tooltipVisible}\r\n                    onClose={handleTooltipClose}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"calendar-stats\">\r\n                  <div className=\"calendar-stat\">\r\n                    <span className=\"stat-value\">\r\n                      {monthStats.totalQuestions}\r\n                    </span>\r\n                    <span className=\"stat-label\">本月题目</span>\r\n                  </div>\r\n                  <div className=\"calendar-stat\">\r\n                    <span className=\"stat-value\">\r\n                      {monthStats.daysWithQuestions}\r\n                    </span>\r\n                    <span className=\"stat-label\">学习天数</span>\r\n                  </div>\r\n                  <div className=\"calendar-stat\">\r\n                    <span className=\"stat-value\">{monthStats.maxDaily}</span>\r\n                    <span className=\"stat-label\">单日最高</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"calendar-legend\">\r\n                  <div className=\"legend-item\">\r\n                    <div\r\n                      className=\"legend-color\"\r\n                      style={{ backgroundColor: \"#f8f9fa\" }}\r\n                    ></div>\r\n                    <span>无题目</span>\r\n                  </div>\r\n                  <div className=\"legend-item\">\r\n                    <div\r\n                      className=\"legend-color\"\r\n                      style={{ backgroundColor: \"#4CAF50\" }}\r\n                    ></div>\r\n                    <span>1题</span>\r\n                  </div>\r\n                  <div className=\"legend-item\">\r\n                    <div\r\n                      className=\"legend-color\"\r\n                      style={{ backgroundColor: \"#8BC34A\" }}\r\n                    ></div>\r\n                    <span>2-3题</span>\r\n                  </div>\r\n                  <div className=\"legend-item\">\r\n                    <div\r\n                      className=\"legend-color\"\r\n                      style={{ backgroundColor: \"#FFC107\" }}\r\n                    ></div>\r\n                    <span>4-5题</span>\r\n                  </div>\r\n                  <div className=\"legend-item\">\r\n                    <div\r\n                      className=\"legend-color\"\r\n                      style={{ backgroundColor: \"#FF9800\" }}\r\n                    ></div>\r\n                    <span>6-8题</span>\r\n                  </div>\r\n                  <div className=\"legend-item\">\r\n                    <div\r\n                      className=\"legend-color\"\r\n                      style={{ backgroundColor: \"#F44336\" }}\r\n                    ></div>\r\n                    <span>9题以上</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        )}\r\n\r\n        {/* 修复底部统计 */}\r\n        <footer className=\"footer-section\">\r\n          <div className=\"container\">\r\n            <div className=\"footer-stats\">\r\n              <div className=\"stat-item\">\r\n                <div className=\"stat-number\">{categoryStats.totalCategories}</div>\r\n                <div className=\"stat-label\">总类别数</div>\r\n              </div>\r\n              <div className=\"stat-item\">\r\n                <div className=\"stat-number\">{questions.length}</div>\r\n                <div className=\"stat-label\">总题目数</div>\r\n              </div>\r\n             \r\n            </div>\r\n            \r\n          \r\n          </div>\r\n        </footer>\r\n        <Chatbox \r\n          onNavigate={handleChatboxNavigate}\r\n          categories={categories}\r\n          questions={questions}\r\n          currentUser={currentUser}\r\n        />\r\n      </div>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n\r\nexport default HomePage;","// initClasses.js\r\nimport AV from 'leancloud-storage';\r\n\r\n\r\n\r\n// 初始化配置\r\nAV.init({\r\n  appId: process.env.REACT_APP_LC_APP_ID,\r\n  appKey: process.env.REACT_APP_LC_APP_KEY,\r\n  serverURL: process.env.REACT_APP_LC_SERVER_URL\r\n});\r\n\r\n// 难度选项\r\nconst DifficultyOptions = {\r\n  EASY: 'easy',\r\n  MEDIUM: 'medium',\r\n  HARD: 'hard'\r\n};\r\n\r\n// 掌握程度选项\r\nconst ProficiencyOptions = {\r\n  BEGINNER: 'beginner',\r\n  INTERMEDIATE: 'intermediate',\r\n  ADVANCED: 'advanced',\r\n  MASTER: 'master'\r\n};\r\n\r\n// 社区相关 Class 名称\r\nconst CommunityClasses = {\r\n  POST: 'Post',\r\n  COMMENT: 'Comment',\r\n  LIKE: 'Like',\r\n  FOLLOW: 'Follow'\r\n};\r\n\r\n// 帖子状态选项\r\nconst PostStatusOptions = {\r\n  PUBLISHED: 'published',\r\n  DRAFT: 'draft',\r\n  DELETED: 'deleted'\r\n};\r\n\r\n// 帖子排序选项\r\nconst PostSortOptions = {\r\n  CREATED_AT: 'createdAt',\r\n  UPDATED_AT: 'updatedAt',\r\n  LAST_COMMENTED_AT: 'lastCommentedAt',\r\n  LIKES: 'likes',\r\n  VIEWS: 'views',\r\n  COMMENT_COUNT: 'commentCount'\r\n};\r\n\r\n// Notion 数据库字段映射配置\r\nconst NotionFieldMapping = {\r\n  // 标题字段映射\r\n  TITLE: ['Title', '题目', 'Name', '名称'],\r\n  // 难度字段映射\r\n  DIFFICULTY: ['Difficulty', '难度'],\r\n  // 分类字段映射\r\n  CATEGORY: ['Category', '类别', '分类'],\r\n  // 标签字段映射\r\n  TAGS: ['Tags', '标签'],\r\n  // 答案内容字段映射\r\n  CONTENT: ['Content', '内容', 'Answer', '答案'],\r\n  // 完成时间字段映射\r\n  COMPLETION_TIME: ['CompletionTime', '完成时间', '时间']\r\n};\r\n\r\n// ==================== 社区功能相关函数 ====================\r\n\r\n/**\r\n * 创建社区相关的数据表（Post, Comment, Like, Follow）\r\n */\r\nexport const createCommunityClasses = async () => {\r\n  try {\r\n    \r\n    const results = {\r\n      Post: await createPostClass(),\r\n      Comment: await createCommentClass(),\r\n      Like: await createLikeClass(),\r\n      Follow: await createFollowClass()\r\n    };\r\n    \r\n    return results;\r\n  } catch (error) {\r\n    throw new Error(`创建社区数据表失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Post 类（帖子表）\r\n */\r\nconst createPostClass = async () => {\r\n  try {\r\n    // 检查是否已存在\r\n    const query = new AV.Query(CommunityClasses.POST);\r\n    const existing = await query.first().catch(() => null);\r\n    if (existing) {\r\n      return { exists: true, message: 'Post class already exists' };\r\n    }\r\n\r\n    // 创建 Post 类（实际上在 LeanCloud 中类会自动创建，这里我们创建示例数据来验证）\r\n    const Post = AV.Object.extend(CommunityClasses.POST);\r\n    const testPost = new Post();\r\n    \r\n    // 设置字段\r\n    testPost.set('title', '测试帖子标题');\r\n    testPost.set('content', '这是一个测试帖子的内容，用于验证 Post 类的创建。');\r\n    testPost.set('author', AV.User.current());\r\n    testPost.set('tags', ['测试', '示例']);\r\n    testPost.set('likes', 0);\r\n    testPost.set('views', 0);\r\n    testPost.set('commentCount', 0);\r\n    testPost.set('isPublic', true);\r\n    testPost.set('isPinned', false);\r\n    testPost.set('status', PostStatusOptions.PUBLISHED);\r\n    \r\n    // 设置 ACL（权限控制）\r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);    // 所有人可读\r\n    acl.setPublicWriteAccess(false);  // 只有作者可写\r\n    if (AV.User.current()) {\r\n      acl.setWriteAccess(AV.User.current(), true);\r\n    }\r\n    testPost.setACL(acl);\r\n    \r\n    await testPost.save();\r\n    console.log('✅ Post 类创建成功并添加测试数据');\r\n    \r\n    // 删除测试数据\r\n    await testPost.destroy();\r\n    console.log('🧹 已清理测试数据');\r\n    \r\n    return { \r\n      success: true, \r\n      message: 'Post class created successfully' \r\n    };\r\n  } catch (error) {\r\n    console.error('创建 Post 类失败:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Comment 类（评论表）\r\n */\r\nconst createCommentClass = async () => {\r\n  try {\r\n    // 检查是否已存在\r\n    const query = new AV.Query(CommunityClasses.COMMENT);\r\n    const existing = await query.first().catch(() => null);\r\n    if (existing) {\r\n      console.log('📝 Comment 类已存在，跳过创建');\r\n      return { exists: true, message: 'Comment class already exists' };\r\n    }\r\n\r\n    // 创建 Comment 类\r\n    const Comment = AV.Object.extend(CommunityClasses.COMMENT);\r\n    const testComment = new Comment();\r\n    \r\n    // 设置字段\r\n    testComment.set('content', '这是一个测试评论内容。');\r\n    testComment.set('author', AV.User.current());\r\n    testComment.set('likes', 0);\r\n    \r\n    // 设置 ACL\r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    if (AV.User.current()) {\r\n      acl.setWriteAccess(AV.User.current(), true);\r\n    }\r\n    testComment.setACL(acl);\r\n    \r\n    await testComment.save();\r\n    console.log('✅ Comment 类创建成功并添加测试数据');\r\n    \r\n    // 删除测试数据\r\n    await testComment.destroy();\r\n    console.log('🧹 已清理测试数据');\r\n    \r\n    return { \r\n      success: true, \r\n      message: 'Comment class created successfully' \r\n    };\r\n  } catch (error) {\r\n    console.error('创建 Comment 类失败:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Like 类（点赞关系表）\r\n */\r\nconst createLikeClass = async () => {\r\n  try {\r\n    // 检查是否已存在\r\n    const query = new AV.Query(CommunityClasses.LIKE);\r\n    const existing = await query.first().catch(() => null);\r\n    if (existing) {\r\n      console.log('📝 Like 类已存在，跳过创建');\r\n      return { exists: true, message: 'Like class already exists' };\r\n    }\r\n\r\n    // 创建 Like 类\r\n    const Like = AV.Object.extend(CommunityClasses.LIKE);\r\n    const testLike = new Like();\r\n    \r\n    // 设置字段\r\n    testLike.set('user', AV.User.current());\r\n    \r\n    // 设置 ACL\r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    if (AV.User.current()) {\r\n      acl.setWriteAccess(AV.User.current(), true);\r\n    }\r\n    testLike.setACL(acl);\r\n    \r\n    await testLike.save();\r\n    console.log('✅ Like 类创建成功并添加测试数据');\r\n    \r\n    // 删除测试数据\r\n    await testLike.destroy();\r\n    console.log('🧹 已清理测试数据');\r\n    \r\n    return { \r\n      success: true, \r\n      message: 'Like class created successfully' \r\n    };\r\n  } catch (error) {\r\n    console.error('创建 Like 类失败:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Follow 类（关注关系表）\r\n */\r\nconst createFollowClass = async () => {\r\n  try {\r\n    // 检查是否已存在\r\n    const query = new AV.Query(CommunityClasses.FOLLOW);\r\n    const existing = await query.first().catch(() => null);\r\n    if (existing) {\r\n      console.log('📝 Follow 类已存在，跳过创建');\r\n      return { exists: true, message: 'Follow class already exists' };\r\n    }\r\n\r\n    // 创建 Follow 类\r\n    const Follow = AV.Object.extend(CommunityClasses.FOLLOW);\r\n    const testFollow = new Follow();\r\n    \r\n    // 设置字段\r\n    testFollow.set('follower', AV.User.current());\r\n    \r\n    // 设置 ACL\r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    if (AV.User.current()) {\r\n      acl.setWriteAccess(AV.User.current(), true);\r\n    }\r\n    testFollow.setACL(acl);\r\n    \r\n    await testFollow.save();\r\n    console.log('✅ Follow 类创建成功并添加测试数据');\r\n    \r\n    // 删除测试数据\r\n    await testFollow.destroy();\r\n    console.log('🧹 已清理测试数据');\r\n    \r\n    return { \r\n      success: true, \r\n      message: 'Follow class created successfully' \r\n    };\r\n  } catch (error) {\r\n    console.error('创建 Follow 类失败:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n/**\r\n * 生成社区示例数据\r\n */\r\nexport const generateCommunitySampleData = async () => {\r\n  try {\r\n    console.log('🚀 开始生成社区示例数据...');\r\n    \r\n    // 首先确保数据表已创建\r\n    await createCommunityClasses();\r\n    \r\n    const results = {\r\n      posts: await createSamplePosts(),\r\n      comments: await createSampleComments(),\r\n      likes: await createSampleLikes()\r\n    };\r\n    \r\n    console.log('✅ 社区示例数据生成完成:', results);\r\n    return {\r\n      success: true,\r\n      ...results,\r\n      message: `成功生成 ${results.posts.length} 个帖子, ${results.comments.length} 条评论, ${results.likes.length} 个点赞`\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ 生成社区示例数据失败:', error);\r\n    throw new Error(`生成社区示例数据失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建示例帖子\r\n */\r\nconst createSamplePosts = async () => {\r\n  const currentUser = AV.User.current();\r\n  if (!currentUser) {\r\n    console.log('⚠️ 用户未登录，跳过创建示例帖子');\r\n    return [];\r\n  }\r\n\r\n  const Post = AV.Object.extend(CommunityClasses.POST);\r\n  const samplePosts = [\r\n    {\r\n      title: '欢迎来到学习社区！',\r\n      content: `大家好！欢迎来到我们的学习社区。这里是一个分享编程学习心得、交流刷题经验的地方。\r\n\r\n## 社区规则：\r\n1. 友善交流，互相帮助\r\n2. 分享有价值的内容\r\n3. 尊重他人观点\r\n4. 保持内容相关性\r\n\r\n希望大家都能在这里有所收获！🎉`,\r\n      tags: ['欢迎', '公告', '社区'],\r\n      isPublic: true,\r\n      isPinned: true\r\n    },\r\n    {\r\n      title: 'JavaScript 闭包的理解与实践',\r\n      content: `今天来分享一下我对 JavaScript 闭包的理解...\r\n\r\n## 什么是闭包？\r\n闭包是指那些能够访问自由变量的函数。\r\n\r\n## 实际应用场景：\r\n1. 模块化开发\r\n2. 私有变量\r\n3. 函数柯里化\r\n\r\n大家有什么补充的吗？`,\r\n      tags: ['JavaScript', '闭包', '前端'],\r\n      isPublic: true,\r\n      isPinned: false\r\n    },\r\n    {\r\n      title: 'React Hooks 使用心得',\r\n      content: `使用 React Hooks 有一段时间了，分享一些实践经验：\r\n\r\n- useState: 状态管理\r\n- useEffect: 副作用处理\r\n- useContext: 上下文传递\r\n- useMemo: 性能优化\r\n\r\n你们觉得哪个 Hook 最实用？`,\r\n      tags: ['React', 'Hooks', '前端'],\r\n      isPublic: true,\r\n      isPinned: false\r\n    }\r\n  ];\r\n\r\n  const posts = [];\r\n  for (const data of samplePosts) {\r\n    const post = new Post();\r\n    post.set('title', data.title);\r\n    post.set('content', data.content);\r\n    post.set('author', currentUser);\r\n    post.set('tags', data.tags);\r\n    post.set('likes', Math.floor(Math.random() * 10));\r\n    post.set('views', Math.floor(Math.random() * 50));\r\n    post.set('commentCount', Math.floor(Math.random() * 5));\r\n    post.set('isPublic', data.isPublic);\r\n    post.set('isPinned', data.isPinned);\r\n    post.set('status', PostStatusOptions.PUBLISHED);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    acl.setWriteAccess(currentUser, true);\r\n    post.setACL(acl);\r\n    \r\n    const saved = await post.save();\r\n    posts.push(saved);\r\n    console.log(`✅ 创建帖子: \"${data.title}\"`);\r\n  }\r\n  \r\n  return posts;\r\n};\r\n\r\n/**\r\n * 创建示例评论\r\n */\r\nconst createSampleComments = async () => {\r\n  const currentUser = AV.User.current();\r\n  if (!currentUser) {\r\n    console.log('⚠️ 用户未登录，跳过创建示例评论');\r\n    return [];\r\n  }\r\n\r\n  // 获取刚创建的帖子\r\n  const postQuery = new AV.Query(CommunityClasses.POST);\r\n  const posts = await postQuery.find();\r\n  \r\n  if (posts.length === 0) {\r\n    console.log('⚠️ 没有找到帖子，跳过创建评论');\r\n    return [];\r\n  }\r\n\r\n  const Comment = AV.Object.extend(CommunityClasses.COMMENT);\r\n  const sampleComments = [\r\n    { content: '欢迎欢迎！期待更多精彩内容！🎊' },\r\n    { content: '闭包的讲解很清晰，感谢分享！' },\r\n    { content: '我觉得 useEffect 最实用，能处理各种副作用。' },\r\n    { content: '新人报道，请多指教！' },\r\n    { content: 'Hooks 确实让 React 开发更简洁了。' }\r\n  ];\r\n\r\n  const comments = [];\r\n  for (let i = 0; i < sampleComments.length; i++) {\r\n    const comment = new Comment();\r\n    comment.set('content', sampleComments[i].content);\r\n    comment.set('author', currentUser);\r\n    comment.set('post', posts[i % posts.length]); // 轮流分配到不同帖子\r\n    comment.set('likes', Math.floor(Math.random() * 5));\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    acl.setWriteAccess(currentUser, true);\r\n    comment.setACL(acl);\r\n    \r\n    const saved = await comment.save();\r\n    comments.push(saved);\r\n    console.log(`✅ 创建评论: \"${sampleComments[i].content.substring(0, 20)}...\"`);\r\n  }\r\n  \r\n  return comments;\r\n};\r\n\r\n/**\r\n * 创建示例点赞\r\n */\r\nconst createSampleLikes = async () => {\r\n  const currentUser = AV.User.current();\r\n  if (!currentUser) {\r\n    console.log('⚠️ 用户未登录，跳过创建示例点赞');\r\n    return [];\r\n  }\r\n\r\n  // 获取刚创建的帖子和评论\r\n  const postQuery = new AV.Query(CommunityClasses.POST);\r\n  const posts = await postQuery.find();\r\n  \r\n  const commentQuery = new AV.Query(CommunityClasses.COMMENT);\r\n  const comments = await commentQuery.find();\r\n\r\n  const Like = AV.Object.extend(CommunityClasses.LIKE);\r\n  const likes = [];\r\n\r\n  // 为第一个帖子点赞\r\n  if (posts.length > 0) {\r\n    const like = new Like();\r\n    like.set('user', currentUser);\r\n    like.set('post', posts[0]);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setWriteAccess(currentUser, true);\r\n    like.setACL(acl);\r\n    \r\n    const saved = await like.save();\r\n    likes.push(saved);\r\n    console.log('✅ 创建帖子点赞');\r\n  }\r\n\r\n  // 为第一个评论点赞\r\n  if (comments.length > 0) {\r\n    const like = new Like();\r\n    like.set('user', currentUser);\r\n    like.set('comment', comments[0]);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setWriteAccess(currentUser, true);\r\n    like.setACL(acl);\r\n    \r\n    const saved = await like.save();\r\n    likes.push(saved);\r\n    console.log('✅ 创建评论点赞');\r\n  }\r\n  \r\n  return likes;\r\n};\r\n\r\n/**\r\n * 清除社区数据\r\n */\r\nexport const clearCommunityData = async () => {\r\n  try {\r\n    \r\n    let deletedCount = {\r\n      posts: 0,\r\n      comments: 0,\r\n      likes: 0,\r\n      follows: 0\r\n    };\r\n    \r\n    // 清除点赞数据\r\n    try {\r\n      const likeQuery = new AV.Query(CommunityClasses.LIKE);\r\n      const likes = await likeQuery.find();\r\n      if (likes.length > 0) {\r\n        await AV.Object.destroyAll(likes);\r\n        deletedCount.likes = likes.length;\r\n      }\r\n    } catch (error) {\r\n    }\r\n    \r\n    // 清除评论数据\r\n    try {\r\n      const commentQuery = new AV.Query(CommunityClasses.COMMENT);\r\n      const comments = await commentQuery.find();\r\n      if (comments.length > 0) {\r\n        await AV.Object.destroyAll(comments);\r\n        deletedCount.comments = comments.length;\r\n      }\r\n    } catch (error) {\r\n    }\r\n    \r\n    // 清除帖子数据\r\n    try {\r\n      const postQuery = new AV.Query(CommunityClasses.POST);\r\n      const posts = await postQuery.find();\r\n      if (posts.length > 0) {\r\n        await AV.Object.destroyAll(posts);\r\n        deletedCount.posts = posts.length;\r\n      }\r\n    } catch (error) {\r\n    }\r\n    \r\n    // 清除关注数据\r\n    try {\r\n      const followQuery = new AV.Query(CommunityClasses.FOLLOW);\r\n      const follows = await followQuery.find();\r\n      if (follows.length > 0) {\r\n        await AV.Object.destroyAll(follows);\r\n        deletedCount.follows = follows.length;\r\n      }\r\n    } catch (error) {\r\n    }\r\n    \r\n    const message = `社区数据清除完成: ${deletedCount.posts} 帖子, ${deletedCount.comments} 评论, ${deletedCount.likes} 点赞, ${deletedCount.follows} 关注`;\r\n    \r\n    return {\r\n      success: true,\r\n      ...deletedCount,\r\n      message\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ 清除社区数据失败:', error);\r\n    throw new Error(`清除社区数据失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n// ==================== 原有函数（保持不变） ====================\r\n\r\n/**\r\n * Notion 同步云函数\r\n */\r\nexport const syncProblemsFromNotion = async () => {\r\n  try {\r\n    \r\n    // 检查环境变量是否配置\r\n    if (!process.env.REACT_APP_NOTION_TOKEN || !process.env.REACT_APP_NOTION_DATABASE_ID) {\r\n      throw new Error('Notion 环境变量未配置，请检查 REACT_APP_NOTION_TOKEN 和 REACT_APP_NOTION_DATABASE_ID');\r\n    }\r\n\r\n    // 调用云函数（如果部署了云引擎版本）\r\n    try {\r\n      const result = await AV.Cloud.run('syncProblemsFromNotion');\r\n      return result;\r\n    } catch (cloudError) {\r\n      // 回退到客户端版本同步\r\n      return await syncWithClientVersion();\r\n    }\r\n  } catch (error) {\r\n    console.error('❌ Notion 同步失败:', error);\r\n    throw new Error(`同步失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 客户端版本同步（云函数不可用时的回退方案）\r\n */\r\nconst syncWithClientVersion = async () => {\r\n  try {\r\n    // 这里可以添加直接从前端调用 Notion API 的逻辑\r\n    // 但由于安全原因，建议使用云函数方式\r\n    console.log('📝 使用客户端同步模式（需要配置云函数）');\r\n    \r\n    // 模拟同步过程\r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    \r\n    return {\r\n      success: true,\r\n      message: '同步功能需要部署云函数。请参考以下步骤：\\n1. 在 LeanCloud 云引擎部署 syncProblemsFromNotion 云函数\\n2. 配置 NOTION_INTEGRATION_TOKEN 和 NOTION_DATABASE_ID 环境变量',\r\n      data: {\r\n        synced: 0,\r\n        mode: 'client_fallback'\r\n      }\r\n    };\r\n  } catch (error) {\r\n    throw new Error(`客户端同步失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Notion 同步相关的云函数定义（用于云引擎部署）\r\n */\r\nexport const defineNotionCloudFunctions = () => {\r\n  // 这些函数需要在云引擎中定义\r\n  if (typeof AV.Cloud !== 'undefined') {\r\n    // 同步题目云函数\r\n    AV.Cloud.define('syncProblemsFromNotion', async (request) => {\r\n      const { Client } = require('@notionhq/client');\r\n      \r\n      // 初始化 Notion 客户端\r\n      const notion = new Client({\r\n        auth: process.env.NOTION_INTEGRATION_TOKEN,\r\n      });\r\n\r\n      try {\r\n        console.log('开始从 Notion 数据库同步数据...');\r\n        \r\n        // 查询 Notion 数据库\r\n        const response = await notion.databases.query({\r\n          database_id: process.env.NOTION_DATABASE_ID,\r\n          sorts: [{ timestamp: 'last_edited_time', direction: 'descending' }],\r\n        });\r\n\r\n        console.log(`从 Notion 获取到 ${response.results.length} 条记录`);\r\n\r\n        const problems = [];\r\n        let syncedCount = 0;\r\n        \r\n        // 处理每条记录\r\n        for (const page of response.results) {\r\n          const problemData = parseNotionPage(page);\r\n          if (problemData) {\r\n            problems.push(problemData);\r\n          }\r\n        }\r\n\r\n        // 保存到 LeanCloud\r\n        syncedCount = await saveNotionProblemsToLeanCloud(problems);\r\n        \r\n        return {\r\n          success: true,\r\n          message: `同步完成！处理 ${response.results.length} 条记录，成功保存 ${syncedCount} 道题目`,\r\n          data: {\r\n            fetched: response.results.length,\r\n            saved: syncedCount,\r\n            problems: problems.slice(0, 5) // 返回前5条作为示例\r\n          }\r\n        };\r\n\r\n      } catch (error) {\r\n        console.error('Notion 同步错误:', error);\r\n        throw new AV.Cloud.Error(`同步失败: ${error.message}`);\r\n      }\r\n    });\r\n\r\n    // 检查 Notion 连接状态\r\n    AV.Cloud.define('checkNotionConnection', async (request) => {\r\n      const { Client } = require('@notionhq/client');\r\n      \r\n      try {\r\n        const notion = new Client({\r\n          auth: process.env.NOTION_INTEGRATION_TOKEN,\r\n        });\r\n\r\n        // 尝试查询数据库信息\r\n        const database = await notion.databases.retrieve({\r\n          database_id: process.env.NOTION_DATABASE_ID,\r\n        });\r\n\r\n        return {\r\n          success: true,\r\n          connected: true,\r\n          database: {\r\n            title: database.title[0]?.plain_text || '未命名',\r\n            properties: Object.keys(database.properties),\r\n            url: database.url\r\n          }\r\n        };\r\n      } catch (error) {\r\n        return {\r\n          success: false,\r\n          connected: false,\r\n          error: error.message\r\n        };\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * 解析 Notion 页面数据\r\n */\r\nconst parseNotionPage = (page) => {\r\n  try {\r\n    const properties = page.properties;\r\n    \r\n    // 获取标题\r\n    const title = getNotionPropertyValue(properties, NotionFieldMapping.TITLE, 'title');\r\n    if (!title) {\r\n      console.warn('跳过无标题的记录:', page.id);\r\n      return null;\r\n    }\r\n\r\n    // 获取其他字段\r\n    const difficulty = getNotionPropertyValue(properties, NotionFieldMapping.DIFFICULTY, 'select');\r\n    const categoryName = getNotionPropertyValue(properties, NotionFieldMapping.CATEGORY, 'select');\r\n    const tags = getNotionPropertyValue(properties, NotionFieldMapping.TAGS, 'multi_select') || [];\r\n    const content = getNotionPropertyValue(properties, NotionFieldMapping.CONTENT, 'rich_text');\r\n    const completionTime = getNotionPropertyValue(properties, NotionFieldMapping.COMPLETION_TIME, 'number');\r\n\r\n    return {\r\n      title: title,\r\n      difficulty: difficulty || DifficultyOptions.MEDIUM,\r\n      category: categoryName || '未分类',\r\n      tags: Array.isArray(tags) ? tags : [tags],\r\n      content: content || '',\r\n      completionTime: completionTime || 15,\r\n      notionPageId: page.id,\r\n      notionUrl: page.url,\r\n      lastEditedTime: new Date(page.last_edited_time),\r\n      isActive: true\r\n    };\r\n  } catch (error) {\r\n    console.error('解析 Notion 页面失败:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * 通用获取 Notion 属性值的方法\r\n */\r\nconst getNotionPropertyValue = (properties, fieldNames, expectedType) => {\r\n  for (const fieldName of fieldNames) {\r\n    const property = properties[fieldName];\r\n    if (property && property.type === expectedType) {\r\n      switch (expectedType) {\r\n        case 'title':\r\n          return property.title[0]?.text?.content;\r\n        case 'rich_text':\r\n          return property.rich_text[0]?.text?.content;\r\n        case 'select':\r\n          return property.select?.name;\r\n        case 'multi_select':\r\n          return property.multi_select?.map(item => item.name);\r\n        case 'number':\r\n          return property.number;\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * 保存 Notion 数据到 LeanCloud\r\n */\r\nconst saveNotionProblemsToLeanCloud = async (problems) => {\r\n  const Question = AV.Object.extend('Question');\r\n  let savedCount = 0;\r\n\r\n  for (const problemData of problems) {\r\n    try {\r\n      // 查找或创建分类\r\n      const category = await findOrCreateCategory(problemData.category);\r\n      \r\n      // 检查是否已存在相同 Notion Page ID 的题目\r\n      const query = new AV.Query('Question');\r\n      query.equalTo('notionPageId', problemData.notionPageId);\r\n      const existing = await query.first();\r\n      \r\n      const question = existing || new Question();\r\n      \r\n      // 设置题目属性\r\n      question.set('title', problemData.title);\r\n      question.set('content', problemData.content);\r\n      question.set('difficulty', problemData.difficulty);\r\n      question.set('tags', problemData.tags);\r\n      question.set('completionTime', problemData.completionTime);\r\n      question.set('category', category);\r\n      question.set('notionPageId', problemData.notionPageId);\r\n      question.set('notionUrl', problemData.notionUrl);\r\n      question.set('isActive', true);\r\n      \r\n      // 设置 ACL\r\n      const acl = new AV.ACL();\r\n      acl.setPublicReadAccess(true);\r\n      acl.setPublicWriteAccess(true);\r\n      question.setACL(acl);\r\n      \r\n      await question.save();\r\n      savedCount++;\r\n      \r\n      console.log(`✅ 保存题目: \"${problemData.title}\" → 分类 \"${problemData.category}\"`);\r\n    } catch (error) {\r\n      console.error(`保存题目失败: ${problemData.title}`, error);\r\n    }\r\n  }\r\n  \r\n  // 更新分类计数\r\n  await updateAllCategoryCounts();\r\n  \r\n  return savedCount;\r\n};\r\n\r\n/**\r\n * 查找或创建分类\r\n */\r\nconst findOrCreateCategory = async (categoryName) => {\r\n  const Category = AV.Object.extend('Category');\r\n  \r\n  // 查找现有分类\r\n  const query = new AV.Query('Category');\r\n  query.equalTo('name', categoryName);\r\n  let category = await query.first();\r\n  \r\n  // 如果不存在则创建\r\n  if (!category) {\r\n    category = new Category();\r\n    category.set('name', categoryName);\r\n    category.set('questionCount', 0);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(true);\r\n    category.setACL(acl);\r\n    \r\n    await category.save();\r\n  }\r\n  \r\n  return category;\r\n};\r\n\r\n/**\r\n * 检查 Notion 连接状态\r\n */\r\nexport const checkNotionConnection = async () => {\r\n  try {\r\n    const result = await AV.Cloud.run('checkNotionConnection');\r\n    return result;\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      connected: false,\r\n      error: error.message,\r\n      message: '请确保已部署云函数并配置环境变量'\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 生成正确格式的 Category 和 Question Class（包含示例数据）\r\n */\r\nexport const generateSampleData = async () => {\r\n  try {\r\n    console.log('开始生成示例数据...');\r\n    await clearAllData();\r\n    const categories = await createCategories();\r\n    const questions = await createQuestions(categories);\r\n    await updateCategoryCounts(categories);\r\n    \r\n    console.log('🎉 示例数据生成完成！');\r\n    return {\r\n      success: true,\r\n      categoriesCount: categories.length,\r\n      questionsCount: questions.length,\r\n      message: `成功生成 ${categories.length} 个分类和 ${questions.length} 个题目`\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ 生成示例数据失败:', error);\r\n    throw new Error(`生成失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Category 数据\r\n */\r\nconst createCategories = async () => {\r\n  const Category = AV.Object.extend('Category');\r\n  const categoriesData = [\r\n    { name: 'JavaScript 核心概念' }, { name: 'React 框架原理' }, { name: '算法与数据结构' },\r\n    { name: '计算机网络' }, { name: '数据库系统' }, { name: '操作系统' },\r\n    { name: '前端工程化' }, { name: 'TypeScript 进阶' }\r\n  ];\r\n\r\n  const categories = [];\r\n  for (const data of categoriesData) {\r\n    const category = new Category();\r\n    category.set('name', data.name);\r\n    category.set('questionCount', 0);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(true);\r\n    category.setACL(acl);\r\n    \r\n    const saved = await category.save();\r\n    categories.push(saved);\r\n    console.log(`✅ 创建分类: ${data.name}`);\r\n  }\r\n  \r\n  return categories;\r\n};\r\n\r\n/**\r\n * 创建 Question 数据（关联到 Category）\r\n */\r\nconst createQuestions = async (categories) => {\r\n  const Question = AV.Object.extend('Question');\r\n  const questionsData = [\r\n    // 你原有的题目数据...\r\n  ];\r\n\r\n  const questions = [];\r\n  for (const data of questionsData) {\r\n    const question = new Question();\r\n    question.set('title', data.title);\r\n    question.set('answer', data.answer);\r\n    question.set('tags', data.tags);\r\n    question.set('difficulty', data.difficulty);\r\n    question.set('completionTime', data.completionTime);\r\n    question.set('proficiency', data.proficiency);\r\n    question.set('category', categories[data.categoryIndex]);\r\n    question.set('isActive', true);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(true);\r\n    question.setACL(acl);\r\n    \r\n    const saved = await question.save();\r\n    questions.push(saved);\r\n    console.log(`✅ 创建题目: \"${data.title}\" → 属于 \"${categories[data.categoryIndex].get('name')}\"`);\r\n  }\r\n  \r\n  return questions;\r\n};\r\n\r\n/**\r\n * 更新 Category 的题目计数\r\n */\r\nconst updateCategoryCounts = async (categories) => {\r\n  for (const category of categories) {\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    const count = await questionQuery.count();\r\n    category.set('questionCount', count);\r\n    await category.save();\r\n    console.log(`📊 分类 \"${category.get('name')}\" 有 ${count} 个题目`);\r\n  }\r\n};\r\n\r\n/**\r\n * 更新所有分类的题目计数\r\n */\r\nconst updateAllCategoryCounts = async () => {\r\n  const categoryQuery = new AV.Query('Category');\r\n  const categories = await categoryQuery.find();\r\n  \r\n  for (const category of categories) {\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    const count = await questionQuery.count();\r\n    category.set('questionCount', count);\r\n    await category.save();\r\n  }\r\n  \r\n  console.log(`📊 更新了 ${categories.length} 个分类的题目计数`);\r\n};\r\n\r\n/**\r\n * 清除所有数据\r\n */\r\nexport const clearAllData = async () => {\r\n  try {\r\n    console.log('开始清除所有数据...');\r\n    let deletedQuestions = 0;\r\n    let deletedCategories = 0;\r\n    \r\n    try {\r\n      const questionQuery = new AV.Query('Question');\r\n      const questions = await questionQuery.find();\r\n      if (questions.length > 0) {\r\n        await AV.Object.destroyAll(questions);\r\n        deletedQuestions = questions.length;\r\n        console.log(`🗑️ 删除了 ${deletedQuestions} 个题目`);\r\n      }\r\n    } catch (error) {\r\n      console.log('没有题目需要删除或删除失败:', error.message);\r\n    }\r\n    \r\n    try {\r\n      const categoryQuery = new AV.Query('Category');\r\n      const categories = await categoryQuery.find();\r\n      if (categories.length > 0) {\r\n        await AV.Object.destroyAll(categories);\r\n        deletedCategories = categories.length;\r\n        console.log(`🗑️ 删除了 ${deletedCategories} 个分类`);\r\n      }\r\n    } catch (error) {\r\n      console.log('没有分类需要删除或删除失败:', error.message);\r\n    }\r\n    \r\n    const message = `清除完成: ${deletedCategories} 个分类, ${deletedQuestions} 个题目`;\r\n    console.log('✅ ' + message);\r\n    \r\n    return {\r\n      success: true,\r\n      deletedCategories,\r\n      deletedQuestions,\r\n      message\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ 清除数据失败:', error);\r\n    throw new Error(`清除失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 检查数据状态\r\n */\r\nexport const checkDataStatus = async () => {\r\n  try {\r\n    let categoryCount = 0;\r\n    let questionCount = 0;\r\n    \r\n    try {\r\n      const categoryQuery = new AV.Query('Category');\r\n      categoryCount = await categoryQuery.count();\r\n    } catch (error) {\r\n      categoryCount = 0;\r\n    }\r\n    \r\n    try {\r\n      const questionQuery = new AV.Query('Question');\r\n      questionCount = await questionQuery.count();\r\n    } catch (error) {\r\n      questionCount = 0;\r\n    }\r\n    \r\n    const status = {\r\n      categoryCount,\r\n      questionCount,\r\n      hasData: categoryCount > 0 || questionCount > 0\r\n    };\r\n    \r\n    console.log('📊 数据状态:', status);\r\n    return status;\r\n  } catch (error) {\r\n    console.error('检查数据状态失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 导出所有常量和函数\r\nexport { \r\n  DifficultyOptions, \r\n  ProficiencyOptions, \r\n  NotionFieldMapping,\r\n  CommunityClasses,\r\n  PostStatusOptions,\r\n  PostSortOptions\r\n};\r\n\r\n// 全局可用\r\nif (typeof window !== 'undefined') {\r\n  // 原有函数\r\n  window.generateSampleData = generateSampleData;\r\n  window.clearAllData = clearAllData;\r\n  window.checkDataStatus = checkDataStatus;\r\n  window.syncProblemsFromNotion = syncProblemsFromNotion;\r\n  window.checkNotionConnection = checkNotionConnection;\r\n  window.defineNotionCloudFunctions = defineNotionCloudFunctions;\r\n  \r\n  // 新增社区函数\r\n  window.createCommunityClasses = createCommunityClasses;\r\n  window.generateCommunitySampleData = generateCommunitySampleData;\r\n  window.clearCommunityData = clearCommunityData;\r\n  \r\n  console.log(`\r\n🎯 数据库管理工具已加载！\r\n\r\n📚 数据管理:\r\n1. generateSampleData()          - 生成示例数据\r\n2. clearAllData()                - 清除所有数据\r\n3. checkDataStatus()             - 检查数据状态\r\n\r\n🔄 Notion 同步:\r\n4. syncProblemsFromNotion()      - 从 Notion 导入题目\r\n5. checkNotionConnection()       - 检查 Notion 连接状态\r\n6. defineNotionCloudFunctions()  - 定义云函数（用于云引擎）\r\n\r\n👥 社区功能:\r\n7. createCommunityClasses()      - 创建社区数据表\r\n8. generateCommunitySampleData() - 生成社区示例数据\r\n9. clearCommunityData()          - 清除社区数据\r\n\r\n💡 使用提示:\r\n- 首次使用请运行 generateSampleData() 创建示例数据\r\n- 使用社区功能前运行 createCommunityClasses() 创建数据表\r\n- 配置 Notion 环境变量后使用 syncProblemsFromNotion() 同步\r\n- 云函数需要在 LeanCloud 云引擎部署\r\n  `);\r\n}","// InitPage.jsx\r\nimport React, { useState } from 'react';\r\nimport { \r\n  generateSampleData, \r\n  clearAllData, \r\n  checkDataStatus, \r\n  syncProblemsFromNotion, \r\n  checkNotionConnection,\r\n  createCommunityClasses,\r\n  generateCommunitySampleData,\r\n  clearCommunityData\r\n} from '../services/initClasses';\r\nimport './InitPage.css';\r\n\r\nconst InitPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [dataStatus, setDataStatus] = useState(null);\r\n  const [notionStatus, setNotionStatus] = useState(null);\r\n  const [syncResult, setSyncResult] = useState(null);\r\n  const [communityStatus, setCommunityStatus] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('notion'); // 'notion', 'data', 'community'\r\n\r\n  // 检查数据状态\r\n  const handleCheckStatus = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const status = await checkDataStatus();\r\n      setDataStatus(status);\r\n      setMessage(`📊 当前数据: ${status.categoryCount} 个分类, ${status.questionCount} 个题目`);\r\n    } catch (error) {\r\n      setMessage(`❌ 检查失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 检查社区数据状态\r\n  const handleCheckCommunityStatus = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const status = {\r\n        postCount: 0,\r\n        commentCount: 0,\r\n        likeCount: 0,\r\n        followCount: 0,\r\n        hasData: false\r\n      };\r\n      \r\n      try {\r\n        // 使用 checkDataStatus 的逻辑来检查社区数据\r\n        // 这里简化处理，实际使用时可以调用专门的社区状态检查函数\r\n        status.postCount = 0;\r\n        status.commentCount = 0;\r\n        status.likeCount = 0;\r\n        status.followCount = 0;\r\n        status.hasData = false;\r\n        \r\n        setMessage(`📊 社区数据状态已检查，请先创建社区数据表`);\r\n      } catch (error) {\r\n        setMessage(`📊 社区数据表尚未创建，请先点击\"创建社区数据表\"`);\r\n      }\r\n      \r\n      setCommunityStatus(status);\r\n    } catch (error) {\r\n      setMessage(`❌ 检查社区状态失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 检查 Notion 连接状态\r\n  const handleCheckNotionConnection = async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    setNotionStatus(null);\r\n    \r\n    try {\r\n      const result = await checkNotionConnection();\r\n      setNotionStatus(result);\r\n      \r\n      if (result.success && result.connected) {\r\n        setMessage(`✅ Notion 连接正常！数据库: ${result.database.title}`);\r\n      } else {\r\n        setMessage(`⚠️ Notion 连接异常: ${result.error || '请检查配置'}`);\r\n      }\r\n    } catch (error) {\r\n      setMessage(`❌ 检查 Notion 连接失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 从 Notion 同步数据\r\n  const handleSyncFromNotion = async () => {\r\n    if (!window.confirm('确定要从 Notion 导入数据吗？这会添加新题目到现有数据中。')) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setMessage('');\r\n    setSyncResult(null);\r\n    \r\n    try {\r\n      const result = await syncProblemsFromNotion();\r\n      setSyncResult(result);\r\n      \r\n      if (result.success) {\r\n        setMessage(`✅ ${result.message}`);\r\n        // 同步成功后更新状态\r\n        await handleCheckStatus();\r\n      } else {\r\n        setMessage(`⚠️ ${result.message}`);\r\n      }\r\n    } catch (error) {\r\n      setMessage(`❌ 同步失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 生成示例数据\r\n  const handleGenerateData = async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await generateSampleData();\r\n      setMessage(`✅ ${result.message}`);\r\n      // 更新状态\r\n      await handleCheckStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 创建社区数据表\r\n  const handleCreateCommunityClasses = async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await createCommunityClasses();\r\n      if (result.Post.success && result.Comment.success && result.Like.success && result.Follow.success) {\r\n        setMessage(`✅ 社区数据表创建成功！所有表都已就绪`);\r\n      } else {\r\n        // 检查哪些表创建失败\r\n        const failedTables = [];\r\n        if (!result.Post.success) failedTables.push('Post');\r\n        if (!result.Comment.success) failedTables.push('Comment');\r\n        if (!result.Like.success) failedTables.push('Like');\r\n        if (!result.Follow.success) failedTables.push('Follow');\r\n        \r\n        if (failedTables.length > 0) {\r\n          setMessage(`⚠️ 部分表创建失败: ${failedTables.join(', ')}。可能表已存在或权限不足`);\r\n        } else {\r\n          setMessage(`✅ 社区数据表创建完成`);\r\n        }\r\n      }\r\n      // 更新社区状态\r\n      await handleCheckCommunityStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ 创建社区数据表失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 生成社区示例数据\r\n  const handleGenerateCommunityData = async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await generateCommunitySampleData();\r\n      setMessage(`✅ ${result.message}`);\r\n      // 更新社区状态\r\n      await handleCheckCommunityStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ 生成社区示例数据失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 清除所有数据\r\n  const handleClearData = async () => {\r\n    if (!window.confirm('确定要清除所有数据吗？此操作不可撤销！')) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await clearAllData();\r\n      setMessage(`✅ ${result.message}`);\r\n      // 更新状态\r\n      await handleCheckStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 清除社区数据\r\n  const handleClearCommunityData = async () => {\r\n    if (!window.confirm('确定要清除所有社区数据吗？此操作不可撤销！')) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await clearCommunityData();\r\n      setMessage(`✅ ${result.message}`);\r\n      // 更新社区状态\r\n      await handleCheckCommunityStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ 清除社区数据失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"init-page\">\r\n      <header className=\"page-header\">\r\n        <h1>🎯 数据库管理工具</h1>\r\n        <p>管理 Category、Question 和社区数据，支持 Notion 同步</p>\r\n      </header>\r\n\r\n      {/* 标签导航 */}\r\n      <section className=\"tab-navigation\">\r\n        <div className=\"tabs\">\r\n          <button \r\n            className={`tab ${activeTab === 'notion' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('notion')}\r\n          >\r\n            🔄 Notion 同步\r\n          </button>\r\n          <button \r\n            className={`tab ${activeTab === 'data' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('data')}\r\n          >\r\n            📊 题目数据管理\r\n          </button>\r\n          <button \r\n            className={`tab ${activeTab === 'community' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('community')}\r\n          >\r\n            👥 社区数据管理\r\n          </button>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Notion 同步功能区 */}\r\n    \r\n      {activeTab === 'notion' && (\r\n        <section className=\"notion-section\">\r\n          <h2>🔄 Notion 数据同步</h2>\r\n          <div className=\"action-buttons\">\r\n            <button \r\n              onClick={handleCheckNotionConnection}\r\n              disabled={loading}\r\n              className=\"btn btn-notion\"\r\n            >\r\n              🔗 检查 Notion 连接\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleSyncFromNotion}\r\n              disabled={loading}\r\n              className=\"btn btn-sync\"\r\n            >\r\n              📥 从 Notion 导入\r\n            </button>\r\n          </div>\r\n\r\n          {notionStatus && (\r\n            <div className=\"notion-status\">\r\n              <h4>Notion 连接状态</h4>\r\n              <div className={`status-card ${notionStatus.connected ? 'connected' : 'disconnected'}`}>\r\n                <div className=\"status-header\">\r\n                  <span className=\"status-indicator\">\r\n                    {notionStatus.connected ? '🟢' : '🔴'}\r\n                  </span>\r\n                  <strong>\r\n                    {notionStatus.connected ? '连接正常' : '连接异常'}\r\n                  </strong>\r\n                </div>\r\n                \r\n                {notionStatus.connected && notionStatus.database && (\r\n                  <div className=\"database-info\">\r\n                    <p><strong>数据库:</strong> {notionStatus.database.title}</p>\r\n                    <p><strong>属性字段:</strong> {notionStatus.database.properties.length} 个</p>\r\n                    <p><strong>URL:</strong> \r\n                      <a href={notionStatus.database.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        查看数据库\r\n                      </a>\r\n                    </p>\r\n                  </div>\r\n                )}\r\n                \r\n                {!notionStatus.connected && (\r\n                  <div className=\"error-info\">\r\n                    <p><strong>错误信息:</strong> {notionStatus.error}</p>\r\n                    <p className=\"help-text\">\r\n                      💡 请确保已部署云函数并配置环境变量\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {syncResult && (\r\n            <div className=\"sync-result\">\r\n              <h4>同步结果</h4>\r\n              <div className=\"result-card\">\r\n                <div className=\"result-stats\">\r\n                  <div className=\"stat\">\r\n                    <span className=\"stat-label\">获取记录:</span>\r\n                    <span className=\"stat-value\">{syncResult.data?.fetched || 0}</span>\r\n                  </div>\r\n                  <div className=\"stat\">\r\n                    <span className=\"stat-label\">成功保存:</span>\r\n                    <span className=\"stat-value\">{syncResult.data?.saved || 0}</span>\r\n                  </div>\r\n                  <div className=\"stat\">\r\n                    <span className=\"stat-label\">同步模式:</span>\r\n                    <span className=\"stat-value\">{syncResult.data?.mode || 'cloud'}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                {syncResult.data?.problems && syncResult.data.problems.length > 0 && (\r\n                  <div className=\"synced-problems\">\r\n                    <h5>最近同步的题目:</h5>\r\n                    <ul>\r\n                      {syncResult.data.problems.slice(0, 3).map((problem, index) => (\r\n                        <li key={index}>\r\n                          <span className=\"problem-title\">{problem.title}</span>\r\n                          <span className=\"problem-category\">{problem.category}</span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </section>\r\n      )}\r\n\r\n      {/* 题目数据管理功能区 */}\r\n      {activeTab === 'data' && (\r\n        <section className=\"data-management-section\">\r\n          <h2>📊 题目数据管理</h2>\r\n          <div className=\"action-buttons\">\r\n            <button \r\n              onClick={handleCheckStatus}\r\n              disabled={loading}\r\n              className=\"btn btn-info\"\r\n            >\r\n              🔍 检查状态\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleGenerateData}\r\n              disabled={loading}\r\n              className=\"btn btn-success\"\r\n            >\r\n              🚀 生成示例数据\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleClearData}\r\n              disabled={loading}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              🗑️ 清除所有数据\r\n            </button>\r\n          </div>\r\n\r\n          {dataStatus && (\r\n            <div className=\"status-info\">\r\n              <h4>📈 数据状态</h4>\r\n              <div className=\"status-grid\">\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">分类数量:</span>\r\n                  <span className=\"value\">{dataStatus.categoryCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">题目数量:</span>\r\n                  <span className=\"value\">{dataStatus.questionCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">数据状态:</span>\r\n                  <span className={`value ${dataStatus.hasData ? 'has-data' : 'no-data'}`}>\r\n                    {dataStatus.hasData ? '有数据' : '无数据'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </section>\r\n      )}\r\n\r\n      {/* 社区数据管理功能区 */}\r\n      {activeTab === 'community' && (\r\n        <section className=\"community-management-section\">\r\n          <h2>👥 社区数据管理</h2>\r\n          <p className=\"section-description\">\r\n            管理学习社区的帖子、评论、点赞等社交功能数据\r\n          </p>\r\n          \r\n          <div className=\"action-buttons\">\r\n            <button \r\n              onClick={handleCheckCommunityStatus}\r\n              disabled={loading}\r\n              className=\"btn btn-info\"\r\n            >\r\n              🔍 检查社区状态\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleCreateCommunityClasses}\r\n              disabled={loading}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              🏗️ 创建社区数据表\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleGenerateCommunityData}\r\n              disabled={loading}\r\n              className=\"btn btn-success\"\r\n            >\r\n              🚀 生成社区示例数据\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleClearCommunityData}\r\n              disabled={loading}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              🗑️ 清除社区数据\r\n            </button>\r\n          </div>\r\n\r\n          {communityStatus && (\r\n            <div className=\"status-info\">\r\n              <h4>📈 社区数据状态</h4>\r\n              <div className=\"status-grid\">\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">帖子数量:</span>\r\n                  <span className=\"value\">{communityStatus.postCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">评论数量:</span>\r\n                  <span className=\"value\">{communityStatus.commentCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">点赞数量:</span>\r\n                  <span className=\"value\">{communityStatus.likeCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">关注数量:</span>\r\n                  <span className=\"value\">{communityStatus.followCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">数据状态:</span>\r\n                  <span className={`value ${communityStatus.hasData ? 'has-data' : 'no-data'}`}>\r\n                    {communityStatus.hasData ? '有数据' : '无数据'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"community-classes-info\">\r\n            <h4>🏗️ 社区数据表结构</h4>\r\n            <div className=\"classes-grid\">\r\n              <div className=\"class-card\">\r\n                <h5>📝 Post (帖子)</h5>\r\n                <ul>\r\n                  <li>title - 帖子标题</li>\r\n                  <li>content - 帖子内容</li>\r\n                  <li>author - 作者</li>\r\n                  <li>tags - 标签数组</li>\r\n                  <li>likes - 点赞数</li>\r\n                  <li>views - 浏览数</li>\r\n                  <li>commentCount - 评论数</li>\r\n                  <li>isPublic - 是否公开</li>\r\n                  <li>status - 帖子状态</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <div className=\"class-card\">\r\n                <h5>💬 Comment (评论)</h5>\r\n                <ul>\r\n                  <li>content - 评论内容</li>\r\n                  <li>author - 评论作者</li>\r\n                  <li>post - 所属帖子</li>\r\n                  <li>parent - 父评论</li>\r\n                  <li>likes - 点赞数</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <div className=\"class-card\">\r\n                <h5>👍 Like (点赞)</h5>\r\n                <ul>\r\n                  <li>user - 点赞用户</li>\r\n                  <li>post - 被点赞帖子</li>\r\n                  <li>comment - 被点赞评论</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <div className=\"class-card\">\r\n                <h5>👥 Follow (关注)</h5>\r\n                <ul>\r\n                  <li>follower - 关注者</li>\r\n                  <li>following - 被关注者</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n\r\n      {/* 通用状态显示 */}\r\n      {loading && (\r\n        <div className=\"loading-state\">\r\n          <div className=\"spinner\"></div>\r\n          <span>执行中...</span>\r\n        </div>\r\n      )}\r\n\r\n      {message && (\r\n        <div className={`message ${message.includes('❌') ? 'error' : message.includes('⚠️') ? 'warning' : 'success'}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      {/* 使用说明 */}\r\n      <div className=\"instructions\">\r\n        <h3>📖 使用说明</h3>\r\n        \r\n        {activeTab === 'notion' && (\r\n          <div className=\"instruction-item\">\r\n            <h4>🔄 Notion 同步</h4>\r\n            <ul>\r\n              <li><strong>检查连接:</strong> 验证 Notion API 连接状态</li>\r\n              <li><strong>从 Notion 导入:</strong> 将 Notion 数据库中的题目同步到本地</li>\r\n              <li><strong>智能匹配:</strong> 自动识别分类、难度、标签等字段</li>\r\n              <li><strong>去重机制:</strong> 基于 Notion Page ID 避免重复导入</li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'data' && (\r\n          <div className=\"instruction-item\">\r\n            <h4>📊 题目数据管理</h4>\r\n            <ul>\r\n              <li><strong>生成示例数据:</strong> 创建分类和题目示例数据</li>\r\n              <li><strong>检查状态:</strong> 查看当前数据统计</li>\r\n              <li><strong>清除数据:</strong> 删除所有题目和分类数据</li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'community' && (\r\n          <div className=\"instruction-item\">\r\n            <h4>👥 社区数据管理</h4>\r\n            <ul>\r\n              <li><strong>创建数据表:</strong> 初始化社区功能所需的数据表（Post、Comment、Like、Follow）</li>\r\n              <li><strong>生成示例数据:</strong> 创建示例帖子、评论和点赞数据</li>\r\n              <li><strong>检查状态:</strong> 查看社区数据统计</li>\r\n              <li><strong>清除数据:</strong> 删除所有社区相关数据</li>\r\n            </ul>\r\n            \r\n            <div className=\"community-features\">\r\n              <h5>社区功能特性:</h5>\r\n              <ul>\r\n                <li>📝 发帖和内容管理</li>\r\n                <li>💬 评论和回复系统</li>\r\n                <li>👍 点赞互动功能</li>\r\n                <li>👥 用户关注系统</li>\r\n                <li>🔐 完善的权限控制</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"instruction-item\">\r\n          <h4>🔧 环境配置要求</h4>\r\n          <div className=\"config-requirements\">\r\n            <div className=\"config-item\">\r\n              <strong>Notion 集成:</strong>\r\n              <span>需要配置 NOTION_INTEGRATION_TOKEN 和 NOTION_DATABASE_ID</span>\r\n            </div>\r\n            <div className=\"config-item\">\r\n              <strong>云函数部署:</strong>\r\n              <span>需要在 LeanCloud 云引擎部署同步函数</span>\r\n            </div>\r\n            <div className=\"config-item\">\r\n              <strong>数据库权限:</strong>\r\n              <span>Notion 数据库需要分享给集成</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InitPage;","// components/QuestionForm.jsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { createQuestion, updateQuestion, DifficultyOptions, ProficiencyOptions } from '../services/questionService';\r\nimport { getAllCategories } from '../services/categoryService';\r\nimport AV from 'leancloud-storage';\r\nimport './QuestionForm.css';\r\n\r\nconst QuestionForm = ({ question, onSave, onCancel, defaultCategoryId, onCategoryChange }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    detailedAnswer: '',\r\n    oralAnswer: '',\r\n    code: '',\r\n    url: '',\r\n    tags: [],\r\n    difficulty: DifficultyOptions.MEDIUM,\r\n    proficiency: ProficiencyOptions.BEGINNER,\r\n    appearanceLevel: 50,\r\n    categoryId: '',\r\n    images: [] // 新增：存储上传的图片信息\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [newTag, setNewTag] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingCategories, setLoadingCategories] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [activeAnswerTab, setActiveAnswerTab] = useState('detailed');\r\n  const [uploadingImages, setUploadingImages] = useState([]); // 新增：上传中的图片\r\n  \r\n  // 添加用户状态\r\n  const currentUser = AV.User.current();\r\n  \r\n  // 创建 ref 用于文件输入\r\n  const fileInputRef = useRef(null);\r\n  const detailedAnswerRef = useRef(null);\r\n  const oralAnswerRef = useRef(null);\r\n\r\n  const isEditing = !!question;\r\n\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    \r\n    if (user) {\r\n      loadCategories();\r\n      if (question) {\r\n        setFormData({\r\n          title: question.title || '',\r\n          detailedAnswer: question.detailedAnswer || '',\r\n          oralAnswer: question.oralAnswer || '',\r\n          code: question.code || '',\r\n          url: question.url || '',\r\n          tags: question.tags || [],\r\n          difficulty: question.difficulty || DifficultyOptions.MEDIUM,\r\n          proficiency: question.proficiency || ProficiencyOptions.BEGINNER,\r\n          appearanceLevel: question.appearanceLevel || 50,\r\n          categoryId: question.category?.id || '',\r\n          images: question.images || [] // 加载已有的图片\r\n        });\r\n      } else if (defaultCategoryId) {\r\n        setFormData(prev => ({ ...prev, categoryId: defaultCategoryId }));\r\n      }\r\n    }\r\n  }, [question, defaultCategoryId]);\r\n\r\n  const loadCategories = async () => {\r\n    if (!currentUser) {\r\n      return\r\n    };\r\n    \r\n    setLoadingCategories(true);\r\n    try {\r\n      const categoriesData = await getAllCategories();\r\n      \r\n      // 确保只显示当前用户的分类\r\n      const userCategories = categoriesData.filter(category => {\r\n        // 检查分类是否属于当前用户\r\n        const createdBy = category.createdBy;\r\n        return createdBy && createdBy.id === currentUser.id;\r\n      });\r\n      \r\n      setCategories(userCategories);\r\n      \r\n      console.log('加载到的分类:', {\r\n        总数: categoriesData.length,\r\n        用户分类: userCategories.length,\r\n        当前用户: currentUser.id,\r\n        分类详情: userCategories.map(cat => ({ id: cat.id, name: cat.name, createdBy: cat.createdBy?.id }))\r\n      });\r\n      \r\n      // 如果没有传入类别ID且没有默认类别ID，默认选择第一个类别\r\n      if (!isEditing && !defaultCategoryId && userCategories.length > 0 && !formData.categoryId) {\r\n        setFormData(prev => ({ ...prev, categoryId: userCategories[0].id }));\r\n        console.log('自动选择第一个分类:', userCategories[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error('加载类别失败:', error);\r\n      setErrors({ categories: '加载类别失败: ' + error.message });\r\n    } finally {\r\n      setLoadingCategories(false);\r\n    }\r\n  };\r\n\r\n  // 新增：处理拖拽事件\r\n  const handleDragOver = (e, answerType) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const textarea = answerType === 'detailed' ? detailedAnswerRef.current : oralAnswerRef.current;\r\n    if (textarea) {\r\n      textarea.classList.add('drag-over');\r\n    }\r\n  };\r\n\r\n  const handleDragLeave = (e, answerType) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const textarea = answerType === 'detailed' ? detailedAnswerRef.current : oralAnswerRef.current;\r\n    if (textarea) {\r\n      textarea.classList.remove('drag-over');\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e, answerType) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    const textarea = answerType === 'detailed' ? detailedAnswerRef.current : oralAnswerRef.current;\r\n    if (textarea) {\r\n      textarea.classList.remove('drag-over');\r\n    }\r\n\r\n    const files = Array.from(e.dataTransfer.files);\r\n    handleFiles(files, answerType);\r\n  };\r\n\r\n  // 新增：处理文件选择\r\n  const handleFileSelect = (e, answerType) => {\r\n    const files = Array.from(e.target.files);\r\n    handleFiles(files, answerType);\r\n    // 重置文件输入\r\n    e.target.value = '';\r\n  };\r\n\r\n  // 新增：处理文件上传\r\n  const handleFiles = async (files, answerType) => {\r\n    const imageFiles = files.filter(file => \r\n      file.type === 'image/jpeg' || \r\n      file.type === 'image/png' || \r\n      file.type === 'image/jpg'\r\n    );\r\n\r\n    if (imageFiles.length === 0) {\r\n      alert('请选择 JPG 或 PNG 格式的图片文件');\r\n      return;\r\n    }\r\n\r\n    for (const file of imageFiles) {\r\n      await uploadImage(file, answerType);\r\n    }\r\n  };\r\n\r\n  // 新增：上传图片到 LeanCloud\r\n  const uploadImage = async (file, answerType) => {\r\n    const uploadingId = Date.now().toString();\r\n    \r\n    try {\r\n      // 添加到上传中列表\r\n      setUploadingImages(prev => [...prev, uploadingId]);\r\n      \r\n      // 创建 LeanCloud 文件对象\r\n      const avFile = new AV.File(file.name, file);\r\n      \r\n      // 上传文件\r\n      const savedFile = await avFile.save();\r\n      \r\n      // 创建图片信息对象\r\n      const imageInfo = {\r\n        id: uploadingId,\r\n        objectId: savedFile.id,\r\n        url: savedFile.url(),\r\n        name: file.name,\r\n        size: file.size,\r\n        type: file.type,\r\n        answerType: answerType // 标记图片属于哪个答案类型\r\n      };\r\n      \r\n      // 添加到表单数据\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        images: [...prev.images, imageInfo]\r\n      }));\r\n      \r\n      // 插入图片标记到文本区域\r\n      insertImageMarkdown(imageInfo, answerType);\r\n      \r\n    } catch (error) {\r\n      console.error('图片上传失败:', error);\r\n      alert(`图片上传失败: ${error.message}`);\r\n    } finally {\r\n      // 从上传中列表移除\r\n      setUploadingImages(prev => prev.filter(id => id !== uploadingId));\r\n    }\r\n  };\r\n\r\n  // 新增：插入图片 Markdown 到文本区域\r\n  const insertImageMarkdown = (imageInfo, answerType) => {\r\n    const markdown = `![${imageInfo.name}](${imageInfo.url})`;\r\n    const field = answerType === 'detailed' ? 'detailedAnswer' : 'oralAnswer';\r\n    \r\n    setFormData(prev => {\r\n      const currentText = prev[field];\r\n      const newText = currentText ? `${currentText}\\n${markdown}` : markdown;\r\n      return { ...prev, [field]: newText };\r\n    });\r\n  };\r\n\r\n  // 新增：手动触发文件选择\r\n  const triggerFileInput = (answerType) => {\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.setAttribute('data-answer-type', answerType);\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  // 新增：删除图片\r\n  const removeImage = (imageId) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      images: prev.images.filter(img => img.id !== imageId)\r\n    }));\r\n  };\r\n\r\n  // 新增：获取指定答案类型的图片\r\n  const getImagesByAnswerType = (answerType) => {\r\n    return formData.images.filter(img => img.answerType === answerType);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.title.trim()) {\r\n      newErrors.title = '问题标题不能为空';\r\n    } else if (formData.title.trim().length < 2) {\r\n      newErrors.title = '问题标题至少需要2个字符';\r\n    }\r\n    \r\n    if (!formData.detailedAnswer.trim() && !formData.oralAnswer.trim()) {\r\n      newErrors.answer = '至少需要填写一个答案版本（详细版本或口述版本）';\r\n    }\r\n    \r\n    if (!formData.categoryId) {\r\n      newErrors.categoryId = '请选择类别';\r\n    }\r\n    \r\n    if (formData.tags.length > 10) {\r\n      newErrors.tags = '标签数量不能超过10个';\r\n    }\r\n\r\n    if (formData.url && !isValidUrl(formData.url)) {\r\n      newErrors.url = '请输入有效的URL链接';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const isValidUrl = (string) => {\r\n    try {\r\n      new URL(string);\r\n      return true;\r\n    } catch (_) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData(prev => ({ \r\n      ...prev, \r\n      [field]: value \r\n    }));\r\n    \r\n    // 清除该字段的错误信息\r\n    if (errors[field]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleAddTag = () => {\r\n    const tag = newTag.trim();\r\n    if (tag && !formData.tags.includes(tag)) {\r\n      if (formData.tags.length >= 10) {\r\n        setErrors({ tags: '标签数量不能超过10个' });\r\n        return;\r\n      }\r\n      \r\n      setFormData(prev => ({\r\n        ...prev,\r\n        tags: [...prev.tags, tag]\r\n      }));\r\n      setNewTag('');\r\n      \r\n      // 清除标签错误\r\n      if (errors.tags) {\r\n        setErrors(prev => ({\r\n          ...prev,\r\n          tags: ''\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRemoveTag = (tagToRemove) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      tags: prev.tags.filter(tag => tag !== tagToRemove)\r\n    }));\r\n  };\r\n\r\n  const handleTagKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleAddTag();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      if (isEditing) {\r\n        // 检查类别是否发生了变化\r\n        const oldCategory = question.category; // 原来的 category 对象\r\n        const newCategory = categories.find(cat => cat.id === formData.categoryId); // 新的 category 对象\r\n        const categoryChanged = oldCategory?.id !== newCategory?.id;\r\n        \r\n        await updateQuestion(question.id, formData);\r\n        \r\n        // 如果类别发生了变化，调用回调函数通知父组件\r\n        if (categoryChanged && onCategoryChange) {\r\n          onCategoryChange({\r\n            questionId: question.id,\r\n            oldCategoryId: oldCategory?.id,\r\n            newCategoryId: newCategory?.id,\r\n            question: { ...question, ...formData, category: newCategory }\r\n          });\r\n        }\r\n      } else {\r\n        // 创建题目时只需要传递 categoryId，questionService 会处理 Pointer 转换\r\n        await createQuestion(formData);\r\n      }\r\n      onSave();\r\n      window.dispatchEvent(new CustomEvent('questionCreated', {\r\n        detail: { question: result }\r\n      }));\r\n    } catch (error) {\r\n      console.error('保存题目失败:', error);\r\n      setErrors({ submit: error.message });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 新增：渲染答案标签页内容\r\n  const renderAnswerTab = (type, placeholder, hint) => {\r\n    const images = getImagesByAnswerType(type);\r\n    const isUploading = uploadingImages.length > 0;\r\n    const field = type === 'detailed' ? 'detailedAnswer' : 'oralAnswer';\r\n    const textareaRef = type === 'detailed' ? detailedAnswerRef : oralAnswerRef;\r\n    \r\n    return (\r\n      <div className=\"tab-panel\">\r\n        <div \r\n          className=\"answer-textarea-container\"\r\n          onDragOver={(e) => handleDragOver(e, type)}\r\n          onDragLeave={(e) => handleDragLeave(e, type)}\r\n          onDrop={(e) => handleDrop(e, type)}\r\n        >\r\n          <textarea\r\n            ref={textareaRef}\r\n            value={formData[field]}\r\n            onChange={(e) => handleInputChange(field, e.target.value)}\r\n            placeholder={placeholder}\r\n            rows={type === 'detailed' ? '6' : '4'}\r\n            disabled={loading}\r\n            className={errors.answer && !formData[field].trim() ? 'error' : ''}\r\n          />\r\n          \r\n          {/* 图片上传提示 */}\r\n          <div className=\"upload-hint\">\r\n            <div className=\"upload-hint-text\">\r\n              💡 支持拖拽 JPG/PNG 图片到此区域，或 \r\n              <button \r\n                type=\"button\" \r\n                className=\"upload-trigger-btn\"\r\n                onClick={() => triggerFileInput(type)}\r\n                disabled={loading || isUploading}\r\n              >\r\n                点击上传\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 已上传图片预览 */}\r\n        {images.length > 0 && (\r\n          <div className=\"uploaded-images\">\r\n            <div className=\"images-title\">已上传图片 ({images.length}):</div>\r\n            <div className=\"images-grid\">\r\n              {images.map((image) => (\r\n                <div key={image.id} className=\"image-item\">\r\n                  <img src={image.url} alt={image.name} />\r\n                  <div className=\"image-info\">\r\n                    <span className=\"image-name\">{image.name}</span>\r\n                    <button \r\n                      type=\"button\"\r\n                      className=\"remove-image-btn\"\r\n                      onClick={() => removeImage(image.id)}\r\n                      disabled={loading}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"tab-hint\">\r\n          {hint}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"question-form-overlay\">\r\n        <div className=\"question-form-dialog\">\r\n          <div className=\"question-form-header\">\r\n            <h3>请先登录</h3>\r\n            <button \r\n              type=\"button\" \r\n              className=\"close-button\"\r\n              onClick={onCancel}\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n          <div className=\"auth-required-container\">\r\n            <div className=\"auth-required-icon\">🔐</div>\r\n            <p>登录后即可添加或编辑题目</p>\r\n            <div className=\"auth-required-actions\">\r\n              <button \r\n                onClick={() => window.dispatchEvent(new CustomEvent('showAuthModal'))}\r\n                className=\"login-btn\"\r\n              >\r\n                立即登录\r\n              </button>\r\n              <button \r\n                onClick={onCancel}\r\n                className=\"btn-secondary\"\r\n              >\r\n                取消\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"question-form-overlay\">\r\n      <div className=\"question-form-dialog\">\r\n        <div className=\"question-form-header\">\r\n          <h3>{isEditing ? '编辑题目' : '添加新题目'}</h3>\r\n          <div className=\"user-info\">\r\n            <span className=\"user-badge\">👤 {currentUser.getUsername()}</span>\r\n          </div>\r\n          <button \r\n            type=\"button\" \r\n            className=\"close-button\"\r\n            onClick={onCancel}\r\n            disabled={loading}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"question-form\">\r\n          {/* 问题标题 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">问题标题 *</label>\r\n            <input\r\n              id=\"title\"\r\n              type=\"text\"\r\n              value={formData.title}\r\n              onChange={(e) => handleInputChange('title', e.target.value)}\r\n              placeholder=\"请输入问题标题\"\r\n              disabled={loading}\r\n              className={errors.title ? 'error' : ''}\r\n            />\r\n            {errors.title && <span className=\"error-message\">{errors.title}</span>}\r\n          </div>\r\n\r\n          {/* 答案版本标签页 */}\r\n          <div className=\"form-group\">\r\n            <label>问题答案 *</label>\r\n            <div className=\"answer-tabs-container\">\r\n              <div className=\"answer-tab-buttons\">\r\n                <button \r\n                  type=\"button\"\r\n                  className={`answer-tab-button ${activeAnswerTab === 'detailed' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('detailed')}\r\n                >\r\n                  详细版本\r\n                </button>\r\n                <button \r\n                  type=\"button\"\r\n                  className={`answer-tab-button ${activeAnswerTab === 'oral' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('oral')}\r\n                >\r\n                  口述版本\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"answer-tab-content\">\r\n                {activeAnswerTab === 'detailed' && \r\n                  renderAnswerTab(\r\n                    'detailed', \r\n                    '请输入详细的答案解释，包含技术细节、原理分析等', \r\n                    '适合记录完整的技术解析和详细说明'\r\n                  )\r\n                }\r\n\r\n                {activeAnswerTab === 'oral' && \r\n                  renderAnswerTab(\r\n                    'oral', \r\n                    '请输入简洁的口述版本答案，适合面试场景表达', \r\n                    '适合记录简洁的口头表达版本，便于面试时快速回忆'\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n            {errors.answer && <span className=\"error-message\">{errors.answer}</span>}\r\n          </div>\r\n\r\n          {/* 代码展示部分 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">相关代码（可选）</label>\r\n            <textarea\r\n              id=\"code\"\r\n              value={formData.code}\r\n              onChange={(e) => handleInputChange('code', e.target.value)}\r\n              placeholder=\"请输入与该题目相关的代码片段，将保持原格式显示\"\r\n              rows=\"8\"\r\n              disabled={loading}\r\n              className=\"code-textarea\"\r\n            />\r\n            <div className=\"field-hint\">\r\n              代码将保持原格式显示，适合展示算法实现、组件代码等\r\n            </div>\r\n          </div>\r\n\r\n          {/* URL链接 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"url\">相关链接（可选）</label>\r\n            <input\r\n              id=\"url\"\r\n              type=\"url\"\r\n              value={formData.url}\r\n              onChange={(e) => handleInputChange('url', e.target.value)}\r\n              placeholder=\"https://example.com\"\r\n              disabled={loading}\r\n              className={errors.url ? 'error' : ''}\r\n            />\r\n            {errors.url && <span className=\"error-message\">{errors.url}</span>}\r\n            <div className=\"field-hint\">\r\n              可添加相关的文档、文章或参考链接\r\n            </div>\r\n          </div>\r\n\r\n          {/* 标签管理 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"tags\">标签（可选）</label>\r\n            <div className=\"tags-input-container\">\r\n              <input\r\n                id=\"tags\"\r\n                type=\"text\"\r\n                value={newTag}\r\n                onChange={(e) => setNewTag(e.target.value)}\r\n                onKeyPress={handleTagKeyPress}\r\n                placeholder=\"输入标签后按回车或点击添加\"\r\n                disabled={loading}\r\n                maxLength={20}\r\n              />\r\n              <button \r\n                type=\"button\" \r\n                onClick={handleAddTag}\r\n                disabled={loading || !newTag.trim()}\r\n                className=\"add-tag-button\"\r\n              >\r\n                添加\r\n              </button>\r\n            </div>\r\n            {errors.tags && <span className=\"error-message\">{errors.tags}</span>}\r\n            \r\n            {/* 标签列表 */}\r\n            {formData.tags.length > 0 && (\r\n              <div className=\"tags-list\">\r\n                <div className=\"tags-header\">\r\n                  <span>已添加标签 ({formData.tags.length}/10):</span>\r\n                </div>\r\n                <div className=\"tags-container\">\r\n                  {formData.tags.map((tag, index) => (\r\n                    <span key={index} className=\"tag\">\r\n                      {tag}\r\n                      <button \r\n                        type=\"button\" \r\n                        onClick={() => handleRemoveTag(tag)}\r\n                        disabled={loading}\r\n                        className=\"remove-tag-button\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* 难度和掌握程度 */}\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"difficulty\">难度</label>\r\n              <select\r\n                id=\"difficulty\"\r\n                value={formData.difficulty}\r\n                onChange={(e) => handleInputChange('difficulty', e.target.value)}\r\n                disabled={loading}\r\n              >\r\n                <option value={DifficultyOptions.EASY}>简单</option>\r\n                <option value={DifficultyOptions.MEDIUM}>中等</option>\r\n                <option value={DifficultyOptions.HARD}>困难</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"proficiency\">掌握程度</label>\r\n              <select\r\n                id=\"proficiency\"\r\n                value={formData.proficiency}\r\n                onChange={(e) => handleInputChange('proficiency', e.target.value)}\r\n                disabled={loading}\r\n              >\r\n                <option value={ProficiencyOptions.BEGINNER}>初级</option>\r\n                <option value={ProficiencyOptions.INTERMEDIATE}>中级</option>\r\n                <option value={ProficiencyOptions.ADVANCED}>高级</option>\r\n                <option value={ProficiencyOptions.MASTER}>精通</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n            \r\n          {/* 出现频率 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"appearanceLevel\">\r\n              出现频率: {formData.appearanceLevel}%\r\n              <span className=\"field-hint\">（数值越高，在复习时出现的概率越大）</span>\r\n            </label>\r\n            <input\r\n              id=\"appearanceLevel\"\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              value={formData.appearanceLevel}\r\n              onChange={(e) => handleInputChange('appearanceLevel', parseInt(e.target.value))}\r\n              disabled={loading}\r\n              className=\"appearance-slider\"\r\n            />\r\n            <div className=\"slider-labels\">\r\n              <span>低频</span>\r\n              <span>中频</span>\r\n              <span>高频</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 类别选择 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"category\">类别 *</label>\r\n            {loadingCategories ? (\r\n              <div className=\"loading-categories\">加载类别中...</div>\r\n            ) : categories.length === 0 ? (\r\n              <div className=\"no-categories\">\r\n                <div className=\"no-categories-icon\">📁</div>\r\n                <p>暂无类别，请先创建类别</p>\r\n                <button \r\n                  type=\"button\"\r\n                  className=\"create-category-btn\"\r\n                  onClick={() => {\r\n                    onCancel(); // 关闭题目表单\r\n                    // 触发创建分类的事件或跳转到分类管理页面\r\n                    window.dispatchEvent(new CustomEvent('showCategoryManagement'));\r\n                  }}\r\n                >\r\n                  🚀 去创建分类\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <select\r\n                id=\"category\"\r\n                value={formData.categoryId}\r\n                onChange={(e) => handleInputChange('categoryId', e.target.value)}\r\n                disabled={loading}\r\n                className={errors.categoryId ? 'error' : ''}\r\n              >\r\n                <option value=\"\">请选择类别</option>\r\n                {categories.map(category => (\r\n                  <option key={category.id} value={category.id}>\r\n                    {category.name} ({category.questionCount || 0}题)\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            )}\r\n            {errors.categoryId && <span className=\"error-message\">{errors.categoryId}</span>}\r\n          </div>\r\n\r\n          {/* 提交错误 */}\r\n          {errors.submit && (\r\n            <div className=\"submit-error\">\r\n              {errors.submit}\r\n            </div>\r\n          )}\r\n\r\n          {/* 表单操作 */}\r\n          <div className=\"form-actions\">\r\n            <button \r\n              type=\"button\" \r\n              onClick={onCancel}\r\n              disabled={loading}\r\n              className=\"btn-secondary\"\r\n            >\r\n              取消\r\n            </button>\r\n            <button \r\n              type=\"submit\" \r\n              disabled={loading}\r\n              className=\"btn-primary\"\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <span className=\"loading-spinner\"></span>\r\n                  {isEditing ? '更新中...' : '添加中...'}\r\n                </>\r\n              ) : (\r\n                isEditing ? '更新题目' : '添加题目'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        {/* 隐藏的文件输入 */}\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          style={{ display: 'none' }}\r\n          accept=\".jpg,.jpeg,.png\"\r\n          multiple\r\n          onChange={(e) => {\r\n            const answerType = e.target.getAttribute('data-answer-type');\r\n            handleFileSelect(e, answerType);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionForm;","// components/QuestionDetailCard.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport QuestionForm from './QuestionForm';\r\nimport AV from 'leancloud-storage';\r\nimport './QuestionDetailCard.css';\r\n\r\nconst QuestionDetailCard = ({ \r\n  question, \r\n  onDelete, \r\n  isExpandedView = false, \r\n  onUpdateField,\r\n  onEdit, // 新增：接收编辑回调函数\r\n  showQuestionForm, // 新增：控制表单显示\r\n  setShowQuestionForm, // 新增：控制表单显示状态\r\n  editingQuestion, // 新增：正在编辑的题目\r\n  setEditingQuestion // 新增：设置编辑题目\r\n}) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [showFullAnswer, setShowFullAnswer] = useState(isExpandedView);\r\n  const [deleteLoading, setDeleteLoading] = useState(false);\r\n  const [editLoading, setEditLoading] = useState(false);\r\n  const [activeAnswerTab, setActiveAnswerTab] = useState('oral');\r\n  const [localAppearanceLevel, setLocalAppearanceLevel] = useState(question?.appearanceLevel || 50);\r\n  const [updatingAppearance, setUpdatingAppearance] = useState(false);\r\n  \r\n  // 添加确认复习相关状态\r\n  const [showReviewConfirm, setShowReviewConfirm] = useState(false);\r\n  const [reviewDays, setReviewDays] = useState(7); // 默认7天\r\n  const [confirmingReview, setConfirmingReview] = useState(false);\r\n  \r\n  // 添加移除复习相关状态\r\n  const [showRemoveReview, setShowRemoveReview] = useState(false);\r\n  const [removeDays, setRemoveDays] = useState(7); // 默认7天\r\n  const [removingReview, setRemovingReview] = useState(false);\r\n  \r\n  // 添加用户状态\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n  }, []);\r\n\r\n  // 当question的appearanceLevel变化时更新本地状态\r\n  useEffect(() => {\r\n    console.log('question.appearanceLevel 变化:', question?.appearanceLevel);\r\n    setLocalAppearanceLevel(question?.appearanceLevel);\r\n  }, [question?.appearanceLevel]);\r\n\r\n  // 监控状态变化用于调试\r\n  useEffect(() => {\r\n    console.log('localAppearanceLevel 状态变化:', localAppearanceLevel);\r\n  }, [localAppearanceLevel]);\r\n\r\n  // 增强的 Markdown 解析函数 - 支持图片预览\r\n  const parseMarkdown = (text) => {\r\n    if (!text || text.trim() === '') {\r\n      return <span className=\"no-content\">暂无内容</span>;\r\n    }\r\n\r\n    // 分割文本为行\r\n    const lines = text.split('\\n');\r\n    const elements = [];\r\n    let inCodeBlock = false;\r\n    let codeBlockContent = [];\r\n    let codeLanguage = '';\r\n\r\n    lines.forEach((line, index) => {\r\n      // 检查代码块开始 (```language)\r\n      if (line.trim().startsWith('```')) {\r\n        if (!inCodeBlock) {\r\n          inCodeBlock = true;\r\n          codeLanguage = line.trim().substring(3).trim() || 'text';\r\n          codeBlockContent = [];\r\n          return;\r\n        } else {\r\n          inCodeBlock = false;\r\n          elements.push(\r\n            <pre key={`code-${index}`} className=\"code-block\">\r\n              <code className={`language-${codeLanguage}`}>{codeBlockContent.join('\\n')}</code>\r\n            </pre>\r\n          );\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (inCodeBlock) {\r\n        codeBlockContent.push(line);\r\n        return;\r\n      }\r\n\r\n      if (line.trim() === '') {\r\n        elements.push(<br key={`br-${index}`} />);\r\n        return;\r\n      }\r\n\r\n      // 处理图片标记 - 新增：直接渲染为小预览图\r\n      const imageMatch = line.match(/!\\[(.*?)\\]\\((.*?)\\)/);\r\n      if (imageMatch) {\r\n        const altText = imageMatch[1];\r\n        const imageUrl = imageMatch[2];\r\n        elements.push(\r\n          <div key={`img-${index}`} className=\"markdown-image-container\">\r\n            <img \r\n              src={imageUrl} \r\n              alt={altText} \r\n              className=\"markdown-image-preview\"\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                // 点击预览图可以查看大图\r\n                window.open(imageUrl, '_blank');\r\n              }}\r\n            />\r\n            {altText && altText !== '' && (\r\n              <div className=\"image-alt-text\">{altText}</div>\r\n            )}\r\n          </div>\r\n        );\r\n        return;\r\n      }\r\n\r\n      let processedLine = line;\r\n\r\n      // 处理标题\r\n      if (line.startsWith('### ')) {\r\n        elements.push(<h3 key={`h3-${index}`} className=\"md-h3\">{line.substring(4)}</h3>);\r\n        return;\r\n      } else if (line.startsWith('## ')) {\r\n        elements.push(<h2 key={`h2-${index}`} className=\"md-h2\">{line.substring(3)}</h2>);\r\n        return;\r\n      } else if (line.startsWith('# ')) {\r\n        elements.push(<h1 key={`h1-${index}`} className=\"md-h1\">{line.substring(2)}</h1>);\r\n        return;\r\n      }\r\n\r\n      // 处理粗体\r\n      processedLine = processedLine.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\r\n      processedLine = processedLine.replace(/__(.*?)__/g, '<strong>$1</strong>');\r\n\r\n      // 处理斜体\r\n      processedLine = processedLine.replace(/\\*(.*?)\\*/g, '<em>$1</em>');\r\n      processedLine = processedLine.replace(/_(.*?)_/g, '<em>$1</em>');\r\n\r\n      // 处理代码片段\r\n      processedLine = processedLine.replace(/`(.*?)`/g, '<code class=\"inline-code\">$1</code>');\r\n\r\n      // 处理链接\r\n      processedLine = processedLine.replace(/\\[(.*?)\\]\\((.*?)\\)/g, '<a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"md-link\">$1</a>');\r\n\r\n      // 处理无序列表\r\n      if (line.trim().startsWith('- ') || line.trim().startsWith('* ')) {\r\n        const listItem = line.trim().substring(2);\r\n        elements.push(\r\n          <div key={`li-${index}`} className=\"md-list-item\">\r\n            • {listItem}\r\n          </div>\r\n        );\r\n        return;\r\n      }\r\n\r\n      // 处理有序列表\r\n      const orderedListMatch = line.trim().match(/^(\\d+)\\.\\s+(.*)$/);\r\n      if (orderedListMatch) {\r\n        elements.push(\r\n          <div key={`oli-${index}`} className=\"md-list-item\">\r\n            {orderedListMatch[1]}. {orderedListMatch[2]}\r\n          </div>\r\n        );\r\n        return;\r\n      }\r\n\r\n      // 处理引用块\r\n      if (line.trim().startsWith('> ')) {\r\n        elements.push(\r\n          <blockquote key={`blockquote-${index}`} className=\"md-blockquote\">\r\n            {line.substring(2)}\r\n          </blockquote>\r\n        );\r\n        return;\r\n      }\r\n\r\n      // 普通段落\r\n      elements.push(\r\n        <div \r\n          key={`p-${index}`} \r\n          className=\"md-paragraph\"\r\n          dangerouslySetInnerHTML={{ __html: processedLine }}\r\n        />\r\n      );\r\n    });\r\n\r\n    if (inCodeBlock && codeBlockContent.length > 0) {\r\n      elements.push(\r\n        <pre key=\"code-final\" className=\"code-block\">\r\n          <code className={`language-${codeLanguage}`}>{codeBlockContent.join('\\n')}</code>\r\n        </pre>\r\n      );\r\n    }\r\n\r\n    return <div className=\"markdown-content\">{elements}</div>;\r\n  };\r\n\r\n  const getDifficultyColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#52c41a';\r\n      case 'medium': return '#faad14';\r\n      case 'hard': return '#f5222d';\r\n      default: return '#666';\r\n    }\r\n  };\r\n\r\n  const getDifficultyText = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '简单';\r\n      case 'medium': return '中等';\r\n      case 'hard': return '困难';\r\n      default: return difficulty;\r\n    }\r\n  };\r\n\r\n  const getProficiencyText = (proficiency) => {\r\n    switch (proficiency) {\r\n      case 'beginner': return '初级';\r\n      case 'intermediate': return '中级';\r\n      case 'advanced': return '高级';\r\n      case 'master': return '精通';\r\n      default: return proficiency;\r\n    }\r\n  };\r\n\r\n  const getAppearanceLevelColor = (level) => {\r\n    if (level >= 80) return '#ff6b6b';\r\n    if (level >= 60) return '#ffa726';\r\n    if (level >= 40) return '#4ecdc4';\r\n    return '#95a5a6';\r\n  };\r\n\r\n  const formatText = (text) => {\r\n    return parseMarkdown(text);\r\n  };\r\n\r\n  const formatCode = (code) => {\r\n    if (!code || code.trim() === '') {\r\n      return null;\r\n    }\r\n    return (\r\n      <pre className=\"code-block\">\r\n        <code>{code}</code>\r\n      </pre>\r\n    );\r\n  };\r\n\r\n  // 修改后的编辑处理函数 - 调用父组件的 onEdit\r\n  const handleEdit = () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    \r\n    if (onEdit) {\r\n      // 调用父组件的编辑函数\r\n      onEdit(question);\r\n    } else {\r\n      // 如果没有提供 onEdit，使用原来的内部状态管理\r\n      setIsEditing(true);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    if (deleteLoading) return;\r\n    \r\n    if (!window.confirm(`确定要删除题目 \"${question.title}\" 吗？此操作不可撤销！`)) {\r\n      return;\r\n    }\r\n\r\n    setDeleteLoading(true);\r\n    try {\r\n      await onDelete(question.id);\r\n    } catch (error) {\r\n      console.error('删除题目失败:', error);\r\n    } finally {\r\n      setDeleteLoading(false);\r\n    }\r\n  };\r\n\r\n  // 内部编辑状态的处理函数（如果使用内部状态）\r\n  const handleSave = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const toggleAnswer = () => {\r\n    setShowFullAnswer(!showFullAnswer);\r\n  };\r\n\r\n  // 处理出现频率更改 - 优化版本\r\n  const handleAppearanceLevelChange = async (newLevel) => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    console.log('开始更新出现频率:', {\r\n      新值: newLevel,\r\n      当前prop值: question?.appearanceLevel,\r\n      当前本地状态值: localAppearanceLevel\r\n    });\r\n    \r\n    // 立即更新本地状态（乐观更新）\r\n    setLocalAppearanceLevel(newLevel);\r\n    \r\n    if (onUpdateField && question?.id) {\r\n      setUpdatingAppearance(true);\r\n      try {\r\n        await onUpdateField(question.id, 'appearanceLevel', newLevel);\r\n        console.log('出现频率更新成功，等待父组件数据更新');\r\n        \r\n        // 注意：这里不直接更新本地状态，等待父组件传递新的 question prop\r\n        // 父组件应该在 onUpdateField 成功后更新数据并重新传递 question prop\r\n        \r\n      } catch (error) {\r\n        console.error('更新出现频率失败:', error);\r\n        // 出错时回滚到原来的值\r\n        setLocalAppearanceLevel(question?.appearanceLevel || 50);\r\n      } finally {\r\n        setUpdatingAppearance(false);\r\n      }\r\n    } else {\r\n      console.warn('缺少 onUpdateField 或 question.id');\r\n    }\r\n  };\r\n\r\n  // 防抖的滑块处理函数\r\n  const handleSliderChange = (e) => {\r\n    const newLevel = parseInt(e.target.value);\r\n    handleAppearanceLevelChange(newLevel);\r\n  };\r\n\r\n  // 处理确认复习\r\n  const handleConfirmReview = async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    if (confirmingReview) return;\r\n\r\n    setConfirmingReview(true);\r\n    try {\r\n      // 计算下次提醒时间\r\n      const nextReviewDate = new Date();\r\n      nextReviewDate.setDate(nextReviewDate.getDate() + reviewDays);\r\n      \r\n      // 更新题目的下次复习时间\r\n      if (onUpdateField && question?.id) {\r\n        await onUpdateField(question.id, 'nextReviewDate', nextReviewDate.toISOString());\r\n        console.log(`题目将在 ${reviewDays} 天后再次提醒复习`);\r\n        \r\n        // 显示成功消息\r\n        alert(`已确认复习！该题目将在 ${reviewDays} 天后再次出现在复习列表中`);\r\n        \r\n        // 关闭确认对话框\r\n        setShowReviewConfirm(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('确认复习失败:', error);\r\n      alert('确认复习失败，请重试');\r\n    } finally {\r\n      setConfirmingReview(false);\r\n    }\r\n  };\r\n\r\n  // 处理移除复习\r\n  const handleRemoveFromReview = async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    if (removingReview) return;\r\n\r\n    setRemovingReview(true);\r\n    try {\r\n      // 计算下次提醒时间\r\n      const nextReviewDate = new Date();\r\n      nextReviewDate.setDate(nextReviewDate.getDate() + removeDays);\r\n      \r\n      // 更新题目的下次复习时间\r\n      if (onUpdateField && question?.id) {\r\n        await onUpdateField(question.id, 'nextReviewDate', nextReviewDate.toISOString());\r\n        console.log(`题目将在 ${removeDays} 天后再次提醒复习`);\r\n        \r\n        // 显示成功消息\r\n        alert(`已暂停复习！该题目将在 ${removeDays} 天后再次出现在复习列表中`);\r\n        \r\n        // 关闭确认对话框\r\n        setShowRemoveReview(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('移除复习失败:', error);\r\n      alert('操作失败，请重试');\r\n    } finally {\r\n      setRemovingReview(false);\r\n    }\r\n  };\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className={`question-detail-card ${isExpandedView ? 'expanded-view' : ''}`}>\r\n        <div className=\"auth-required-container\">\r\n          <div className=\"auth-required-icon\">🔐</div>\r\n          <h3>请先登录</h3>\r\n          <p>登录后即可查看题目详情</p>\r\n          <div className=\"auth-required-actions\">\r\n            <button \r\n              onClick={() => window.dispatchEvent(new CustomEvent('showAuthModal'))}\r\n              className=\"login-btn\"\r\n            >\r\n              立即登录\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 如果使用内部编辑状态并且正在编辑\r\n  if (isEditing && !onEdit) {\r\n    return (\r\n      <div className={`question-edit-container ${isExpandedView ? 'expanded-view' : ''}`}>\r\n        <QuestionForm\r\n          question={question}\r\n          onSave={handleSave}\r\n          onCancel={handleCancel}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 安全地获取数据\r\n  const detailedAnswer = question?.detailedAnswer || '';\r\n  const oralAnswer = question?.oralAnswer || '';\r\n  const code = question?.code || '';\r\n  const url = question?.url || '';\r\n  // 使用本地状态而不是直接使用 question.appearanceLevel\r\n  const appearanceLevel = localAppearanceLevel;\r\n\r\n  return (\r\n    <div className={`question-detail-card ${isExpandedView ? 'expanded-view' : ''}`}>\r\n     \r\n      {/* 头部信息 */}\r\n      {!isExpandedView && (\r\n        <div className=\"question-header\">\r\n          <div className=\"question-title-section\">\r\n            <h3 className=\"question-title\">{question?.title || '无标题'}</h3>\r\n            <div className=\"question-meta-badges\">\r\n              <span \r\n                className=\"difficulty-badge\"\r\n                style={{ backgroundColor: getDifficultyColor(question?.difficulty) }}\r\n              >\r\n                {getDifficultyText(question?.difficulty)}\r\n              </span>\r\n              <span className=\"proficiency-badge\">\r\n                {getProficiencyText(question?.proficiency)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"question-actions\">\r\n            <button \r\n              onClick={handleEdit}\r\n              className=\"btn-edit\"\r\n              title=\"编辑题目\"\r\n              disabled={deleteLoading}\r\n            >\r\n              {editLoading ? '编辑中...' : '✏️ 编辑'}\r\n            </button>\r\n\r\n            <button \r\n              onClick={() => setShowRemoveReview(true)}\r\n              className=\"btn-remove-review\"\r\n              title=\"暂时移除复习\"\r\n            >\r\n              ⏸️ 暂停复习\r\n            </button>\r\n            <button \r\n              onClick={handleDelete}\r\n              className=\"btn-delete\"\r\n              title=\"删除题目\"\r\n              disabled={deleteLoading}\r\n            >\r\n              {deleteLoading ? '删除中...' : '🗑️ 删除'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 出现频率显示 - 可编辑 */}\r\n      <div className=\"appearance-level-display\">\r\n        <div className=\"appearance-header\">\r\n          <span className=\"appearance-label\">出现频率</span>\r\n          <span className={`appearance-value ${updatingAppearance ? 'updating' : ''}`}>\r\n            {updatingAppearance ? '保存中...' : `${appearanceLevel}%`}\r\n          </span>\r\n        </div>\r\n        <div className=\"appearance-slider-container\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={appearanceLevel}\r\n            onChange={handleSliderChange}\r\n            className=\"appearance-slider-editable\"\r\n            disabled={updatingAppearance}\r\n            style={{\r\n              background: `linear-gradient(90deg, \r\n                ${getAppearanceLevelColor(0)} 0%, \r\n                ${getAppearanceLevelColor(50)} 50%, \r\n                ${getAppearanceLevelColor(100)} 100%)`\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"appearance-labels\">\r\n          <span className=\"appearance-label-low\">低频</span>\r\n          <span className=\"appearance-label-high\">高频</span>\r\n        </div>\r\n        <div className=\"appearance-hint\">\r\n          拖动滑块调整出现频率，数值越高在复习时出现的概率越大\r\n          {updatingAppearance && <span className=\"saving-indicator\"> • 保存中...</span>}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 答案内容区域 */}\r\n      <div className=\"answer-section\">\r\n        {!isExpandedView && (\r\n          <div className=\"answer-header\">\r\n            <h4>答案</h4>\r\n            <div className=\"answer-controls\">\r\n              <div className=\"answer-tabs\">\r\n                <button \r\n                  className={`tab-button ${activeAnswerTab === 'detailed' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('detailed')}\r\n                >\r\n                  详细版本\r\n                </button>\r\n                <button \r\n                  className={`tab-button ${activeAnswerTab === 'oral' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('oral')}\r\n                >\r\n                  口述版本\r\n                </button>\r\n              </div>\r\n              <button \r\n                onClick={toggleAnswer}\r\n                className=\"toggle-answer-btn\"\r\n              >\r\n                {showFullAnswer ? '收起' : '展开'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 答案内容 */}\r\n        <div className={`answer-content ${showFullAnswer || isExpandedView ? 'expanded' : 'collapsed'}`}>\r\n          {isExpandedView ? (\r\n            <div className=\"expanded-answer-tabs\">\r\n              <div className=\"expanded-tab-buttons\">\r\n                <button \r\n                  className={`expanded-tab-button ${activeAnswerTab === 'detailed' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('detailed')}\r\n                >\r\n                  详细版本\r\n                </button>\r\n                <button \r\n                  className={`expanded-tab-button ${activeAnswerTab === 'oral' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('oral')}\r\n                >\r\n                  口述版本\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"expanded-tab-content\">\r\n                {activeAnswerTab === 'detailed' ? (\r\n                  <div className=\"detailed-answer\">\r\n                    <h5>详细答案</h5>\r\n                    <div className=\"answer-text markdown-enabled\">\r\n                      {formatText(detailedAnswer)}\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"oral-answer\">\r\n                    <h5>口述答案</h5>\r\n                    <div className=\"answer-text markdown-enabled\">\r\n                      {formatText(oralAnswer)}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"answer-text markdown-enabled\">\r\n              {activeAnswerTab === 'detailed' ? formatText(detailedAnswer) : formatText(oralAnswer)}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* 代码部分 */}\r\n        {code && code.trim() && (\r\n          <div className=\"code-section\">\r\n            <h5>相关代码</h5>\r\n            {formatCode(code)}\r\n          </div>\r\n        )}\r\n\r\n        {/* 链接部分 */}\r\n        {url && url.trim() && (\r\n          <div className=\"url-section\">\r\n            <h5>相关链接</h5>\r\n            <a \r\n              href={url} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\"\r\n              className=\"question-link\"\r\n            >\r\n              🔗 {url}\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 确认复习按钮 */}\r\n      <div className=\"review-confirm-section\">\r\n        <button \r\n          className=\"confirm-review-btn\"\r\n          onClick={() => setShowReviewConfirm(true)}\r\n        >\r\n          ✅ 确认已复习\r\n        </button>\r\n        <p className=\"review-hint\">\r\n          点击确认后，该题目将在一段时间内不会出现在复习列表中\r\n        </p>\r\n      </div>\r\n\r\n      {/* 确认复习对话框 */}\r\n      {showReviewConfirm && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content review-confirm-modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>确认复习完成</h3>\r\n              <button \r\n                className=\"close-btn\"\r\n                onClick={() => setShowReviewConfirm(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"modal-body\">\r\n              <p>请选择在多少天内不再提醒复习这道题目：</p>\r\n              \r\n              <div className=\"review-days-selector\">\r\n                <div className=\"days-presets\">\r\n                  {[1, 3, 7, 14, 30].map(days => (\r\n                    <button\r\n                      key={days}\r\n                      className={`days-preset-btn ${reviewDays === days ? 'active' : ''}`}\r\n                      onClick={() => setReviewDays(days)}\r\n                    >\r\n                      {days}天\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                \r\n                <div className=\"custom-days-input\">\r\n                  <label htmlFor=\"customDays\">自定义天数：</label>\r\n                  <input\r\n                    id=\"customDays\"\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"365\"\r\n                    value={reviewDays}\r\n                    onChange={(e) => setReviewDays(parseInt(e.target.value) || 1)}\r\n                    className=\"days-input\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"review-info\">\r\n                <p><strong>题目：</strong>{question?.title}</p>\r\n                <p><strong>下次提醒时间：</strong>\r\n                  {new Date(Date.now() + reviewDays * 24 * 60 * 60 * 1000).toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"modal-actions\">\r\n              <button\r\n                className=\"cancel-btn\"\r\n                onClick={() => setShowReviewConfirm(false)}\r\n                disabled={confirmingReview}\r\n              >\r\n                取消\r\n              </button>\r\n              <button\r\n                className=\"confirm-btn\"\r\n                onClick={handleConfirmReview}\r\n                disabled={confirmingReview}\r\n              >\r\n                {confirmingReview ? '确认中...' : '确认复习'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 移除复习对话框 */}\r\n      {showRemoveReview && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content remove-review-modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>暂停复习提醒</h3>\r\n              <button \r\n                className=\"close-btn\"\r\n                onClick={() => setShowRemoveReview(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"modal-body\">\r\n              <p>选择在多少天内不再提醒复习这道题目：</p>\r\n              \r\n              <div className=\"remove-days-selector\">\r\n                <div className=\"days-presets\">\r\n                  {[1, 3, 7, 14, 30, 90].map(days => (\r\n                    <button\r\n                      key={days}\r\n                      className={`days-preset-btn ${removeDays === days ? 'active' : ''}`}\r\n                      onClick={() => setRemoveDays(days)}\r\n                    >\r\n                      {days}天\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                \r\n                <div className=\"custom-days-input\">\r\n                  <label htmlFor=\"customRemoveDays\">自定义天数：</label>\r\n                  <input\r\n                    id=\"customRemoveDays\"\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"365\"\r\n                    value={removeDays}\r\n                    onChange={(e) => setRemoveDays(parseInt(e.target.value) || 1)}\r\n                    className=\"days-input\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"remove-review-info\">\r\n                <p><strong>题目：</strong>{question?.title}</p>\r\n                <p><strong>下次提醒时间：</strong>\r\n                  {new Date(Date.now() + removeDays * 24 * 60 * 60 * 1000).toLocaleDateString()}\r\n                </p>\r\n                <p className=\"info-text\">\r\n                  💡 在此期间，该题目不会出现在复习列表中\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"modal-actions\">\r\n              <button\r\n                className=\"cancel-btn\"\r\n                onClick={() => setShowRemoveReview(false)}\r\n                disabled={removingReview}\r\n              >\r\n                取消\r\n              </button>\r\n              <button\r\n                className=\"confirm-btn\"\r\n                onClick={handleRemoveFromReview}\r\n                disabled={removingReview}\r\n              >\r\n                {removingReview ? '处理中...' : '确认暂停'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 详细信息 */}\r\n      <div className=\"card-details\">\r\n        {!isExpandedView && (\r\n          <div className=\"category-info\">\r\n            <span className=\"category-label\">所属分类:</span>\r\n            <span className=\"category-name\">{question?.category?.name || '未分类'}</span>\r\n          </div>\r\n        )}\r\n\r\n        {question?.tags && question.tags.length > 0 && (\r\n          <div className=\"tags-section\">\r\n            <h4>标签</h4>\r\n            <div className=\"tags-container\">\r\n              {question.tags.map((tag, index) => (\r\n                <span key={index} className=\"tag\">\r\n                  #{tag}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"time-info\">\r\n          <span className=\"create-time\">\r\n            创建: {question?.createdAt ? new Date(question.createdAt).toLocaleDateString() : '未知'}\r\n          </span>\r\n          <span className=\"update-time\">\r\n            更新: {question?.updatedAt ? new Date(question.updatedAt).toLocaleDateString() : '未知'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 展开视图下的操作按钮 */}\r\n      {isExpandedView && (\r\n        <div className=\"expanded-actions\">\r\n          <button \r\n            onClick={handleEdit}\r\n            className=\"btn-edit primary\"\r\n            disabled={deleteLoading}\r\n          >\r\n            ✏️ 编辑题目\r\n          </button>\r\n          <button \r\n            onClick={() => setShowRemoveReview(true)}\r\n            className=\"btn-remove-review secondary\"\r\n          >\r\n            ⏸️ 暂停复习\r\n          </button>\r\n          <button \r\n            onClick={handleDelete}\r\n            className=\"btn-delete secondary\"\r\n            disabled={deleteLoading}\r\n          >\r\n            🗑️ 删除题目\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* 在虚拟化容器之外渲染编辑表单 - 新增 */}\r\n      {showQuestionForm && editingQuestion && editingQuestion.id === question.id && (\r\n        <div \r\n          className=\"form-modal-overlay\"\r\n          style={{\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            zIndex: 9999,\r\n            padding: '20px'\r\n          }}\r\n        >\r\n          <QuestionForm\r\n            question={editingQuestion}\r\n            onSave={() => {\r\n              setShowQuestionForm(false);\r\n              setEditingQuestion(null);\r\n            }}\r\n            onCancel={() => {\r\n              setShowQuestionForm(false);\r\n              setEditingQuestion(null);\r\n            }}\r\n            defaultCategoryId={question?.category?.id}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionDetailCard;","// pages/CategoryDetailPage.jsx\r\nimport React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useInfiniteQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { useVirtualizer } from '@tanstack/react-virtual';\r\nimport { initAV, getCategoryWithQuestions, getAllCategories, getQuestionsByCategory } from '../services/categoryService';\r\nimport { deleteQuestion, updateQuestion } from '../services/questionService';\r\nimport QuestionDetailCard from '../components/QuestionDetailCard';\r\nimport QuestionForm from '../components/QuestionForm';\r\nimport AV from 'leancloud-storage';\r\nimport './CategoryDetailPage.css';\r\n\r\n// 分页配置\r\nconst PAGE_SIZE = 20; // 每页加载的题目数量\r\n\r\n// 防抖函数\r\nconst debounce = (func, wait) => {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n};\r\n\r\nconst CategoryDetailPage = () => {\r\n  const { categoryId } = useParams();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  \r\n  const [category, setCategory] = useState(null);\r\n  const [allCategories, setAllCategories] = useState([]);\r\n  const [showQuestionForm, setShowQuestionForm] = useState(false);\r\n  const [editingQuestion, setEditingQuestion] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortBy, setSortBy] = useState('createdAt');\r\n  const [expandedQuestions, setExpandedQuestions] = useState(new Set());\r\n  const [viewMode, setViewMode] = useState('accordion');\r\n  const [draggingQuestion, setDraggingQuestion] = useState(null);\r\n  const [dragOverQuestion, setDragOverQuestion] = useState(null);\r\n  const [syncMessage, setSyncMessage] = useState('');\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  const loadMoreTriggerRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n\r\n  // 初始化用户和基础数据\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n    \r\n    if (user) {\r\n      initializeData();\r\n    }\r\n  }, [categoryId]);\r\n\r\n  // 滚动到指定题目的事件监听\r\n  useEffect(() => {\r\n    const handleScrollToQuestion = (event) => {\r\n      const { questionId } = event.detail;\r\n      \r\n      const questionElement = document.querySelector(`[data-question-id=\"${questionId}\"]`);\r\n      if (questionElement) {\r\n        questionElement.scrollIntoView({ \r\n          behavior: 'smooth', \r\n          block: 'center' \r\n        });\r\n        \r\n        questionElement.style.boxShadow = '0 0 0 3px #667eea';\r\n        setTimeout(() => {\r\n          questionElement.style.boxShadow = '';\r\n        }, 2000);\r\n        \r\n        if (!expandedQuestions.has(questionId)) {\r\n          toggleQuestion(questionId);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scrollToQuestion', handleScrollToQuestion);\r\n    \r\n    return () => {\r\n      window.removeEventListener('scrollToQuestion', handleScrollToQuestion);\r\n    };\r\n  }, [expandedQuestions]);\r\n\r\n  // 初始化基础数据\r\n  const initializeData = async () => {\r\n    try {\r\n      initAV();\r\n      \r\n      // 串行执行，避免并发请求\r\n      await loadCategoryInfo();\r\n      await new Promise(resolve => setTimeout(resolve, 300)); // 添加延迟\r\n      await loadAllCategories();\r\n    } catch (error) {\r\n      console.error('初始化失败:', error);\r\n      // 如果是429错误，显示友好提示\r\n      if (error.code === 429 || error.message.includes('Too many requests')) {\r\n        setSyncMessage('请求过于频繁，请稍后重试');\r\n        setTimeout(() => setSyncMessage(''), 5000);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 加载分类信息\r\n  const loadCategoryInfo = async () => {\r\n    try {\r\n      const data = await getCategoryWithQuestions(categoryId);\r\n      setCategory(data.category);\r\n    } catch (error) {\r\n      console.error('加载分类信息失败:', error);\r\n    }\r\n  };\r\n\r\n  // 加载所有分类\r\n  const loadAllCategories = async () => {\r\n    try {\r\n      const categoriesData = await getAllCategories();\r\n      const userCategories = categoriesData.filter(cat => {\r\n        const createdBy = cat.createdBy;\r\n        return createdBy && createdBy.id === currentUser?.id;\r\n      });\r\n      setAllCategories(userCategories);\r\n    } catch (error) {\r\n      console.error('加载所有分类失败:', error);\r\n      // 处理429错误\r\n      if (error.code === 429 || error.message.includes('Too many requests')) {\r\n        setSyncMessage('服务器繁忙，请稍后重试');\r\n        setTimeout(() => setSyncMessage(''), 5000);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // 修复无限滚动查询\r\n  const {\r\n    data,\r\n    fetchNextPage,\r\n    hasNextPage,\r\n    isFetchingNextPage,\r\n    isLoading,\r\n    error,\r\n    refetch\r\n  } = useInfiniteQuery({\r\n    queryKey: ['questions', categoryId, sortBy],\r\n    queryFn: async ({ pageParam = 0 }) => {\r\n      console.log('正在获取第', pageParam + 1, '页数据');\r\n      \r\n      const result = await getQuestionsByCategory(categoryId, {\r\n        page: pageParam,\r\n        pageSize: PAGE_SIZE,\r\n        sortBy,\r\n        sortOrder: 'desc'\r\n      });\r\n      \r\n      console.log('第', pageParam + 1, '页返回数据:', {\r\n        dataLength: result.data?.length,\r\n        hasMore: result.data?.length === PAGE_SIZE,\r\n        total: result.total\r\n      });\r\n      \r\n      return {\r\n        questions: result.data || [],\r\n        total: result.total,\r\n        nextPage: result.data?.length === PAGE_SIZE ? pageParam + 1 : undefined\r\n      };\r\n    },\r\n    getNextPageParam: (lastPage, allPages) => {\r\n      const nextPage = lastPage.nextPage;\r\n      \r\n      return nextPage;\r\n    },\r\n    enabled: !!categoryId && !!currentUser,\r\n    staleTime: 1000 * 60 * 5,\r\n    initialPageParam: 0,\r\n  });\r\n\r\n// 在扁平化所有页面的题目时添加去重\r\nconst allQuestions = useMemo(() => {\r\n  const questions = data?.pages.flatMap(page => page.questions) || [];\r\n  \r\n  // 去重逻辑：基于 question.id\r\n  const uniqueQuestions = questions.reduce((acc, current) => {\r\n    const existing = acc.find(item => item.id === current.id);\r\n    if (!existing) {\r\n      acc.push(current);\r\n    } else {\r\n      console.warn('发现重复题目:', current.id, current.title);\r\n    }\r\n    return acc;\r\n  }, []);\r\n  \r\n  return uniqueQuestions;\r\n}, [data]);\r\n\r\n// 在搜索过滤后的题目中也确保去重\r\nconst filteredQuestions = useMemo(() => {\r\n  if (!searchTerm) return allQuestions;\r\n  \r\n  const filtered = allQuestions.filter(question =>\r\n    question.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    (question.detailedAnswer && question.detailedAnswer.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n    (question.oralAnswer && question.oralAnswer.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n    (question.code && question.code.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n    (question.tags && question.tags.some(tag => \r\n      tag.toLowerCase().includes(searchTerm.toLowerCase())\r\n    ))\r\n  );\r\n  \r\n  // 再次去重确保安全\r\n  const uniqueFiltered = Array.from(new Map(filtered.map(item => [item.id, item])).values());\r\n  \r\n  return uniqueFiltered;\r\n}, [allQuestions, searchTerm]);\r\n\r\n// 在排序后的题目中也确保去重\r\nconst sortedQuestions = useMemo(() => {\r\n  const sorted = [...filteredQuestions].sort((a, b) => {\r\n    switch (sortBy) {\r\n      case 'title':\r\n        return a.title.localeCompare(b.title);\r\n      case 'difficulty':\r\n        const difficultyOrder = { 'easy': 1, 'medium': 2, 'hard': 3 };\r\n        return difficultyOrder[a.difficulty] - difficultyOrder[b.difficulty];\r\n      case 'appearanceLevel':\r\n        return (b.appearanceLevel || 50) - (a.appearanceLevel || 50);\r\n      case 'createdAt':\r\n        return new Date(b.createdAt) - new Date(a.createdAt);\r\n      case 'updatedAt':\r\n        return new Date(b.updatedAt) - new Date(a.createdAt);\r\n      default:\r\n        return (b.appearanceLevel || 50) - (a.appearanceLevel || 50);\r\n    }\r\n  });\r\n  \r\n  // 最终去重检查\r\n  const finalUnique = Array.from(new Map(sorted.map(item => [item.id, item])).values());\r\n  \r\n  return finalUnique;\r\n}, [filteredQuestions, sortBy]);\r\n  // React Virtual 虚拟化配置\r\n  const virtualizer = useVirtualizer({\r\n    count: sortedQuestions.length,\r\n    getScrollElement: () => containerRef.current,\r\n    estimateSize: () => viewMode === 'grid' ? 200 : 120,\r\n    overscan: 10,\r\n  });\r\n\r\n  // 修复：改进的滚动加载逻辑\r\n  const handleScroll = useCallback(() => {\r\n    const container = containerRef.current;\r\n    if (!container || !hasNextPage || isFetchingNextPage) {\r\n      return;\r\n    }\r\n\r\n    const { scrollTop, scrollHeight, clientHeight } = container;\r\n    const scrollThreshold = 100;\r\n    const distanceFromBottom = scrollHeight - scrollTop - clientHeight;\r\n    \r\n    console.log('滚动检查:', {\r\n      distanceFromBottom,\r\n      shouldLoad: distanceFromBottom < scrollThreshold,\r\n      hasNextPage,\r\n      isFetchingNextPage\r\n    });\r\n    \r\n    if (distanceFromBottom < scrollThreshold) {\r\n      console.log('🎯 触发加载更多！当前页数:', data?.pages?.length || 0);\r\n      fetchNextPage();\r\n    }\r\n  }, [hasNextPage, isFetchingNextPage, fetchNextPage, data]);\r\n\r\n  // 修复：确保滚动监听正确绑定\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n    if (!container) {\r\n      console.log('❌ 未找到滚动容器');\r\n      return;\r\n    }\r\n\r\n    console.log('✅ 绑定滚动监听器');\r\n    const debouncedScroll = debounce(handleScroll, 50);\r\n    \r\n    container.addEventListener('scroll', debouncedScroll);\r\n    \r\n    return () => {\r\n      container.removeEventListener('scroll', debouncedScroll);\r\n    };\r\n  }, [handleScroll]);\r\n\r\n  // 修复：改进的 Intersection Observer\r\n  useEffect(() => {\r\n    if (!loadMoreTriggerRef.current || !hasNextPage || isFetchingNextPage) {\r\n      return;\r\n    }\r\n\r\n    console.log('🔍 设置 Intersection Observer');\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          console.log('🎯 Intersection Observer 触发加载更多！');\r\n          fetchNextPage();\r\n        }\r\n      },\r\n      { \r\n        threshold: 0.1,\r\n        root: containerRef.current,\r\n        rootMargin: '100px'\r\n      }\r\n    );\r\n\r\n    observer.observe(loadMoreTriggerRef.current);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [hasNextPage, isFetchingNextPage, fetchNextPage, sortedQuestions.length]);\r\n\r\n  // 修复：手动测试加载更多的函数\r\n  const handleManualLoadMore = () => {\r\n    console.log('🔄 手动触发加载更多');\r\n    fetchNextPage();\r\n  };\r\n\r\n  // 删除题目 mutation\r\n  const deleteQuestionMutation = useMutation({\r\n    mutationFn: deleteQuestion,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['questions', categoryId]);\r\n      setSyncMessage('题目删除成功');\r\n      setTimeout(() => setSyncMessage(''), 3000);\r\n    },\r\n    onError: (error) => {\r\n      console.error('删除题目失败:', error);\r\n      alert('删除失败: ' + error.message);\r\n    }\r\n  });\r\n\r\n  // 更新题目 mutation\r\n  const updateQuestionMutation = useMutation({\r\n    mutationFn: ({ questionId, data }) => updateQuestion(questionId, data),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['questions', categoryId]);\r\n    },\r\n    onError: (error) => {\r\n      console.error('更新题目失败:', error);\r\n      throw new Error('更新失败: ' + error.message);\r\n    }\r\n  });\r\n\r\n  // 处理题目类别变化\r\n  const handleQuestionCategoryChange = ({ questionId, oldCategoryId, newCategoryId, question }) => {\r\n    const currentCategory = category;\r\n    \r\n    if (oldCategoryId === currentCategory.id) {\r\n      queryClient.invalidateQueries(['questions', categoryId]);\r\n      \r\n      setExpandedQuestions(prev => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(questionId);\r\n        return newSet;\r\n      });\r\n      \r\n      const newCategory = allCategories.find(cat => cat.id === newCategoryId);\r\n      setSyncMessage(`题目已移动到分类: ${newCategory?.name || '其他分类'}`);\r\n      setTimeout(() => setSyncMessage(''), 3000);\r\n    }\r\n  };\r\n\r\n  const toggleQuestion = (questionId) => {\r\n    setExpandedQuestions(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(questionId)) {\r\n        newSet.delete(questionId);\r\n      } else {\r\n        newSet.add(questionId);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const expandAllQuestions = () => {\r\n    const allQuestionIds = new Set(sortedQuestions.map(q => q.id));\r\n    setExpandedQuestions(allQuestionIds);\r\n  };\r\n\r\n  const collapseAllQuestions = () => {\r\n    setExpandedQuestions(new Set());\r\n  };\r\n\r\n  const handleAddQuestion = () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    setEditingQuestion(null);\r\n    setShowQuestionForm(true);\r\n  };\r\n\r\n  const handleEditQuestion = (question) => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    setEditingQuestion(question);\r\n    setShowQuestionForm(true);\r\n  };\r\n\r\n  const handleDeleteQuestion = async (questionId) => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    const questionToDelete = sortedQuestions.find(q => q.id === questionId);\r\n    if (!questionToDelete) {\r\n      throw new Error('未找到要删除的题目');\r\n    }\r\n\r\n    const confirmMessage = `确定要删除题目 \"${questionToDelete.title}\" 吗？此操作不可撤销！`;\r\n    if (!window.confirm(confirmMessage)) {\r\n      return;\r\n    }\r\n\r\n    deleteQuestionMutation.mutate(questionId);\r\n    \r\n    setExpandedQuestions(prev => {\r\n      const newSet = new Set(prev);\r\n      newSet.delete(questionId);\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const handleUpdateQuestionField = async (questionId, field, value) => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await updateQuestionMutation.mutateAsync({\r\n        questionId,\r\n        data: { [field]: value }\r\n      });\r\n    } catch (error) {\r\n      console.error('更新题目字段失败:', error);\r\n      throw new Error('更新失败: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    refetch();\r\n  };\r\n\r\n  // 拖拽相关函数\r\n  const handleDragStart = (e, questionId) => {\r\n    if (expandedQuestions.size > 0) return;\r\n    \r\n    setDraggingQuestion(questionId);\r\n    e.dataTransfer.effectAllowed = 'move';\r\n    e.dataTransfer.setData('text/plain', questionId);\r\n    \r\n    e.currentTarget.style.opacity = '0.4';\r\n  };\r\n\r\n  const handleDragOver = (e, questionId) => {\r\n    if (expandedQuestions.size > 0 || !draggingQuestion) return;\r\n    \r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = 'move';\r\n    setDragOverQuestion(questionId);\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    setDragOverQuestion(null);\r\n  };\r\n\r\n  const handleDrop = async (e, targetQuestionId) => {\r\n    if (expandedQuestions.size > 0 || !draggingQuestion) return;\r\n    \r\n    e.preventDefault();\r\n    \r\n    if (draggingQuestion !== targetQuestionId) {\r\n      const fromIndex = sortedQuestions.findIndex(q => q.id === draggingQuestion);\r\n      const toIndex = sortedQuestions.findIndex(q => q.id === targetQuestionId);\r\n      \r\n      const newQuestions = [...sortedQuestions];\r\n      const [movedQuestion] = newQuestions.splice(fromIndex, 1);\r\n      newQuestions.splice(toIndex, 0, movedQuestion);\r\n      \r\n      try {\r\n        await updateQuestionMutation.mutateAsync({\r\n          questionId: movedQuestion.id,\r\n          data: { appearanceLevel: movedQuestion.appearanceLevel }\r\n        });\r\n        console.log('排序保存成功');\r\n      } catch (error) {\r\n        console.error('保存排序失败:', error);\r\n        refetch();\r\n      }\r\n    }\r\n    \r\n    setDraggingQuestion(null);\r\n    setDragOverQuestion(null);\r\n  };\r\n\r\n  const handleDragEnd = (e) => {\r\n    setDraggingQuestion(null);\r\n    setDragOverQuestion(null);\r\n    e.currentTarget.style.opacity = '1';\r\n  };\r\n\r\n  // 调试信息\r\n  useEffect(() => {\r\n    console.log('分页状态:', {\r\n      hasNextPage,\r\n      isFetchingNextPage,\r\n      totalQuestions: allQuestions.length,\r\n      pages: data?.pages?.length || 0\r\n    });\r\n  }, [hasNextPage, isFetchingNextPage, allQuestions.length, data]);\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"category-detail-page\">\r\n        <div className=\"auth-required-container\">\r\n          <div className=\"auth-required-icon\">🔐</div>\r\n          <h2>请先登录</h2>\r\n          <p>登录后即可查看和管理题目</p>\r\n          <div className=\"auth-required-actions\">\r\n            <button \r\n              onClick={() => window.dispatchEvent(new CustomEvent('showAuthModal'))}\r\n              className=\"login-btn\"\r\n            >\r\n              立即登录\r\n            </button>\r\n            <button onClick={handleBack} className=\"btn-back\">\r\n              返回首页\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading && !category) {\r\n    return (\r\n      <div className=\"category-detail-page\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载题目中...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  if (error && !category) {\r\n    return (\r\n      <div className=\"category-detail-page\">\r\n        <div className=\"error-container\">\r\n          <div className=\"error-icon\">⚠️</div>\r\n          <h2>加载失败</h2>\r\n          <p>{error.message}</p>\r\n          <div className=\"error-actions\">\r\n            <button onClick={handleRetry} className=\"btn-retry\">\r\n              重新加载\r\n            </button>\r\n            <button onClick={handleBack} className=\"btn-back\">\r\n              返回首页\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!category) {\r\n    return (\r\n      <div className=\"category-detail-page\">\r\n        <div className=\"error-container\">\r\n          <div className=\"error-icon\">📁</div>\r\n          <h2>分类不存在</h2>\r\n          <p>未找到指定的分类，可能已被删除</p>\r\n          <button onClick={handleBack} className=\"btn-back\">\r\n            返回首页\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"category-detail-page\">\r\n      {/* 现代化头部 */}\r\n      <header className=\"modern-header\">\r\n        <div className=\"container\">\r\n          <div className=\"header-content\">\r\n            <button onClick={handleBack} className=\"back-button\">\r\n              <span className=\"back-icon\">←</span>\r\n              返回知识库\r\n            </button>\r\n            <div className=\"category-hero\">\r\n              <div className=\"category-badge\">\r\n                <span className=\"category-emoji\">📚</span>\r\n                <span className=\"category-name\">{category.name}</span>\r\n              </div>\r\n              <div className=\"user-welcome\">\r\n                <span className=\"welcome-text\">欢迎, {currentUser.getUsername()}!</span>\r\n              </div>\r\n              <div className=\"hero-stats\">\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-number\">{category.questionCount}</span>\r\n                  <span className=\"stat-label\">总题目</span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-number\">{allQuestions.length}</span>\r\n                  <span className=\"stat-label\">已加载</span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-number\">{expandedQuestions.size}</span>\r\n                  <span className=\"stat-label\">已展开</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* 同步消息提示 */}\r\n      {syncMessage && (\r\n        <div className=\"sync-message\">\r\n          {syncMessage}\r\n        </div>\r\n      )}\r\n\r\n      {/* 控制面板 */}\r\n      <section className=\"control-panel\">\r\n        <div className=\"container\">\r\n          <div className=\"panel-grid\">\r\n            {/* 搜索区域 */}\r\n            <div className=\"search-panel\">\r\n              <div className=\"search-wrapper\">\r\n                <div className=\"search-icon\">🔍</div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"搜索题目、答案或标签...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"modern-search\"\r\n                  style={{ color: '#333', backgroundColor: '#fff' }}\r\n                />\r\n                {searchTerm && (\r\n                  <button \r\n                    onClick={() => setSearchTerm('')}\r\n                    className=\"clear-search\"\r\n                  >\r\n                    ✕\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* 控制区域 */}\r\n            <div className=\"controls-panel\">\r\n              <div className=\"controls-group\">\r\n                <label>排序方式</label>\r\n                <select \r\n                  value={sortBy}\r\n                  onChange={(e) => setSortBy(e.target.value)}\r\n                  className=\"modern-select\"\r\n                  style={{ color: '#333', backgroundColor: '#fff' }}\r\n                >\r\n                  <option value=\"appearanceLevel\">出现频率</option>\r\n                  <option value=\"updatedAt\">最近更新</option>\r\n                  <option value=\"createdAt\">创建时间</option>\r\n                  <option value=\"title\">标题顺序</option>\r\n                  <option value=\"difficulty\">难度等级</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"controls-group\">\r\n                <label>批量操作</label>\r\n                <div className=\"batch-actions\">\r\n                  <button \r\n                    onClick={expandAllQuestions}\r\n                    className=\"action-btn expand-btn\"\r\n                    disabled={sortedQuestions.length === 0}\r\n                  >\r\n                    📖 展开全部\r\n                  </button>\r\n                  <button \r\n                    onClick={collapseAllQuestions}\r\n                    className=\"action-btn collapse-btn\"\r\n                    disabled={expandedQuestions.size === 0}\r\n                  >\r\n                    📕 折叠全部\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <button \r\n                className=\"add-question-btn primary\"\r\n                onClick={handleAddQuestion}\r\n              >\r\n                <span className=\"btn-icon\">+</span>\r\n                添加题目\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 调试控制面板 */}\r\n          <div className=\"debug-controls\" style={{ marginTop: '10px', padding: '10px', background: '#f0f0f0', borderRadius: '4px' }}>\r\n            <button \r\n              onClick={handleManualLoadMore}\r\n              disabled={!hasNextPage || isFetchingNextPage}\r\n              style={{ \r\n                padding: '5px 10px', \r\n                fontSize: '12px',\r\n                background: hasNextPage ? '#1890ff' : '#ccc',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '3px'\r\n              }}\r\n            >\r\n              {isFetchingNextPage ? '加载中...' : hasNextPage ? '手动加载更多' : '已无更多'}\r\n            </button>\r\n            <span style={{ marginLeft: '10px', fontSize: '12px', color: '#666' }}>\r\n              状态: {hasNextPage ? `有更多 (${allQuestions.length}/?)` : '已加载全部'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* 内容区域 */}\r\n      <section className=\"content-section\">\r\n        <div className=\"container\">\r\n          {sortedQuestions.length === 0 ? (\r\n            <div className=\"modern-empty\">\r\n              <div className=\"empty-illustration\">\r\n                {searchTerm ? '🔍' : '📝'}\r\n              </div>\r\n              <h3>{searchTerm ? '没有找到匹配的题目' : '此分类下暂无题目'}</h3>\r\n              <p>\r\n                {searchTerm \r\n                  ? `尝试调整搜索条件或清除搜索框来查看所有题目`\r\n                  : '点击\"添加题目\"按钮创建第一个题目，开始你的学习之旅'\r\n                }\r\n              </p>\r\n              {searchTerm ? (\r\n                <button \r\n                  onClick={() => setSearchTerm('')}\r\n                  className=\"clear-search-btn\"\r\n                >\r\n                  清除搜索条件\r\n                </button>\r\n              ) : (\r\n                <button \r\n                  onClick={handleAddQuestion}\r\n                  className=\"add-first-btn\"\r\n                >\r\n                  🚀 创建第一个题目\r\n                </button>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* 统计信息 */}\r\n              <div className=\"results-stats\">\r\n                <span className=\"results-count\">\r\n                  找到 {sortedQuestions.length} 个题目\r\n                  {searchTerm && <span>（搜索关键词: \"{searchTerm}\"）</span>}\r\n                  {hasNextPage && <span> - 滚动加载更多</span>}\r\n                </span>\r\n                <span className=\"expand-count\">\r\n                  {expandedQuestions.size} / {sortedQuestions.length} 已展开\r\n                </span>\r\n                {expandedQuestions.size === 0 && (\r\n                  <span className=\"drag-hint\">\r\n                    🎯 提示: 可以拖拽题目调整顺序\r\n                  </span>\r\n                )}\r\n              </div>\r\n\r\n              {/* 调试信息 */}\r\n              <div className=\"debug-info\" style={{ fontSize: '12px', color: '#666', padding: '8px', background: '#f5f5f5', borderRadius: '4px', marginBottom: '10px' }}>\r\n                分页状态: 已加载 {allQuestions.length} 题, 还有更多: {hasNextPage ? '是' : '否'}, 正在加载: {isFetchingNextPage ? '是' : '否'}\r\n              </div>\r\n\r\n              {/* 虚拟化题目列表 */}\r\n              <div \r\n                ref={containerRef}\r\n                className={`questions-container ${viewMode}`}\r\n                style={{ \r\n                  height: 'calc(100vh - 400px)',\r\n                  overflow: 'auto',\r\n                  position: 'relative',\r\n                  border: '1px solid #e1e5e9',\r\n                  borderRadius: '8px'\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    height: `${virtualizer.getTotalSize()}px`,\r\n                    width: '100%',\r\n                    position: 'relative',\r\n                  }}\r\n                >\r\n                  {virtualizer.getVirtualItems().map((virtualItem) => {\r\n                    const question = sortedQuestions[virtualItem.index];\r\n                    \r\n                    return (\r\n                      <div\r\n                        key={question.id}\r\n                        data-index={virtualItem.index}\r\n                        ref={virtualizer.measureElement}\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          top: 0,\r\n                          left: 0,\r\n                          width: \"100%\",\r\n                          transform: `translateY(${virtualItem.start}px)`,\r\n                        }}\r\n                      >\r\n                        <QuestionAccordion\r\n                          question={question}\r\n                          index={virtualItem.index}\r\n                          isExpanded={expandedQuestions.has(question.id)}\r\n                          onToggle={() => toggleQuestion(question.id)}\r\n                          onDelete={handleDeleteQuestion}\r\n                          onEdit={handleEditQuestion}\r\n                          onUpdateField={handleUpdateQuestionField}\r\n                          viewMode={viewMode}\r\n                          isDragging={draggingQuestion === question.id}\r\n                          isDragOver={dragOverQuestion === question.id}\r\n                          onDragStart={(e) => handleDragStart(e, question.id)}\r\n                          onDragOver={(e) => handleDragOver(e, question.id)}\r\n                          onDragLeave={handleDragLeave}\r\n                          onDrop={(e) => handleDrop(e, question.id)}\r\n                          onDragEnd={handleDragEnd}\r\n                          canDrag={expandedQuestions.size === 0}\r\n                          showQuestionForm={showQuestionForm}\r\n                          setShowQuestionForm={setShowQuestionForm}\r\n                          editingQuestion={editingQuestion}\r\n                          setEditingQuestion={setEditingQuestion}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n\r\n                {/* 加载更多触发元素 */}\r\n                {hasNextPage && (\r\n                  <div\r\n                    ref={loadMoreTriggerRef}\r\n                    style={{\r\n                      height: '60px',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      position: 'relative',\r\n                      background: 'transparent'\r\n                    }}\r\n                  >\r\n                    {isFetchingNextPage ? (\r\n                      <div className=\"loading-more\">\r\n                        <div className=\"modern-spinner small\"></div>\r\n                        <span>加载更多题目...</span>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"load-more-trigger\" style={{ padding: '10px', color: '#666' }}>\r\n                        <span>↓ 继续滚动加载更多</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                {!hasNextPage && allQuestions.length > 0 && (\r\n                  <div style={{ \r\n                    textAlign: 'center', \r\n                    padding: '20px', \r\n                    color: '#999',\r\n                    fontStyle: 'italic'\r\n                  }}>\r\n                    已加载全部 {allQuestions.length} 个题目\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </section>\r\n\r\n      {/* 在虚拟化容器之外渲染编辑表单 */}\r\n      {showQuestionForm && (\r\n        <div \r\n          className=\"form-modal-overlay\"\r\n          style={{\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            zIndex: 9999,\r\n            padding: '20px'\r\n          }}\r\n        >\r\n          <QuestionForm\r\n            question={editingQuestion}\r\n            onSave={() => {\r\n              setShowQuestionForm(false);\r\n              setEditingQuestion(null);\r\n              queryClient.invalidateQueries(['questions', categoryId]);\r\n            }}\r\n            onCancel={() => {\r\n              setShowQuestionForm(false);\r\n              setEditingQuestion(null);\r\n            }}\r\n            defaultCategoryId={categoryId}\r\n            onCategoryChange={handleQuestionCategoryChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// QuestionAccordion 组件保持不变\r\nconst QuestionAccordion = ({ \r\n  question, \r\n  index, \r\n  isExpanded, \r\n  onToggle, \r\n  onDelete,\r\n  onEdit,\r\n  onUpdateField,\r\n  viewMode,\r\n  isDragging,\r\n  isDragOver,\r\n  onDragStart,\r\n  onDragOver,\r\n  onDragLeave,\r\n  onDrop,\r\n  onDragEnd,\r\n  canDrag,\r\n  showQuestionForm,\r\n  setShowQuestionForm,\r\n  editingQuestion,\r\n  setEditingQuestion\r\n}) => {\r\n  const getDifficultyColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#52c41a';\r\n      case 'medium': return '#faad14';\r\n      case 'hard': return '#f5222d';\r\n      default: return '#666';\r\n    }\r\n  };\r\n\r\n  const getDifficultyBorderColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#b7eb8f';\r\n      case 'medium': return '#ffe58f';\r\n      case 'hard': return '#ffa39e';\r\n      default: return '#d9d9d9';\r\n    }\r\n  };\r\n\r\n  const getDifficultyBackgroundColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#f6ffed';\r\n      case 'medium': return '#fffbe6';\r\n      case 'hard': return '#fff2f0';\r\n      default: return '#fafafa';\r\n    }\r\n  };\r\n\r\n  const getDifficultyText = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '简单';\r\n      case 'medium': return '中等';\r\n      case 'hard': return '困难';\r\n      default: return difficulty;\r\n    }\r\n  };\r\n\r\n  const getProficiencyColor = (proficiency) => {\r\n    switch (proficiency) {\r\n      case 'beginner': return '#ff6b6b';\r\n      case 'intermediate': return '#4ecdc4';\r\n      case 'advanced': return '#45b7d1';\r\n      case 'master': return '#96ceb4';\r\n      default: return '#95a5a6';\r\n    }\r\n  };\r\n\r\n  const getProficiencyIcon = (proficiency) => {\r\n    switch (proficiency) {\r\n      case 'beginner': return '🎀';\r\n      case 'intermediate': return '🎗️';\r\n      case 'advanced': return '🏅';\r\n      case 'master': return '👑';\r\n      default: return '🎯';\r\n    }\r\n  };\r\n\r\n  const getProficiencyText = (proficiency) => {\r\n    switch (proficiency) {\r\n      case 'beginner': return '初级';\r\n      case 'intermediate': return '中级';\r\n      case 'advanced': return '高级';\r\n      case 'master': return '精通';\r\n      default: return proficiency;\r\n    }\r\n  };\r\n\r\n  const getAppearanceLevelColor = (level) => {\r\n    if (level >= 80) return '#ff6b6b';\r\n    if (level >= 60) return '#ffa726';\r\n    if (level >= 40) return '#4ecdc4';\r\n    return '#95a5a6';\r\n  };\r\n\r\n  const formatTime = (date) => {\r\n    return new Date(date).toLocaleDateString('zh-CN', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  // 获取答案预览文本\r\n  const getAnswerPreview = () => {\r\n    const answerText = question.oralAnswer || question.detailedAnswer;\r\n    if (!answerText) {\r\n      return '暂无答案内容';\r\n    }\r\n    return answerText.substring(0, 150) + (answerText.length > 150 ? '...' : '');\r\n  };\r\n\r\n  // 如果已经展开，显示扩展视图\r\n  if (isExpanded) {\r\n    return (\r\n      <div className=\"expanded-question-view\" data-question-id={question.id}>\r\n        <div className=\"expanded-header\">\r\n          <button onClick={onToggle} className=\"back-to-list-btn\">\r\n            <span className=\"back-icon\">←</span>\r\n            返回列表\r\n          </button>\r\n          <div className=\"expanded-title\">\r\n            <span className=\"question-index\">#{index + 1}</span>\r\n            <h3>{question.title}</h3>\r\n          </div>\r\n          <div className=\"expanded-actions\">\r\n            <button \r\n              onClick={() => onEdit(question)}\r\n              className=\"btn-edit\"\r\n            >\r\n              ✏️ 编辑\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"expanded-content\">\r\n          <QuestionDetailCard\r\n            question={question}\r\n            onDelete={onDelete}\r\n            onUpdateField={onUpdateField}\r\n            isExpandedView={true}\r\n            onEdit={onEdit}\r\n            showQuestionForm={showQuestionForm}\r\n            setShowQuestionForm={setShowQuestionForm}\r\n            editingQuestion={editingQuestion}\r\n            setEditingQuestion={setEditingQuestion}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 折叠状态下的显示\r\n  if (viewMode === 'grid') {\r\n    return (\r\n      <div \r\n        className={`question-grid-card ${isDragging ? 'dragging' : ''} ${isDragOver ? 'drag-over' : ''}`}\r\n        onClick={onToggle}\r\n        draggable={canDrag}\r\n        onDragStart={onDragStart}\r\n        onDragOver={onDragOver}\r\n        onDragLeave={onDragLeave}\r\n        onDrop={onDrop}\r\n        onDragEnd={onDragEnd}\r\n        data-question-id={question.id}\r\n        style={{\r\n          borderLeft: `4px solid ${getDifficultyColor(question.difficulty)}`,\r\n          backgroundColor: getDifficultyBackgroundColor(question.difficulty),\r\n          border: `1px solid ${getDifficultyBorderColor(question.difficulty)}`\r\n        }}\r\n      >\r\n        {/* 掌握程度蝴蝶结标识 */}\r\n        <div \r\n          className=\"proficiency-ribbon\"\r\n          style={{ backgroundColor: getProficiencyColor(question.proficiency) }}\r\n        >\r\n          <span className=\"ribbon-icon\">{getProficiencyIcon(question.proficiency)}</span>\r\n          <span className=\"ribbon-text\">{getProficiencyText(question.proficiency)}</span>\r\n        </div>\r\n\r\n        <div className=\"grid-header\">\r\n          <span className=\"question-index\">#{index + 1}</span>\r\n          <span \r\n            className=\"difficulty-tag\"\r\n            style={{ backgroundColor: getDifficultyColor(question.difficulty) }}\r\n          >\r\n            {getDifficultyText(question.difficulty)}\r\n          </span>\r\n        </div>\r\n        <h4 className=\"grid-title\">{question.title}</h4>\r\n        \r\n        {/* 出现频率指示器 */}\r\n        <div className=\"appearance-level-indicator\">\r\n          <div \r\n            className=\"appearance-bar\"\r\n            style={{ \r\n              width: `${question.appearanceLevel || 50}%`,\r\n              backgroundColor: getAppearanceLevelColor(question.appearanceLevel || 50)\r\n            }}\r\n          ></div>\r\n          <span className=\"appearance-text\">{question.appearanceLevel || 50}%</span>\r\n        </div>\r\n\r\n        <div className=\"grid-meta\">\r\n          <span className=\"update-time\">更新: {formatTime(question.updatedAt)}</span>\r\n        </div>\r\n        <div className=\"grid-preview\">\r\n          <div className=\"preview-content\">\r\n            {getAnswerPreview()}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 拖拽手柄 */}\r\n        {canDrag && <div className=\"drag-handle\">⋮⋮</div>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 列表视图下的折叠状态\r\n  return (\r\n    <div \r\n      className={`modern-accordion ${isExpanded ? 'expanded' : ''} ${isDragging ? 'dragging' : ''} ${isDragOver ? 'drag-over' : ''}`}\r\n      draggable={canDrag}\r\n      onDragStart={onDragStart}\r\n      onDragOver={onDragOver}\r\n      onDragLeave={onDragLeave}\r\n      onDrop={onDrop}\r\n      onDragEnd={onDragEnd}\r\n      data-question-id={question.id}\r\n      style={{\r\n        borderLeft: `4px solid ${getDifficultyColor(question.difficulty)}`,\r\n        backgroundColor: getDifficultyBackgroundColor(question.difficulty),\r\n        border: `1px solid ${getDifficultyBorderColor(question.difficulty)}`\r\n      }}\r\n    >\r\n      {/* 掌握程度蝴蝶结标识 */}\r\n      <div \r\n        className=\"proficiency-ribbon\"\r\n        style={{ backgroundColor: getProficiencyColor(question.proficiency) }}\r\n      >\r\n        <span className=\"ribbon-icon\">{getProficiencyIcon(question.proficiency)}</span>\r\n        <span className=\"ribbon-text\">{getProficiencyText(question.proficiency)}</span>\r\n      </div>\r\n\r\n      <div className=\"accordion-header\" onClick={onToggle}>\r\n        <div className=\"header-main\">\r\n          <div className=\"question-meta\">\r\n            <span className=\"question-index\">#{index + 1}</span>\r\n            <span \r\n              className=\"difficulty-badge\"\r\n              style={{ backgroundColor: getDifficultyColor(question.difficulty) }}\r\n            >\r\n              {getDifficultyText(question.difficulty)}\r\n            </span>\r\n            <span className=\"appearance-badge\">\r\n              📊 {question.appearanceLevel || 50}%\r\n            </span>\r\n            <span className=\"time-badge\">\r\n              ⏱️ {formatTime(question.updatedAt)}\r\n            </span>\r\n          </div>\r\n          <h3 className=\"question-title\">{question.title}</h3>\r\n          <div className=\"question-preview\">\r\n            {getAnswerPreview()}\r\n          </div>\r\n        </div>\r\n        <div className=\"header-actions\">\r\n          {/* 拖拽手柄 */}\r\n          {canDrag && (\r\n            <div \r\n              className=\"drag-handle\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              ⋮⋮\r\n            </div>\r\n          )}\r\n          <span className=\"accordion-icon\">\r\n            {isExpanded ? '▼' : '►'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryDetailPage;","// services/userService.js\r\nimport AV from 'leancloud-storage';\r\n\r\nexport const UserService = {\r\n  /**\r\n   * 用户注册\r\n   */\r\n  register: async (username, password, email) => {\r\n    try {\r\n      const user = new AV.User();\r\n      user.setUsername(username);\r\n      user.setPassword(password);\r\n      user.setEmail(email);\r\n      \r\n      const result = await user.signUp();\r\n      console.log('注册成功:', result);\r\n      return result;\r\n    } catch (error) {\r\n      console.error('注册失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 用户登录\r\n   */\r\n  login: async (username, password) => {\r\n    try {\r\n      const result = await AV.User.logIn(username, password);\r\n      console.log('登录成功:', result);\r\n      return result;\r\n    } catch (error) {\r\n      console.error('登录失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 用户退出\r\n   */\r\n  logout: async () => {\r\n    try {\r\n      await AV.User.logOut();\r\n      console.log('退出成功');\r\n    } catch (error) {\r\n      console.error('退出失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 获取当前用户\r\n   */\r\n  getCurrentUser: () => {\r\n    return AV.User.current();\r\n  },\r\n\r\n  /**\r\n   * 检查登录状态\r\n   */\r\n  isLoggedIn: () => {\r\n    return !!AV.User.current();\r\n  },\r\n\r\n  /**\r\n   * 更新用户信息\r\n   */\r\n  updateProfile: async (updates) => {\r\n    try {\r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n\r\n      Object.keys(updates).forEach(key => {\r\n        currentUser.set(key, updates[key]);\r\n      });\r\n\r\n      await currentUser.save();\r\n      return currentUser;\r\n    } catch (error) {\r\n      console.error('更新用户信息失败:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};","// components/UserTestPanel.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { UserService } from '../services/userService';\r\nimport { createCategory } from '../services/categoryService';\r\nimport { createQuestion } from '../services/questionService';\r\nimport './UserTestPanel.css';\r\n\r\nconst UserTestPanel = () => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [testData, setTestData] = useState({\r\n    register: { username: '', password: '', email: '', nickname: '' },\r\n    login: { username: '', password: '' },\r\n    category: { name: '', description: '' },\r\n    question: { title: '', detailedAnswer: '', categoryId: '' }\r\n  });\r\n\r\n  // 检查当前登录状态\r\n  useEffect(() => {\r\n    checkCurrentUser();\r\n  }, []);\r\n\r\n  const checkCurrentUser = () => {\r\n    const user = UserService.getCurrentUser();\r\n    setCurrentUser(user);\r\n    console.log('当前用户:', user);\r\n  };\r\n\r\n  // 用户注册\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await UserService.register(testData.register);\r\n      setMessage(`✅ 注册成功！用户ID: ${result.id}`);\r\n      setCurrentUser(result);\r\n      \r\n      // 清空表单\r\n      setTestData(prev => ({\r\n        ...prev,\r\n        register: { username: '', password: '', email: '', nickname: '' }\r\n      }));\r\n    } catch (error) {\r\n      setMessage(`❌ 注册失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 用户登录\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await UserService.login(testData.login.username, testData.login.password);\r\n      setMessage(`✅ 登录成功！欢迎 ${result.username}`);\r\n      setCurrentUser(result);\r\n      \r\n      // 清空表单\r\n      setTestData(prev => ({\r\n        ...prev,\r\n        login: { username: '', password: '' }\r\n      }));\r\n    } catch (error) {\r\n      setMessage(`❌ 登录失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 用户登出\r\n  const handleLogout = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await UserService.logout();\r\n      setMessage('✅ 已退出登录');\r\n      setCurrentUser(null);\r\n    } catch (error) {\r\n      setMessage(`❌ 登出失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 创建测试分类\r\n  const handleCreateCategory = async (e) => {\r\n    e.preventDefault();\r\n    if (!currentUser) {\r\n      setMessage('❌ 请先登录');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const result = await createCategory(testData.category);\r\n      setMessage(`✅ 分类创建成功！ID: ${result.id}`);\r\n      \r\n      // 保存分类ID用于创建题目\r\n      setTestData(prev => ({\r\n        ...prev,\r\n        question: { ...prev.question, categoryId: result.id },\r\n        category: { name: '', description: '' }\r\n      }));\r\n    } catch (error) {\r\n      setMessage(`❌ 创建分类失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 创建测试题目\r\n  const handleCreateQuestion = async (e) => {\r\n    e.preventDefault();\r\n    if (!currentUser) {\r\n      setMessage('❌ 请先登录');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const result = await createQuestion({\r\n        ...testData.question,\r\n        categoryId: testData.question.categoryId,\r\n        oralAnswer: '这是口述版本的答案',\r\n        tags: ['测试', '示例'],\r\n        difficulty: 'medium',\r\n        proficiency: 'intermediate'\r\n      });\r\n      setMessage(`✅ 题目创建成功！ID: ${result.id}`);\r\n      \r\n      setTestData(prev => ({\r\n        ...prev,\r\n        question: { title: '', detailedAnswer: '', categoryId: prev.question.categoryId }\r\n      }));\r\n    } catch (error) {\r\n      setMessage(`❌ 创建题目失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateTestData = (section, field, value) => {\r\n    setTestData(prev => ({\r\n      ...prev,\r\n      [section]: {\r\n        ...prev[section],\r\n        [field]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-test-panel\">\r\n      <h2>🧪 用户系统测试面板</h2>\r\n      \r\n      {/* 当前用户状态 */}\r\n      <div className=\"user-status\">\r\n        <h3>当前状态</h3>\r\n        {currentUser ? (\r\n          <div className=\"user-info\">\r\n            <p>✅ 已登录</p>\r\n            <p>用户名: {currentUser.username}</p>\r\n            <p>邮箱: {currentUser.email}</p>\r\n            <p>用户ID: {currentUser.id}</p>\r\n            <button onClick={handleLogout} disabled={loading}>\r\n              退出登录\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <p>❌ 未登录</p>\r\n        )}\r\n      </div>\r\n\r\n      {message && (\r\n        <div className={`test-message ${message.includes('✅') ? 'success' : 'error'}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"test-sections\">\r\n        {/* 注册测试 */}\r\n        <div className=\"test-section\">\r\n          <h3>1. 用户注册测试</h3>\r\n          <form onSubmit={handleRegister}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"用户名\"\r\n              value={testData.register.username}\r\n              onChange={(e) => updateTestData('register', 'username', e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n              value={testData.register.password}\r\n              onChange={(e) => updateTestData('register', 'password', e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"邮箱\"\r\n              value={testData.register.email}\r\n              onChange={(e) => updateTestData('register', 'email', e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"昵称 (可选)\"\r\n              value={testData.register.nickname}\r\n              onChange={(e) => updateTestData('register', 'nickname', e.target.value)}\r\n            />\r\n            <button type=\"submit\" disabled={loading}>\r\n              {loading ? '注册中...' : '注册'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* 登录测试 */}\r\n        <div className=\"test-section\">\r\n          <h3>2. 用户登录测试</h3>\r\n          <form onSubmit={handleLogin}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"用户名\"\r\n              value={testData.login.username}\r\n              onChange={(e) => updateTestData('login', 'username', e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n              value={testData.login.password}\r\n              onChange={(e) => updateTestData('login', 'password', e.target.value)}\r\n              required\r\n            />\r\n            <button type=\"submit\" disabled={loading}>\r\n              {loading ? '登录中...' : '登录'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* 创建分类测试 */}\r\n        {currentUser && (\r\n          <div className=\"test-section\">\r\n            <h3>3. 创建测试分类</h3>\r\n            <form onSubmit={handleCreateCategory}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"分类名称\"\r\n                value={testData.category.name}\r\n                onChange={(e) => updateTestData('category', 'name', e.target.value)}\r\n                required\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"分类描述 (可选)\"\r\n                value={testData.category.description}\r\n                onChange={(e) => updateTestData('category', 'description', e.target.value)}\r\n              />\r\n              <button type=\"submit\" disabled={loading}>\r\n                {loading ? '创建中...' : '创建分类'}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {/* 创建题目测试 */}\r\n        {currentUser && testData.question.categoryId && (\r\n          <div className=\"test-section\">\r\n            <h3>4. 创建测试题目</h3>\r\n            <p>分类ID: {testData.question.categoryId}</p>\r\n            <form onSubmit={handleCreateQuestion}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"题目标题\"\r\n                value={testData.question.title}\r\n                onChange={(e) => updateTestData('question', 'title', e.target.value)}\r\n                required\r\n              />\r\n              <textarea\r\n                placeholder=\"详细答案\"\r\n                value={testData.question.detailedAnswer}\r\n                onChange={(e) => updateTestData('question', 'detailedAnswer', e.target.value)}\r\n                required\r\n              />\r\n              <button type=\"submit\" disabled={loading}>\r\n                {loading ? '创建中...' : '创建题目'}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 快速测试按钮 */}\r\n      <div className=\"quick-test\">\r\n        <h3>🚀 快速测试</h3>\r\n        <button \r\n          onClick={() => {\r\n            setTestData({\r\n              register: {\r\n                username: `testuser_${Date.now()}`,\r\n                password: '123456',\r\n                email: `test_${Date.now()}@example.com`,\r\n                nickname: '测试用户'\r\n              },\r\n              login: { username: '', password: '' },\r\n              category: { name: '测试分类', description: '这是一个测试分类' },\r\n              question: { title: '', detailedAnswer: '', categoryId: '' }\r\n            });\r\n          }}\r\n        >\r\n          填充测试数据\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTestPanel;","\r\n// services/dataMigrationService.js\r\nimport AV from 'leancloud-storage';\r\nimport { UserService } from './userService';\r\n\r\n/**\r\n * 数据迁移服务 - 将现有数据关联到管理员账户\r\n */\r\nexport const DataMigrationService = {\r\n  /**\r\n   * 创建管理员账户（使用当前登录用户作为管理员）\r\n   */\r\n  setupAdminUser: async () => {\r\n    try {\r\n      console.log('设置当前用户为管理员...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('请先登录一个账户作为管理员');\r\n      }\r\n      \r\n      console.log('使用当前用户作为管理员:', currentUser.id);\r\n      return {\r\n        id: currentUser.id,\r\n        username: currentUser.getUsername(),\r\n        email: currentUser.getEmail(),\r\n        nickname: currentUser.get('nickname')\r\n      };\r\n    } catch (error) {\r\n      console.error('设置管理员失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 迁移现有分类到当前用户\r\n   */\r\n  migrateCategoriesToCurrentUser: async () => {\r\n    try {\r\n      console.log('开始迁移分类数据...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n      \r\n      const query = new AV.Query('Category');\r\n      \r\n      // 获取所有没有 createdBy 字段的分类\r\n      query.doesNotExist('createdBy');\r\n      const categories = await query.find();\r\n      \r\n      console.log(`找到 ${categories.length} 个需要迁移的分类`);\r\n      \r\n      let migratedCount = 0;\r\n      for (const category of categories) {\r\n        try {\r\n          category.set('createdBy', currentUser);\r\n          \r\n          // 更新 ACL 权限\r\n          const acl = new AV.ACL();\r\n          acl.setReadAccess(currentUser, true);\r\n          acl.setWriteAccess(currentUser, true);\r\n          acl.setPublicReadAccess(true); // 保持公开可读\r\n          category.setACL(acl);\r\n          \r\n          await category.save();\r\n          migratedCount++;\r\n          console.log(`✅ 迁移分类: ${category.get('name')}`);\r\n        } catch (error) {\r\n          console.error(`迁移分类失败 ${category.id}:`, error);\r\n        }\r\n      }\r\n      \r\n      console.log(`分类迁移完成: ${migratedCount}/${categories.length}`);\r\n      return { migrated: migratedCount, total: categories.length };\r\n    } catch (error) {\r\n      console.error('迁移分类数据失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 迁移现有题目到当前用户\r\n   */\r\n  migrateQuestionsToCurrentUser: async () => {\r\n    try {\r\n      console.log('开始迁移题目数据...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n      \r\n      const query = new AV.Query('Question');\r\n      \r\n      // 获取所有没有 createdBy 字段的题目\r\n      query.doesNotExist('createdBy');\r\n      const questions = await query.find();\r\n      \r\n      console.log(`找到 ${questions.length} 个需要迁移的题目`);\r\n      \r\n      let migratedCount = 0;\r\n      for (const question of questions) {\r\n        try {\r\n          question.set('createdBy', currentUser);\r\n          \r\n          // 更新 ACL 权限\r\n          const acl = new AV.ACL();\r\n          acl.setReadAccess(currentUser, true);\r\n          acl.setWriteAccess(currentUser, true);\r\n          acl.setPublicReadAccess(true); // 保持公开可读\r\n          question.setACL(acl);\r\n          \r\n          await question.save();\r\n          migratedCount++;\r\n          console.log(`✅ 迁移题目: ${question.get('title')}`);\r\n        } catch (error) {\r\n          console.error(`迁移题目失败 ${question.id}:`, error);\r\n        }\r\n      }\r\n      \r\n      console.log(`题目迁移完成: ${migratedCount}/${questions.length}`);\r\n      return { migrated: migratedCount, total: questions.length };\r\n    } catch (error) {\r\n      console.error('迁移题目数据失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 执行完整的数据迁移（使用当前登录用户）\r\n   */\r\n  performFullMigration: async () => {\r\n    try {\r\n      console.log('🚀 开始完整数据迁移...');\r\n      \r\n      // 1. 使用当前用户作为管理员\r\n      const adminUser = await DataMigrationService.setupAdminUser();\r\n      \r\n      // 2. 迁移分类数据\r\n      const categoryResult = await DataMigrationService.migrateCategoriesToCurrentUser();\r\n      \r\n      // 3. 迁移题目数据\r\n      const questionResult = await DataMigrationService.migrateQuestionsToCurrentUser();\r\n      \r\n      console.log('🎉 数据迁移完成！');\r\n      \r\n      return {\r\n        success: true,\r\n        adminUser,\r\n        categories: categoryResult,\r\n        questions: questionResult,\r\n        message: `迁移完成: ${categoryResult.migrated}个分类, ${questionResult.migrated}个题目`\r\n      };\r\n    } catch (error) {\r\n      console.error('数据迁移失败:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message\r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 检查数据迁移状态\r\n   */\r\n  checkMigrationStatus: async () => {\r\n    try {\r\n      // 检查没有 createdBy 的分类数量\r\n      const categoryQuery = new AV.Query('Category');\r\n      categoryQuery.doesNotExist('createdBy');\r\n      const orphanCategories = await categoryQuery.count();\r\n      \r\n      // 检查没有 createdBy 的题目数量\r\n      const questionQuery = new AV.Query('Question');\r\n      questionQuery.doesNotExist('createdBy');\r\n      const orphanQuestions = await questionQuery.count();\r\n      \r\n      // 检查总数据量\r\n      const totalCategories = await new AV.Query('Category').count();\r\n      const totalQuestions = await new AV.Query('Question').count();\r\n      \r\n      return {\r\n        orphanCategories,\r\n        orphanQuestions,\r\n        totalCategories,\r\n        totalQuestions,\r\n        migrationNeeded: orphanCategories > 0 || orphanQuestions > 0\r\n      };\r\n    } catch (error) {\r\n      console.error('检查迁移状态失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  migrateQuestionCreatedBy: async () => {\r\n    try {\r\n      console.log('开始专门迁移 Question 的 createdBy 属性...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n      \r\n      const query = new AV.Query('Question');\r\n      \r\n      // 获取所有没有 createdBy 字段的题目\r\n      query.doesNotExist('createdBy');\r\n      const questions = await query.find();\r\n      \r\n      console.log(`找到 ${questions.length} 个需要添加 createdBy 的题目`);\r\n      \r\n      let migratedCount = 0;\r\n      for (const question of questions) {\r\n        try {\r\n          question.set('createdBy', currentUser);\r\n          \r\n          // 更新 ACL 权限\r\n          const acl = new AV.ACL();\r\n          acl.setReadAccess(currentUser, true);\r\n          acl.setWriteAccess(currentUser, true);\r\n          acl.setPublicReadAccess(false);\r\n          question.setACL(acl);\r\n          \r\n          await question.save();\r\n          migratedCount++;\r\n          console.log(`✅ 为题目添加 createdBy: ${question.get('title')}`);\r\n        } catch (error) {\r\n          console.error(`迁移题目失败 ${question.id}:`, error);\r\n        }\r\n      }\r\n      \r\n      console.log(`Question createdBy 迁移完成: ${migratedCount}/${questions.length}`);\r\n      return { migrated: migratedCount, total: questions.length };\r\n    } catch (error) {\r\n      console.error('迁移 Question createdBy 失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * 只迁移 Question 的完整流程\r\n   */\r\n  performQuestionMigrationOnly: async () => {\r\n    try {\r\n      console.log('🚀 开始专门迁移 Question 数据...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('请先登录');\r\n      }\r\n      \r\n      // 只迁移 Question\r\n      const questionResult = await DataMigrationService.migrateQuestionCreatedBy();\r\n      \r\n      console.log('🎉 Question 迁移完成！');\r\n      \r\n      return {\r\n        success: true,\r\n        questions: questionResult,\r\n        message: `Question 迁移完成: ${questionResult.migrated}个题目`\r\n      };\r\n    } catch (error) {\r\n      console.error('Question 迁移失败:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n};","// components/DataMigrationPanel.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataMigrationService } from '../services/dataMigrationService';\r\nimport { UserService } from '../services/userService';\r\nimport './DataMigrationPanel.css';\r\n\r\nconst DataMigrationPanel = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [migrationStatus, setMigrationStatus] = useState(null);\r\n  const [migrationResult, setMigrationResult] = useState(null);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  // 检查当前用户状态和迁移状态\r\n  useEffect(() => {\r\n    checkCurrentUser();\r\n    checkMigrationStatus();\r\n  }, []);\r\n\r\n  const checkCurrentUser = () => {\r\n    const user = UserService.getCurrentUser();\r\n    setCurrentUser(user);\r\n  };\r\n\r\n  const checkMigrationStatus = async () => {\r\n    try {\r\n      const status = await DataMigrationService.checkMigrationStatus();\r\n      setMigrationStatus(status);\r\n    } catch (error) {\r\n      console.error('检查迁移状态失败:', error);\r\n    }\r\n  };\r\n\r\n  const handleMigration = async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录一个账户作为管理员');\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(`确定要将所有现有数据关联到当前用户 \"${currentUser.username}\" 吗？`)) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMigrationResult(null);\r\n    \r\n    try {\r\n      const result = await DataMigrationService.performFullMigration();\r\n      setMigrationResult(result);\r\n      \r\n      // 重新检查状态\r\n      await checkMigrationStatus();\r\n    } catch (error) {\r\n      setMigrationResult({\r\n        success: false,\r\n        error: error.message\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-migration-panel\">\r\n      <h2>🔄 数据迁移工具</h2>\r\n      <p>将现有分类和题目数据关联到当前登录用户</p>\r\n\r\n      {/* 当前用户状态 */}\r\n      <div className=\"user-status-section\">\r\n        <h3>当前用户状态</h3>\r\n        {currentUser ? (\r\n          <div className=\"user-info\">\r\n            <p>✅ 已登录: <strong>{currentUser.username}</strong></p>\r\n            <p>邮箱: {currentUser.email}</p>\r\n            <p>用户ID: {currentUser.id}</p>\r\n            <p className=\"admin-note\">此用户将被设置为所有现有数据的管理员</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"user-info not-logged-in\">\r\n            <p>❌ 未登录</p>\r\n            <p className=\"login-required\">请先登录一个账户作为管理员</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 迁移状态 */}\r\n      {migrationStatus && (\r\n        <div className=\"migration-status\">\r\n          <h3>当前数据状态</h3>\r\n          <div className=\"status-grid\">\r\n            <div className=\"status-item\">\r\n              <span className=\"label\">总分类数:</span>\r\n              <span className=\"value\">{migrationStatus.totalCategories}</span>\r\n            </div>\r\n            <div className=\"status-item\">\r\n              <span className=\"label\">总题目数:</span>\r\n              <span className=\"value\">{migrationStatus.totalQuestions}</span>\r\n            </div>\r\n            <div className=\"status-item warning\">\r\n              <span className=\"label\">未关联分类:</span>\r\n              <span className=\"value\">{migrationStatus.orphanCategories}</span>\r\n            </div>\r\n            <div className=\"status-item warning\">\r\n              <span className=\"label\">未关联题目:</span>\r\n              <span className=\"value\">{migrationStatus.orphanQuestions}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          {migrationStatus.migrationNeeded ? (\r\n            <div className=\"migration-needed\">\r\n              ⚠️ 检测到未关联的数据，需要执行迁移\r\n            </div>\r\n          ) : (\r\n            <div className=\"migration-complete\">\r\n              ✅ 所有数据都已关联到用户\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* 迁移操作 */}\r\n      <div className=\"migration-actions\">\r\n        <button\r\n          onClick={handleMigration}\r\n          disabled={loading || !currentUser || !migrationStatus?.migrationNeeded}\r\n          className=\"migrate-btn\"\r\n        >\r\n          {loading ? '迁移中...' : '执行数据迁移'}\r\n        </button>\r\n        \r\n        <button\r\n          onClick={checkMigrationStatus}\r\n          disabled={loading}\r\n          className=\"refresh-btn\"\r\n        >\r\n          刷新状态\r\n        </button>\r\n      </div>\r\n\r\n      {/* 迁移结果 */}\r\n      {migrationResult && (\r\n        <div className={`migration-result ${migrationResult.success ? 'success' : 'error'}`}>\r\n          <h4>{migrationResult.success ? '✅ 迁移成功' : '❌ 迁移失败'}</h4>\r\n          {migrationResult.success ? (\r\n            <div>\r\n              <p>{migrationResult.message}</p>\r\n              {migrationResult.adminUser && (\r\n                <div className=\"admin-info\">\r\n                  <p><strong>管理员账户:</strong> {migrationResult.adminUser.username}</p>\r\n                  <p><strong>用户ID:</strong> {migrationResult.adminUser.id}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <p>错误: {migrationResult.error}</p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* 使用说明 */}\r\n      <div className=\"migration-instructions\">\r\n        <h3>📖 使用说明</h3>\r\n        <ol>\r\n          <li><strong>首先登录一个账户</strong>（可以是新注册的或现有的）</li>\r\n          <li>确认上方显示有未关联的数据</li>\r\n          <li>点击\"执行数据迁移\"按钮</li>\r\n          <li>迁移完成后，所有现有数据将关联到当前登录用户</li>\r\n          <li>之后可以使用此账户登录系统管理所有数据</li>\r\n        </ol>\r\n        \r\n        <div className=\"important-notes\">\r\n          <h4>⚠️ 重要提示</h4>\r\n          <ul>\r\n            <li>迁移过程不会删除或修改现有数据内容</li>\r\n            <li>只会添加 createdBy 字段和更新权限</li>\r\n            <li>迁移后，只有当前用户可以看到所有现有数据</li>\r\n            <li>新注册的用户只能看到自己创建的数据</li>\r\n            <li><strong>建议使用一个专门的账户作为管理员</strong></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataMigrationPanel;","// pages/TestPage.jsx\r\nimport React from 'react';\r\nimport UserTestPanel from '../components/UserTestPanel';\r\nimport DataMigrationPanel from '../components/DataMigrationPanel';\r\n\r\nconst TestPage = () => {\r\n  return (\r\n    <div className=\"test-page\">\r\n      <div className=\"container\">\r\n        <h1>用户系统测试与数据迁移</h1>\r\n        \r\n        <div className=\"test-sections\">\r\n          <section className=\"test-section\">\r\n            <h2>🔄 数据迁移</h2>\r\n            <DataMigrationPanel />\r\n          </section>\r\n          \r\n          <section className=\"test-section\">\r\n            <h2>🧪 用户功能测试</h2>\r\n            <UserTestPanel />\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestPage;","// components/Navigation.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AV from 'leancloud-storage';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ onShowAuthModal }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [showUserMenu, setShowUserMenu] = useState(false);\r\n  const userMenuRef = useRef(null);\r\n\r\n  // 检查用户登录状态\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n  }, []);\r\n\r\n  // 点击外部关闭用户菜单\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (userMenuRef.current && !userMenuRef.current.contains(event.target)) {\r\n        setShowUserMenu(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  // 添加头像更新事件监听\r\n  useEffect(() => {\r\n    const handleAvatarUpdate = async () => {\r\n      console.log('收到头像更新事件，重新加载用户数据');\r\n      const user = AV.User.current();\r\n      if (user) {\r\n        try {\r\n          const freshUser = await user.fetch();\r\n          setCurrentUser(freshUser);\r\n        } catch (error) {\r\n          console.error('重新加载用户数据失败:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('userAvatarUpdated', handleAvatarUpdate);\r\n    \r\n    return () => {\r\n      window.removeEventListener('userAvatarUpdated', handleAvatarUpdate);\r\n    };\r\n  }, []);\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await AV.User.logOut();\r\n      setCurrentUser(null);\r\n      setShowUserMenu(false);\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error('退出失败:', error);\r\n      alert('退出失败，请重试');\r\n    }\r\n  };\r\n\r\n  const handleUserMenuToggle = () => {\r\n    setShowUserMenu(!showUserMenu);\r\n  };\r\n\r\n  // 检查是否为特定邮箱用户\r\n  const isAuthorizedEmail = () => {\r\n    if (!currentUser) return false;\r\n    const userEmail = currentUser.getEmail();\r\n    return userEmail === 'wu1149823510@outlook.com';\r\n  };\r\n\r\n  // 优化的头像组件 - 支持缓存清除和完全覆盖\r\n  const UserAvatar = ({ user, size = 'normal' }) => {\r\n    const avatar = user.get('avatar');\r\n    const fallbackText = user.getUsername()?.charAt(0).toUpperCase();\r\n    \r\n    // 添加时间戳避免缓存\r\n    const getAvatarUrl = () => {\r\n      if (!avatar) return null;\r\n      \r\n      if (typeof avatar === 'string') {\r\n        const timestamp = new Date().getTime();\r\n        return `${avatar}?t=${timestamp}`;\r\n      } else if (typeof avatar.get === 'function') {\r\n        return avatar.get('url');\r\n      }\r\n      return null;\r\n    };\r\n    \r\n    const avatarUrl = getAvatarUrl();\r\n    \r\n    return (\r\n      <div className={`user-avatar ${size === 'large' ? 'user-avatar-large' : ''}`}>\r\n        {avatarUrl ? (\r\n          <>\r\n            <img \r\n              src={avatarUrl} \r\n              alt=\"用户头像\"\r\n              onLoad={() => console.log('✅ Navigation 头像加载成功')}\r\n              onError={(e) => {\r\n                console.error('❌ Navigation 头像加载失败:', avatarUrl);\r\n                e.target.style.display = 'none';\r\n                // 显示占位符\r\n                const fallback = e.target.nextSibling;\r\n                if (fallback) fallback.style.display = 'flex';\r\n              }}\r\n              style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                objectFit: 'cover',\r\n                objectPosition: 'center'\r\n              }}\r\n            />\r\n            <div \r\n              className={`avatar-fallback ${size === 'large' ? 'avatar-fallback-large' : ''}`}\r\n              style={{ display: 'none' }}\r\n            >\r\n              {fallbackText}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className={`avatar-fallback ${size === 'large' ? 'avatar-fallback-large' : ''}`}>\r\n            {fallbackText}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <nav className=\"modern-nav\">\r\n      <div className=\"nav-container\">\r\n        {/* 左侧导航链接 */}\r\n        <div className=\"nav-left\">\r\n          <Link to=\"/\" className=\"nav-brand\">\r\n            <span className=\"brand-icon\">📚</span>\r\n            <span className=\"brand-text\">知识题库</span>\r\n          </Link>\r\n          \r\n          <div className=\"nav-links\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              <span className=\"link-icon\">🏠</span>\r\n              首页\r\n            </Link>\r\n            {/* 只有特定邮箱用户才能看到初始化数据库选项 */}\r\n            {currentUser && isAuthorizedEmail() && (\r\n              <Link to=\"/init\" className=\"nav-link\">\r\n                <span className=\"link-icon\">⚙️</span>\r\n                初始化数据库\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* 右侧用户区域 */}\r\n        <div className=\"nav-right\">\r\n          {currentUser ? (\r\n            <div className=\"user-section\" ref={userMenuRef}>\r\n              <button \r\n                className=\"user-menu-trigger\"\r\n                onClick={handleUserMenuToggle}\r\n              >\r\n                <UserAvatar user={currentUser} />\r\n                <span className=\"user-name\">{currentUser.getUsername()}</span>\r\n                {isAuthorizedEmail() && (\r\n                  <span className=\"admin-badge\" title=\"管理员\">⚡</span>\r\n                )}\r\n                <span className={`dropdown-arrow ${showUserMenu ? 'open' : ''}`}>\r\n                  ▼\r\n                </span>\r\n              </button>\r\n\r\n              {/* 用户下拉菜单 */}\r\n              {showUserMenu && (\r\n                <div className=\"user-dropdown-menu\">\r\n                  <div className=\"dropdown-header\">\r\n                    <div className=\"user-info-card\">\r\n                      <UserAvatar user={currentUser} size=\"large\" />\r\n                      <div className=\"user-details\">\r\n                        <div className=\"user-display-name\">\r\n                          {currentUser.get('nickname') || currentUser.getUsername()}\r\n                          {isAuthorizedEmail() && (\r\n                            <span className=\"admin-tag\">管理员</span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"user-email\">\r\n                          {currentUser.getEmail() || '未设置邮箱'}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"dropdown-divider\"></div>\r\n\r\n                  <div className=\"dropdown-items\">\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.dispatchEvent(new CustomEvent('showUserSettings'));\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">👤</span>\r\n                      <span className=\"item-text\">账户设置</span>\r\n                    </button>\r\n\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.dispatchEvent(new CustomEvent('showUserSettings', { \r\n                          detail: { tab: 'stats' } \r\n                        }));\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">📊</span>\r\n                      <span className=\"item-text\">学习统计</span>\r\n                    </button>\r\n\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.dispatchEvent(new CustomEvent('showUserSettings', { \r\n                          detail: { tab: 'preferences' } \r\n                        }));\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">🔔</span>\r\n                      <span className=\"item-text\">通知设置</span>\r\n                    </button>\r\n                  </div>\r\n\r\n                  {/* 管理员专属功能区域 */}\r\n                  {isAuthorizedEmail() && (\r\n                    <>\r\n                      <div className=\"dropdown-divider\"></div>\r\n                      <div className=\"dropdown-section\">\r\n                        <div className=\"section-label\">管理员功能</div>\r\n                        <div className=\"dropdown-items\">\r\n                          <Link \r\n                            to=\"/init\" \r\n                            className=\"dropdown-item\"\r\n                            onClick={() => setShowUserMenu(false)}\r\n                          >\r\n                            <span className=\"item-icon\">⚙️</span>\r\n                            <span className=\"item-text\">初始化数据库</span>\r\n                          </Link>\r\n                          <button \r\n                            className=\"dropdown-item\"\r\n                            onClick={() => {\r\n                              setShowUserMenu(false);\r\n                              console.log('管理员功能');\r\n                            }}\r\n                          >\r\n                            <span className=\"item-icon\">🔧</span>\r\n                            <span className=\"item-text\">系统管理</span>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  <div className=\"dropdown-divider\"></div>\r\n\r\n                  <div className=\"dropdown-items\">\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.open('/help', '_blank');\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">❓</span>\r\n                      <span className=\"item-text\">帮助文档</span>\r\n                    </button>\r\n\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.open('mailto:support@example.com', '_blank');\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">💬</span>\r\n                      <span className=\"item-text\">意见反馈</span>\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"dropdown-divider\"></div>\r\n\r\n                  <div className=\"dropdown-items\">\r\n                    <button \r\n                      className=\"dropdown-item logout-item\"\r\n                      onClick={handleLogout}\r\n                    >\r\n                      <span className=\"item-icon\">🚪</span>\r\n                      <span className=\"item-text\">退出登录</span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"auth-buttons\">\r\n              <button \r\n                className=\"auth-btn login-btn\"\r\n                onClick={() => onShowAuthModal('login')}\r\n              >\r\n                登录\r\n              </button>\r\n              <button \r\n                className=\"auth-btn login-btn\"\r\n                onClick={() => onShowAuthModal('register')}\r\n              >\r\n                注册\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;","// components/AuthModal.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { UserService } from '../services/userService';\r\nimport { WechatAuthService } from '../services/wechatAuthService';\r\nimport './AuthModal.css';\r\n\r\nconst AuthModal = ({ isOpen, onClose, defaultTab = 'login', onAuthSuccess }) => {\r\n  const [activeTab, setActiveTab] = useState(defaultTab);\r\n  const [formData, setFormData] = useState({\r\n    loginUsername: '',\r\n    loginPassword: '',\r\n    registerUsername: '',\r\n    registerEmail: '',\r\n    registerPassword: '',\r\n    registerConfirmPassword: ''\r\n  });\r\n  const [isWechatLoading, setIsWechatLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setActiveTab(defaultTab);\r\n      setFormData({\r\n        loginUsername: '',\r\n        loginPassword: '',\r\n        registerUsername: '',\r\n        registerEmail: '',\r\n        registerPassword: '',\r\n        registerConfirmPassword: ''\r\n      });\r\n    }\r\n  }, [isOpen, defaultTab]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await UserService.login(formData.loginUsername, formData.loginPassword);\r\n      if (onAuthSuccess) onAuthSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      alert(`登录失败: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.registerPassword !== formData.registerConfirmPassword) {\r\n      alert('两次输入的密码不一致');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await UserService.register(\r\n        formData.registerUsername,\r\n        formData.registerPassword,\r\n        formData.registerEmail\r\n      );\r\n      if (onAuthSuccess) onAuthSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      alert(`注册失败: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleWechatLogin = async () => {\r\n    setIsWechatLoading(true);\r\n    try {\r\n      await WechatAuthService.wechatLogin();\r\n      if (onAuthSuccess) onAuthSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      alert(`微信登录失败: ${error.message}`);\r\n    } finally {\r\n      setIsWechatLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleWechatQRLogin = async () => {\r\n    setIsWechatLoading(true);\r\n    try {\r\n      await WechatAuthService.wechatQRLogin();\r\n      if (onAuthSuccess) onAuthSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      alert(`微信扫码登录失败: ${error.message}`);\r\n    } finally {\r\n      setIsWechatLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"auth-modal\" onClick={onClose}>\r\n      <div className=\"auth-content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"auth-header\">\r\n          <h3>{activeTab === 'login' ? '用户登录' : '用户注册'}</h3>\r\n          <button className=\"close-btn\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <div className=\"auth-tabs\">\r\n          <button \r\n            className={`auth-tab ${activeTab === 'login' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('login')}\r\n          >\r\n            登录\r\n          </button>\r\n          <button \r\n            className={`auth-tab ${activeTab === 'register' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('register')}\r\n          >\r\n            注册\r\n          </button>\r\n        </div>\r\n\r\n        {/* 第三方登录选项 \r\n        <div className=\"social-auth-section\">\r\n          <div className=\"social-auth-buttons\">\r\n            <button \r\n              className=\"social-auth-btn wechat-btn\"\r\n              onClick={handleWechatLogin}\r\n              disabled={isWechatLoading}\r\n            >\r\n              <span className=\"social-icon\">💬</span>\r\n              <span className=\"social-text\">\r\n                {isWechatLoading ? '登录中...' : '微信登录'}\r\n              </span>\r\n            </button>\r\n            \r\n            <button \r\n              className=\"social-auth-btn wechat-qr-btn\"\r\n              onClick={handleWechatQRLogin}\r\n              disabled={isWechatLoading}\r\n            >\r\n              <span className=\"social-icon\">📱</span>\r\n              <span className=\"social-text\">\r\n                {isWechatLoading ? '加载中...' : '微信扫码登录'}\r\n              </span>\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"divider\">\r\n            <span>或</span>\r\n          </div>\r\n        </div>\r\n*/}\r\n        {/* 登录表单 */}\r\n        <form \r\n          className={`auth-form ${activeTab === 'login' ? 'active' : ''}`}\r\n          onSubmit={handleLogin}\r\n        >\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"loginUsername\">用户名</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"loginUsername\" \r\n              value={formData.loginUsername}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"loginPassword\">密码</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"loginPassword\" \r\n              value={formData.loginPassword}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"auth-btn primary\">登录</button>\r\n        </form>\r\n\r\n        {/* 注册表单 */}\r\n        <form \r\n          className={`auth-form ${activeTab === 'register' ? 'active' : ''}`}\r\n          onSubmit={handleRegister}\r\n        >\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerUsername\">用户名</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"registerUsername\" \r\n              value={formData.registerUsername}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerEmail\">邮箱</label>\r\n            <input \r\n              type=\"email\" \r\n              id=\"registerEmail\" \r\n              value={formData.registerEmail}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerPassword\">密码</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"registerPassword\" \r\n              value={formData.registerPassword}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerConfirmPassword\">确认密码</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"registerConfirmPassword\" \r\n              value={formData.registerConfirmPassword}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"auth-btn secondary\">注册</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthModal;","// components/UserSettingsModal.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport AV from 'leancloud-storage';\r\nimport './UserSettingsModal.css';\r\n\r\nconst UserSettingsModal = ({ isOpen, onClose }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('profile');\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [message, setMessage] = useState({ type: '', text: '' });\r\n  const [avatarFile, setAvatarFile] = useState(null);\r\n  const [avatarPreview, setAvatarPreview] = useState('');\r\n\r\n  // 学习统计数据状态\r\n  const [studyStats, setStudyStats] = useState({\r\n    totalCategories: 0,\r\n    totalQuestions: 0,\r\n    reviewQuestions: 0,\r\n    todayReviewed: 0\r\n  });\r\n\r\n  // 表单状态\r\n  const [profileForm, setProfileForm] = useState({\r\n    username: '',\r\n    email: '',\r\n    nickname: '',\r\n    bio: ''\r\n  });\r\n\r\n  const [passwordForm, setPasswordForm] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const [preferencesForm, setPreferencesForm] = useState({\r\n    theme: 'light',\r\n    language: 'zh-CN',\r\n    notifications: true,\r\n    emailUpdates: false\r\n  });\r\n\r\n  const [securityForm, setSecurityForm] = useState({\r\n    emailVerified: false\r\n  });\r\n\r\n  // 调试用户信息\r\n  const debugUserInfo = (user) => {\r\n    if (!user) return;\r\n   \r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      const user = AV.User.current();\r\n      setCurrentUser(user);\r\n      if (user) {\r\n        debugUserInfo(user);\r\n        loadUserData(user);\r\n        loadStudyStats(user);\r\n      }\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const loadUserData = async (user) => {\r\n    try {\r\n      // 确保获取最新的用户数据\r\n      const freshUser = await user.fetch();\r\n      \r\n    \r\n\r\n      setProfileForm({\r\n        username: freshUser.getUsername() || '',\r\n        email: freshUser.getEmail() || '',\r\n        nickname: freshUser.get('nickname') || '',\r\n        bio: freshUser.get('bio') || ''\r\n      });\r\n\r\n      setPreferencesForm({\r\n        theme: freshUser.get('theme') || 'light',\r\n        language: freshUser.get('language') || 'zh-CN',\r\n        notifications: freshUser.get('notifications') !== false,\r\n        emailUpdates: freshUser.get('emailUpdates') || false\r\n      });\r\n\r\n      setSecurityForm({\r\n        emailVerified: freshUser.get('emailVerified') || false\r\n      });\r\n\r\n      // 加载用户头像 - 添加时间戳避免缓存\r\n      const avatar = freshUser.get('avatar');\r\n      if (avatar && typeof avatar === 'string') {\r\n        const timestamp = new Date().getTime();\r\n        const avatarUrlWithCacheBust = `${avatar}?t=${timestamp}`;\r\n        setAvatarPreview(avatarUrlWithCacheBust);\r\n      } else {\r\n        setAvatarPreview('');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('加载用户数据失败:', error);\r\n    }\r\n  };\r\n\r\n  const loadStudyStats = async (user) => {\r\n    try {\r\n      // 获取分类数量\r\n      const categoriesQuery = new AV.Query('Category');\r\n      categoriesQuery.equalTo('createdBy', user);\r\n      const categories = await categoriesQuery.find();\r\n\r\n      // 获取题目数量\r\n      const questionsQuery = new AV.Query('Question');\r\n      questionsQuery.equalTo('createdBy', user);\r\n      const questions = await questionsQuery.find();\r\n\r\n      // 计算待复习题目\r\n      const now = new Date();\r\n      const reviewThreshold = 1;\r\n      const reviewQuestions = questions.filter(question => {\r\n        const lastReviewed = new Date(question.get('lastReviewedAt') || question.get('createdAt'));\r\n        const daysSinceReview = Math.floor((now - lastReviewed) / (1000 * 60 * 60 * 24));\r\n        return daysSinceReview >= reviewThreshold;\r\n      });\r\n\r\n      // 计算今日复习题目\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      const todayReviewed = questions.filter(question => {\r\n        const lastReviewed = new Date(question.get('lastReviewedAt'));\r\n        return lastReviewed >= today;\r\n      }).length;\r\n\r\n      setStudyStats({\r\n        totalCategories: categories.length,\r\n        totalQuestions: questions.length,\r\n        reviewQuestions: reviewQuestions.length,\r\n        todayReviewed: todayReviewed\r\n      });\r\n    } catch (error) {\r\n      console.error('加载学习统计失败:', error);\r\n      setStudyStats({\r\n        totalCategories: 0,\r\n        totalQuestions: 0,\r\n        reviewQuestions: 0,\r\n        todayReviewed: 0\r\n      });\r\n    }\r\n  };\r\n\r\n  const showMessage = (type, text, duration = 3000) => {\r\n    setMessage({ type, text });\r\n    setTimeout(() => setMessage({ type: '', text: '' }), duration);\r\n  };\r\n\r\n  // 头像上传处理\r\n  const handleAvatarUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    // 检查文件类型\r\n    if (!file.type.startsWith('image/')) {\r\n      showMessage('error', '请选择图片文件（JPG、PNG、GIF）');\r\n      return;\r\n    }\r\n\r\n    // 检查文件大小\r\n    if (file.size > 2 * 1024 * 1024) {\r\n      showMessage('error', '图片大小不能超过 2MB');\r\n      return;\r\n    }\r\n\r\n    setAvatarFile(file);\r\n    \r\n    // 创建预览\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      setAvatarPreview(e.target.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleAvatarSave = async () => {\r\n    if (!avatarFile || !currentUser) {\r\n      showMessage('error', '请先选择图片');\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    try {\r\n\r\n      // 首先清除旧的头像预览\r\n      setAvatarPreview('');\r\n      \r\n      // 将文件转换为 base64\r\n      const fileData = await new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          const base64Data = e.target.result.split(',')[1];\r\n          resolve(base64Data);\r\n        };\r\n        reader.onerror = () => reject(new Error('文件读取失败'));\r\n        reader.readAsDataURL(avatarFile);\r\n      });\r\n\r\n      // 调用云函数\r\n      const result = await AV.Cloud.run('updateUserAvatar', {\r\n        fileData: fileData,\r\n        fileName: avatarFile.name,\r\n        mimeType: avatarFile.type\r\n      });\r\n\r\n      if (result.success) {\r\n        showMessage('success', '头像上传成功！');\r\n        \r\n        // 使用时间戳避免浏览器缓存\r\n        const timestamp = new Date().getTime();\r\n        const avatarUrlWithCacheBust = `${result.avatarUrl}?t=${timestamp}`;\r\n        \r\n        console.log('设置带时间戳的头像URL:', avatarUrlWithCacheBust);\r\n        \r\n        // 更新本地预览\r\n        setAvatarPreview(avatarUrlWithCacheBust);\r\n        \r\n        // 清除文件选择状态\r\n        setAvatarFile(null);\r\n        \r\n        // 重新获取用户数据\r\n        setTimeout(async () => {\r\n          try {\r\n            const updatedUser = await AV.User.current().fetch();\r\n            setCurrentUser(updatedUser);\r\n            console.log('用户数据已更新');\r\n            \r\n            // 强制重新渲染 Navigation 组件\r\n            window.dispatchEvent(new CustomEvent('userAvatarUpdated'));\r\n          } catch (fetchError) {\r\n            console.error('获取更新后的用户数据失败:', fetchError);\r\n          }\r\n        }, 1000);\r\n        \r\n      } else {\r\n        throw new Error(result.message || '头像上传失败');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('❌ 头像上传失败:', error);\r\n      showMessage('error', `上传失败: ${error.message}`);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleProfileUpdate = async (e) => {\r\n    e.preventDefault();\r\n    if (!currentUser) return;\r\n\r\n    setSaving(true);\r\n    try {\r\n      console.log('开始更新个人信息...', {\r\n        nickname: profileForm.nickname,\r\n        bio: profileForm.bio\r\n      });\r\n\r\n      // 使用云函数更新个人信息\r\n      const result = await AV.Cloud.run('updateUserProfile', {\r\n        nickname: profileForm.nickname,\r\n        bio: profileForm.bio\r\n      });\r\n\r\n      if (result.success) {\r\n        showMessage('success', '个人信息更新成功！');\r\n        \r\n        // 重新获取用户数据\r\n        setTimeout(async () => {\r\n          try {\r\n            const updatedUser = await AV.User.current().fetch();\r\n            setCurrentUser(updatedUser);\r\n            console.log('用户数据已更新');\r\n          } catch (fetchError) {\r\n            console.error('获取更新后的用户数据失败:', fetchError);\r\n          }\r\n        }, 500);\r\n      } else {\r\n        throw new Error(result.message || '更新失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('更新个人信息失败:', error);\r\n      \r\n      let errorMessage = '更新失败，请重试';\r\n      if (error.code === 401) {\r\n        errorMessage = '请先登录';\r\n      } else if (error.message.includes('network')) {\r\n        errorMessage = '网络连接失败，请检查网络';\r\n      } else {\r\n        errorMessage = `更新失败: ${error.message}`;\r\n      }\r\n      \r\n      showMessage('error', errorMessage);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (passwordForm.newPassword !== passwordForm.confirmPassword) {\r\n      showMessage('error', '新密码和确认密码不一致');\r\n      return;\r\n    }\r\n\r\n    if (passwordForm.newPassword.length < 6) {\r\n      showMessage('error', '新密码至少需要6位字符');\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    try {\r\n      await currentUser.updatePassword(\r\n        passwordForm.currentPassword,\r\n        passwordForm.newPassword\r\n      );\r\n      \r\n      showMessage('success', '密码修改成功！');\r\n      setPasswordForm({\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      });\r\n    } catch (error) {\r\n      console.error('修改密码失败:', error);\r\n      showMessage('error', `密码修改失败: ${error.message}`);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handlePreferencesUpdate = async (e) => {\r\n    e.preventDefault();\r\n    if (!currentUser) return;\r\n\r\n    setSaving(true);\r\n    try {\r\n      console.log('开始更新偏好设置...', preferencesForm);\r\n\r\n      // 使用云函数更新偏好设置\r\n      const result = await AV.Cloud.run('updateUserPreferences', {\r\n        theme: preferencesForm.theme,\r\n        language: preferencesForm.language,\r\n        notifications: preferencesForm.notifications,\r\n        emailUpdates: preferencesForm.emailUpdates\r\n      });\r\n\r\n      if (result.success) {\r\n        showMessage('success', '偏好设置更新成功！');\r\n        \r\n        // 重新获取用户数据\r\n        setTimeout(async () => {\r\n          try {\r\n            const updatedUser = await AV.User.current().fetch();\r\n            setCurrentUser(updatedUser);\r\n          } catch (fetchError) {\r\n            console.error('获取更新后的用户数据失败:', fetchError);\r\n          }\r\n        }, 500);\r\n      } else {\r\n        throw new Error(result.message || '更新失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('更新偏好设置失败:', error);\r\n      showMessage('error', `更新失败: ${error.message}`);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  // 邮箱验证\r\n  const handleEmailVerification = async () => {\r\n    if (!currentUser || !currentUser.getEmail()) {\r\n      showMessage('error', '请先设置邮箱地址');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await AV.User.requestEmailVerify(currentUser.getEmail());\r\n      showMessage('success', '验证邮件已发送，请检查您的邮箱');\r\n    } catch (error) {\r\n      console.error('发送验证邮件失败:', error);\r\n      showMessage('error', `发送验证邮件失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 密码重置\r\n  const handlePasswordReset = async () => {\r\n    if (!currentUser || !currentUser.getEmail()) {\r\n      showMessage('error', '请先设置邮箱地址');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await AV.User.requestPasswordReset(currentUser.getEmail());\r\n      showMessage('success', '密码重置邮件已发送，请检查您的邮箱');\r\n    } catch (error) {\r\n      console.error('发送重置邮件失败:', error);\r\n      showMessage('error', `发送重置邮件失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 数据导出\r\n  const handleDataExport = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [categories, questions] = await Promise.all([\r\n        new AV.Query('Category')\r\n          .equalTo('createdBy', currentUser)\r\n          .find(),\r\n        new AV.Query('Question')\r\n          .equalTo('createdBy', currentUser)\r\n          .include('category')\r\n          .find()\r\n      ]);\r\n\r\n      const exportData = {\r\n        exportTime: new Date().toISOString(),\r\n        user: {\r\n          username: currentUser.getUsername(),\r\n          email: currentUser.getEmail(),\r\n          nickname: currentUser.get('nickname')\r\n        },\r\n        categories: categories.map(cat => ({\r\n          id: cat.id,\r\n          name: cat.get('name'),\r\n          description: cat.get('description'),\r\n          questionCount: cat.get('questionCount') || 0,\r\n          createdAt: cat.get('createdAt'),\r\n          updatedAt: cat.get('updatedAt')\r\n        })),\r\n        questions: questions.map(q => ({\r\n          id: q.id,\r\n          title: q.get('title'),\r\n          detailedAnswer: q.get('detailedAnswer'),\r\n          oralAnswer: q.get('oralAnswer'),\r\n          code: q.get('code'),\r\n          difficulty: q.get('difficulty'),\r\n          proficiency: q.get('proficiency'),\r\n          appearanceLevel: q.get('appearanceLevel'),\r\n          tags: q.get('tags') || [],\r\n          category: q.get('category') ? {\r\n            id: q.get('category').id,\r\n            name: q.get('category').get('name')\r\n          } : null,\r\n          createdAt: q.get('createdAt'),\r\n          updatedAt: q.get('updatedAt')\r\n        }))\r\n      };\r\n\r\n      const dataStr = JSON.stringify(exportData, null, 2);\r\n      const dataBlob = new Blob([dataStr], { type: 'application/json' });\r\n      const url = URL.createObjectURL(dataBlob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `knowledge-base-export-${new Date().toISOString().split('T')[0]}.json`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      URL.revokeObjectURL(url);\r\n\r\n      showMessage('success', '数据导出成功！');\r\n    } catch (error) {\r\n      console.error('数据导出失败:', error);\r\n      showMessage('error', `数据导出失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (formType, field, value) => {\r\n    switch (formType) {\r\n      case 'profile':\r\n        setProfileForm(prev => ({ ...prev, [field]: value }));\r\n        break;\r\n      case 'password':\r\n        setPasswordForm(prev => ({ ...prev, [field]: value }));\r\n        break;\r\n      case 'preferences':\r\n        setPreferencesForm(prev => ({ ...prev, [field]: value }));\r\n        break;\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"user-settings-overlay\">\r\n      <div className=\"user-settings-modal\">\r\n        {/* 头部 */}\r\n        <div className=\"settings-header\">\r\n          <div className=\"header-content\">\r\n            <h2>账户设置</h2>\r\n            <p>管理您的账户信息和偏好设置</p>\r\n          </div>\r\n          <button \r\n            className=\"close-button\"\r\n            onClick={onClose}\r\n            disabled={saving}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        {/* 消息提示 */}\r\n        {message.text && (\r\n          <div className={`message ${message.type}`}>\r\n            {message.text}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"settings-content\">\r\n          {/* 侧边栏导航 */}\r\n          <div className=\"settings-sidebar\">\r\n            <button \r\n              className={`sidebar-item ${activeTab === 'profile' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('profile')}\r\n            >\r\n              <span className=\"item-icon\">👤</span>\r\n              <span className=\"item-text\">个人信息</span>\r\n            </button>\r\n            \r\n            <button \r\n              className={`sidebar-item ${activeTab === 'security' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('security')}\r\n            >\r\n              <span className=\"item-icon\">🔒</span>\r\n              <span className=\"item-text\">安全设置</span>\r\n            </button>\r\n            \r\n            <button \r\n              className={`sidebar-item ${activeTab === 'preferences' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('preferences')}\r\n            >\r\n              <span className=\"item-icon\">⚙️</span>\r\n              <span className=\"item-text\">偏好设置</span>\r\n            </button>\r\n            \r\n            <button \r\n              className={`sidebar-item ${activeTab === 'data' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('data')}\r\n            >\r\n              <span className=\"item-icon\">📊</span>\r\n              <span className=\"item-text\">学习统计</span>\r\n            </button>\r\n          </div>\r\n\r\n          {/* 主要内容区域 */}\r\n          <div className=\"settings-main\">\r\n            {activeTab === 'profile' && (\r\n              <div className=\"tab-content\">\r\n                <h3>个人信息</h3>\r\n                \r\n                {/* 头像上传区域 */}\r\n                <div className=\"avatar-section\">\r\n                  <div className=\"avatar-upload\">\r\n                    <div className=\"avatar-preview\">\r\n                      {avatarPreview ? (\r\n                        <img \r\n                          src={avatarPreview} \r\n                          alt=\"头像预览\"\r\n                          style={{\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            objectFit: 'cover',\r\n                            objectPosition: 'center'\r\n                          }}\r\n                          onLoad={() => console.log('✅ 头像预览加载成功')}\r\n                          onError={(e) => {\r\n                            console.error('❌ 头像预览加载失败:', avatarPreview);\r\n                            e.target.style.display = 'none';\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <div className=\"avatar-placeholder\">\r\n                          {profileForm.username?.charAt(0).toUpperCase()}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"avatar-controls\">\r\n                      <input\r\n                        type=\"file\"\r\n                        id=\"avatar-upload\"\r\n                        accept=\"image/*\"\r\n                        onChange={handleAvatarUpload}\r\n                        className=\"avatar-input\"\r\n                      />\r\n                      <label htmlFor=\"avatar-upload\" className=\"avatar-upload-btn\">\r\n                        选择图片\r\n                      </label>\r\n                      {avatarFile && (\r\n                        <button \r\n                          className=\"avatar-save-btn\"\r\n                          onClick={handleAvatarSave}\r\n                          disabled={saving}\r\n                        >\r\n                          {saving ? '上传中...' : '保存头像'}\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"avatar-hint\">\r\n                    支持 JPG、PNG 格式，大小不超过 2MB\r\n                  </div>\r\n                </div>\r\n\r\n                <form onSubmit={handleProfileUpdate} className=\"settings-form\">\r\n                  <div className=\"form-group\">\r\n                    <label>用户名</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={profileForm.username}\r\n                      disabled\r\n                      className=\"disabled-input\"\r\n                    />\r\n                    <div className=\"field-hint\">用户名创建后不可修改</div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>邮箱地址</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      value={profileForm.email}\r\n                      disabled\r\n                      className=\"disabled-input\"\r\n                    />\r\n                    <div className=\"field-hint\">\r\n                      {profileForm.email ? '邮箱已验证' : '未设置邮箱'}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>昵称</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={profileForm.nickname}\r\n                      onChange={(e) => handleInputChange('profile', 'nickname', e.target.value)}\r\n                      placeholder=\"请输入您的昵称\"\r\n                      maxLength={20}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>个人简介</label>\r\n                    <textarea\r\n                      value={profileForm.bio}\r\n                      onChange={(e) => handleInputChange('profile', 'bio', e.target.value)}\r\n                      placeholder=\"介绍一下您自己...\"\r\n                      rows=\"3\"\r\n                      maxLength={200}\r\n                    />\r\n                    <div className=\"char-count\">\r\n                      {profileForm.bio.length}/200\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-actions\">\r\n                    <button \r\n                      type=\"submit\" \r\n                      className=\"save-button\"\r\n                      disabled={saving}\r\n                    >\r\n                      {saving ? '保存中...' : '保存更改'}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'security' && (\r\n              <div className=\"tab-content\">\r\n                <h3>安全设置</h3>\r\n                \r\n                {/* 邮箱验证 */}\r\n                <div className=\"security-section\">\r\n                  <h4>邮箱验证</h4>\r\n                  <div className=\"security-item\">\r\n                    <div className=\"security-info\">\r\n                      <span className=\"security-label\">邮箱状态</span>\r\n                      <span className={`security-status ${securityForm.emailVerified ? 'verified' : 'unverified'}`}>\r\n                        {securityForm.emailVerified ? '已验证' : '未验证'}\r\n                      </span>\r\n                    </div>\r\n                    {!securityForm.emailVerified && (\r\n                      <button \r\n                        className=\"security-action-btn\"\r\n                        onClick={handleEmailVerification}\r\n                        disabled={loading || !profileForm.email}\r\n                      >\r\n                        {loading ? '发送中...' : '发送验证邮件'}\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 密码修改 */}\r\n                <div className=\"security-section\">\r\n                  <h4>修改密码</h4>\r\n                  <form onSubmit={handlePasswordChange} className=\"settings-form\">\r\n                    <div className=\"form-group\">\r\n                      <label>当前密码</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        value={passwordForm.currentPassword}\r\n                        onChange={(e) => handleInputChange('password', 'currentPassword', e.target.value)}\r\n                        placeholder=\"请输入当前密码\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>新密码</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        value={passwordForm.newPassword}\r\n                        onChange={(e) => handleInputChange('password', 'newPassword', e.target.value)}\r\n                        placeholder=\"请输入新密码（至少6位）\"\r\n                        minLength={6}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>确认新密码</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        value={passwordForm.confirmPassword}\r\n                        onChange={(e) => handleInputChange('password', 'confirmPassword', e.target.value)}\r\n                        placeholder=\"请再次输入新密码\"\r\n                        minLength={6}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"password-strength\">\r\n                      <div className=\"strength-bar\">\r\n                        <div \r\n                          className={`strength-fill ${\r\n                            passwordForm.newPassword.length >= 6 ? 'strong' : 'weak'\r\n                          }`}\r\n                          style={{ \r\n                            width: `${Math.min((passwordForm.newPassword.length / 6) * 100, 100)}%` \r\n                          }}\r\n                        ></div>\r\n                      </div>\r\n                      <div className=\"strength-text\">\r\n                        {passwordForm.newPassword.length >= 6 ? '密码强度足够' : '密码至少需要6位'}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-actions\">\r\n                      <button \r\n                        type=\"submit\" \r\n                        className=\"save-button\"\r\n                        disabled={saving}\r\n                      >\r\n                        {saving ? '更新中...' : '修改密码'}\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n\r\n                {/* 密码重置 */}\r\n                <div className=\"security-section\">\r\n                  <h4>密码重置</h4>\r\n                  <div className=\"security-item\">\r\n                    <div className=\"security-info\">\r\n                      <span className=\"security-label\">忘记密码？</span>\r\n                      <span className=\"security-description\">\r\n                        通过邮箱重置您的密码\r\n                      </span>\r\n                    </div>\r\n                    <button \r\n                      className=\"security-action-btn secondary\"\r\n                      onClick={handlePasswordReset}\r\n                      disabled={loading || !profileForm.email}\r\n                    >\r\n                      {loading ? '发送中...' : '发送重置邮件'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'preferences' && (\r\n              <div className=\"tab-content\">\r\n                <h3>偏好设置</h3>\r\n                <form onSubmit={handlePreferencesUpdate} className=\"settings-form\">\r\n                  <div className=\"form-group\">\r\n                    <label>主题模式</label>\r\n                    <div className=\"radio-group\">\r\n                      <label className=\"radio-option\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          name=\"theme\"\r\n                          value=\"light\"\r\n                          checked={preferencesForm.theme === 'light'}\r\n                          onChange={(e) => handleInputChange('preferences', 'theme', e.target.value)}\r\n                        />\r\n                        <span className=\"radio-label\">\r\n                          <span className=\"radio-icon\">🌞</span>\r\n                          浅色模式\r\n                        </span>\r\n                      </label>\r\n                      <label className=\"radio-option\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          name=\"theme\"\r\n                          value=\"dark\"\r\n                          checked={preferencesForm.theme === 'dark'}\r\n                          onChange={(e) => handleInputChange('preferences', 'theme', e.target.value)}\r\n                        />\r\n                        <span className=\"radio-label\">\r\n                          <span className=\"radio-icon\">🌙</span>\r\n                          深色模式\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>语言</label>\r\n                    <select\r\n                      value={preferencesForm.language}\r\n                      onChange={(e) => handleInputChange('preferences', 'language', e.target.value)}\r\n                    >\r\n                      <option value=\"zh-CN\">简体中文</option>\r\n                      <option value=\"en-US\">English</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>通知设置</label>\r\n                    <div className=\"switch-group\">\r\n                      <label className=\"switch\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={preferencesForm.notifications}\r\n                          onChange={(e) => handleInputChange('preferences', 'notifications', e.target.checked)}\r\n                        />\r\n                        <span className=\"slider\"></span>\r\n                      </label>\r\n                      <span className=\"switch-label\">\r\n                        启用浏览器通知\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>邮件更新</label>\r\n                    <div className=\"switch-group\">\r\n                      <label className=\"switch\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={preferencesForm.emailUpdates}\r\n                          onChange={(e) => handleInputChange('preferences', 'emailUpdates', e.target.checked)}\r\n                        />\r\n                        <span className=\"slider\"></span>\r\n                      </label>\r\n                      <span className=\"switch-label\">\r\n                        接收产品更新邮件\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-actions\">\r\n                    <button \r\n                      type=\"submit\" \r\n                      className=\"save-button\"\r\n                      disabled={saving}\r\n                    >\r\n                      {saving ? '保存中...' : '保存设置'}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'data' && (\r\n              <div className=\"tab-content\">\r\n                <h3>学习统计</h3>\r\n                \r\n                {/* 使用与 HomePage 相同的统计样式 */}\r\n                <div className=\"stats-overview\">\r\n                  <div className=\"stats-grid\">\r\n                    <div className=\"stat-card\">\r\n                      <div className=\"stat-icon\">📚</div>\r\n                      <div className=\"stat-content\">\r\n                        <div className=\"stat-number\">{studyStats.totalCategories}</div>\r\n                        <div className=\"stat-label\">知识分类</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"stat-card\">\r\n                      <div className=\"stat-icon\">❓</div>\r\n                      <div className=\"stat-content\">\r\n                        <div className=\"stat-number\">{studyStats.totalQuestions}</div>\r\n                        <div className=\"stat-label\">题目总数</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"stat-card\">\r\n                      <div className=\"stat-icon\">📖</div>\r\n                      <div className=\"stat-content\">\r\n                        <div className=\"stat-number\">{studyStats.reviewQuestions}</div>\r\n                        <div className=\"stat-label\">待复习</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"stat-card\">\r\n                      <div className=\"stat-icon\">⚡</div>\r\n                      <div className=\"stat-content\">\r\n                        <div className=\"stat-number\">{studyStats.todayReviewed}</div>\r\n                        <div className=\"stat-label\">今日复习</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 进度统计 */}\r\n                <div className=\"progress-section\">\r\n                  <div className=\"progress-item\">\r\n                    <div className=\"progress-header\">\r\n                      <span className=\"progress-label\">复习进度</span>\r\n                      <span className=\"progress-percent\">\r\n                        {studyStats.totalQuestions > 0 \r\n                          ? Math.round(((studyStats.totalQuestions - studyStats.reviewQuestions) / studyStats.totalQuestions) * 100)\r\n                          : 0\r\n                        }%\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"progress-bar\">\r\n                      <div \r\n                        className=\"progress-fill\"\r\n                        style={{ \r\n                          width: `${studyStats.totalQuestions > 0 \r\n                            ? ((studyStats.totalQuestions - studyStats.reviewQuestions) / studyStats.totalQuestions) * 100 \r\n                            : 0\r\n                          }%` \r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"progress-text\">\r\n                      已复习 {studyStats.totalQuestions - studyStats.reviewQuestions} / {studyStats.totalQuestions} 题目\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 数据导出 */}\r\n                <div className=\"data-section\">\r\n                  <h4>数据导出</h4>\r\n                  <div className=\"data-item\">\r\n                    <div className=\"data-info\">\r\n                      <span className=\"data-label\">导出学习数据</span>\r\n                      <span className=\"data-description\">\r\n                        导出您的所有分类和题目数据为 JSON 格式\r\n                      </span>\r\n                    </div>\r\n                    <button \r\n                      className=\"data-action-btn\"\r\n                      onClick={handleDataExport}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? '导出中...' : '导出数据'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 数据清理 */}\r\n                <div className=\"data-section\">\r\n                  <h4>数据清理</h4>\r\n                  <div className=\"data-item danger\">\r\n                    <div className=\"data-info\">\r\n                      <span className=\"data-label\">删除账户数据</span>\r\n                      <span className=\"data-description\">\r\n                        永久删除您的所有学习数据，此操作不可撤销\r\n                      </span>\r\n                    </div>\r\n                    <button \r\n                      className=\"data-action-btn danger\"\r\n                      disabled\r\n                    >\r\n                      即将开放\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSettingsModal;","// src/pages/ReviewPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport { getAllQuestions, updateQuestion } from '../services/questionService';\r\nimport AV from 'leancloud-storage';\r\nimport ReviewReminderSection from '../components/ReviewReminderSection';\r\nimport './ReviewPage.css';\r\n\r\n// 创建 React Query 客户端\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      staleTime: 5 * 60 * 1000,\r\n      cacheTime: 10 * 60 * 1000,\r\n      retry: 1,\r\n    },\r\n  },\r\n});\r\n\r\nconst ReviewPage = () => {\r\n  const navigate = useNavigate();\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // 复习提醒相关状态\r\n  const [reviewThreshold, setReviewThreshold] = useState(7);\r\n  const [reviewQuestions, setReviewQuestions] = useState([]);\r\n  const [showReviewSettings, setShowReviewSettings] = useState(false);\r\n\r\n  // 用户状态\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  // 检查用户登录状态\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n    \r\n    if (user) {\r\n      initializeData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const initializeData = async () => {\r\n    try {\r\n      const questionsData = await getAllQuestions();\r\n      setQuestions(questionsData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 计算需要复习的题目\r\n  useEffect(() => {\r\n    const calculateReviewQuestions = () => {\r\n      const now = new Date();\r\n      const thresholdMs = reviewThreshold * 24 * 60 * 60 * 1000;\r\n      \r\n      const needReview = questions.filter(question => {\r\n        const lastReviewed = new Date(question.updatedAt || question.createdAt);\r\n        const timeDiff = now - lastReviewed;\r\n        return timeDiff >= thresholdMs;\r\n      }).sort((a, b) => {\r\n        return new Date(a.updatedAt || a.createdAt) - new Date(b.updatedAt || b.createdAt);\r\n      });\r\n      \r\n      setReviewQuestions(needReview);\r\n    };\r\n\r\n    if (questions.length > 0) {\r\n      calculateReviewQuestions();\r\n    }\r\n  }, [questions, reviewThreshold]);\r\n\r\n  // 更新题目复习时间\r\n  const handleUpdateQuestionTime = async (questionId) => {\r\n    try {\r\n      console.log('更新题目复习时间:', questionId);\r\n      \r\n      const currentTime = new Date().toISOString();\r\n      \r\n      await updateQuestion(questionId, {\r\n        updatedAt: currentTime\r\n      });\r\n      \r\n      setQuestions(prev => prev.map(q => \r\n        q.id === questionId \r\n          ? { ...q, updatedAt: currentTime }\r\n          : q\r\n      ));\r\n      \r\n      console.log(`题目 ${questionId} 复习时间已更新`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('更新题目时间失败:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleQuestionClick = (questionId) => {\r\n    const question = questions.find(q => q.id === questionId);\r\n    if (question && question.category) {\r\n      navigate(`/category/${question.category.id}`);\r\n    }\r\n  };\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"review-page\">\r\n        <div className=\"auth-required-container\">\r\n          <div className=\"auth-required-icon\">🔐</div>\r\n          <h2>请先登录</h2>\r\n          <p>登录后即可使用复习提醒功能</p>\r\n          <div className=\"auth-required-actions\">\r\n            <button \r\n              onClick={() => {\r\n                window.dispatchEvent(new CustomEvent('showAuthModal', { \r\n                  detail: { tab: 'login' } \r\n                }));\r\n              }}\r\n              className=\"login-btn primary\"\r\n            >\r\n              🚀 立即登录\r\n            </button>\r\n            <button \r\n              onClick={() => {\r\n                window.dispatchEvent(new CustomEvent('showAuthModal', { \r\n                  detail: { tab: 'register' } \r\n                }));\r\n              }}\r\n              className=\"login-btn secondary\"\r\n            >\r\n              📝 注册账号\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"review-page\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载复习数据中...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"review-page\">\r\n        <div className=\"error-container\">\r\n          <h2>加载失败</h2>\r\n          <p>{error}</p>\r\n          <button onClick={() => window.location.reload()} className=\"retry-btn\">\r\n            重试\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <div className=\"review-page\">\r\n        <header className=\"review-hero-section\">\r\n          <div className=\"hero-content\">\r\n            <div className=\"user-welcome\">\r\n              <h1 className=\"hero-title\">📚 复习提醒</h1>\r\n              <p className=\"hero-subtitle\">\r\n                智能管理您的学习进度，{reviewQuestions.length > 0 ? \r\n                  `有 ${reviewQuestions.length} 道题目需要复习` : \r\n                  '所有题目都已及时复习'\r\n                }\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"review-stats-overview\">\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-number\">{questions.length}</div>\r\n                <div className=\"stat-label\">总题目数</div>\r\n              </div>\r\n              <div className=\"stat-card warning\">\r\n                <div className=\"stat-number\">{reviewQuestions.length}</div>\r\n                <div className=\"stat-label\">待复习</div>\r\n              </div>\r\n              <div className=\"stat-card success\">\r\n                <div className=\"stat-number\">{questions.length - reviewQuestions.length}</div>\r\n                <div className=\"stat-label\">已复习</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <ReviewReminderSection\r\n          reviewQuestions={reviewQuestions}\r\n          setReviewQuestions={setReviewQuestions}\r\n          reviewThreshold={reviewThreshold}\r\n          setReviewThreshold={setReviewThreshold}\r\n          showReviewSettings={showReviewSettings}\r\n          setShowReviewSettings={setShowReviewSettings}\r\n          onQuestionClick={handleQuestionClick}\r\n          onUpdateQuestionTime={handleUpdateQuestionTime}\r\n          questions={questions}\r\n        />\r\n\r\n        <footer className=\"review-footer\">\r\n          <div className=\"footer-actions\">\r\n            <button \r\n              onClick={() => navigate('/')}\r\n              className=\"back-to-home-btn\"\r\n            >\r\n              ← 返回首页\r\n            </button>\r\n            <div className=\"footer-info\">\r\n              基于间隔重复原理，帮助您高效记忆\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n\r\nexport default ReviewPage;","// src/components/PWAInstallPrompt.jsx\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst PWAInstallPrompt = () => {\r\n  const [deferredPrompt, setDeferredPrompt] = useState(null);\r\n  const [showPrompt, setShowPrompt] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleBeforeInstallPrompt = (e) => {\r\n      // 阻止默认的安装提示\r\n      e.preventDefault();\r\n      // 保存事件以便后续使用\r\n      setDeferredPrompt(e);\r\n      setShowPrompt(true);\r\n    };\r\n\r\n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\r\n    };\r\n  }, []);\r\n\r\n  const handleInstallClick = async () => {\r\n    if (!deferredPrompt) return;\r\n\r\n    // 显示安装提示\r\n    deferredPrompt.prompt();\r\n    \r\n    // 等待用户选择\r\n    const { outcome } = await deferredPrompt.userChoice;\r\n    \r\n    if (outcome === 'accepted') {\r\n      console.log('用户接受了安装');\r\n    } else {\r\n      console.log('用户拒绝了安装');\r\n    }\r\n    \r\n    setDeferredPrompt(null);\r\n    setShowPrompt(false);\r\n  };\r\n\r\n  const handleDismiss = () => {\r\n    setDeferredPrompt(null);\r\n    setShowPrompt(false);\r\n  };\r\n\r\n  if (!showPrompt) return null;\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      bottom: '20px',\r\n      right: '20px',\r\n      background: 'white',\r\n      padding: '16px',\r\n      borderRadius: '8px',\r\n      boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\r\n      zIndex: 1000,\r\n      maxWidth: '300px'\r\n    }}>\r\n      <h4>安装应用</h4>\r\n      <p>将此应用安装到您的设备上以获得更好的体验</p>\r\n      <div style={{ display: 'flex', gap: '8px', marginTop: '12px' }}>\r\n        <button \r\n          onClick={handleInstallClick}\r\n          style={{\r\n            background: '#007bff',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '8px 16px',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          安装\r\n        </button>\r\n        <button \r\n          onClick={handleDismiss}\r\n          style={{\r\n            background: 'transparent',\r\n            border: '1px solid #ccc',\r\n            padding: '8px 16px',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          稍后\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PWAInstallPrompt;","// App.jsx\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport HomePage from './pages/HomePage';\nimport InitPage from './components/InitPage';\nimport CategoryDetailPage from './pages/CategoryDetailPage';\nimport TestPage from './pages/TestPage';\nimport Navigation from './components/Navigation';\nimport AuthModal from './components/AuthModal';\nimport UserSettingsModal from './components/UserSettingsModal';\nimport ReviewPage from './pages/ReviewPage';\nimport './App.css';\nimport PWAInstallPrompt from './components/PWAInstallPrompt';\n\n// 在组件外部创建 QueryClient 实例\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 1,\n      staleTime: 5 * 60 * 1000, // 5分钟\n      gcTime: 10 * 60 * 1000, // 缓存时间10分钟\n    },\n  },\n});\n\nfunction App() {\n  const [isAuthModalOpen, setIsAuthModalOpen] = useState(false);\n  const [authModalTab, setAuthModalTab] = useState('login');\n  const [isUserSettingsOpen, setIsUserSettingsOpen] = useState(false);\n  const [userSettingsTab, setUserSettingsTab] = useState('profile');\n\n  // 监听自定义事件\n  useEffect(() => {\n    const handleShowAuthModal = (event) => {\n      const tab = event.detail?.tab || 'login';\n      setAuthModalTab(tab);\n      setIsAuthModalOpen(true);\n    };\n\n    const handleShowUserSettings = (event) => {\n      const tab = event.detail?.tab || 'profile';\n      setUserSettingsTab(tab);\n      setIsUserSettingsOpen(true);\n    };\n\n    window.addEventListener('showAuthModal', handleShowAuthModal);\n    window.addEventListener('showUserSettings', handleShowUserSettings);\n\n    return () => {\n      window.removeEventListener('showAuthModal', handleShowAuthModal);\n      window.removeEventListener('showUserSettings', handleShowUserSettings);\n    };\n  }, []);\n\n  const handleShowAuthModal = (tab = 'login') => {\n    setAuthModalTab(tab);\n    setIsAuthModalOpen(true);\n  };\n\n  // 添加认证成功回调\n  const handleAuthSuccess = () => {\n    window.location.reload();\n  };\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Router>\n        <Navigation onShowAuthModal={handleShowAuthModal} />\n        \n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/init\" element={<InitPage />} />\n          <Route path=\"/category/:categoryId\" element={<CategoryDetailPage />} />\n          <Route path=\"/test\" element={<TestPage />} />\n          <Route path=\"/review\" element={<ReviewPage />} />\n        </Routes>\n\n        <AuthModal \n          isOpen={isAuthModalOpen}\n          onClose={() => setIsAuthModalOpen(false)}\n          defaultTab={authModalTab}\n          onAuthSuccess={handleAuthSuccess}\n        />\n\n        <UserSettingsModal \n          isOpen={isUserSettingsOpen}\n          onClose={() => setIsUserSettingsOpen(false)}\n        />\n                <PWAInstallPrompt />\n\n      </Router>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;","import 'core-js/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// 注册 Service Worker\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', async () => {\n    try {\n      // 先检查 sw.js 文件是否存在\n      const response = await fetch('/sw.js');\n      if (!response.ok) {\n        throw new Error(`sw.js not found: ${response.status}`);\n      }\n      \n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('javascript')) {\n        throw new Error(`Invalid MIME type: ${contentType}`);\n      }\n      \n      // 文件存在且类型正确，进行注册\n      const registration = await navigator.serviceWorker.register('/sw.js');\n      console.log('SW registered successfully: ', registration);\n    } catch (error) {\n      console.log('SW registration failed: ', error);\n      console.log('Error details:', error.message);\n    }\n  });\n}"],"names":["constructor","this","baseUrl","sessions","Map","checkServerStatus","console","log","response","fetch","data","json","ok","error","message","sendWelcome","userId","getFallbackWelcome","requestBody","method","headers","body","JSON","stringify","status","statusText","errorText","text","Error","success","intent","warn","stack","detectIntent","getFallbackResponse","confidence","parameters","msg","toLowerCase","includes","Chatbox","onNavigate","categories","questions","currentUser","isOpen","setIsOpen","useState","messages","setMessages","inputText","setInputText","isTyping","setIsTyping","messagesEndRef","useRef","useEffect","length","sendWelcomeMessage","async","DialogflowService","id","welcomeMessage","Date","now","isBot","timestamp","quickReplies","fallbackMessage","getUsername","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","prev","botResponse","actions","processMessage","botMessage","_jsxs","_Fragment","children","className","onClick","title","_jsx","clearConversation","map","split","line","i","toLocaleTimeString","hour","minute","reply","index","setTimeout","action","type","target","confirmMessage","label","searchMessage","handleFunctionAction","handleActionClick","ref","value","onChange","e","onKeyPress","key","shiftKey","preventDefault","placeholder","rows","disabled","initAV","AV","appId","process","appKey","serverURL","QueryOptions","SORT_BY_NAME","SORT_BY_QUESTION_COUNT","SORT_BY_UPDATED_AT","cacheConfig","ttl","categoryDetails","categoryDetailTtl","questionCounts","questionCountTtl","isCacheValid","getCategoriesQuestionCounts","categoryIds","cat","forEach","categoryId","uncachedCategoryIds","cached","get","count","push","countPromises","categoryPointer","createWithoutData","questionQuery","equalTo","countResults","Promise","all","set","batchError","categoryPointers","containedIn","select","find","question","category","fallbackError","getAllCategories","query","include","descending","result","name","description","questionCount","undefined","createdAt","updatedAt","createdBy","getCategories","options","isDefaultQuery","page","pageSize","sortBy","total","SORT_BY_CREATED_AT","skip","limit","categoriesWithCount","createCategory","extend","categoryData","acl","setReadAccess","setWriteAccess","setPublicReadAccess","setACL","save","clear","requestManager","pendingRequests","cache","cacheTimeout","debounce","fn","delay","resolve","reject","has","clearTimeout","timer","delete","cachedRequest","useCache","clearCache","DifficultyOptions","ProficiencyOptions","getCategoryId","objectId","createCategoryPointer","batchUpdateQueue","batchUpdateTimer","scheduleBatchUpdate","change","updates","categoryUpdates","updatePromises","Object","entries","totalChange","categoryQuery","freshCategory","currentCount","newCount","Math","max","batchUpdateCategoryCounts","formatQuestionResponse","detailedAnswer","oralAnswer","code","url","tags","difficulty","proficiency","appearanceLevel","lastReviewedAt","createQuestion","questionData","updateCategoryCountImmediately","deleteQuestion","questionId","first","destroy","getAllQuestions","allQuestions","hasMore","batchResults","题目总数","批次","最新题目","slice","q","updateQuestion","updateData","oldCategory","keys","newCategoryId","oldCategoryId","updatedQuestion","ReviewReminderSection","reviewQuestions","setReviewQuestions","reviewThreshold","setReviewThreshold","showReviewSettings","setShowReviewSettings","onQuestionClick","onUpdateQuestionTime","selectedUrgency","setSelectedUrgency","searchTerm","setSearchTerm","updatingQuestions","setUpdatingQuestions","Set","setCurrentUser","formatTimeAgo","date","diffMs","diffDays","floor","diffWeeks","diffMonths","getUrgencyLevel","lastReviewed","daysAgo","getUrgencyText","urgency","getUrgencyDaysDescription","handleQuestionClick","alert","categoryUrl","window","history","pushState","dispatchEvent","PopStateEvent","location","href","CustomEvent","detail","filteredQuestions","filter","matchesSearch","questionsByUrgency","high","medium","low","getProgressPercentage","totalQuestions","reviewedQuestions","round","style","width","htmlFor","min","step","parseInt","days","backgroundColor","urgencyColor","getUrgencyColor","isUpdating","substring","tag","tagIndex","stopPropagation","add","newList","errorMessage","newSet","handleReviewNow","handlePostpone","QuestionItem","React","getDifficultyColor","color","getDifficultyText","displayName","CalendarTooltip","dayData","position","onClose","isVisible","tooltipRef","queryClient","useQueryClient","cachedQuestions","setCachedQuestions","itemHeights","setItemHeights","questionsData","isLoading","useQuery","queryKey","toISOString","join","queryFn","missingQuestionIds","getQueryData","questionIds","batches","results","batch","getQuestionsBatch","setQueryData","enabled","staleTime","cacheTime","retry","retryDelay","parentRef","virtualizer","useVirtualizer","getScrollElement","estimateSize","overscan","handleClickOutside","useCallback","event","contains","document","addEventListener","removeEventListener","handleEscape","virtualQuestions","getVirtualItems","left","x","innerWidth","top","y","transform","getDate","toLocaleDateString","weekday","year","month","day","height","viewBox","fill","d","overflow","getTotalSize","virtualRow","size","start","Documents","selectedDoc","setSelectedDoc","currentQuoteIndex","setCurrentQuoteIndex","techQuotes","author","interval","setInterval","prevIndex","clearInterval","documents","icon","doc","filteredDocs","handleCloseModal","prevQuote","nextQuote","_","categoryDocs","handleDocClick","handleVisitSite","open","CommunityService","getPosts","sortOrder","keyword","authorId","titleQuery","contentQuery","or","createPost","postData","post","content","isPublic","getPostById","increment","getComments","postId","ascending","addComment","parentId","comment","parent","toggleLike","Like","existingLike","postObj","liked","like","getPopularTags","posts","tagCount","sort","a","b","CreatePostModal","onSuccess","formData","setFormData","submitting","setSubmitting","errors","setErrors","charCount","setCharCount","suggestedTags","setSuggestedTags","textareaRef","maxLengths","popularTags","scrollHeight","matchedTags","handleInputChange","field","onSubmit","validateForm","newErrors","tagsArray","newPost","submit","getTitleCharCountColor","ratio","maxLength","getContentCharCountColor","currentTags","t","newTags","handleTagSuggestionClick","checked","SearchBar","onSearch","setKeyword","isFocused","setIsFocused","showSuggestions","setShowSuggestions","searchInputRef","timeoutId","handleSuggestionClick","suggestion","handleSearch","onFocus","handleFocus","onBlur","handleBlur","onKeyDown","blur","handleClear","focus","TagCloud","onTagClick","maxTags","setTags","loading","setLoading","selectedTag","setSelectedTag","defaultTags","loadPopularTags","tagsWithColors","tagData","getTagColor","colors","handleClearFilter","maxCount","totalPosts","reduce","sum","getTagSize","sizes","isSelected","handleTagClick","CommunityStats","stats","setStats","totalComments","totalLikes","activeUsers","todayPosts","trendingTags","lastUpdated","setLastUpdated","loadStats","catch","today","setHours","greaterThanOrEqualTo","weekAgo","setDate","distinct","postQuery","formatNumber","num","toFixed","toString","formatTime","diffMins","diffHours","CommentItem","onReply","onUpdate","likes","setLikes","isLiked","setIsLiked","showActions","setShowActions","editing","setEditing","editContent","setEditContent","saving","setSaving","isAuthor","handleReplyClick","onMouseEnter","onMouseLeave","src","alt","handleEdit","confirm","handleCancelEdit","dangerouslySetInnerHTML","__html","replace","CommentSection","comments","setComments","newComment","setNewComment","setSortBy","replyingTo","setReplyingTo","loadComments","sortedComments","handleSubmitComment","showSuccessMessage","handleReply","getCommentCountText","cancelReply","ctrlKey","metaKey","PostCard","showComments","setShowComments","views","setViews","borderColor","handleToggleComments","CommunityPage","activeTab","setActiveTab","setPosts","allPosts","setAllPosts","showCreateModal","setShowCreateModal","searchKeyword","setSearchKeyword","pagination","setPagination","loadPosts","filtered","reset","currentPage","postsData","newAllPosts","getSearchStats","matchCount","handleLoadMore","QueryClient","defaultOptions","queries","HomePage","navigate","useNavigate","setCategories","setQuestions","setError","syncing","setSyncing","syncMessage","setSyncMessage","selectedMonth","setSelectedMonth","showAddCategory","setShowAddCategory","newCategoryName","setNewCategoryName","newCategoryDescription","setNewCategoryDescription","addingCategory","setAddingCategory","showDeleteConfirm","setShowDeleteConfirm","categoryToDelete","setCategoryToDelete","deletingCategory","setDeletingCategory","hoveredDay","setHoveredDay","tooltipPosition","setTooltipPosition","tooltipVisible","setTooltipVisible","calendarRef","handleManualRefresh","clearAllCache","clearCategoryCache","initializeData","handleQuestionCreated","user","handleDeleteClick","handleCancelDelete","calculateReviewQuestions","thresholdMs","needReview","categoriesData","分类数据","题目数据","题目详情","err","filteredCategories","useMemo","categoryStats","totalCategories","categoriesWithQuestions","totalQuestionsFromCategories","分类总数","基于分类的题目总数","基于所有题目的题目总数","差异","abs","有题目的分类数","对象","各分类详情","分类名称","服务层题目数","前端计算题目数","是否匹配","getDayQuestions","dateStr","getDayColor","getMonthlyCalendarData","monthStart","getFullYear","getMonth","monthEnd","dateCounts","questionDate","calendarData","currentDate","dayQuestions","isToday","handleDayMouseEnter","calendarRect","getBoundingClientRect","dayRect","currentTarget","handleDayMouseLeave","querySelector","handleTooltipClose","navigateMonth","direction","newDate","setMonth","getMonthStats","monthData","daysWithQuestions","maxDaily","getCategoryChartData","categoryMap","categoryName","fullName","percentage","getDifficultyData","difficultyMap","getActiveDays","toDateString","handleCategoryClick","getProgressWidth","c","defaultColors","chartData","difficultyData","activeDays","monthStats","monthName","reload","QueryClientProvider","client","newCategory","autoFocus","deletedQuestions","destroyAll","clearCategoryCacheById","deleteCategory","actualQuestionCount","displayCount","charAt","currentTime","errorStack","ResponsiveContainer","PieChart","Pie","cx","cy","labelLine","outerRadius","dataKey","entry","Cell","Tooltip","formatter","Legend","BarChart","CartesianGrid","strokeDasharray","XAxis","YAxis","Bar","scrollTo","tab","CommunityClasses","PostStatusOptions","NotionFieldMapping","createCommunityClasses","Post","createPostClass","Comment","createCommentClass","createLikeClass","Follow","createFollowClass","exists","testPost","setPublicWriteAccess","testComment","testLike","testFollow","generateCommunitySampleData","createSamplePosts","createSampleComments","createSampleLikes","samplePosts","isPinned","random","saved","sampleComments","commentQuery","clearCommunityData","deletedCount","follows","likeQuery","followQuery","syncProblemsFromNotion","REACT_APP_NOTION_TOKEN","REACT_APP_NOTION_DATABASE_ID","run","cloudError","syncWithClientVersion","synced","mode","parseNotionPage","properties","getNotionPropertyValue","completionTime","Array","isArray","notionPageId","notionUrl","lastEditedTime","last_edited_time","isActive","fieldNames","expectedType","fieldName","property","rich_text","multi_select","item","number","saveNotionProblemsToLeanCloud","Question","savedCount","problemData","problems","findOrCreateCategory","updateAllCategoryCounts","Category","checkNotionConnection","connected","generateSampleData","clearAllData","createCategories","createQuestions","updateCategoryCounts","categoriesCount","questionsCount","answer","categoryIndex","deletedCategories","checkDataStatus","categoryCount","hasData","defineNotionCloudFunctions","define","Client","require","notion","auth","NOTION_INTEGRATION_TOKEN","databases","database_id","NOTION_DATABASE_ID","sorts","syncedCount","fetched","database","retrieve","plain_text","InitPage","setMessage","dataStatus","setDataStatus","notionStatus","setNotionStatus","syncResult","setSyncResult","communityStatus","setCommunityStatus","handleCheckStatus","handleCheckCommunityStatus","postCount","commentCount","likeCount","followCount","rel","problem","failedTables","QuestionForm","onSave","onCancel","defaultCategoryId","onCategoryChange","images","newTag","setNewTag","loadingCategories","setLoadingCategories","activeAnswerTab","setActiveAnswerTab","uploadingImages","setUploadingImages","fileInputRef","detailedAnswerRef","oralAnswerRef","isEditing","loadCategories","userCategories","总数","用户分类","当前用户","分类详情","handleFiles","files","answerType","imageFiles","file","uploadImage","uploadingId","avFile","savedFile","imageInfo","insertImageMarkdown","markdown","currentText","newText","handleAddTag","renderAnswerTab","hint","img","isUploading","onDragOver","handleDragOver","textarea","classList","onDragLeave","handleDragLeave","remove","onDrop","handleDrop","from","dataTransfer","setAttribute","click","triggerFileInput","image","removeImage","imageId","string","URL","isValidUrl","categoryChanged","handleRemoveTag","tagToRemove","display","accept","multiple","getAttribute","handleFileSelect","QuestionDetailCard","onDelete","isExpandedView","onUpdateField","onEdit","showQuestionForm","setShowQuestionForm","editingQuestion","setEditingQuestion","setIsEditing","showFullAnswer","setShowFullAnswer","deleteLoading","setDeleteLoading","editLoading","setEditLoading","localAppearanceLevel","setLocalAppearanceLevel","updatingAppearance","setUpdatingAppearance","showReviewConfirm","setShowReviewConfirm","reviewDays","setReviewDays","confirmingReview","setConfirmingReview","showRemoveReview","setShowRemoveReview","removeDays","setRemoveDays","removingReview","setRemovingReview","getAppearanceLevelColor","level","formatText","lines","elements","inCodeBlock","codeBlockContent","codeLanguage","startsWith","imageMatch","match","altText","imageUrl","processedLine","listItem","orderedListMatch","parseMarkdown","handleDelete","handleSave","handleCancel","getProficiencyText","新值","newLevel","当前prop值","当前本地状态值","handleAppearanceLevelChange","background","toggleAnswer","formatCode","nextReviewDate","right","bottom","justifyContent","alignItems","zIndex","padding","QuestionAccordion","isExpanded","onToggle","viewMode","isDragging","isDragOver","onDragStart","onDragEnd","canDrag","getDifficultyBorderColor","getDifficultyBackgroundColor","getProficiencyColor","getProficiencyIcon","getAnswerPreview","answerText","draggable","borderLeft","border","CategoryDetailPage","useParams","setCategory","allCategories","setAllCategories","expandedQuestions","setExpandedQuestions","setViewMode","draggingQuestion","setDraggingQuestion","dragOverQuestion","setDragOverQuestion","loadMoreTriggerRef","containerRef","handleScrollToQuestion","questionElement","block","boxShadow","toggleQuestion","loadCategoryInfo","loadAllCategories","formattedQuestions","getCategoryWithQuestions","fetchNextPage","hasNextPage","isFetchingNextPage","refetch","useInfiniteQuery","pageParam","addAscending","addDescending","getQuestionsByCategory","dataLength","nextPage","getNextPageParam","lastPage","allPages","initialPageParam","pages","flatMap","acc","some","values","sortedQuestions","sorted","localeCompare","difficultyOrder","handleScroll","container","scrollTop","clientHeight","distanceFromBottom","shouldLoad","debouncedScroll","func","timeout","args","later","observer","IntersectionObserver","isIntersecting","threshold","root","rootMargin","observe","disconnect","deleteQuestionMutation","useMutation","mutationFn","invalidateQueries","onError","updateQuestionMutation","handleAddQuestion","handleEditQuestion","handleDeleteQuestion","questionToDelete","mutate","handleUpdateQuestionField","mutateAsync","handleBack","handleDragEnd","opacity","handleRetry","expandAllQuestions","allQuestionIds","collapseAllQuestions","marginTop","borderRadius","handleManualLoadMore","fontSize","marginLeft","marginBottom","virtualItem","measureElement","handleDragStart","effectAllowed","setData","dropEffect","targetQuestionId","fromIndex","findIndex","toIndex","newQuestions","movedQuestion","splice","textAlign","fontStyle","handleQuestionCategoryChange","UserService","username","password","email","setUsername","setPassword","setEmail","signUp","logIn","getCurrentUser","UserTestPanel","testData","setTestData","register","nickname","login","checkCurrentUser","updateTestData","section","logOut","required","DataMigrationService","setupAdminUser","getEmail","migrateCategoriesToCurrentUser","doesNotExist","migratedCount","migrated","migrateQuestionsToCurrentUser","performFullMigration","adminUser","categoryResult","questionResult","checkMigrationStatus","orphanCategories","orphanQuestions","migrationNeeded","migrateQuestionCreatedBy","performQuestionMigrationOnly","DataMigrationPanel","migrationStatus","setMigrationStatus","migrationResult","setMigrationResult","TestPage","Navigation","onShowAuthModal","showUserMenu","setShowUserMenu","userMenuRef","handleAvatarUpdate","freshUser","isAuthorizedEmail","UserAvatar","avatar","fallbackText","toUpperCase","avatarUrl","getAvatarUrl","getTime","onLoad","fallback","nextSibling","objectFit","objectPosition","Link","to","handleUserMenuToggle","AuthModal","defaultTab","onAuthSuccess","loginUsername","loginPassword","registerUsername","registerEmail","registerPassword","registerConfirmPassword","isWechatLoading","setIsWechatLoading","UserSettingsModal","avatarFile","setAvatarFile","avatarPreview","setAvatarPreview","studyStats","setStudyStats","todayReviewed","profileForm","setProfileForm","bio","passwordForm","setPasswordForm","currentPassword","newPassword","confirmPassword","preferencesForm","setPreferencesForm","theme","language","notifications","emailUpdates","securityForm","setSecurityForm","emailVerified","loadUserData","loadStudyStats","categoriesQuery","questionsQuery","showMessage","duration","formType","reader","FileReader","onload","readAsDataURL","fileData","base64Data","onerror","fileName","mimeType","avatarUrlWithCacheBust","updatedUser","fetchError","requestEmailVerify","updatePassword","minLength","requestPasswordReset","exportData","exportTime","dataStr","dataBlob","Blob","createObjectURL","link","createElement","download","appendChild","removeChild","revokeObjectURL","ReviewPage","PWAInstallPrompt","deferredPrompt","setDeferredPrompt","showPrompt","setShowPrompt","handleBeforeInstallPrompt","maxWidth","gap","prompt","outcome","userChoice","cursor","handleDismiss","refetchOnWindowFocus","gcTime","isAuthModalOpen","setIsAuthModalOpen","authModalTab","setAuthModalTab","isUserSettingsOpen","setIsUserSettingsOpen","userSettingsTab","setUserSettingsTab","handleShowAuthModal","handleShowUserSettings","Router","Routes","Route","path","element","handleAuthSuccess","ReactDOM","getElementById","render","App","navigator","contentType","registration","serviceWorker"],"sourceRoot":""}