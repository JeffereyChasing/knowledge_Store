{"version":3,"file":"static/js/main.29ae49af.js","mappings":"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","sources":["webpack://bagu/./src/services/dialogflowService.js","webpack://bagu/./src/components/Chatbox.jsx","webpack://bagu/./src/services/offlineService.js","webpack://bagu/./src/services/categoryService.js","webpack://bagu/./src/services/questionService.js","webpack://bagu/./src/services/cacheService.js","webpack://bagu/./src/components/OfflineIndicator.jsx","webpack://bagu/./src/components/CacheManagementTab.jsx","webpack://bagu/./src/components/ReviewReminderSection.jsx","webpack://bagu/./src/components/CalendarTooltip.jsx","webpack://bagu/./src/components/Documents.jsx","webpack://bagu/./src/services/communityService.js","webpack://bagu/./src/components/community/CreatePostModal.jsx","webpack://bagu/./src/components/community/SearchBar.jsx","webpack://bagu/./src/components/community/TagCloud.jsx","webpack://bagu/./src/components/community/CommunityStats.jsx","webpack://bagu/./src/components/community/CommentItem.jsx","webpack://bagu/./src/components/community/CommentSection.jsx","webpack://bagu/./src/components/community/PostCard.jsx","webpack://bagu/./src/components/community/CommunityPage.jsx","webpack://bagu/./src/pages/HomePage.jsx","webpack://bagu/./src/services/initClasses.js","webpack://bagu/./src/components/InitPage.jsx","webpack://bagu/./src/components/QuestionForm.jsx","webpack://bagu/./src/components/QuestionDetailCard.jsx","webpack://bagu/./src/pages/CategoryDetailPage.jsx","webpack://bagu/./src/services/userService.js","webpack://bagu/./src/components/UserTestPanel.jsx","webpack://bagu/./src/services/dataMigrationService.js","webpack://bagu/./src/components/DataMigrationPanel.jsx","webpack://bagu/./src/pages/TestPage.jsx","webpack://bagu/./src/components/Navigation.jsx","webpack://bagu/./src/components/AuthModal.jsx","webpack://bagu/./src/components/UserSettingsModal.jsx","webpack://bagu/./src/pages/ReviewPage.jsx","webpack://bagu/./src/components/PWAInstallPrompt.jsx","webpack://bagu/./src/pages/OfflineQuestionsPage.jsx","webpack://bagu/./src/App.js","webpack://bagu/./src/index.js"],"sourcesContent":["// src/services/dialogflowService.js\r\nconst PROXY_BASE_URL = 'http://localhost:3001';\r\n\r\nclass DialogflowService {\r\n  constructor() {\r\n    this.baseUrl = PROXY_BASE_URL;\r\n    this.sessions = new Map();\r\n  }\r\n\r\n  // 检查服务器状态\r\n  async checkServerStatus() {\r\n    try {\r\n      console.log('🔍 检查代理服务器状态...');\r\n      const response = await fetch(`${this.baseUrl}/api/health`);\r\n      const data = await response.json();\r\n      console.log('📊 服务器状态:', data);\r\n      return response.ok;\r\n    } catch (error) {\r\n      console.error('❌ 代理服务器未响应:', error.message);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // 发送欢迎消息\r\n  async sendWelcome(userId) {\r\n    console.log('🔄 开始发送欢迎消息...');\r\n    console.log('用户ID:', userId);\r\n    console.log('目标URL:', `${this.baseUrl}/api/dialogflow/welcome`);\r\n\r\n    // 先检查服务器状态\r\n    const isServerRunning = await this.checkServerStatus();\r\n    if (!isServerRunning) {\r\n      console.error('❌ 代理服务器未运行');\r\n      return this.getFallbackWelcome();\r\n    }\r\n\r\n    try {\r\n      console.log('📤 发送欢迎消息请求...');\r\n      \r\n      const requestBody = {\r\n        userId: userId\r\n      };\r\n      console.log('请求体:', requestBody);\r\n\r\n      const response = await fetch(`${this.baseUrl}/api/dialogflow/welcome`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestBody)\r\n      });\r\n\r\n      console.log('📥 收到响应状态:', response.status, response.statusText);\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('❌ HTTP 错误:', response.status, errorText);\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('✅ 欢迎消息响应数据:', data);\r\n      \r\n      if (!data.success) {\r\n        console.warn('⚠️ 欢迎消息返回失败:', data.error);\r\n        return this.getFallbackWelcome();\r\n      }\r\n\r\n      console.log('🎉 欢迎消息成功');\r\n      return {\r\n        text: data.text,\r\n        intent: data.intent,\r\n        success: true\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('💥 欢迎消息请求失败:', error.message);\r\n      console.error('错误堆栈:', error.stack);\r\n      return this.getFallbackWelcome();\r\n    }\r\n  }\r\n\r\n  // 检测意图\r\n  async detectIntent(message, userId) {\r\n    console.log('🔄 开始检测意图...');\r\n    console.log('消息:', message);\r\n    console.log('用户ID:', userId);\r\n\r\n    // 先检查服务器状态\r\n    const isServerRunning = await this.checkServerStatus();\r\n    if (!isServerRunning) {\r\n      console.error('❌ 代理服务器未运行');\r\n      return this.getFallbackResponse(message);\r\n    }\r\n\r\n    try {\r\n      console.log('📤 发送聊天消息请求...');\r\n      \r\n      const requestBody = {\r\n        message: message,\r\n        userId: userId\r\n      };\r\n      console.log('请求体:', requestBody);\r\n\r\n      const response = await fetch(`${this.baseUrl}/api/dialogflow/chat`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestBody)\r\n      });\r\n\r\n      console.log('📥 收到响应状态:', response.status, response.statusText);\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('❌ HTTP 错误:', response.status, errorText);\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('✅ 聊天消息响应数据:', data);\r\n      \r\n      if (!data.success) {\r\n        console.warn('⚠️ 聊天消息返回失败:', data.error);\r\n        return this.getFallbackResponse(message);\r\n      }\r\n\r\n      console.log('🎉 聊天消息成功');\r\n      return {\r\n        text: data.text,\r\n        intent: data.intent,\r\n        confidence: data.confidence,\r\n        parameters: data.parameters,\r\n        success: true\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('💥 聊天消息请求失败:', error.message);\r\n      return this.getFallbackResponse(message);\r\n    }\r\n  }\r\n\r\n  // 回退欢迎消息\r\n  getFallbackWelcome() {\r\n    console.log('🔄 使用回退欢迎消息');\r\n    return {\r\n      text: '👋 你好！我是你的学习助手，我可以帮你：\\n\\n📚 管理学习分类和题目\\n🔍 搜索特定内容\\n🔄 安排复习计划\\n📊 查看学习统计\\n\\n请问需要什么帮助？',\r\n      intent: 'welcome_fallback',\r\n      success: true\r\n    };\r\n  }\r\n\r\n  // 回退响应\r\n  getFallbackResponse(message) {\r\n    console.log('🔄 使用回退响应');\r\n    const msg = message.toLowerCase();\r\n    \r\n    if (msg.includes('分类') || msg.includes('类别')) {\r\n      return {\r\n        text: '📚 正在加载学习分类...',\r\n        intent: 'categories_fallback',\r\n        success: true\r\n      };\r\n    } else if (msg.includes('搜索') || msg.includes('查找') || msg.includes('找题')) {\r\n      return {\r\n        text: '🔍 请告诉我你想搜索什么题目？',\r\n        intent: 'search_fallback',\r\n        success: true\r\n      };\r\n    } else if (msg.includes('复习')) {\r\n      return {\r\n        text: '🔄 开始复习！我会安排合适的学习计划。',\r\n        intent: 'review_fallback',\r\n        success: true\r\n      };\r\n    } else if (msg.includes('统计') || msg.includes('数据')) {\r\n      return {\r\n        text: '📊 正在生成学习统计报告...',\r\n        intent: 'stats_fallback',\r\n        success: true\r\n      };\r\n    } else if (msg.includes('你好') || msg.includes('hello') || msg.includes('hi')) {\r\n      return {\r\n        text: '👋 你好！我是学习助手，可以帮你管理分类、搜索题目、安排复习。',\r\n        intent: 'greeting_fallback',\r\n        success: true\r\n      };\r\n    } else {\r\n      return {\r\n        text: '🤔 我不太明白。你可以问我关于分类、题目、复习或统计的问题。',\r\n        intent: 'general_fallback',\r\n        success: true\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport default new DialogflowService();","// components/Chatbox.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport DialogflowService from '../services/dialogflowService';\r\nimport './Chatbox.css';\r\n\r\nconst Chatbox = ({ onNavigate, categories, questions, currentUser }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // 初始欢迎消息\r\n  useEffect(() => {\r\n    if (isOpen && messages.length === 0) {\r\n      sendWelcomeMessage();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const sendWelcomeMessage = async () => {\r\n    setIsTyping(true);\r\n    \r\n    try {\r\n      // 使用新的代理服务器 API\r\n      const response = await DialogflowService.sendWelcome(currentUser?.id);\r\n      \r\n      const welcomeMessage = {\r\n        id: Date.now(),\r\n        text: response.text,\r\n        isBot: true,\r\n        timestamp: new Date(),\r\n        quickReplies: [\r\n          '查看所有分类',\r\n          '需要复习的题目',\r\n          '学习统计',\r\n          '创建新分类'\r\n        ]\r\n      };\r\n\r\n      setMessages([welcomeMessage]);\r\n    } catch (error) {\r\n      console.error('Welcome message error:', error);\r\n      // 回退到本地欢迎消息\r\n      const fallbackMessage = {\r\n        id: 1,\r\n        text: `👋 你好${currentUser ? ` ${currentUser.getUsername()}` : ''}！我是你的学习助手，我可以帮你：\\n\\n• 导航到不同功能页面\\n• 查找分类和题目\\n• 管理复习计划\\n• 查看学习统计\\n\\n请问需要什么帮助？`,\r\n        isBot: true,\r\n        timestamp: new Date(),\r\n        quickReplies: [\r\n          '查看所有分类',\r\n          '需要复习的题目',\r\n          '学习统计',\r\n          '创建新分类'\r\n        ]\r\n      };\r\n      setMessages([fallbackMessage]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // 使用新的代理服务器处理消息\r\n  const processMessage = async (userMessage) => {\r\n    setIsTyping(true);\r\n    \r\n    try {\r\n      const response = await DialogflowService.detectIntent(userMessage, currentUser?.id);\r\n      \r\n      setIsTyping(false);\r\n      \r\n      return {\r\n        text: response.text,\r\n        quickReplies: [\r\n          '查看分类',\r\n          '搜索题目', \r\n          '开始复习',\r\n          '学习统计'\r\n        ],\r\n        actions: []\r\n      };\r\n      \r\n    } catch (error) {\r\n      console.error('Message processing error:', error);\r\n      setIsTyping(false);\r\n      \r\n      return {\r\n        text: '网络错误，请稍后重试。',\r\n        quickReplies: ['查看分类', '搜索题目', '开始复习', '学习统计']\r\n      };\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputText.trim()) return;\r\n\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      text: inputText,\r\n      isBot: false,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputText('');\r\n\r\n    // 处理消息并获取回复\r\n    const botResponse = await processMessage(inputText);\r\n    \r\n    const botMessage = {\r\n      id: Date.now() + 1,\r\n      text: botResponse.text,\r\n      isBot: true,\r\n      timestamp: new Date(),\r\n      actions: botResponse.actions,\r\n      quickReplies: botResponse.quickReplies\r\n    };\r\n\r\n    setMessages(prev => [...prev, botMessage]);\r\n  };\r\n\r\n  const handleQuickReply = (text) => {\r\n    setInputText(text);\r\n    setTimeout(() => {\r\n      handleSendMessage();\r\n    }, 100);\r\n  };\r\n\r\n  const handleActionClick = (action) => {\r\n    if (action.type === 'navigate' && onNavigate) {\r\n      onNavigate(action.target);\r\n      \r\n      // 添加导航确认消息\r\n      const confirmMessage = {\r\n        id: Date.now(),\r\n        text: `✅ 正在为你跳转到 ${action.label}...`,\r\n        isBot: true,\r\n        timestamp: new Date()\r\n      };\r\n      setMessages(prev => [...prev, confirmMessage]);\r\n    } else if (action.type === 'function') {\r\n      // 处理功能型动作\r\n      handleFunctionAction(action);\r\n    }\r\n  };\r\n\r\n  const handleFunctionAction = (action) => {\r\n    switch (action.target) {\r\n      case 'searchQuestions':\r\n        // 触发搜索功能\r\n        const searchMessage = {\r\n          id: Date.now(),\r\n          text: '请告诉我你想搜索题目的关键词：',\r\n          isBot: true,\r\n          timestamp: new Date()\r\n        };\r\n        setMessages(prev => [...prev, searchMessage]);\r\n        break;\r\n      default:\r\n        console.log('Function action:', action);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  // 清除对话历史\r\n  const clearConversation = () => {\r\n    setMessages([]);\r\n    sendWelcomeMessage();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* 悬浮按钮 */}\r\n      {!isOpen && (\r\n        <button \r\n          className=\"chatbox-floating-btn\"\r\n          onClick={() => setIsOpen(true)}\r\n          title=\"AI学习助手\"\r\n        >\r\n          <span className=\"chatbot-icon\">🤖</span>\r\n          <span className=\"pulse-dot\"></span>\r\n        </button>\r\n      )}\r\n\r\n      {/* 聊天窗口 */}\r\n      {isOpen && (\r\n        <div className=\"chatbox-container\">\r\n          <div className=\"chatbox-header\">\r\n            <div className=\"chatbox-title\">\r\n              <span className=\"bot-avatar\">🤖</span>\r\n              <div className=\"title-text\">\r\n                <h4>AI学习助手</h4>\r\n                <span className=\"status\">AI在线</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"header-actions\">\r\n              <button \r\n                className=\"clear-btn\"\r\n                onClick={clearConversation}\r\n                title=\"清除对话\"\r\n              >\r\n                🗑️\r\n              </button>\r\n              <button \r\n                className=\"close-btn\"\r\n                onClick={() => setIsOpen(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chatbox-messages\">\r\n            {messages.map((message) => (\r\n              <div\r\n                key={message.id}\r\n                className={`message ${message.isBot ? 'bot-message' : 'user-message'}`}\r\n              >\r\n                <div className=\"message-content\">\r\n                  <div className=\"message-text\">\r\n                    {message.text.split('\\n').map((line, i) => (\r\n                      <span key={i}>\r\n                        {line}\r\n                        <br />\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"message-time\">\r\n                    {message.timestamp.toLocaleTimeString('zh-CN', { \r\n                      hour: '2-digit', \r\n                      minute: '2-digit' \r\n                    })}\r\n                  </div>\r\n                  \r\n                  {/* 快速回复按钮 */}\r\n                  {message.quickReplies && (\r\n                    <div className=\"quick-replies\">\r\n                      {message.quickReplies.map((reply, index) => (\r\n                        <button\r\n                          key={index}\r\n                          className=\"quick-reply-btn\"\r\n                          onClick={() => handleQuickReply(reply)}\r\n                        >\r\n                          {reply}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {/* 操作按钮 */}\r\n                  {message.actions && (\r\n                    <div className=\"action-buttons\">\r\n                      {message.actions.map((action, index) => (\r\n                        <button\r\n                          key={index}\r\n                          className=\"action-btn\"\r\n                          onClick={() => handleActionClick(action)}\r\n                        >\r\n                          {action.label}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            \r\n            {isTyping && (\r\n              <div className=\"message bot-message\">\r\n                <div className=\"message-content\">\r\n                  <div className=\"typing-indicator\">\r\n                    <span>AI正在思考</span>\r\n                    <div className=\"typing-dots\">\r\n                      <span></span>\r\n                      <span></span>\r\n                      <span></span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n\r\n          <div className=\"chatbox-input\">\r\n            <div className=\"input-container\">\r\n              <textarea\r\n                value={inputText}\r\n                onChange={(e) => setInputText(e.target.value)}\r\n                onKeyPress={handleKeyPress}\r\n                placeholder=\"向AI助手提问...\"\r\n                rows=\"1\"\r\n                className=\"message-input\"\r\n              />\r\n              <button \r\n                onClick={handleSendMessage}\r\n                disabled={!inputText.trim() || isTyping}\r\n                className=\"send-btn\"\r\n              >\r\n                {isTyping ? '⏳' : '📤'}\r\n              </button>\r\n            </div>\r\n            <div className=\"input-hint\">\r\n              按 Enter 发送，Shift + Enter 换行\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatbox;","// services/offlineService.js\r\nexport class OfflineService {\r\n  constructor() {\r\n    this.isOnline = true;\r\n    this.setupOnlineListeners();\r\n  }\r\n\r\n  // 设置网络状态监听\r\n  setupOnlineListeners() {\r\n    if (typeof window === 'undefined') return;\r\n\r\n    window.addEventListener('online', () => {\r\n      console.log('🌐 网络已连接');\r\n      this.isOnline = true;\r\n      this.dispatchEvent('online');\r\n    });\r\n\r\n    window.addEventListener('offline', () => {\r\n      console.log('📶 网络已断开');\r\n      this.isOnline = false;\r\n      this.dispatchEvent('offline');\r\n    });\r\n\r\n    // 初始状态\r\n    this.isOnline = navigator.onLine;\r\n  }\r\n\r\n  // 检查网络状态\r\n  isOnlineMode() {\r\n    return this.isOnline;\r\n  }\r\n\r\n  // 检查是否应该使用离线数据\r\n  shouldUseOfflineData() {\r\n    // 如果明确是离线模式，或者网络不可用\r\n    return !this.isOnline;\r\n  }\r\n\r\n  // 模拟网络请求 - 在离线模式下返回假数据\r\n  simulateNetworkRequest() {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.shouldUseOfflineData()) {\r\n        reject(new Error('网络不可用，当前处于离线模式'));\r\n      } else {\r\n        resolve();\r\n      }\r\n    });\r\n  }\r\n\r\n  // 事件分发\r\n  dispatchEvent(eventName, data) {\r\n    if (typeof window !== 'undefined') {\r\n      window.dispatchEvent(new CustomEvent(`offline:${eventName}`, { detail: data }));\r\n    }\r\n  }\r\n\r\n  // 添加事件监听\r\n  addEventListener(eventName, callback) {\r\n    if (typeof window !== 'undefined') {\r\n      window.addEventListener(`offline:${eventName}`, callback);\r\n    }\r\n  }\r\n\r\n  // 移除事件监听\r\n  removeEventListener(eventName, callback) {\r\n    if (typeof window !== 'undefined') {\r\n      window.removeEventListener(`offline:${eventName}`, callback);\r\n    }\r\n  }\r\n}\r\n\r\nexport const offlineService = new OfflineService();","// services/categoryService.js\r\nimport AV from 'leancloud-storage';\r\nimport { offlineService } from './offlineService';\r\n\r\n// 初始化\r\nexport const initAV = () => {\r\n  // 在离线模式下不初始化 LeanCloud\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：跳过 LeanCloud 初始化');\r\n    return;\r\n  }\r\n  \r\n  AV.init({\r\n    appId: process.env.REACT_APP_LC_APP_ID,\r\n    appKey: process.env.REACT_APP_LC_APP_KEY,\r\n    serverURL: process.env.REACT_APP_LC_SERVER_URL\r\n  });\r\n};\r\n\r\n/**\r\n * 查询选项\r\n */\r\nexport const QueryOptions = {\r\n  SORT_BY_NAME: 'name',\r\n  SORT_BY_QUESTION_COUNT: 'questionCount',\r\n  SORT_BY_UPDATED_AT: 'updatedAt'\r\n};\r\n\r\n// 缓存配置\r\nconst cacheConfig = {\r\n  // 分类列表缓存（5分钟）\r\n  categories: {\r\n    data: null,\r\n    timestamp: 0,\r\n    ttl: 5 * 60 * 1000\r\n  },\r\n  // 分类详情缓存（3分钟）\r\n  categoryDetails: new Map(),\r\n  categoryDetailTtl: 3 * 60 * 1000,\r\n  // 题目数量统计缓存（2分钟）\r\n  questionCounts: new Map(),\r\n  questionCountTtl: 2 * 60 * 1000\r\n};\r\n\r\n// 离线数据存储键\r\nconst OFFLINE_CATEGORIES_KEY = 'offline_categories';\r\n\r\n/**\r\n * 清除所有缓存\r\n */\r\nexport const clearCategoryCache = () => {\r\n  cacheConfig.categories.data = null;\r\n  cacheConfig.categories.timestamp = 0;\r\n  cacheConfig.categoryDetails.clear();\r\n  cacheConfig.questionCounts.clear();\r\n};\r\n\r\n/**\r\n * 清除特定分类的缓存\r\n */\r\nexport const clearCategoryCacheById = (categoryId) => {\r\n  if (categoryId) {\r\n    cacheConfig.categoryDetails.delete(categoryId);\r\n    cacheConfig.questionCounts.delete(categoryId);\r\n  }\r\n  // 同时清除分类列表缓存\r\n  cacheConfig.categories.data = null;\r\n  cacheConfig.categories.timestamp = 0;\r\n};\r\n\r\n/**\r\n * 检查缓存是否有效\r\n */\r\nconst isCacheValid = (timestamp, ttl) => {\r\n  return timestamp && (Date.now() - timestamp < ttl);\r\n};\r\n\r\n/**\r\n * 获取离线分类数据\r\n */\r\nconst getOfflineCategories = () => {\r\n  try {\r\n    const cached = localStorage.getItem(OFFLINE_CATEGORIES_KEY);\r\n    if (cached) {\r\n      const data = JSON.parse(cached);\r\n      console.log('📦 从离线存储加载分类数据:', data.data.length, '个分类');\r\n      return data;\r\n    }\r\n    \r\n    // 如果没有离线数据，返回空数据\r\n    return {\r\n      data: [],\r\n      total: 0,\r\n      page: 1,\r\n      pageSize: 50\r\n    };\r\n  } catch (error) {\r\n    console.error('获取离线分类数据失败:', error);\r\n    return {\r\n      data: [],\r\n      total: 0,\r\n      page: 1,\r\n      pageSize: 50\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 保存分类数据到离线存储\r\n */\r\nconst saveCategoriesToOffline = (categories) => {\r\n  try {\r\n    const data = {\r\n      data: categories,\r\n      total: categories.length,\r\n      page: 1,\r\n      pageSize: 50,\r\n      timestamp: Date.now()\r\n    };\r\n    localStorage.setItem(OFFLINE_CATEGORIES_KEY, JSON.stringify(data));\r\n  } catch (error) {\r\n    console.error('保存分类数据到离线存储失败:', error);\r\n  }\r\n};\r\n\r\n/**\r\n * 批量获取分类题目数量（修复版本）\r\n */\r\nconst getCategoriesQuestionCounts = async (categories) => {\r\n  // 离线模式下返回空计数\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：跳过题目数量统计');\r\n    const counts = {};\r\n    categories.forEach(cat => {\r\n      counts[cat.id] = 0;\r\n    });\r\n    return counts;\r\n  }\r\n\r\n  try {\r\n    const categoryIds = categories.map(cat => cat.id);\r\n    const questionCounts = {};\r\n    const now = Date.now();\r\n    \r\n    // 初始化所有分类的计数为0\r\n    categoryIds.forEach(categoryId => {\r\n      questionCounts[categoryId] = 0;\r\n    });\r\n    \r\n    // 检查缓存中已有的数据\r\n    const uncachedCategoryIds = [];\r\n    \r\n    categoryIds.forEach(categoryId => {\r\n      const cached = cacheConfig.questionCounts.get(categoryId);\r\n      if (cached && isCacheValid(cached.timestamp, cacheConfig.questionCountTtl)) {\r\n        questionCounts[categoryId] = cached.count;\r\n      } else {\r\n        uncachedCategoryIds.push(categoryId);\r\n      }\r\n    });\r\n    \r\n    // 如果有未缓存的分类，批量查询\r\n    if (uncachedCategoryIds.length > 0) {\r\n      try {\r\n        // 方法1: 分别查询每个分类的题目数量（更准确）\r\n        const countPromises = uncachedCategoryIds.map(async (categoryId) => {\r\n          try {\r\n            const categoryPointer = AV.Object.createWithoutData('Category', categoryId);\r\n            const questionQuery = new AV.Query('Question');\r\n            questionQuery.equalTo('category', categoryPointer);\r\n            const count = await questionQuery.count();\r\n            return { categoryId, count };\r\n          } catch (error) {\r\n            console.warn(`获取分类 ${categoryId} 题目数量失败:`, error);\r\n            return { categoryId, count: 0 };\r\n          }\r\n        });\r\n        \r\n        const countResults = await Promise.all(countPromises);\r\n        \r\n        // 更新计数\r\n        countResults.forEach(({ categoryId, count }) => {\r\n          questionCounts[categoryId] = count;\r\n        });\r\n        \r\n        // 更新缓存\r\n        countResults.forEach(({ categoryId, count }) => {\r\n          cacheConfig.questionCounts.set(categoryId, {\r\n            count,\r\n            timestamp: now\r\n          });\r\n        });\r\n        \r\n      } catch (batchError) {\r\n        console.warn('批量获取题目数量失败，尝试备用方案:', batchError);\r\n        \r\n        // 备用方案：使用 containedIn 查询\r\n        try {\r\n          const categoryPointers = uncachedCategoryIds.map(id => \r\n            AV.Object.createWithoutData('Category', id)\r\n          );\r\n          \r\n          const questionQuery = new AV.Query('Question');\r\n          questionQuery.containedIn('category', categoryPointers);\r\n          questionQuery.select(['category']);\r\n          \r\n          const questions = await questionQuery.find();\r\n          \r\n          // 统计题目数量\r\n          questions.forEach(question => {\r\n            const category = question.get('category');\r\n            if (category) {\r\n              const categoryId = category.id;\r\n              questionCounts[categoryId] = (questionCounts[categoryId] || 0) + 1;\r\n            }\r\n          });\r\n          \r\n          // 更新缓存\r\n          uncachedCategoryIds.forEach(categoryId => {\r\n            const count = questionCounts[categoryId] || 0;\r\n            cacheConfig.questionCounts.set(categoryId, {\r\n              count,\r\n              timestamp: now\r\n            });\r\n          });\r\n        } catch (fallbackError) {\r\n          console.warn('备用方案也失败:', fallbackError);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return questionCounts;\r\n  } catch (error) {\r\n    console.warn('批量获取题目数量失败:', error);\r\n    return {};\r\n  }\r\n};\r\n\r\n/**\r\n * 获取所有类别（不分页）- 带缓存\r\n */\r\nexport const getAllCategories = async () => {\r\n  // 离线模式处理\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从本地存储获取分类数据');\r\n    const offlineData = getOfflineCategories();\r\n    return offlineData.data || [];\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    // 检查缓存\r\n    const now = Date.now();\r\n    if (cacheConfig.categories.data && \r\n        isCacheValid(cacheConfig.categories.timestamp, cacheConfig.categories.ttl)) {\r\n      return cacheConfig.categories.data;\r\n    }\r\n\r\n    const query = new AV.Query('Category');\r\n    query.equalTo('createdBy', currentUser);\r\n    query.include('createdBy');\r\n    query.descending('updatedAt');\r\n    \r\n    const categories = await query.find();\r\n    \r\n    // 批量获取题目数量\r\n    const questionCounts = await getCategoriesQuestionCounts(categories);\r\n    \r\n    const result = categories.map(category => ({\r\n      id: category.id,\r\n      name: category.get('name'),\r\n      description: category.get('description'),\r\n      questionCount: questionCounts[category.id] !== undefined \r\n        ? questionCounts[category.id] \r\n        : category.get('questionCount') || 0,\r\n      createdAt: category.get('createdAt'),\r\n      updatedAt: category.get('updatedAt'),\r\n      createdBy: category.get('createdBy')\r\n    }));\r\n\r\n    // 更新缓存和离线存储\r\n    cacheConfig.categories.data = result;\r\n    cacheConfig.categories.timestamp = now;\r\n    saveCategoriesToOffline(result);\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取所有分类失败:', error);\r\n    \r\n    // 网络请求失败时，尝试使用离线数据\r\n    if (error.message.includes('offline') || error.message.includes('network') || error.message.includes('CORS')) {\r\n      console.log('🌐 网络请求失败，尝试使用离线数据');\r\n      const offlineData = getOfflineCategories();\r\n      return offlineData.data || [];\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 分页获取类别列表 - 带缓存\r\n */\r\nexport const getCategories = async (options = {}) => {\r\n  // 离线模式处理\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从本地存储获取分类数据');\r\n    return getOfflineCategories();\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    // 检查缓存（仅对默认查询使用缓存）\r\n    const isDefaultQuery = !options.page && !options.pageSize && \r\n                          (!options.sortBy || options.sortBy === QueryOptions.SORT_BY_UPDATED_AT);\r\n    \r\n    const now = Date.now();\r\n    if (isDefaultQuery && cacheConfig.categories.data && \r\n        isCacheValid(cacheConfig.categories.timestamp, cacheConfig.categories.ttl)) {\r\n      return {\r\n        data: cacheConfig.categories.data,\r\n        total: cacheConfig.categories.data.length,\r\n        page: 1,\r\n        pageSize: cacheConfig.categories.data.length\r\n      };\r\n    }\r\n\r\n    const query = new AV.Query('Category');\r\n    query.equalTo('createdBy', currentUser);\r\n    \r\n    // 设置排序\r\n    if (options.sortBy === QueryOptions.SORT_BY_UPDATED_AT) {\r\n      query.descending('updatedAt');\r\n    } else if (options.sortBy === QueryOptions.SORT_BY_CREATED_AT) {\r\n      query.descending('createdAt');\r\n    } else {\r\n      query.descending('updatedAt');\r\n    }\r\n\r\n    // 设置分页\r\n    if (options.page && options.pageSize) {\r\n      const skip = (options.page - 1) * options.pageSize;\r\n      query.limit(options.pageSize);\r\n      query.skip(skip);\r\n    }\r\n\r\n    const categories = await query.find();\r\n    \r\n    // 批量获取题目数量\r\n    const questionCounts = await getCategoriesQuestionCounts(categories);\r\n\r\n    const categoriesWithCount = categories.map((category) => ({\r\n      id: category.id,\r\n      name: category.get('name'),\r\n      description: category.get('description'),\r\n      questionCount: questionCounts[category.id] !== undefined \r\n        ? questionCounts[category.id] \r\n        : category.get('questionCount') || 0,\r\n      createdAt: category.get('createdAt'),\r\n      updatedAt: category.get('updatedAt'),\r\n      createdBy: category.get('createdBy')\r\n    }));\r\n\r\n    const result = {\r\n      data: categoriesWithCount,\r\n      total: categoriesWithCount.length,\r\n      page: options.page || 1,\r\n      pageSize: options.pageSize || categoriesWithCount.length\r\n    };\r\n\r\n    // 如果是默认查询，更新缓存和离线存储\r\n    if (isDefaultQuery) {\r\n      cacheConfig.categories.data = categoriesWithCount;\r\n      cacheConfig.categories.timestamp = now;\r\n      saveCategoriesToOffline(categoriesWithCount);\r\n    }\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取分类失败:', error);\r\n    \r\n    // 网络请求失败时，尝试使用离线数据\r\n    if (error.message.includes('offline') || error.message.includes('network') || error.message.includes('CORS')) {\r\n      console.log('🌐 网络请求失败，尝试使用离线数据');\r\n      return getOfflineCategories();\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 根据ID获取单个类别详情 - 带缓存\r\n */\r\nexport const getCategoryById = async (categoryId) => {\r\n  // 离线模式下返回空数据\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法获取单个分类详情');\r\n    throw new Error('离线模式下无法获取分类详情');\r\n  }\r\n\r\n  try {\r\n    // 检查缓存\r\n    const cached = cacheConfig.categoryDetails.get(categoryId);\r\n    const now = Date.now();\r\n    if (cached && isCacheValid(cached.timestamp, cacheConfig.categoryDetailTtl)) {\r\n      return cached.data;\r\n    }\r\n\r\n    const query = new AV.Query('Category');\r\n    const category = await query.get(categoryId);\r\n    \r\n    if (!category) {\r\n      throw new Error('未找到该类别');\r\n    }\r\n    \r\n    // 获取准确的题目数量\r\n    let questionCount = category.get('questionCount') || 0;\r\n    try {\r\n      const questionQuery = new AV.Query('Question');\r\n      questionQuery.equalTo('category', category);\r\n      questionCount = await questionQuery.count();\r\n    } catch (countError) {\r\n      console.warn('获取题目数量失败，使用缓存值:', countError);\r\n    }\r\n    \r\n    const result = {\r\n      id: category.id,\r\n      name: category.get('name'),\r\n      questionCount,\r\n      updatedAt: category.updatedAt,\r\n      createdAt: category.createdAt\r\n    };\r\n\r\n    // 更新缓存\r\n    cacheConfig.categoryDetails.set(categoryId, {\r\n      data: result,\r\n      timestamp: now\r\n    });\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取类别详情失败:', error);\r\n    throw new Error(`获取详情失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取分类及其题目列表 - 带缓存\r\n */\r\nexport const getCategoryWithQuestions = async (categoryId) => {\r\n  // 离线模式下返回空数据\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法获取分类题目列表');\r\n    throw new Error('离线模式下无法获取分类题目列表');\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    // 获取分类\r\n    const categoryQuery = new AV.Query('Category');\r\n    const category = await categoryQuery.get(categoryId);\r\n    \r\n    // 验证分类是否属于当前用户\r\n    const categoryCreator = category.get('createdBy');\r\n    if (categoryCreator.id !== currentUser.id) {\r\n      throw new Error('无权访问此分类');\r\n    }\r\n\r\n    // 获取该分类下的题目\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    questionQuery.equalTo('createdBy', currentUser);\r\n    questionQuery.include('category');\r\n    questionQuery.descending('updatedAt');\r\n    \r\n    const questions = await questionQuery.find();\r\n    \r\n    const formattedQuestions = questions.map(question => ({\r\n      id: question.id,\r\n      title: question.get('title'),\r\n      detailedAnswer: question.get('detailedAnswer'),\r\n      oralAnswer: question.get('oralAnswer'),\r\n      code: question.get('code'),\r\n      difficulty: question.get('difficulty'),\r\n      appearanceLevel: question.get('appearanceLevel'),\r\n      proficiency: question.get('proficiency'),\r\n      tags: question.get('tags') || [],\r\n      category: {\r\n        id: question.get('category').id,\r\n        name: question.get('category').get('name')\r\n      },\r\n      createdAt: question.get('createdAt'),\r\n      updatedAt: question.get('updatedAt')\r\n    }));\r\n\r\n    const result = {\r\n      category: {\r\n        id: category.id,\r\n        name: category.get('name'),\r\n        description: category.get('description'),\r\n        questionCount: questions.length,\r\n        createdAt: category.get('createdAt'),\r\n        updatedAt: category.get('updatedAt')\r\n      },\r\n      questions: formattedQuestions\r\n    };\r\n\r\n    // 更新题目数量缓存\r\n    const now = Date.now();\r\n    cacheConfig.questionCounts.set(categoryId, {\r\n      count: questions.length,\r\n      timestamp: now\r\n    });\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取分类详情失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 创建新类别 - 清除相关缓存\r\n */\r\nexport const createCategory = async (categoryData) => {\r\n  // 离线模式下不允许创建分类\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    throw new Error('离线模式下无法创建分类');\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    const Category = AV.Object.extend('Category');\r\n    const category = new Category();\r\n    \r\n    category.set('name', categoryData.name);\r\n    category.set('description', categoryData.description || '');\r\n    category.set('createdBy', currentUser);\r\n\r\n    // 设置 ACL 权限\r\n    const acl = new AV.ACL();\r\n    acl.setReadAccess(currentUser, true);\r\n    acl.setWriteAccess(currentUser, true);\r\n    acl.setPublicReadAccess(false);\r\n    category.setACL(acl);\r\n\r\n    await category.save();\r\n    \r\n    // 清除分类列表缓存\r\n    clearCategoryCache();\r\n\r\n    return {\r\n      id: category.id,\r\n      name: category.get('name'),\r\n      description: category.get('description'),\r\n      questionCount: 0,\r\n      createdAt: category.get('createdAt'),\r\n      updatedAt: category.get('updatedAt')\r\n    };\r\n  } catch (error) {\r\n    console.error('创建分类失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新类别 - 清除相关缓存\r\n */\r\nexport const updateCategory = async (categoryId, updateData) => {\r\n  // 离线模式下不允许更新分类\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    throw new Error('离线模式下无法更新分类');\r\n  }\r\n\r\n  try {\r\n    if (updateData.name && updateData.name.trim() === '') {\r\n      throw new Error('类别名不能为空');\r\n    }\r\n\r\n    const category = AV.Object.createWithoutData('Category', categoryId);\r\n    \r\n    if (updateData.name) {\r\n      category.set('name', updateData.name.trim());\r\n    }\r\n    \r\n    const updatedCategory = await category.save();\r\n    \r\n    // 清除相关缓存\r\n    clearCategoryCacheById(categoryId);\r\n\r\n    return {\r\n      id: updatedCategory.id,\r\n      name: updatedCategory.get('name'),\r\n      questionCount: updatedCategory.get('questionCount'),\r\n      updatedAt: updatedCategory.updatedAt\r\n    };\r\n  } catch (error) {\r\n    console.error('更新类别失败:', error);\r\n    throw new Error(`更新失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 更新类别题目计数 - 清除相关缓存\r\n */\r\nexport const updateCategoryQuestionCount = async (categoryId) => {\r\n  // 离线模式下不允许更新计数\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    throw new Error('离线模式下无法更新题目计数');\r\n  }\r\n\r\n  try {\r\n    const category = AV.Object.createWithoutData('Category', categoryId);\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    \r\n    const count = await questionQuery.count();\r\n    \r\n    category.set('questionCount', count);\r\n    await category.save();\r\n    \r\n    // 清除相关缓存\r\n    clearCategoryCacheById(categoryId);\r\n\r\n    return count;\r\n  } catch (error) {\r\n    console.error('更新题目计数失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 删除类别 - 清除相关缓存\r\n */\r\nexport const deleteCategory = async (categoryId) => {\r\n  // 离线模式下不允许删除分类\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    throw new Error('离线模式下无法删除分类');\r\n  }\r\n\r\n  try {\r\n    const category = AV.Object.createWithoutData('Category', categoryId);\r\n    \r\n    // 先删除该类别下的所有题目\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    const questions = await questionQuery.find();\r\n    \r\n    let deletedQuestions = 0;\r\n    if (questions.length > 0) {\r\n      await AV.Object.destroyAll(questions);\r\n      deletedQuestions = questions.length;\r\n    }\r\n    \r\n    // 再删除类别本身\r\n    await category.destroy();\r\n    \r\n    // 清除相关缓存\r\n    clearCategoryCacheById(categoryId);\r\n\r\n    return { \r\n      success: true, \r\n      message: `类别及关联的 ${deletedQuestions} 个题目已删除`,\r\n      deletedQuestions\r\n    };\r\n  } catch (error) {\r\n    console.error('删除类别失败:', error);\r\n    throw new Error(`删除失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 批量获取类别统计信息 - 带缓存\r\n */\r\nexport const getCategoriesStats = async () => {\r\n  try {\r\n    const categories = await getAllCategories(); // 使用带缓存的函数\r\n    \r\n    const stats = {\r\n      totalCategories: categories.length,\r\n      totalQuestions: categories.reduce((sum, cat) => sum + (cat.questionCount || 0), 0),\r\n      averageQuestionsPerCategory: categories.length > 0 \r\n        ? (categories.reduce((sum, cat) => sum + (cat.questionCount || 0), 0) / categories.length).toFixed(1)\r\n        : 0,\r\n      categoriesWithQuestions: categories.filter(cat => (cat.questionCount || 0) > 0).length,\r\n      emptyCategories: categories.filter(cat => (cat.questionCount || 0) === 0).length\r\n    };\r\n    \r\n    return stats;\r\n  } catch (error) {\r\n    console.error('获取类别统计失败:', error);\r\n    throw new Error(`获取统计失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 搜索类别 - 不使用缓存\r\n */\r\nexport const searchCategories = async (searchTerm, options = {}) => {\r\n  // 离线模式下返回空结果\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法搜索分类');\r\n    return {\r\n      data: [],\r\n      pagination: {\r\n        current: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        totalPages: 0\r\n      }\r\n    };\r\n  }\r\n\r\n  try {\r\n    const { page = 1, pageSize = 10 } = options;\r\n    \r\n    const query = new AV.Query('Category');\r\n    query.contains('name', searchTerm);\r\n    query.addDescending('updatedAt');\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    \r\n    const results = await query.find();\r\n    const totalCount = await query.count();\r\n    \r\n    return {\r\n      data: results.map(result => ({\r\n        id: result.id,\r\n        name: result.get('name'),\r\n        questionCount: result.get('questionCount') || 0,\r\n        updatedAt: result.updatedAt,\r\n        createdAt: result.createdAt\r\n      })),\r\n      pagination: {\r\n        current: page,\r\n        pageSize,\r\n        total: totalCount,\r\n        totalPages: Math.ceil(totalCount / pageSize)\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.error('搜索类别失败:', error);\r\n    throw new Error(`搜索失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取分类下的题目 - 不使用缓存（因为题目经常变动）\r\n */\r\nexport const getQuestionsByCategory = async (categoryId, options = {}) => {\r\n  // 离线模式下返回空结果\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法获取分类题目');\r\n    return {\r\n      data: []\r\n    };\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    const { \r\n      page = 1, \r\n      pageSize = 20,\r\n      sortBy = 'updatedAt',\r\n      sortOrder = 'desc'\r\n    } = options;\r\n    \r\n    const categoryPointer = AV.Object.createWithoutData('Category', categoryId);\r\n    const query = new AV.Query('Question');\r\n    \r\n    query.equalTo('category', categoryPointer);\r\n    query.equalTo('createdBy', currentUser);\r\n    query.include('category');\r\n    \r\n    // 排序\r\n    if (sortOrder === 'asc') {\r\n      query.addAscending(sortBy);\r\n    } else {\r\n      query.addDescending(sortBy);\r\n    }\r\n    \r\n    // 分页\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    \r\n    const results = await query.find();\r\n    \r\n    return {\r\n      data: results.map(question => {\r\n        const category = question.get('category');\r\n        return {\r\n          id: question.id,\r\n          title: question.get('title'),\r\n          detailedAnswer: question.get('detailedAnswer'),\r\n          oralAnswer: question.get('oralAnswer'),\r\n          code: question.get('code'),\r\n          url: question.get('url'),\r\n          tags: question.get('tags') || [],\r\n          difficulty: question.get('difficulty'),\r\n          proficiency: question.get('proficiency'),\r\n          appearanceLevel: question.get('appearanceLevel') || 50,\r\n          category: category ? {\r\n            id: category.id,\r\n            objectId: category.id,\r\n            name: category.get('name'),\r\n            description: category.get('description'),\r\n            questionCount: category.get('questionCount') || 0\r\n          } : null,\r\n          createdAt: question.get('createdAt'),\r\n          updatedAt: question.get('updatedAt'),\r\n          lastReviewedAt: question.get('lastReviewedAt')\r\n        };\r\n      })\r\n    };\r\n  } catch (error) {\r\n    console.error('获取分类题目失败:', error);\r\n    throw new Error(`获取题目失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n// 获取所有题目（分页方式）\r\nexport const getAllQuestionsPaginated = async (options = {}) => {\r\n  // 离线模式下返回空结果\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法获取分页题目');\r\n    return {\r\n      data: [],\r\n      total: 0,\r\n      hasMore: false\r\n    };\r\n  }\r\n\r\n  const {\r\n    page = 0,\r\n    pageSize = 50,\r\n    sortBy = 'updatedAt',\r\n    sortOrder = 'desc'\r\n  } = options;\r\n\r\n  try {\r\n    const query = new AV.Query('Question');\r\n    \r\n    // 包含分类信息\r\n    query.include('category');\r\n    \r\n    // 排序\r\n    if (sortBy === 'title') {\r\n      query.addAscending('title');\r\n    } else if (sortBy === 'difficulty') {\r\n      query.addAscending('difficulty');\r\n    } else if (sortBy === 'appearanceLevel') {\r\n      query.addDescending('appearanceLevel');\r\n    } else {\r\n      query.addDescending('updatedAt');\r\n    }\r\n    \r\n    // 分页\r\n    query.limit(pageSize);\r\n    query.skip(page * pageSize);\r\n    \r\n    const results = await query.find();\r\n    \r\n    const questions = results.map(item => ({\r\n      id: item.id,\r\n      title: item.get('title'),\r\n      detailedAnswer: item.get('detailedAnswer'),\r\n      oralAnswer: item.get('oralAnswer'),\r\n      code: item.get('code'),\r\n      difficulty: item.get('difficulty'),\r\n      proficiency: item.get('proficiency'),\r\n      appearanceLevel: item.get('appearanceLevel'),\r\n      tags: item.get('tags') || [],\r\n      lastReviewedAt: item.get('lastReviewedAt'),\r\n      createdAt: item.get('createdAt'),\r\n      updatedAt: item.get('updatedAt'),\r\n      category: item.get('category') ? {\r\n        id: item.get('category').id,\r\n        name: item.get('category').get('name'),\r\n        description: item.get('category').get('description')\r\n      } : null\r\n    }));\r\n    \r\n    return {\r\n      data: questions,\r\n      total: questions.length,\r\n      hasMore: questions.length === pageSize\r\n    };\r\n  } catch (error) {\r\n    console.error('获取题目失败:', error);\r\n    throw error;\r\n  }\r\n};","// services/questionService.js\r\nimport AV from 'leancloud-storage';\r\nimport { offlineService } from './offlineService';\r\n\r\n// 请求管理工具\r\nclass RequestManager {\r\n  constructor() {\r\n    this.pendingRequests = new Map();\r\n    this.cache = new Map();\r\n    this.cacheTimeout = 5 * 60 * 1000; // 5分钟缓存\r\n  }\r\n\r\n  // 防抖请求\r\n  debounce(key, fn, delay = 300) {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.pendingRequests.has(key)) {\r\n        clearTimeout(this.pendingRequests.get(key));\r\n      }\r\n\r\n      const timer = setTimeout(async () => {\r\n        this.pendingRequests.delete(key);\r\n        try {\r\n          const result = await fn();\r\n          resolve(result);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }, delay);\r\n\r\n      this.pendingRequests.set(key, timer);\r\n    });\r\n  }\r\n\r\n  // 缓存请求\r\n  async cachedRequest(key, fn, useCache = true) {\r\n    // 离线模式下不使用网络请求\r\n    if (offlineService.shouldUseOfflineData()) {\r\n      console.log('📦 离线模式：跳过网络请求', key);\r\n      throw new Error('网络不可用，当前处于离线模式');\r\n    }\r\n\r\n    if (useCache) {\r\n      const cached = this.cache.get(key);\r\n      if (cached && Date.now() - cached.timestamp < this.cacheTimeout) {\r\n        return cached.data;\r\n      }\r\n    }\r\n\r\n    const result = await fn();\r\n    \r\n    if (useCache) {\r\n      this.cache.set(key, {\r\n        data: result,\r\n        timestamp: Date.now()\r\n      });\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  // 清除缓存\r\n  clearCache(key = null) {\r\n    if (key) {\r\n      this.cache.delete(key);\r\n    } else {\r\n      this.cache.clear();\r\n    }\r\n  }\r\n}\r\n\r\n// 创建全局请求管理器实例\r\nexport const requestManager = new RequestManager();\r\n\r\n/**\r\n * 难度选项\r\n */\r\nexport const DifficultyOptions = {\r\n  EASY: 'easy',\r\n  MEDIUM: 'medium',\r\n  HARD: 'hard'\r\n};\r\n\r\n/**\r\n * 掌握程度选项\r\n */\r\nexport const ProficiencyOptions = {\r\n  BEGINNER: 'beginner',\r\n  INTERMEDIATE: 'intermediate',\r\n  ADVANCED: 'advanced',\r\n  MASTER: 'master'\r\n};\r\n\r\n// 请求配置\r\nconst REQUEST_DELAY = 1000; // 1秒延迟\r\nconst BATCH_SIZE = 10; // 批量请求大小\r\n\r\n// 离线数据存储键\r\nconst OFFLINE_QUESTIONS_KEY = 'offline_questions_all';\r\n\r\n/**\r\n * 获取分类ID的辅助函数\r\n */\r\nconst getCategoryId = (category) => {\r\n  if (category && category.objectId) return category.objectId;\r\n  if (typeof category === 'string') return category;\r\n  if (category && category.id) return category.id;\r\n  return null;\r\n};\r\n\r\n/**\r\n * 创建分类 Pointer 对象的辅助函数\r\n */\r\nconst createCategoryPointer = (categoryId) => {\r\n  if (!categoryId) return null;\r\n  return AV.Object.createWithoutData('Category', categoryId);\r\n};\r\n\r\n/**\r\n * 批量更新分类题目数量的辅助函数\r\n */\r\nconst batchUpdateCategoryCounts = async (updates) => {\r\n  // 离线模式下跳过分类计数更新\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：跳过分类计数更新');\r\n    return;\r\n  }\r\n\r\n  if (updates.length === 0) return;\r\n\r\n  try {\r\n    // 按分类分组更新\r\n    const categoryUpdates = {};\r\n    updates.forEach(({ categoryId, change }) => {\r\n      if (categoryId && !categoryUpdates[categoryId]) {\r\n        categoryUpdates[categoryId] = 0;\r\n      }\r\n      if (categoryId) {\r\n        categoryUpdates[categoryId] += change;\r\n      }\r\n    });\r\n\r\n    // 批量更新分类\r\n    const updatePromises = Object.entries(categoryUpdates).map(async ([categoryId, totalChange]) => {\r\n      try {\r\n        const categoryQuery = new AV.Query('Category');\r\n        const freshCategory = await categoryQuery.get(categoryId);\r\n        \r\n        const currentCount = freshCategory.get('questionCount') || 0;\r\n        const newCount = Math.max(0, currentCount + totalChange);\r\n        \r\n        freshCategory.set('questionCount', newCount);\r\n        await freshCategory.save();\r\n        \r\n        console.log(`分类 ${freshCategory.get('name')} 题目数量批量更新: ${currentCount} -> ${newCount}`);\r\n      } catch (error) {\r\n        console.error(`更新分类 ${categoryId} 题目数量失败:`, error);\r\n      }\r\n    });\r\n\r\n    await Promise.all(updatePromises);\r\n  } catch (error) {\r\n    console.error('批量更新分类题目数量失败:', error);\r\n  }\r\n};\r\n\r\n// 批量更新队列\r\nlet batchUpdateQueue = [];\r\nlet batchUpdateTimer = null;\r\n\r\n/**\r\n * 调度批量更新\r\n */\r\nconst scheduleBatchUpdate = (category, change) => {\r\n  // 离线模式下跳过批量更新\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    return;\r\n  }\r\n\r\n  const categoryId = getCategoryId(category);\r\n  if (!categoryId) return;\r\n\r\n  batchUpdateQueue.push({ categoryId, change });\r\n\r\n  if (batchUpdateTimer) {\r\n    clearTimeout(batchUpdateTimer);\r\n  }\r\n\r\n  batchUpdateTimer = setTimeout(() => {\r\n    const updates = [...batchUpdateQueue];\r\n    batchUpdateQueue = [];\r\n    batchUpdateTimer = null;\r\n    \r\n    batchUpdateCategoryCounts(updates);\r\n  }, 2000); // 2秒后执行批量更新\r\n};\r\n\r\n/**\r\n * 格式化题目响应\r\n */\r\nconst formatQuestionResponse = (question) => {\r\n  const category = question.get('category');\r\n  return {\r\n    id: question.id,\r\n    objectId: question.id,\r\n    title: question.get('title'),\r\n    detailedAnswer: question.get('detailedAnswer'),\r\n    oralAnswer: question.get('oralAnswer'),\r\n    code: question.get('code'),\r\n    url: question.get('url'),\r\n    tags: question.get('tags') || [],\r\n    difficulty: question.get('difficulty'),\r\n    proficiency: question.get('proficiency'),\r\n    appearanceLevel: question.get('appearanceLevel') || 50,\r\n    category: category ? {\r\n      id: category.id,\r\n      objectId: category.id,\r\n      name: category.get('name'),\r\n      description: category.get('description'),\r\n      questionCount: category.get('questionCount') || 0\r\n    } : null,\r\n    createdAt: question.get('createdAt'),\r\n    updatedAt: question.get('updatedAt'),\r\n    lastReviewedAt: question.get('lastReviewedAt')\r\n  };\r\n};\r\n\r\n/**\r\n * 获取离线题目数据\r\n */\r\nconst getOfflineQuestions = () => {\r\n  try {\r\n    const cached = localStorage.getItem(OFFLINE_QUESTIONS_KEY);\r\n    if (cached) {\r\n      const data = JSON.parse(cached);\r\n      console.log('📦 从离线存储加载题目数据:', data.length, '道题目');\r\n      return data;\r\n    }\r\n    \r\n    // 如果没有离线数据，返回空数组\r\n    return [];\r\n  } catch (error) {\r\n    console.error('获取离线题目数据失败:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * 保存题目数据到离线存储\r\n */\r\nconst saveQuestionsToOffline = (questions) => {\r\n  try {\r\n    localStorage.setItem(OFFLINE_QUESTIONS_KEY, JSON.stringify(questions));\r\n  } catch (error) {\r\n    console.error('保存题目数据到离线存储失败:', error);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建题目\r\n */\r\nexport const createQuestion = async (questionData) => {\r\n  // 离线模式下不允许创建题目\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    throw new Error('离线模式下无法创建题目');\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    const Question = AV.Object.extend('Question');\r\n    const question = new Question();\r\n    \r\n    // 设置题目字段\r\n    question.set('title', questionData.title || '');\r\n    question.set('detailedAnswer', questionData.detailedAnswer || '');\r\n    question.set('oralAnswer', questionData.oralAnswer || '');\r\n    question.set('code', questionData.code || '');\r\n    question.set('url', questionData.url || '');\r\n    question.set('tags', questionData.tags || []);\r\n    question.set('difficulty', questionData.difficulty || DifficultyOptions.MEDIUM);\r\n    question.set('proficiency', questionData.proficiency || ProficiencyOptions.BEGINNER);\r\n    question.set('appearanceLevel', questionData.appearanceLevel || 50);\r\n    question.set('createdBy', currentUser);\r\n\r\n    // 设置分类\r\n    if (questionData.categoryId) {\r\n      const categoryPointer = createCategoryPointer(questionData.categoryId);\r\n      question.set('category', categoryPointer);\r\n    }\r\n\r\n    // 设置 ACL 权限\r\n    const acl = new AV.ACL();\r\n    acl.setReadAccess(currentUser, true);\r\n    acl.setWriteAccess(currentUser, true);\r\n    acl.setPublicReadAccess(false);\r\n    question.setACL(acl);\r\n\r\n    await question.save();\r\n    \r\n    // 立即更新分类计数\r\n    if (questionData.categoryId) {\r\n      await updateCategoryCountImmediately(questionData.categoryId, 1);\r\n    }\r\n    \r\n    // 清除相关缓存\r\n    if (questionData.categoryId) {\r\n      requestManager.clearCache(`questions-${questionData.categoryId}`);\r\n    }\r\n    requestManager.clearCache('all-questions');\r\n    \r\n    return formatQuestionResponse(question);\r\n  } catch (error) {\r\n    console.error('创建题目失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取类别的题目列表（带缓存和防抖）\r\n */\r\nexport const getQuestionsByCategory = async (categoryId, options = {}) => {\r\n  // 离线模式下返回空结果\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法获取分类题目列表');\r\n    return {\r\n      data: [],\r\n      pagination: {\r\n        current: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        totalPages: 0\r\n      }\r\n    };\r\n  }\r\n\r\n  const cacheKey = `questions-${categoryId}-${JSON.stringify(options)}`;\r\n  \r\n  return requestManager.cachedRequest(cacheKey, async () => {\r\n    await new Promise(resolve => setTimeout(resolve, REQUEST_DELAY));\r\n    \r\n    try {\r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n\r\n      const { \r\n        page = 1, \r\n        pageSize = 10, \r\n        sortBy = 'updatedAt',\r\n        sortOrder = 'desc',\r\n        difficulty,\r\n        proficiency,\r\n        tag\r\n      } = options;\r\n      \r\n      const categoryPointer = createCategoryPointer(categoryId);\r\n      const query = new AV.Query('Question');\r\n      \r\n      query.equalTo('category', categoryPointer);\r\n      query.equalTo('createdBy', currentUser);\r\n      query.include('category'); // 包含分类信息\r\n      \r\n      // 过滤条件\r\n      if (difficulty) query.equalTo('difficulty', difficulty);\r\n      if (proficiency) query.equalTo('proficiency', proficiency);\r\n      if (tag) query.containsAll('tags', [tag]);\r\n      \r\n      // 排序\r\n      if (sortOrder === 'asc') {\r\n        query.addAscending(sortBy);\r\n      } else {\r\n        query.addDescending(sortBy);\r\n      }\r\n      \r\n      // 分页\r\n      query.limit(pageSize);\r\n      query.skip((page - 1) * pageSize);\r\n      \r\n      const results = await query.find();\r\n      const totalCount = await query.count();\r\n      \r\n      return {\r\n        data: results.map(result => formatQuestionResponse(result)),\r\n        pagination: {\r\n          current: page,\r\n          pageSize,\r\n          total: totalCount,\r\n          totalPages: Math.ceil(totalCount / pageSize)\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('获取题目列表失败:', error);\r\n      throw new Error(`获取题目失败: ${error.message}`);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * 根据ID获取单个题目详情（带缓存）\r\n */\r\nexport const getQuestionById = async (id) => {\r\n  // 离线模式下返回空数据\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法获取单个题目详情');\r\n    throw new Error('离线模式下无法获取题目详情');\r\n  }\r\n\r\n  return requestManager.cachedRequest(`question_${id}`, async () => {\r\n    try {\r\n      const query = new AV.Query('Question');\r\n      query.equalTo('objectId', id);\r\n      query.include('category');\r\n      \r\n      const question = await query.first();\r\n      \r\n      if (!question) {\r\n        throw new Error('题目不存在');\r\n      }\r\n      \r\n      return formatQuestionResponse(question);\r\n    } catch (error) {\r\n      console.error(`获取题目 ${id} 失败:`, error);\r\n      throw error;\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * 批量获取题目详情（优化性能）\r\n */\r\nexport const getQuestionsBatch = async (questionIds) => {\r\n  // 离线模式下返回空数组\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法批量获取题目');\r\n    return [];\r\n  }\r\n\r\n  if (!questionIds || questionIds.length === 0) return [];\r\n\r\n  // 分批处理，避免过多请求\r\n  const batches = [];\r\n  for (let i = 0; i < questionIds.length; i += BATCH_SIZE) {\r\n    batches.push(questionIds.slice(i, i + BATCH_SIZE));\r\n  }\r\n\r\n  const results = [];\r\n  \r\n  for (const batch of batches) {\r\n    await new Promise(resolve => setTimeout(resolve, REQUEST_DELAY));\r\n    \r\n    try {\r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) continue;\r\n\r\n      const query = new AV.Query('Question');\r\n      query.containedIn('objectId', batch);\r\n      query.equalTo('createdBy', currentUser);\r\n      query.include('category');\r\n      \r\n      const batchResults = await query.find();\r\n      results.push(...batchResults.map(q => formatQuestionResponse(q)));\r\n    } catch (error) {\r\n      console.error('批量获取题目失败:', error);\r\n      // 继续处理其他批次\r\n    }\r\n  }\r\n\r\n  return results;\r\n};\r\n\r\n/**\r\n * 删除题目\r\n */\r\nexport const deleteQuestion = async (questionId) => {\r\n  // 离线模式下不允许删除题目\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    throw new Error('离线模式下无法删除题目');\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    // 验证题目是否属于当前用户\r\n    const query = new AV.Query('Question');\r\n    query.equalTo('objectId', questionId);\r\n    query.equalTo('createdBy', currentUser);\r\n    query.include('category');\r\n    const question = await query.first();\r\n    \r\n    if (!question) {\r\n      throw new Error('题目不存在或无权删除');\r\n    }\r\n\r\n    // 获取分类信息用于更新计数\r\n    const category = question.get('category');\r\n    \r\n    await question.destroy();\r\n    \r\n    // 立即更新分类计数\r\n    if (category) {\r\n      await updateCategoryCountImmediately(category, -1);\r\n    }\r\n    \r\n    // 清除缓存\r\n    requestManager.clearCache(`question-${questionId}`);\r\n    requestManager.clearCache('all-questions');\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('删除题目失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 搜索题目\r\n */\r\nexport const searchQuestions = async (searchTerm, options = {}) => {\r\n  // 离线模式下返回空结果\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法搜索题目');\r\n    return {\r\n      data: [],\r\n      pagination: {\r\n        current: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        totalPages: 0\r\n      }\r\n    };\r\n  }\r\n\r\n  const cacheKey = `search-${searchTerm}-${JSON.stringify(options)}`;\r\n  \r\n  return requestManager.cachedRequest(cacheKey, async () => {\r\n    await new Promise(resolve => setTimeout(resolve, REQUEST_DELAY));\r\n    \r\n    try {\r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n\r\n      const { page = 1, pageSize = 10 } = options;\r\n      \r\n      const titleQuery = new AV.Query('Question');\r\n      titleQuery.contains('title', searchTerm);\r\n      titleQuery.equalTo('createdBy', currentUser);\r\n      \r\n      const detailedAnswerQuery = new AV.Query('Question');\r\n      detailedAnswerQuery.contains('detailedAnswer', searchTerm);\r\n      detailedAnswerQuery.equalTo('createdBy', currentUser);\r\n      \r\n      const oralAnswerQuery = new AV.Query('Question');\r\n      oralAnswerQuery.contains('oralAnswer', searchTerm);\r\n      oralAnswerQuery.equalTo('createdBy', currentUser);\r\n      \r\n      const codeQuery = new AV.Query('Question');\r\n      codeQuery.contains('code', searchTerm);\r\n      codeQuery.equalTo('createdBy', currentUser);\r\n      \r\n      const tagsQuery = new AV.Query('Question');\r\n      tagsQuery.containsAll('tags', [searchTerm]);\r\n      tagsQuery.equalTo('createdBy', currentUser);\r\n      \r\n      const query = AV.Query.or(\r\n        titleQuery, \r\n        detailedAnswerQuery, \r\n        oralAnswerQuery, \r\n        codeQuery, \r\n        tagsQuery\r\n      );\r\n      \r\n      query.include('category');\r\n      query.addDescending('updatedAt');\r\n      query.limit(pageSize);\r\n      query.skip((page - 1) * pageSize);\r\n      \r\n      const results = await query.find();\r\n      const totalCount = await query.count();\r\n      \r\n      return {\r\n        data: results.map(result => formatQuestionResponse(result)),\r\n        pagination: {\r\n          current: page,\r\n          pageSize,\r\n          total: totalCount,\r\n          totalPages: Math.ceil(totalCount / pageSize)\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('搜索题目失败:', error);\r\n      throw new Error(`搜索失败: ${error.message}`);\r\n    }\r\n  }, false); // 搜索不缓存\r\n};\r\n\r\n/**\r\n * 获取所有题目（修复分页限制）- 确保获取全部数据\r\n */\r\nexport const getAllQuestions = async (useCache = false) => {\r\n  // 离线模式处理\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从本地存储获取题目数据');\r\n    return getOfflineQuestions();\r\n  }\r\n\r\n  if (!useCache) {\r\n    // 清除缓存\r\n    requestManager.clearCache('all-questions');\r\n\r\n    await new Promise(resolve => setTimeout(resolve, REQUEST_DELAY));\r\n    \r\n    try {\r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n\r\n      const allQuestions = [];\r\n      let skip = 0;\r\n      const limit = 100; // LeanCloud 单次查询限制\r\n      let hasMore = true;\r\n\r\n      // 循环获取所有数据\r\n      while (hasMore) {\r\n        const query = new AV.Query('Question');\r\n        query.equalTo('createdBy', currentUser);\r\n        query.include('category');\r\n        query.descending('updatedAt');\r\n        query.limit(limit);\r\n        query.skip(skip);\r\n        \r\n        const batchResults = await query.find();\r\n        allQuestions.push(...batchResults);\r\n        \r\n        // 检查是否还有更多数据\r\n        hasMore = batchResults.length === limit;\r\n        skip += limit;\r\n        \r\n        console.log(`📦 批量获取题目: 第 ${skip/limit} 批, 获取 ${batchResults.length} 条`);\r\n      }\r\n\r\n      const result = allQuestions.map(question => formatQuestionResponse(question));\r\n      \r\n      console.log('📊 getAllQuestions 实时查询结果:', {\r\n        题目总数: result.length,\r\n        批次: `${skip/limit} 批`,\r\n        最新题目: result.slice(0, 3).map(q => ({ id: q.id, title: q.title }))\r\n      });\r\n      \r\n      // 保存到离线存储\r\n      saveQuestionsToOffline(result);\r\n      \r\n      return result;\r\n    } catch (error) {\r\n      console.error('获取所有题目失败:', error);\r\n      \r\n      // 网络请求失败时，尝试使用离线数据\r\n      if (error.message.includes('offline') || error.message.includes('network') || error.message.includes('CORS')) {\r\n        console.log('🌐 网络请求失败，尝试使用离线数据');\r\n        return getOfflineQuestions();\r\n      }\r\n      \r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  // 原有缓存逻辑\r\n  return requestManager.cachedRequest('all-questions', async () => {\r\n    // 同样需要修复分页问题\r\n    const allQuestions = [];\r\n    let skip = 0;\r\n    const limit = 100;\r\n    let hasMore = true;\r\n\r\n    while (hasMore) {\r\n      const query = new AV.Query('Question');\r\n      query.equalTo('createdBy', currentUser);\r\n      query.include('category');\r\n      query.descending('updatedAt');\r\n      query.limit(limit);\r\n      query.skip(skip);\r\n      \r\n      const batchResults = await query.find();\r\n      allQuestions.push(...batchResults);\r\n      \r\n      hasMore = batchResults.length === limit;\r\n      skip += limit;\r\n    }\r\n\r\n    const result = allQuestions.map(question => formatQuestionResponse(question));\r\n    saveQuestionsToOffline(result);\r\n    return result;\r\n  });\r\n};\r\n\r\n/**\r\n * 更新题目\r\n */\r\nexport const updateQuestion = async (questionId, updateData) => {\r\n  // 离线模式下不允许更新题目\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    throw new Error('离线模式下无法更新题目');\r\n  }\r\n\r\n  try {\r\n    console.log('questionService: 更新题目', questionId, updateData);\r\n    \r\n    const question = AV.Object.createWithoutData('Question', questionId);\r\n    \r\n    // 记录旧的分类信息\r\n    let oldCategory = null;\r\n    if (updateData.categoryId) {\r\n      const oldQuestion = await new AV.Query('Question')\r\n        .include('category')\r\n        .get(questionId);\r\n      oldCategory = oldQuestion.get('category');\r\n    }\r\n    \r\n    // 设置更新字段\r\n    Object.keys(updateData).forEach(key => {\r\n      if (updateData[key] !== undefined) {\r\n        // 如果是 categoryId，转换为 Pointer 对象\r\n        if (key === 'categoryId') {\r\n          const categoryPointer = createCategoryPointer(updateData[key]);\r\n          question.set('category', categoryPointer);\r\n        } else {\r\n          question.set(key, updateData[key]);\r\n        }\r\n      }\r\n    });\r\n    \r\n    const result = await question.save();\r\n    console.log('questionService: 更新成功', result);\r\n    \r\n    // 如果分类发生变化，更新分类计数\r\n    if (updateData.categoryId && oldCategory) {\r\n      const newCategoryId = updateData.categoryId;\r\n      const oldCategoryId = getCategoryId(oldCategory);\r\n      \r\n      if (oldCategoryId !== newCategoryId) {\r\n        // 减少旧分类的计数\r\n        if (oldCategoryId) {\r\n          scheduleBatchUpdate(oldCategoryId, -1);\r\n        }\r\n        // 增加新分类的计数\r\n        if (newCategoryId) {\r\n          scheduleBatchUpdate(newCategoryId, 1);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 清除缓存\r\n    requestManager.clearCache(`question-${questionId}`);\r\n    requestManager.clearCache('all-questions');\r\n    \r\n    // 重新获取更新后的题目信息\r\n    const updatedQuestion = await new AV.Query('Question')\r\n      .include('category')\r\n      .get(questionId);\r\n    \r\n    return formatQuestionResponse(updatedQuestion);\r\n  } catch (error) {\r\n    console.error('questionService: 更新题目失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新题目复习时间\r\n */\r\nexport const updateQuestionReviewTime = async (questionId) => {\r\n  // 离线模式下不允许更新复习时间\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    throw new Error('离线模式下无法更新复习时间');\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    const question = AV.Object.createWithoutData('Question', questionId);\r\n    question.set('lastReviewedAt', new Date());\r\n    \r\n    const result = await question.save();\r\n    \r\n    // 清除缓存\r\n    requestManager.clearCache(`question-${questionId}`);\r\n    requestManager.clearCache('all-questions');\r\n    \r\n    return result;\r\n  } catch (error) {\r\n    console.error('更新题目复习时间失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取需要复习的题目\r\n */\r\nexport const getReviewQuestions = async (thresholdDays = 7) => {\r\n  // 离线模式下返回空数组\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法获取复习题目');\r\n    return [];\r\n  }\r\n\r\n  const cacheKey = `review-questions-${thresholdDays}`;\r\n  \r\n  return requestManager.cachedRequest(cacheKey, async () => {\r\n    try {\r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n\r\n      const thresholdDate = new Date();\r\n      thresholdDate.setDate(thresholdDate.getDate() - thresholdDays);\r\n\r\n      const query = new AV.Query('Question');\r\n      query.equalTo('createdBy', currentUser);\r\n      query.lessThan('lastReviewedAt', thresholdDate);\r\n      query.include('category');\r\n      query.addAscending('lastReviewedAt');\r\n      \r\n      const questions = await query.find();\r\n      \r\n      return questions.map(question => formatQuestionResponse(question));\r\n    } catch (error) {\r\n      console.error('获取复习题目失败:', error);\r\n      throw error;\r\n    }\r\n  });\r\n};\r\n\r\nconst updateCategoryCountImmediately = async (category, change) => {\r\n  // 离线模式下跳过分类计数更新\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    return;\r\n  }\r\n\r\n  if (!category) return;\r\n  \r\n  const categoryId = getCategoryId(category);\r\n  if (!categoryId) return;\r\n\r\n  try {\r\n    const categoryQuery = new AV.Query('Category');\r\n    const freshCategory = await categoryQuery.get(categoryId);\r\n    \r\n    const currentCount = freshCategory.get('questionCount') || 0;\r\n    const newCount = Math.max(0, currentCount + change);\r\n    \r\n    freshCategory.set('questionCount', newCount);\r\n    await freshCategory.save();\r\n    \r\n    console.log(`分类 ${freshCategory.get('name')} 题目数量立即更新: ${currentCount} -> ${newCount}`);\r\n    \r\n    // 清除相关缓存\r\n    // 注意：这里需要访问 categoryService 的缓存配置\r\n    // 在实际项目中，你可能需要导入 categoryService 或使用共享的缓存管理器\r\n    \r\n  } catch (error) {\r\n    console.error(`立即更新分类 ${categoryId} 题目数量失败:`, error);\r\n  }\r\n};\r\n\r\n/**\r\n * 清除所有缓存\r\n */\r\nexport const clearAllCache = () => {\r\n  requestManager.clearCache();\r\n};\r\n\r\n// 导出辅助函数\r\nexport { batchUpdateCategoryCounts, createCategoryPointer };","// src/services/cacheService.js\r\nimport { offlineService } from './offlineService';\r\n\r\nexport class CacheService {\r\n  constructor() {\r\n    this.isSupported = this.checkSupport();\r\n    this.cacheLimit = 30; // 默认缓存30题，可以动态修改\r\n  }\r\n\r\n  // 检查浏览器支持\r\n  checkSupport() {\r\n    return typeof window !== 'undefined' && \r\n           'serviceWorker' in navigator && \r\n           'caches' in window;\r\n  }\r\n\r\n  // 设置缓存题目数量限制\r\n  setCacheLimit(limit) {\r\n    if (limit > 0 && limit <= 500) { // 设置合理的限制范围\r\n      this.cacheLimit = limit;\r\n      console.log(`🔄 缓存题目数量限制设置为: ${limit}`);\r\n      return true;\r\n    }\r\n    console.warn('❌ 缓存数量限制必须在 1-500 之间');\r\n    return false;\r\n  }\r\n\r\n  // 获取当前缓存限制\r\n  getCacheLimit() {\r\n    return this.cacheLimit;\r\n  }\r\n\r\n  // 缓存题目数据\r\n  async cacheQuestions(questions) {\r\n    if (offlineService.shouldUseOfflineData()) {\r\n      console.log('📦 离线模式下跳过缓存操作');\r\n      return false;\r\n    }\r\n\r\n    if (!this.isSupported) {\r\n      console.warn('❌ Service Worker 不可用，使用 localStorage 回退');\r\n      return this.cacheQuestionsFallback(questions);\r\n    }\r\n\r\n    try {\r\n      const cacheData = {\r\n        questions: questions.slice(0, this.cacheLimit), // 使用配置的数量\r\n        timestamp: Date.now(),\r\n        version: '1.0.0',\r\n        count: Math.min(questions.length, this.cacheLimit),\r\n        cacheLimit: this.cacheLimit // 记录缓存限制\r\n      };\r\n\r\n      // 使用 localStorage 作为主要缓存\r\n      localStorage.setItem('offline_questions', JSON.stringify(cacheData));\r\n      \r\n      console.log('✅ 题目数据缓存成功:', cacheData.count, '道题目 (限制:', this.cacheLimit, ')');\r\n      \r\n      // 通知缓存更新\r\n      this.dispatchEvent('cacheUpdated', {\r\n        count: cacheData.count,\r\n        timestamp: cacheData.timestamp,\r\n        cacheLimit: this.cacheLimit\r\n      });\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('❌ 缓存题目数据失败:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // 回退方案：使用 localStorage\r\n  async cacheQuestionsFallback(questions) {\r\n    try {\r\n      const cacheData = {\r\n        questions: questions.slice(0, this.cacheLimit),\r\n        timestamp: Date.now(),\r\n        version: '1.0.0-fallback',\r\n        cacheLimit: this.cacheLimit\r\n      };\r\n\r\n      localStorage.setItem('offline_questions_fallback', JSON.stringify(cacheData));\r\n      console.log('✅ 使用 localStorage 缓存题目:', cacheData.questions.length, '道');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('❌ localStorage 缓存失败:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // 获取缓存的题目\r\n  async getCachedQuestions() {\r\n    if (!this.isSupported) {\r\n      return this.getCachedQuestionsFallback();\r\n    }\r\n\r\n    try {\r\n      const cached = localStorage.getItem('offline_questions');\r\n      if (!cached) {\r\n        return { questions: [], timestamp: null, version: null, cacheLimit: this.cacheLimit };\r\n      }\r\n\r\n      const cacheData = JSON.parse(cached);\r\n      \r\n      // 检查缓存是否过期（7天）\r\n      const isExpired = Date.now() - cacheData.timestamp > 7 * 24 * 60 * 60 * 1000;\r\n      \r\n      if (isExpired) {\r\n        console.log('🕒 缓存已过期，清理旧数据');\r\n        this.clearCache();\r\n        return { questions: [], timestamp: null, version: null, cacheLimit: this.cacheLimit };\r\n      }\r\n\r\n      return cacheData;\r\n    } catch (error) {\r\n      console.error('❌ 获取缓存数据失败:', error);\r\n      return this.getCachedQuestionsFallback();\r\n    }\r\n  }\r\n\r\n  // 回退方案：从 localStorage 获取\r\n  async getCachedQuestionsFallback() {\r\n    try {\r\n      const cached = localStorage.getItem('offline_questions_fallback');\r\n      if (!cached) {\r\n        return { questions: [], timestamp: null, version: null, cacheLimit: this.cacheLimit };\r\n      }\r\n\r\n      return JSON.parse(cached);\r\n    } catch (error) {\r\n      console.error('❌ 获取回退缓存失败:', error);\r\n      return { questions: [], timestamp: null, version: null, cacheLimit: this.cacheLimit };\r\n    }\r\n  }\r\n\r\n  // 获取缓存状态\r\n  getCacheStatus() {\r\n    if (!this.isSupported) {\r\n      return this.getCacheStatusFallback();\r\n    }\r\n\r\n    try {\r\n      const cached = localStorage.getItem('offline_questions');\r\n      if (!cached) {\r\n        return { \r\n          supported: true, \r\n          hasCache: false, \r\n          count: 0, \r\n          timestamp: null,\r\n          cacheLimit: this.cacheLimit \r\n        };\r\n      }\r\n\r\n      const cacheData = JSON.parse(cached);\r\n      return {\r\n        supported: true,\r\n        hasCache: true,\r\n        count: cacheData.questions.length,\r\n        timestamp: cacheData.timestamp,\r\n        cacheLimit: this.cacheLimit,\r\n        isExpired: Date.now() - cacheData.timestamp > 7 * 24 * 60 * 60 * 1000\r\n      };\r\n    } catch (error) {\r\n      return this.getCacheStatusFallback();\r\n    }\r\n  }\r\n\r\n  // 回退方案：从 localStorage 获取状态\r\n  getCacheStatusFallback() {\r\n    try {\r\n      const cached = localStorage.getItem('offline_questions_fallback');\r\n      if (!cached) {\r\n        return { \r\n          supported: false, \r\n          hasCache: false, \r\n          count: 0, \r\n          timestamp: null,\r\n          cacheLimit: this.cacheLimit \r\n        };\r\n      }\r\n\r\n      const data = JSON.parse(cached);\r\n      return {\r\n        supported: false,\r\n        hasCache: true,\r\n        count: data.questions.length,\r\n        timestamp: data.timestamp,\r\n        cacheLimit: this.cacheLimit,\r\n        isExpired: Date.now() - data.timestamp > 7 * 24 * 60 * 60 * 1000\r\n      };\r\n    } catch (error) {\r\n      return { \r\n        supported: false, \r\n        hasCache: false, \r\n        count: 0, \r\n        timestamp: null,\r\n        cacheLimit: this.cacheLimit \r\n      };\r\n    }\r\n  }\r\n\r\n  // 清理缓存\r\n  clearCache() {\r\n    if (this.isSupported) {\r\n      localStorage.removeItem('offline_questions');\r\n    }\r\n    localStorage.removeItem('offline_questions_fallback');\r\n    console.log('🗑️ 缓存已清理');\r\n  }\r\n\r\n  // 获取缓存配置信息\r\n  getCacheConfig() {\r\n    return {\r\n      cacheLimit: this.cacheLimit,\r\n      isSupported: this.isSupported,\r\n      maxLimit: 500, // 最大限制\r\n      minLimit: 1,   // 最小限制\r\n      defaultLimit: 30 // 默认限制\r\n    };\r\n  }\r\n\r\n  // 重置为默认配置\r\n  resetToDefault() {\r\n    this.cacheLimit = 30;\r\n    console.log('🔄 缓存配置已重置为默认值');\r\n    return this.cacheLimit;\r\n  }\r\n\r\n  // 事件分发\r\n  dispatchEvent(eventName, data) {\r\n    if (typeof window !== 'undefined') {\r\n      window.dispatchEvent(new CustomEvent(`cache:${eventName}`, { detail: data }));\r\n    }\r\n  }\r\n\r\n  // 添加事件监听\r\n  addEventListener(eventName, callback) {\r\n    if (typeof window !== 'undefined') {\r\n      window.addEventListener(`cache:${eventName}`, callback);\r\n    }\r\n  }\r\n\r\n  // 移除事件监听\r\n  removeEventListener(eventName, callback) {\r\n    if (typeof window !== 'undefined') {\r\n      window.removeEventListener(`cache:${eventName}`, callback);\r\n    }\r\n  }\r\n}\r\n\r\nexport const cacheService = new CacheService();","// components/OfflineIndicator.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { offlineService } from '../services/offlineService';\r\nimport { cacheService } from '../services/cacheService'; // 确保从正确的文件导入\r\nimport './OfflineIndicator.css';\r\n\r\nconst OfflineIndicator = () => {\r\n  const [isOnline, setIsOnline] = useState(true);\r\n  const [cacheStatus, setCacheStatus] = useState({});\r\n\r\n  useEffect(() => {\r\n    // 初始状态\r\n    setIsOnline(offlineService.isOnlineMode());\r\n    setCacheStatus(cacheService.getCacheStatus());\r\n\r\n    // 监听网络状态变化\r\n    const handleOnline = () => setIsOnline(true);\r\n    const handleOffline = () => setIsOnline(false);\r\n\r\n    offlineService.addEventListener('online', handleOnline);\r\n    offlineService.addEventListener('offline', handleOffline);\r\n\r\n    // 定期更新缓存状态\r\n    const interval = setInterval(() => {\r\n      setCacheStatus(cacheService.getCacheStatus());\r\n    }, 5000);\r\n\r\n    return () => {\r\n      offlineService.removeEventListener('online', handleOnline);\r\n      offlineService.removeEventListener('offline', handleOffline);\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  if (isOnline) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"offline-indicator\">\r\n      <div className=\"offline-content\">\r\n        <div className=\"offline-icon\">📶</div>\r\n        <div className=\"offline-text\">\r\n          <strong>离线模式</strong>\r\n          <span>使用缓存的题目数据</span>\r\n          {cacheStatus.hasCache && (\r\n            <span className=\"cache-info\">\r\n              已缓存 {cacheStatus.count} 道题目\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OfflineIndicator;","// components/CacheManagementTab.jsx\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { cacheService } from '../services/cacheService';\r\nimport { offlineService } from '../services/offlineService';\r\nimport './CacheManagementTab.css';\r\n\r\n// 防抖钩子\r\nconst useDebounce = (value, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  \r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    \r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n  \r\n  return debouncedValue;\r\n};\r\n\r\n// 节流钩子\r\nconst useThrottle = (value, limit) => {\r\n  const [throttledValue, setThrottledValue] = useState(value);\r\n  const lastRan = useRef(Date.now());\r\n  \r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      if (Date.now() - lastRan.current >= limit) {\r\n        setThrottledValue(value);\r\n        lastRan.current = Date.now();\r\n      }\r\n    }, limit - (Date.now() - lastRan.current));\r\n    \r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, limit]);\r\n  \r\n  return throttledValue;\r\n};\r\n\r\nconst CacheManagementTab = ({ \r\n  questions = [], \r\n  onCacheUpdate,\r\n  currentUser \r\n}) => {\r\n  const navigate = useNavigate();\r\n  \r\n  // 状态管理\r\n  const [cacheStatus, setCacheStatus] = useState({});\r\n  const [syncing, setSyncing] = useState(false);\r\n  const [isOnline, setIsOnline] = useState(true);\r\n  const [cacheSettings, setCacheSettings] = useState({\r\n    cacheLimit: 30,\r\n    autoCache: true,\r\n    cacheStrategy: 'recent'\r\n  });\r\n  const [tempCacheLimit, setTempCacheLimit] = useState(30);\r\n  const [showSettings, setShowSettings] = useState(false);\r\n\r\n  // 防抖和节流\r\n  const debouncedCacheLimit = useDebounce(tempCacheLimit, 300);\r\n  const throttledCacheLimit = useThrottle(tempCacheLimit, 100);\r\n\r\n  // 初始化\r\n  useEffect(() => {\r\n    const status = cacheService.getCacheStatus();\r\n    setCacheStatus(status);\r\n    setCacheSettings(prev => ({\r\n      ...prev,\r\n      cacheLimit: cacheService.getCacheLimit()\r\n    }));\r\n    setTempCacheLimit(cacheService.getCacheLimit());\r\n    \r\n    // 网络状态监听\r\n    setIsOnline(offlineService.isOnlineMode());\r\n    \r\n    const handleOnline = () => setIsOnline(true);\r\n    const handleOffline = () => setIsOnline(false);\r\n    \r\n    offlineService.addEventListener('online', handleOnline);\r\n    offlineService.addEventListener('offline', handleOffline);\r\n    \r\n    return () => {\r\n      offlineService.removeEventListener('online', handleOnline);\r\n      offlineService.removeEventListener('offline', handleOffline);\r\n    };\r\n  }, []);\r\n\r\n  // 防抖更新设置\r\n  useEffect(() => {\r\n    if (debouncedCacheLimit !== cacheSettings.cacheLimit) {\r\n      setCacheSettings(prev => ({\r\n        ...prev,\r\n        cacheLimit: debouncedCacheLimit\r\n      }));\r\n      cacheService.setCacheLimit(debouncedCacheLimit);\r\n    }\r\n  }, [debouncedCacheLimit, cacheSettings.cacheLimit]);\r\n\r\n  // 手动缓存题目\r\n  const handleManualCache = useCallback(async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    setSyncing(true);\r\n    try {\r\n      const success = await cacheService.cacheQuestions(questions);\r\n      if (success) {\r\n        const newStatus = cacheService.getCacheStatus();\r\n        setCacheStatus(newStatus);\r\n        onCacheUpdate?.(newStatus);\r\n        \r\n        // 显示成功消息\r\n        setTimeout(() => {\r\n          // 可以添加 Toast 通知\r\n        }, 100);\r\n      }\r\n    } catch (error) {\r\n      console.error('缓存失败:', error);\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  }, [currentUser, questions, onCacheUpdate]);\r\n\r\n  // 清理缓存\r\n  const handleClearCache = useCallback(() => {\r\n    cacheService.clearCache();\r\n    const newStatus = cacheService.getCacheStatus();\r\n    setCacheStatus(newStatus);\r\n    onCacheUpdate?.(newStatus);\r\n  }, [onCacheUpdate]);\r\n\r\n  // 滑块变化处理\r\n  const handleSliderChange = useCallback((value) => {\r\n    setTempCacheLimit(value);\r\n  }, []);\r\n\r\n  // 缓存设置模态框\r\n  const CacheSettingsModal = () => (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h3>⚙️ 缓存设置</h3>\r\n          <button\r\n            className=\"close-btn\"\r\n            onClick={() => setShowSettings(false)}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"cache-settings-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"cacheLimit\">\r\n              缓存题目数量: <span className=\"limit-value\">{throttledCacheLimit}</span> 题\r\n            </label>\r\n            \r\n            <div className=\"slider-container\">\r\n              <input\r\n                id=\"cacheLimit\"\r\n                type=\"range\"\r\n                min=\"10\"\r\n                max=\"100\"\r\n                step=\"10\"\r\n                value={tempCacheLimit}\r\n                onChange={(e) => {\r\n                  const value = parseInt(e.target.value);\r\n                  handleSliderChange(value);\r\n                }}\r\n                onInput={(e) => {\r\n                  const value = parseInt(e.target.value);\r\n                  const progress = ((value - 10) / 90) * 100;\r\n                  e.target.style.setProperty('--slider-progress', `${progress}%`);\r\n                }}\r\n                className=\"cache-limit-slider\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"slider-labels\">\r\n              <span>10</span>\r\n              <span>30</span>\r\n              <span>50</span>\r\n              <span>70</span>\r\n              <span>90</span>\r\n              <span>100</span>\r\n            </div>\r\n            \r\n            <div className=\"setting-feedback\">\r\n              {tempCacheLimit !== cacheSettings.cacheLimit ? (\r\n                <span>🔄 将更新为: {tempCacheLimit} 题</span>\r\n              ) : (\r\n                <span>✅ 当前设置: {cacheSettings.cacheLimit} 题</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-actions\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"cancel-btn\"\r\n              onClick={() => setShowSettings(false)}\r\n            >\r\n              取消\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"submit-btn\"\r\n              onClick={() => {\r\n                cacheService.setCacheLimit(tempCacheLimit);\r\n                setShowSettings(false);\r\n              }}\r\n            >\r\n              保存设置\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <section className=\"cache-management-section\">\r\n      <div className=\"container\">\r\n        {/* 缓存状态概览 */}\r\n        <div className=\"cache-overview\">\r\n          <div className=\"cache-header\">\r\n            <h2>💾 缓存管理</h2>\r\n            <p>管理离线缓存数据，确保在无网络环境下也能正常使用</p>\r\n          </div>\r\n          \r\n          <div className=\"cache-stats-cards\">\r\n            <div className=\"cache-stat-card\">\r\n              <div className=\"stat-icon\">📦</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">\r\n                  {cacheStatus.hasCache ? cacheStatus.count : 0}\r\n                </div>\r\n                <div className=\"stat-label\">已缓存题目</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"cache-stat-card\">\r\n              <div className=\"stat-icon\">⚡</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">\r\n                  {cacheSettings.cacheLimit}\r\n                </div>\r\n                <div className=\"stat-label\">缓存限制</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"cache-stat-card\">\r\n              <div className=\"stat-icon\">🕒</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">\r\n                  {cacheStatus.hasCache ? '7天' : '无'}\r\n                </div>\r\n                <div className=\"stat-label\">缓存有效期</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"cache-stat-card\">\r\n              <div className=\"stat-icon\">🌐</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">\r\n                  {isOnline ? '在线' : '离线'}\r\n                </div>\r\n                <div className=\"stat-label\">网络状态</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 缓存操作区域 */}\r\n        <div className=\"cache-actions-panel\">\r\n          <div className=\"cache-action-group\">\r\n            <h3>缓存操作</h3>\r\n            <div className=\"action-buttons\">\r\n              <button\r\n                onClick={handleManualCache}\r\n                disabled={syncing || !isOnline}\r\n                className={`cache-action-btn primary ${syncing ? 'loading' : ''}`}\r\n              >\r\n                {syncing ? (\r\n                  <>\r\n                    <div className=\"loading-spinner\"></div>\r\n                    缓存中...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <span className=\"btn-icon\">💾</span>\r\n                    立即缓存题目\r\n                  </>\r\n                )}\r\n              </button>\r\n              \r\n              <button\r\n                onClick={handleClearCache}\r\n                disabled={!cacheStatus.hasCache}\r\n                className=\"cache-action-btn secondary\"\r\n              >\r\n                <span className=\"btn-icon\">🗑️</span>\r\n                清理缓存\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => setShowSettings(true)}\r\n                className=\"cache-action-btn outline\"\r\n              >\r\n                <span className=\"btn-icon\">⚙️</span>\r\n                缓存设置\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 缓存预览 */}\r\n          {cacheStatus.hasCache && (\r\n            <div className=\"cache-preview\">\r\n              <h3>缓存预览</h3>\r\n              <div className=\"preview-content\">\r\n                <p>已缓存 {cacheStatus.count} 道题目，点击查看离线题目：</p>\r\n                <button \r\n                  onClick={() => navigate('/offline/questions')}\r\n                  className=\"view-offline-btn\"\r\n                >\r\n                  📚 查看离线题目 ({cacheStatus.count})\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* 缓存提示 */}\r\n          <div className=\"cache-tips\">\r\n            <h3>使用提示</h3>\r\n            <ul>\r\n              <li>💡 缓存题目后可在无网络环境下查看和复习</li>\r\n              <li>⏰ 缓存数据有效期为7天，过期后自动清理</li>\r\n              <li>📱 建议在网络良好时进行缓存操作</li>\r\n              <li>🔄 题目更新后建议重新缓存以获取最新内容</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 设置模态框 */}\r\n      {showSettings && <CacheSettingsModal />}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CacheManagementTab;","// components/ReviewReminderSection.jsx\r\nimport React, { useState } from 'react';\r\nimport AV from 'leancloud-storage';\r\nimport './ReviewReminderSection.css';\r\n\r\nconst ReviewReminderSection = ({\r\n  reviewQuestions,\r\n  setReviewQuestions,\r\n  reviewThreshold,\r\n  setReviewThreshold,\r\n  showReviewSettings,\r\n  setShowReviewSettings,\r\n  onQuestionClick, // 添加这个prop\r\n  onUpdateQuestionTime,\r\n  questions\r\n}) => {\r\n  const [selectedUrgency, setSelectedUrgency] = useState('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [updatingQuestions, setUpdatingQuestions] = useState(new Set());\r\n  \r\n  // 添加用户状态\r\n  const [currentUser, setCurrentUser] = useState(AV.User.current());\r\n\r\n  // 格式化时间显示\r\n  const formatTimeAgo = (date) => {\r\n    const now = new Date();\r\n    const diffMs = now - new Date(date);\r\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n    const diffWeeks = Math.floor(diffDays / 7);\r\n    const diffMonths = Math.floor(diffDays / 30);\r\n\r\n    if (diffDays === 0) return '今天';\r\n    if (diffDays === 1) return '昨天';\r\n    if (diffDays < 7) return `${diffDays}天前`;\r\n    if (diffWeeks < 4) return `${diffWeeks}周前`;\r\n    return `${diffMonths}月前`;\r\n  };\r\n\r\n  // 获取紧急程度 - 修改后的版本：1天=急需，3天=建议，5天=稍后\r\n  const getUrgencyLevel = (question) => {\r\n    // 使用 lastReviewedAt 字段，如果不存在则使用 createdAt\r\n    const lastReviewed = new Date(question.lastReviewedAt || question.createdAt);\r\n    const daysAgo = Math.floor((new Date() - lastReviewed) / (1000 * 60 * 60 * 24));\r\n    \r\n    if (daysAgo >= 5) return 'high';     // 5天及以上 = 急需复习\r\n    if (daysAgo >= 3) return 'medium';   // 3-4天 = 建议复习\r\n    return 'low';                        // 1-2天 = 可稍后复习\r\n  };\r\n\r\n  // 获取紧急程度颜色\r\n  const getUrgencyColor = (urgency) => {\r\n    switch (urgency) {\r\n      case 'high': return '#ff6b6b';\r\n      case 'medium': return '#ffa726';\r\n      case 'low': return '#4ecdc4';\r\n      default: return '#95a5a6';\r\n    }\r\n  };\r\n\r\n  // 获取紧急程度文本\r\n  const getUrgencyText = (urgency) => {\r\n    switch (urgency) {\r\n      case 'high': return '急需复习';\r\n      case 'medium': return '建议复习';\r\n      case 'low': return '可稍后复习';\r\n      default: return '未知';\r\n    }\r\n  };\r\n\r\n  // 获取紧急程度对应的天数描述\r\n  const getUrgencyDaysDescription = (urgency) => {\r\n    switch (urgency) {\r\n      case 'high': return '5天以上未复习';\r\n      case 'medium': return '3-4天未复习';\r\n      case 'low': return '1-2天未复习';\r\n      default: return '';\r\n    }\r\n  };\r\n\r\n  // 处理立即复习 - 修复版本\r\n  const handleReviewNow = async (questionId, e) => {\r\n    e.stopPropagation(); // 阻止事件冒泡，避免触发卡片点击\r\n    \r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    \r\n\r\n    // 验证题目是否存在\r\n    const question = questions.find(q => q.id === questionId);\r\n    if (!question) {\r\n      console.error('未找到题目:', questionId);\r\n      alert('题目不存在，请刷新页面重试');\r\n      return;\r\n    }\r\n\r\n\r\n    // 添加到更新中的集合\r\n    setUpdatingQuestions(prev => new Set(prev).add(questionId));\r\n    \r\n    try {\r\n      console.log('开始调用 onUpdateQuestionTime...');\r\n      \r\n      // 1. 首先更新题目的复习时间\r\n      await onUpdateQuestionTime(questionId);\r\n      \r\n      console.log('onUpdateQuestionTime 调用成功');\r\n      \r\n      // 2. 从复习列表中移除该题目\r\n      setReviewQuestions(prev => {\r\n        const newList = prev.filter(q => q.id !== questionId);\r\n        console.log('从复习列表移除后:', newList.length);\r\n        return newList;\r\n      });\r\n      \r\n      console.log('准备跳转到题目...');\r\n      \r\n      // 3. 找到题目信息并跳转到分类页面\r\n      if (question && question.category) {\r\n        console.log('跳转到分类:', question.category.id);\r\n        \r\n        // 调用父组件传递的跳转函数\r\n        if (onQuestionClick) {\r\n          onQuestionClick(questionId);\r\n        } else {\r\n          // 备用跳转逻辑\r\n          handleQuestionClick(question);\r\n        }\r\n      } else {\r\n        console.warn('无法找到题目对应的分类信息');\r\n        alert('复习时间已更新，但无法跳转到题目位置');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('更新复习时间失败:', error);\r\n      console.error('错误详情:', {\r\n        questionId,\r\n        currentUser: currentUser?.id,\r\n        errorMessage: error.message\r\n      });\r\n      \r\n      // 更详细的错误处理\r\n      let errorMessage = '更新失败，请重试';\r\n      \r\n      if (error.message.includes('permission')) {\r\n        errorMessage = '更新失败：没有权限修改此题目';\r\n      } else if (error.message.includes('Object not found')) {\r\n        errorMessage = '更新失败：题目不存在或已被删除';\r\n      } else if (error.message.includes('未找到对应的题目')) {\r\n        errorMessage = '更新失败：本地数据中未找到该题目';\r\n      } else if (error.message.includes('reserved')) {\r\n        errorMessage = '更新失败：数据字段冲突，请刷新页面重试';\r\n      }\r\n      \r\n      alert(errorMessage);\r\n    } finally {\r\n      // 从更新中的集合移除\r\n      setUpdatingQuestions(prev => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(questionId);\r\n        return newSet;\r\n      });\r\n    }\r\n  };\r\n\r\n  // 处理稍后提醒\r\n  const handlePostpone = (questionId, e) => {\r\n    e.stopPropagation();\r\n    // 这里可以添加更复杂的逻辑，比如推迟到明天等\r\n    alert('已推迟提醒，该题目将在明天再次出现在复习列表中');\r\n  };\r\n\r\n  // 处理题目点击 - 跳转到分类详情页\r\n  const handleQuestionClick = (question) => {\r\n    if (!question.category?.id) {\r\n      console.warn('题目没有分类信息，无法跳转');\r\n      alert('该题目没有分类信息，无法跳转');\r\n      return;\r\n    }\r\n\r\n    // 构建跳转URL\r\n    const categoryUrl = `/category/${question.category.id}`;\r\n    \r\n    // 使用 navigate 或 window.location 进行跳转\r\n    if (window.history.pushState) {\r\n      window.history.pushState(null, '', categoryUrl);\r\n      // 触发路由变化\r\n      window.dispatchEvent(new PopStateEvent('popstate'));\r\n    } else {\r\n      window.location.href = categoryUrl;\r\n    }\r\n    \r\n    // 可以添加一个滚动到特定题目的逻辑\r\n    // 这里需要在 CategoryDetailPage 中添加相应的处理\r\n    setTimeout(() => {\r\n      // 触发自定义事件，让 CategoryDetailPage 知道要滚动到哪个题目\r\n      window.dispatchEvent(new CustomEvent('scrollToQuestion', { \r\n        detail: { questionId: question.id } \r\n      }));\r\n    }, 100);\r\n  };\r\n\r\n  // 过滤题目\r\n  const filteredQuestions = reviewQuestions.filter(question => {\r\n    const matchesSearch = question.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         (question.category?.name || '').toLowerCase().includes(searchTerm.toLowerCase());\r\n    \r\n    if (selectedUrgency === 'all') return matchesSearch;\r\n    \r\n    const urgency = getUrgencyLevel(question);\r\n    return matchesSearch && urgency === selectedUrgency;\r\n  });\r\n\r\n  // 按紧急程度分组 - 使用新的天数标准\r\n  const questionsByUrgency = {\r\n    high: filteredQuestions.filter(q => getUrgencyLevel(q) === 'high'),    // 5天以上\r\n    medium: filteredQuestions.filter(q => getUrgencyLevel(q) === 'medium'), // 3-4天\r\n    low: filteredQuestions.filter(q => getUrgencyLevel(q) === 'low')        // 1-2天\r\n  };\r\n\r\n  // 获取进度百分比\r\n  const getProgressPercentage = () => {\r\n    const totalQuestions = questions.length;\r\n    const reviewedQuestions = totalQuestions - reviewQuestions.length;\r\n    return totalQuestions > 0 ? (reviewedQuestions / totalQuestions) * 100 : 0;\r\n  };\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <section className=\"review-reminder-section\">\r\n        <div className=\"container\">\r\n          <div className=\"auth-required-container\">\r\n            <div className=\"auth-required-icon\">🔐</div>\r\n            <h2>请先登录</h2>\r\n            <p>登录后即可查看复习提醒</p>\r\n            <div className=\"auth-required-actions\">\r\n              <button \r\n                onClick={() => window.dispatchEvent(new CustomEvent('showAuthModal'))}\r\n                className=\"login-btn\"\r\n              >\r\n                立即登录\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"review-reminder-section\">\r\n      <div className=\"container\">\r\n        {/* 用户欢迎信息 */}\r\n        <div className=\"user-welcome-banner\">\r\n          <h3>📚 复习提醒 - {currentUser.getUsername()}</h3>\r\n          <p>及时复习是巩固知识的关键，以下是需要您关注的题目</p>\r\n        </div>\r\n\r\n        {/* 头部统计信息 */}\r\n        <div className=\"review-header\">\r\n          <div className=\"review-stats\">\r\n            <div className=\"stat-card urgent\">\r\n              <div className=\"stat-icon\">🔥</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">{questionsByUrgency.high.length}</div>\r\n                <div className=\"stat-label\">急需复习</div>\r\n                <div className=\"stat-description\">5天以上</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stat-card medium\">\r\n              <div className=\"stat-icon\">⚠️</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">{questionsByUrgency.medium.length}</div>\r\n                <div className=\"stat-label\">建议复习</div>\r\n                <div className=\"stat-description\">3-4天</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stat-card low\">\r\n              <div className=\"stat-icon\">💡</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">{questionsByUrgency.low.length}</div>\r\n                <div className=\"stat-label\">可稍后复习</div>\r\n                <div className=\"stat-description\">1-2天</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stat-card total\">\r\n              <div className=\"stat-icon\">📚</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">{reviewQuestions.length}</div>\r\n                <div className=\"stat-label\">待复习题目</div>\r\n                <div className=\"stat-description\">总计</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 进度条 */}\r\n          <div className=\"review-progress\">\r\n            <div className=\"progress-header\">\r\n              <span>复习进度</span>\r\n              <span>{Math.round(getProgressPercentage())}%</span>\r\n            </div>\r\n            <div className=\"progress-bar\">\r\n              <div \r\n                className=\"progress-fill\"\r\n                style={{ width: `${getProgressPercentage()}%` }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"progress-stats\">\r\n              <span>{questions.length - reviewQuestions.length} / {questions.length} 题目已及时复习</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 控制面板 */}\r\n        <div className=\"review-controls\">\r\n          <div className=\"controls-left\">\r\n            <div className=\"search-box\">\r\n              <span className=\"search-icon\">🔍</span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"搜索题目或分类...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"search-input\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"urgency-filter\">\r\n              <button\r\n                className={`urgency-btn ${selectedUrgency === 'all' ? 'active' : ''}`}\r\n                onClick={() => setSelectedUrgency('all')}\r\n              >\r\n                全部\r\n              </button>\r\n              <button\r\n                className={`urgency-btn high ${selectedUrgency === 'high' ? 'active' : ''}`}\r\n                onClick={() => setSelectedUrgency('high')}\r\n              >\r\n                🔥 急需 (5天+)\r\n              </button>\r\n              <button\r\n                className={`urgency-btn medium ${selectedUrgency === 'medium' ? 'active' : ''}`}\r\n                onClick={() => setSelectedUrgency('medium')}\r\n              >\r\n                ⚠️ 建议 (3-4天)\r\n              </button>\r\n              <button\r\n                className={`urgency-btn low ${selectedUrgency === 'low' ? 'active' : ''}`}\r\n                onClick={() => setSelectedUrgency('low')}\r\n              >\r\n                💡 稍后 (1-2天)\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"controls-right\">\r\n            <button\r\n              className=\"settings-btn\"\r\n              onClick={() => setShowReviewSettings(true)}\r\n            >\r\n              ⚙️ 复习设置\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 复习设置弹窗 */}\r\n        {showReviewSettings && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h3>复习提醒设置</h3>\r\n                <button \r\n                  className=\"close-btn\"\r\n                  onClick={() => setShowReviewSettings(false)}\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"settings-content\">\r\n                <div className=\"setting-item\">\r\n                  <label htmlFor=\"reviewThreshold\">\r\n                    复习提醒阈值\r\n                    <span className=\"hint\">（超过这个天数的题目会出现在复习列表中）</span>\r\n                  </label>\r\n                  <div className=\"threshold-control\">\r\n                    <input\r\n                      id=\"reviewThreshold\"\r\n                      type=\"range\"\r\n                      min=\"1\"\r\n                      max=\"30\"\r\n                      step=\"1\"\r\n                      value={reviewThreshold}\r\n                      onChange={(e) => setReviewThreshold(parseInt(e.target.value))}\r\n                      className=\"threshold-slider\"\r\n                    />\r\n                    <span className=\"threshold-value\">{reviewThreshold} 天</span>\r\n                  </div>\r\n                  <div className=\"threshold-presets\">\r\n                    {[1, 3, 5, 7, 14, 30].map(days => (\r\n                      <button\r\n                        key={days}\r\n                        className={`preset-btn ${reviewThreshold === days ? 'active' : ''}`}\r\n                        onClick={() => setReviewThreshold(days)}\r\n                      >\r\n                        {days}天\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"urgency-explanation\">\r\n                  <h4>📋 紧急程度说明</h4>\r\n                  <div className=\"urgency-levels\">\r\n                    <div className=\"urgency-level high\">\r\n                      <span className=\"urgency-color\" style={{backgroundColor: '#ff6b6b'}}></span>\r\n                      <div className=\"urgency-info\">\r\n                        <strong>急需复习 (红色)</strong>\r\n                        <span>5天以上未复习的题目</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"urgency-level medium\">\r\n                      <span className=\"urgency-color\" style={{backgroundColor: '#ffa726'}}></span>\r\n                      <div className=\"urgency-info\">\r\n                        <strong>建议复习 (橙色)</strong>\r\n                        <span>3-4天未复习的题目</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"urgency-level low\">\r\n                      <span className=\"urgency-color\" style={{backgroundColor: '#4ecdc4'}}></span>\r\n                      <div className=\"urgency-info\">\r\n                        <strong>可稍后复习 (青色)</strong>\r\n                        <span>1-2天未复习的题目</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                \r\n              </div>\r\n              \r\n              <div className=\"modal-actions\">\r\n                <button\r\n                  className=\"cancel-btn\"\r\n                  onClick={() => setShowReviewSettings(false)}\r\n                >\r\n                  取消\r\n                </button>\r\n                <button\r\n                  className=\"confirm-btn\"\r\n                  onClick={() => setShowReviewSettings(false)}\r\n                >\r\n                  确认设置\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 题目列表 */}\r\n        <div className=\"review-questions\">\r\n          {filteredQuestions.length === 0 ? (\r\n            <div className=\"empty-review-state\">\r\n              <div className=\"empty-icon\">🎉</div>\r\n              <h3>太棒了！没有需要复习的题目</h3>\r\n              <p>继续保持良好的复习习惯，或者调整复习设置来查看更多题目</p>\r\n              <button\r\n                className=\"adjust-settings-btn\"\r\n                onClick={() => setShowReviewSettings(true)}\r\n              >\r\n                调整复习设置\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"questions-grid\">\r\n              {filteredQuestions.map((question, index) => {\r\n                const urgency = getUrgencyLevel(question);\r\n                const urgencyColor = getUrgencyColor(urgency);\r\n                // 使用 lastReviewedAt 字段\r\n                const lastReviewed = new Date(question.lastReviewedAt || question.createdAt);\r\n                const daysAgo = Math.floor((new Date() - lastReviewed) / (1000 * 60 * 60 * 24));\r\n                const isUpdating = updatingQuestions.has(question.id);\r\n                \r\n                return (\r\n                  <div\r\n                    key={question.id}\r\n                    className={`review-question-card ${isUpdating ? 'updating' : ''}`}\r\n                    onClick={() => handleQuestionClick(question)}\r\n                    style={{ '--urgency-color': urgencyColor }}\r\n                  >\r\n                    <div className=\"card-header\">\r\n                      <div className=\"urgency-indicator\" style={{ backgroundColor: urgencyColor }}></div>\r\n                      <div className=\"question-meta\">\r\n                        <span className=\"urgency-badge\" style={{ backgroundColor: urgencyColor }}>\r\n                          {getUrgencyText(urgency)}\r\n                        </span>\r\n                        <span className=\"category-tag\">\r\n                          {question.category?.name || '未分类'}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"time-info\">\r\n                        <span className=\"last-reviewed\">\r\n                          上次复习: {formatTimeAgo(question.lastReviewedAt || question.createdAt)}\r\n                        </span>\r\n                        <span className=\"days-ago\">({daysAgo}天前)</span>\r\n                        <span className=\"urgency-description\">\r\n                          {getUrgencyDaysDescription(urgency)}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"card-content\">\r\n                      <h4 className=\"question-title\">{question.title}</h4>\r\n                      \r\n                      {question.detailedAnswer && (\r\n                        <div className=\"answer-preview\">\r\n                          {question.detailedAnswer.substring(0, 100)}...\r\n                        </div>\r\n                      )}\r\n                      \r\n                      <div className=\"question-tags\">\r\n                        <span className={`difficulty-tag difficulty-${question.difficulty}`}>\r\n                          {question.difficulty === 'easy' ? '简单' : \r\n                           question.difficulty === 'medium' ? '中等' : '困难'}\r\n                        </span>\r\n                        {question.tags && question.tags.slice(0, 3).map((tag, tagIndex) => (\r\n                          <span key={tagIndex} className=\"tag\">\r\n                            #{tag}\r\n                          </span>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"card-footer\">\r\n                      <div className=\"review-actions\">\r\n                        <button \r\n                          className=\"review-now-btn\"\r\n                          onClick={(e) => handleReviewNow(question.id, e)}\r\n                          disabled={isUpdating}\r\n                        >\r\n                          {isUpdating ? '🔄 更新中...' : '🔍 立即复习'}\r\n                        </button>\r\n                        <button \r\n                          className=\"postpone-btn\"\r\n                          onClick={(e) => handlePostpone(question.id, e)}\r\n                          disabled={isUpdating}\r\n                        >\r\n                          ⏰ 稍后提醒\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {isUpdating && (\r\n                      <div className=\"updating-overlay\">\r\n                        <div className=\"updating-spinner\"></div>\r\n                        <span>更新中...</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ReviewReminderSection;","import React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport { useVirtualizer } from '@tanstack/react-virtual';\r\nimport { getQuestionsBatch } from '../services/questionService';\r\nimport './CalendarTooltip.css';\r\n\r\nconst CalendarTooltip = ({ \r\n  dayData, \r\n  position, \r\n  onClose,\r\n  isVisible \r\n}) => {\r\n  const tooltipRef = useRef(null);\r\n  const queryClient = useQueryClient();\r\n  const [cachedQuestions, setCachedQuestions] = useState([]);\r\n  const [itemHeights, setItemHeights] = useState(new Map());\r\n\r\n  // 批量获取问题数据的查询\r\n  const { data: questionsData, isLoading } = useQuery({\r\n    queryKey: ['day-questions-batch', dayData?.date?.toISOString(), dayData?.questions?.map(q => q.id).join(',')],\r\n    queryFn: async () => {\r\n      if (!dayData?.questions?.length) return [];\r\n      \r\n      // 检查缓存中已有的数据\r\n      const cachedQuestions = [];\r\n      const missingQuestionIds = [];\r\n      \r\n      dayData.questions.forEach(question => {\r\n        const cached = queryClient.getQueryData(['question', question.id]);\r\n        if (cached) {\r\n          cachedQuestions.push(cached);\r\n        } else {\r\n          missingQuestionIds.push(question.id);\r\n        }\r\n      });\r\n      \r\n      // 如果有缺失的数据，批量获取\r\n      if (missingQuestionIds.length > 0) {\r\n        try {\r\n          const batchResults = await getQuestionsBatch(missingQuestionIds);\r\n          // 将批量获取的数据存入缓存\r\n          batchResults.forEach(question => {\r\n            queryClient.setQueryData(['question', question.id], question);\r\n          });\r\n          return [...cachedQuestions, ...batchResults];\r\n        } catch (error) {\r\n          console.warn('批量获取题目失败，使用基础数据:', error);\r\n          // 失败时使用基础数据\r\n          const fallbackQuestions = dayData.questions.map(q => \r\n            queryClient.getQueryData(['question', q.id]) || q\r\n          );\r\n          return fallbackQuestions;\r\n        }\r\n      }\r\n      \r\n      return cachedQuestions;\r\n    },\r\n    enabled: isVisible && !!dayData?.questions?.length,\r\n    staleTime: 10 * 60 * 1000,\r\n    cacheTime: 30 * 60 * 1000,\r\n    retry: 1,\r\n    retryDelay: 1000,\r\n  });\r\n\r\n  // 缓存更新\r\n  useEffect(() => {\r\n    if (questionsData && questionsData.length > 0) {\r\n      setCachedQuestions(questionsData);\r\n    } else if (dayData?.questions) {\r\n      setCachedQuestions(dayData.questions);\r\n    }\r\n  }, [questionsData, dayData?.questions]);\r\n\r\n  // 虚拟化容器引用\r\n  const parentRef = useRef(null);\r\n\r\n  // 使用固定高度避免无限循环\r\n  const virtualizer = useVirtualizer({\r\n    count: cachedQuestions.length,\r\n    getScrollElement: () => parentRef.current,\r\n    estimateSize: () => 140, // 固定高度，避免动态测量导致的循环\r\n    overscan: 5,\r\n  });\r\n\r\n  // 点击外部关闭\r\n  const handleClickOutside = useCallback((event) => {\r\n    if (tooltipRef.current && !tooltipRef.current.contains(event.target)) {\r\n      onClose();\r\n    }\r\n  }, [onClose]);\r\n\r\n  useEffect(() => {\r\n    if (isVisible) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }\r\n  }, [isVisible, handleClickOutside]);\r\n\r\n  // ESC键关闭\r\n  const handleEscape = useCallback((event) => {\r\n    if (event.key === 'Escape') {\r\n      onClose();\r\n    }\r\n  }, [onClose]);\r\n\r\n  useEffect(() => {\r\n    if (isVisible) {\r\n      document.addEventListener('keydown', handleEscape);\r\n      return () => document.removeEventListener('keydown', handleEscape);\r\n    }\r\n  }, [isVisible, handleEscape]);\r\n\r\n  if (!isVisible || !dayData) return null;\r\n\r\n  const virtualQuestions = virtualizer.getVirtualItems();\r\n  const totalQuestions = dayData.questions?.length || 0;\r\n\r\n  return (\r\n    <div \r\n      ref={tooltipRef}\r\n      className=\"calendar-tooltip\"\r\n      style={{\r\n        left: `${Math.min(position.x, window.innerWidth - 500)}px`,\r\n        top: `${position.y}px`,\r\n        transform: 'translateX(-50%)'\r\n      }}\r\n    >\r\n      <div className=\"tooltip-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"date-display\">\r\n            <span className=\"date-day\">{dayData.date.getDate()}</span>\r\n            <div className=\"date-info\">\r\n              <span className=\"date-weekday\">\r\n                {dayData.date.toLocaleDateString('zh-CN', { weekday: 'long' })}\r\n              </span>\r\n              <span className=\"date-full\">\r\n                {dayData.date.toLocaleDateString('zh-CN', { \r\n                  year: 'numeric', \r\n                  month: 'long',\r\n                  day: 'numeric'\r\n                })}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"stats-badge\">\r\n            <span className=\"stat-icon\">📚</span>\r\n            <span className=\"stat-count\">{totalQuestions}</span>\r\n            <span className=\"stat-label\">道题目</span>\r\n          </div>\r\n        </div>\r\n        <button \r\n          className=\"tooltip-close-btn\"\r\n          onClick={onClose}\r\n          aria-label=\"关闭\"\r\n        >\r\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\r\n            <path d=\"M12.707 3.293a1 1 0 00-1.414 0L8 6.586 4.707 3.293a1 1 0 00-1.414 1.414L6.586 8l-3.293 3.293a1 1 0 101.414 1.414L8 9.414l3.293 3.293a1 1 0 001.414-1.414L9.414 8l3.293-3.293a1 1 0 000-1.414z\"/>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"tooltip-content\">\r\n        {isLoading ? (\r\n          <div className=\"loading-state\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <span className=\"loading-text\">加载题目中...</span>\r\n          </div>\r\n        ) : cachedQuestions.length > 0 ? (\r\n          <div \r\n            ref={parentRef}\r\n            className=\"questions-virtual-container\"\r\n            style={{\r\n              height: '500px',\r\n              overflow: 'auto'\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: `${virtualizer.getTotalSize()}px`,\r\n                width: '100%',\r\n                position: 'relative'\r\n              }}\r\n            >\r\n              {virtualQuestions.map((virtualRow) => {\r\n                const question = cachedQuestions[virtualRow.index];\r\n                \r\n                return (\r\n                  <div\r\n                    key={question.id}\r\n                    className=\"question-virtual-item\"\r\n                    style={{\r\n                      position: 'absolute',\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: '100%',\r\n                      height: `${virtualRow.size}px`,\r\n                      transform: `translateY(${virtualRow.start}px)`\r\n                    }}\r\n                  >\r\n                    <QuestionItem \r\n                      question={question} \r\n                      index={virtualRow.index}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"empty-state\">\r\n            <div className=\"empty-icon\">📝</div>\r\n            <h4 className=\"empty-title\">这一天没有学习记录</h4>\r\n            <p className=\"empty-description\">开始记录你的学习进度吧</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {cachedQuestions.length > 0 && (\r\n        <div className=\"tooltip-footer\">\r\n          <div className=\"footer-stats\">\r\n            <span className=\"virtual-info\">\r\n              显示 {virtualQuestions.length} / {totalQuestions} 道题目\r\n            </span>\r\n            <span className=\"scroll-hint\">滚动查看更多</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"tooltip-arrow\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 简化的单个题目项组件 - 移除动态高度测量\r\nconst QuestionItem = React.memo(({ question, index }) => {\r\n  const getDifficultyColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#10b981';\r\n      case 'medium': return '#f59e0b';\r\n      case 'hard': return '#ef4444';\r\n      default: return '#6b7280';\r\n    }\r\n  };\r\n\r\n  const getDifficultyText = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '简单';\r\n      case 'medium': return '中等';\r\n      case 'hard': return '困难';\r\n      default: return '未知';\r\n    }\r\n  };\r\n\r\n  const formatTime = (date) => {\r\n    return new Date(date).toLocaleTimeString('zh-CN', {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-item\">\r\n      <div className=\"question-main\">\r\n        <div className=\"question-header\">\r\n          <div className=\"question-meta\">\r\n            <span className=\"question-index\">#{index + 1}</span>\r\n            <span \r\n              className=\"difficulty-badge\"\r\n              style={{ \r\n                backgroundColor: getDifficultyColor(question.difficulty),\r\n                color: 'white'\r\n              }}\r\n            >\r\n              {getDifficultyText(question.difficulty)}\r\n            </span>\r\n            <span className=\"question-time\">\r\n              {formatTime(question.createdAt)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <h4 className=\"question-title\">{question.title}</h4>\r\n        \r\n        <div className=\"question-category\">\r\n          <span className=\"category-tag\">\r\n            {question.category?.name || '未分类'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nQuestionItem.displayName = 'QuestionItem';\r\n\r\nexport default CalendarTooltip;","// Documents.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Documents.css';\r\n\r\nconst Documents = () => {\r\n  const [selectedDoc, setSelectedDoc] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentQuoteIndex, setCurrentQuoteIndex] = useState(0);\r\n\r\n  // 技术名言数据\r\n  const techQuotes = [\r\n    {\r\n      text: \"任何足够先进的技术都与魔法无异。\",\r\n      author: \"亚瑟·C·克拉克\",\r\n      category: \"科技哲学\"\r\n    },\r\n    {\r\n      text: \"代码就像是幽默，当你需要解释它时，它就不再有趣了。\",\r\n      author: \"Cory House\",\r\n      category: \"编程\"\r\n    },\r\n    {\r\n      text: \"首先，解决问题。然后，编写代码。\",\r\n      author: \"John Johnson\",\r\n      category: \"开发方法\"\r\n    },\r\n    {\r\n      text: \"编程不是关于你知道什么，而是关于你能弄清楚什么。\",\r\n      author: \"Chris Pine\",\r\n      category: \"学习\"\r\n    },\r\n    {\r\n      text: \"简单性是可靠性的先决条件。\",\r\n      author: \"Edsger W. Dijkstra\",\r\n      category: \"软件工程\"\r\n    },\r\n    {\r\n      text: \"测试只能证明 bug 的存在，而不能证明它们的不存在。\",\r\n      author: \"Edsger W. Dijkstra\",\r\n      category: \"测试\"\r\n    },\r\n    {\r\n      text: \"最好的错误信息是根本不需要错误信息。\",\r\n      author: \"Jef Raskin\",\r\n      category: \"用户体验\"\r\n    },\r\n    {\r\n      text: \"过早优化是万恶之源。\",\r\n      author: \"Donald Knuth\",\r\n      category: \"性能优化\"\r\n    },\r\n    {\r\n      text: \"代码的阅读次数远多于编写次数。\",\r\n      author: \"Guido van Rossum\",\r\n      category: \"代码质量\"\r\n    },\r\n    {\r\n      text: \"完美不是在没有东西可加时达到的，而是在没有东西可拿走时达到的。\",\r\n      author: \"Antoine de Saint-Exupéry\",\r\n      category: \"设计\"\r\n    },\r\n    {\r\n      text: \"计算机科学的核心是解决问题。\",\r\n      author: \"Abelson and Sussman\",\r\n      category: \"计算机科学\"\r\n    },\r\n    {\r\n      text: \"未来已经到来，只是分布不均。\",\r\n      author: \"William Gibson\",\r\n      category: \"科技创新\"\r\n    },\r\n    {\r\n      text: \"最危险的代码是你看不到问题的代码。\",\r\n      author: \"Douglas Crockford\",\r\n      category: \"代码安全\"\r\n    },\r\n    {\r\n      text: \"编程是理解的艺术。\",\r\n      author: \"Kristen Nygaard\",\r\n      category: \"编程哲学\"\r\n    },\r\n    {\r\n      text: \"技术应该改善生活，而不是支配生活。\",\r\n      author: \"Tim Cook\",\r\n      category: \"科技伦理\"\r\n    }\r\n  ];\r\n\r\n  // 自动轮播名言\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentQuoteIndex((prevIndex) => \r\n        prevIndex === techQuotes.length - 1 ? 0 : prevIndex + 1\r\n      );\r\n    }, 5000); // 每5秒切换一次\r\n\r\n    return () => clearInterval(interval);\r\n  }, [techQuotes.length]);\r\n\r\n  // 手动切换名言\r\n  const nextQuote = () => {\r\n    setCurrentQuoteIndex((prevIndex) => \r\n      prevIndex === techQuotes.length - 1 ? 0 : prevIndex + 1\r\n    );\r\n  };\r\n\r\n  const prevQuote = () => {\r\n    setCurrentQuoteIndex((prevIndex) => \r\n      prevIndex === 0 ? techQuotes.length - 1 : prevIndex - 1\r\n    );\r\n  };\r\n\r\n  // 扩展的知名文档数据（专注于前端和后端）\r\n  const documents = [\r\n    // 前端框架\r\n    {\r\n      id: 1,\r\n      title: 'React 官方文档',\r\n      description: '用于构建用户界面的 JavaScript 库',\r\n      category: '前端框架',\r\n      url: 'https://react.dev',\r\n      icon: '⚛️'\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Vue.js 文档',\r\n      description: '渐进式 JavaScript 框架',\r\n      category: '前端框架',\r\n      url: 'https://vuejs.org',\r\n      icon: '🟢'\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Angular 文档',\r\n      description: 'Google 开发的前端框架',\r\n      category: '前端框架',\r\n      url: 'https://angular.io',\r\n      icon: '🅰️'\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Svelte 文档',\r\n      description: '编译时框架，无虚拟DOM',\r\n      category: '前端框架',\r\n      url: 'https://svelte.dev',\r\n      icon: '⚡'\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'SolidJS 文档',\r\n      description: '用于构建用户界面的声明式 JavaScript 库',\r\n      category: '前端框架',\r\n      url: 'https://solidjs.com',\r\n      icon: '🔷'\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Next.js 文档',\r\n      description: 'React 全栈框架',\r\n      category: '前端框架',\r\n      url: 'https://nextjs.org',\r\n      icon: '⏭️'\r\n    },\r\n    {\r\n      id: 7,\r\n      title: 'Nuxt.js 文档',\r\n      description: 'Vue.js 全栈框架',\r\n      category: '前端框架',\r\n      url: 'https://nuxtjs.org',\r\n      icon: '🔥'\r\n    },\r\n\r\n    // 前端状态管理\r\n    {\r\n      id: 8,\r\n      title: 'Redux 文档',\r\n      description: 'JavaScript 应用状态容器',\r\n      category: '前端状态管理',\r\n      url: 'https://redux.js.org',\r\n      icon: '📦'\r\n    },\r\n    {\r\n      id: 9,\r\n      title: 'Zustand 文档',\r\n      description: '小型、快速、可扩展的状态管理',\r\n      category: '前端状态管理',\r\n      url: 'https://github.com/pmndrs/zustand',\r\n      icon: '🐻'\r\n    },\r\n    {\r\n      id: 10,\r\n      title: 'MobX 文档',\r\n      description: '简单、可扩展的状态管理',\r\n      category: '前端状态管理',\r\n      url: 'https://mobx.js.org',\r\n      icon: '🔄'\r\n    },\r\n    {\r\n      id: 11,\r\n      title: 'Vuex 文档',\r\n      description: 'Vue.js 的状态管理库',\r\n      category: '前端状态管理',\r\n      url: 'https://vuex.vuejs.org',\r\n      icon: '🏪'\r\n    },\r\n\r\n    // CSS 框架和预处理器\r\n    {\r\n      id: 12,\r\n      title: 'Tailwind CSS 文档',\r\n      description: '实用优先的 CSS 框架',\r\n      category: 'CSS 框架',\r\n      url: 'https://tailwindcss.com',\r\n      icon: '🎨'\r\n    },\r\n    {\r\n      id: 13,\r\n      title: 'Bootstrap 文档',\r\n      description: '最流行的前端框架',\r\n      category: 'CSS 框架',\r\n      url: 'https://getbootstrap.com',\r\n      icon: '🎯'\r\n    },\r\n    {\r\n      id: 14,\r\n      title: 'Sass 文档',\r\n      description: '专业级 CSS 扩展语言',\r\n      category: 'CSS 框架',\r\n      url: 'https://sass-lang.com',\r\n      icon: '💎'\r\n    },\r\n    {\r\n      id: 15,\r\n      title: 'Less 文档',\r\n      description: 'CSS 预处理器',\r\n      category: 'CSS 框架',\r\n      url: 'http://lesscss.org',\r\n      icon: '➖'\r\n    },\r\n    {\r\n      id: 16,\r\n      title: 'Styled Components',\r\n      description: 'CSS-in-JS 样式库',\r\n      category: 'CSS 框架',\r\n      url: 'https://styled-components.com',\r\n      icon: '💅'\r\n    },\r\n\r\n    // 前端构建工具\r\n    {\r\n      id: 17,\r\n      title: 'Webpack 文档',\r\n      description: '模块打包工具',\r\n      category: '前端构建工具',\r\n      url: 'https://webpack.js.org',\r\n      icon: '📦'\r\n    },\r\n    {\r\n      id: 18,\r\n      title: 'Vite 文档',\r\n      description: '下一代前端构建工具',\r\n      category: '前端构建工具',\r\n      url: 'https://vitejs.dev',\r\n      icon: '⚡'\r\n    },\r\n    {\r\n      id: 19,\r\n      title: 'Parcel 文档',\r\n      description: '零配置构建工具',\r\n      category: '前端构建工具',\r\n      url: 'https://parceljs.org',\r\n      icon: '📮'\r\n    },\r\n    {\r\n      id: 20,\r\n      title: 'Rollup 文档',\r\n      description: 'JavaScript 模块打包器',\r\n      category: '前端构建工具',\r\n      url: 'https://rollupjs.org',\r\n      icon: '🔄'\r\n    },\r\n\r\n    // 前端测试\r\n    {\r\n      id: 21,\r\n      title: 'Jest 文档',\r\n      description: 'JavaScript 测试框架',\r\n      category: '前端测试',\r\n      url: 'https://jestjs.io',\r\n      icon: '🎭'\r\n    },\r\n    {\r\n      id: 22,\r\n      title: 'Cypress 文档',\r\n      description: '端到端测试框架',\r\n      category: '前端测试',\r\n      url: 'https://docs.cypress.io',\r\n      icon: '🎯'\r\n    },\r\n    {\r\n      id: 23,\r\n      title: 'Testing Library',\r\n      description: 'DOM 测试工具库',\r\n      category: '前端测试',\r\n      url: 'https://testing-library.com',\r\n      icon: '🧪'\r\n    },\r\n    {\r\n      id: 24,\r\n      title: 'Vitest 文档',\r\n      description: '基于 Vite 的测试框架',\r\n      category: '前端测试',\r\n      url: 'https://vitest.dev',\r\n      icon: '⚡'\r\n    },\r\n\r\n    // 后端框架 (Node.js)\r\n    {\r\n      id: 25,\r\n      title: 'Express.js 文档',\r\n      description: 'Node.js Web 应用框架',\r\n      category: '后端框架',\r\n      url: 'https://expressjs.com',\r\n      icon: '🚂'\r\n    },\r\n    {\r\n      id: 26,\r\n      title: 'Koa 文档',\r\n      description: '下一代 Node.js 框架',\r\n      category: '后端框架',\r\n      url: 'https://koajs.com',\r\n      icon: '🎋'\r\n    },\r\n    {\r\n      id: 27,\r\n      title: 'NestJS 文档',\r\n      description: '用于构建高效、可扩展的服务器端应用',\r\n      category: '后端框架',\r\n      url: 'https://nestjs.com',\r\n      icon: '🪺'\r\n    },\r\n    {\r\n      id: 28,\r\n      title: 'Fastify 文档',\r\n      description: '快速且低开销的 Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://fastify.io',\r\n      icon: '🚀'\r\n    },\r\n    {\r\n      id: 29,\r\n      title: 'Hapi 文档',\r\n      description: '丰富的框架用于构建应用和服务',\r\n      category: '后端框架',\r\n      url: 'https://hapi.dev',\r\n      icon: '🎯'\r\n    },\r\n\r\n    // 后端框架 (Python)\r\n    {\r\n      id: 30,\r\n      title: 'Django 文档',\r\n      description: 'Python Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://docs.djangoproject.com',\r\n      icon: '🎸'\r\n    },\r\n    {\r\n      id: 31,\r\n      title: 'Flask 文档',\r\n      description: 'Python 微框架',\r\n      category: '后端框架',\r\n      url: 'https://flask.palletsprojects.com',\r\n      icon: '🍶'\r\n    },\r\n    {\r\n      id: 32,\r\n      title: 'FastAPI 文档',\r\n      description: '现代、快速的 Python Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://fastapi.tiangolo.com',\r\n      icon: '⚡'\r\n    },\r\n\r\n    // 后端框架 (Java)\r\n    {\r\n      id: 33,\r\n      title: 'Spring 文档',\r\n      description: 'Java 应用框架',\r\n      category: '后端框架',\r\n      url: 'https://spring.io/docs',\r\n      icon: '🌱'\r\n    },\r\n    {\r\n      id: 34,\r\n      title: 'Spring Boot 文档',\r\n      description: '简化 Spring 应用开发',\r\n      category: '后端框架',\r\n      url: 'https://spring.io/projects/spring-boot',\r\n      icon: '👢'\r\n    },\r\n\r\n    // 后端框架 (其他语言)\r\n    {\r\n      id: 35,\r\n      title: 'Laravel 文档',\r\n      description: 'PHP Web 应用框架',\r\n      category: '后端框架',\r\n      url: 'https://laravel.com/docs',\r\n      icon: '🔨'\r\n    },\r\n    {\r\n      id: 36,\r\n      title: 'Ruby on Rails 文档',\r\n      description: 'Ruby Web 应用框架',\r\n      category: '后端框架',\r\n      url: 'https://rubyonrails.org',\r\n      icon: '💎'\r\n    },\r\n    {\r\n      id: 37,\r\n      title: 'ASP.NET Core 文档',\r\n      description: '.NET Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://docs.microsoft.com/aspnet/core',\r\n      icon: '🌐'\r\n    },\r\n    {\r\n      id: 38,\r\n      title: 'Gin 文档',\r\n      description: 'Go 语言 Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://gin-gonic.com',\r\n      icon: '🍸'\r\n    },\r\n\r\n    // 数据库和 ORM\r\n    {\r\n      id: 39,\r\n      title: 'MySQL 文档',\r\n      description: 'MySQL 数据库官方文档',\r\n      category: '数据库',\r\n      url: 'https://dev.mysql.com/doc',\r\n      icon: '🐬'\r\n    },\r\n    {\r\n      id: 40,\r\n      title: 'PostgreSQL 文档',\r\n      description: 'PostgreSQL 数据库文档',\r\n      category: '数据库',\r\n      url: 'https://www.postgresql.org/docs',\r\n      icon: '🐘'\r\n    },\r\n    {\r\n      id: 41,\r\n      title: 'MongoDB 文档',\r\n      description: 'MongoDB NoSQL 数据库文档',\r\n      category: '数据库',\r\n      url: 'https://docs.mongodb.com',\r\n      icon: '🍃'\r\n    },\r\n    {\r\n      id: 42,\r\n      title: 'Redis 文档',\r\n      description: 'Redis 内存数据结构存储',\r\n      category: '数据库',\r\n      url: 'https://redis.io/documentation',\r\n      icon: '🔴'\r\n    },\r\n    {\r\n      id: 43,\r\n      title: 'Prisma 文档',\r\n      description: '下一代 Node.js TypeScript ORM',\r\n      category: '数据库',\r\n      url: 'https://www.prisma.io',\r\n      icon: '🛡️'\r\n    },\r\n    {\r\n      id: 44,\r\n      title: 'Sequelize 文档',\r\n      description: 'Node.js 的 ORM',\r\n      category: '数据库',\r\n      url: 'https://sequelize.org',\r\n      icon: '🗄️'\r\n    },\r\n    {\r\n      id: 45,\r\n      title: 'Mongoose 文档',\r\n      description: 'MongoDB 对象建模工具',\r\n      category: '数据库',\r\n      url: 'https://mongoosejs.com',\r\n      icon: '🐍'\r\n    },\r\n\r\n    // API 和微服务\r\n    {\r\n      id: 46,\r\n      title: 'GraphQL 文档',\r\n      description: 'API 查询语言',\r\n      category: 'API 和微服务',\r\n      url: 'https://graphql.org',\r\n      icon: '📈'\r\n    },\r\n    {\r\n      id: 47,\r\n      title: 'Apollo 文档',\r\n      description: 'GraphQL 平台',\r\n      category: 'API 和微服务',\r\n      url: 'https://www.apollographql.com',\r\n      icon: '🚀'\r\n    },\r\n    {\r\n      id: 48,\r\n      title: 'Swagger 文档',\r\n      description: 'API 设计和文档工具',\r\n      category: 'API 和微服务',\r\n      url: 'https://swagger.io',\r\n      icon: '📝'\r\n    },\r\n    {\r\n      id: 49,\r\n      title: 'gRPC 文档',\r\n      description: '高性能 RPC 框架',\r\n      category: 'API 和微服务',\r\n      url: 'https://grpc.io',\r\n      icon: '🔧'\r\n    },\r\n    {\r\n      id: 50,\r\n      title: 'RESTful API 指南',\r\n      description: 'REST API 最佳实践',\r\n      category: 'API 和微服务',\r\n      url: 'https://restfulapi.net',\r\n      icon: '🌐'\r\n    },\r\n\r\n    // 认证和授权\r\n    {\r\n      id: 51,\r\n      title: 'JWT 文档',\r\n      description: 'JSON Web Tokens 官方文档',\r\n      category: '认证和授权',\r\n      url: 'https://jwt.io',\r\n      icon: '🔐'\r\n    },\r\n    {\r\n      id: 52,\r\n      title: 'OAuth 2.0 指南',\r\n      description: 'OAuth 2.0 授权框架',\r\n      category: '认证和授权',\r\n      url: 'https://oauth.net/2',\r\n      icon: '🔑'\r\n    },\r\n    {\r\n      id: 53,\r\n      title: 'Passport.js 文档',\r\n      description: 'Node.js 认证中间件',\r\n      category: '认证和授权',\r\n      url: 'http://www.passportjs.org',\r\n      icon: '🛂'\r\n    },\r\n    {\r\n      id: 54,\r\n      title: 'Auth0 文档',\r\n      description: '身份验证和授权平台',\r\n      category: '认证和授权',\r\n      url: 'https://auth0.com/docs',\r\n      icon: '🔒'\r\n    },\r\n\r\n    // 部署和 DevOps\r\n    {\r\n      id: 55,\r\n      title: 'Docker 文档',\r\n      description: '容器化平台文档',\r\n      category: '部署和 DevOps',\r\n      url: 'https://docs.docker.com',\r\n      icon: '🐳'\r\n    },\r\n    {\r\n      id: 56,\r\n      title: 'Kubernetes 文档',\r\n      description: '容器编排系统文档',\r\n      category: '部署和 DevOps',\r\n      url: 'https://kubernetes.io/docs',\r\n      icon: '⚓'\r\n    },\r\n    {\r\n      id: 57,\r\n      title: 'PM2 文档',\r\n      description: 'Node.js 进程管理器',\r\n      category: '部署和 DevOps',\r\n      url: 'https://pm2.keymetrics.io',\r\n      icon: '🔄'\r\n    },\r\n    {\r\n      id: 58,\r\n      title: 'Nginx 文档',\r\n      description: 'Web 服务器和反向代理',\r\n      category: '部署和 DevOps',\r\n      url: 'https://nginx.org/en/docs',\r\n      icon: '🔧'\r\n    },\r\n\r\n    // 编程语言\r\n    {\r\n      id: 59,\r\n      title: 'TypeScript 文档',\r\n      description: 'TypeScript 语言文档',\r\n      category: '编程语言',\r\n      url: 'https://www.typescriptlang.org',\r\n      icon: '🔷'\r\n    },\r\n    {\r\n      id: 60,\r\n      title: 'JavaScript MDN',\r\n      description: 'JavaScript 语言参考文档',\r\n      category: '编程语言',\r\n      url: 'https://developer.mozilla.org/javascript',\r\n      icon: '📜'\r\n    },\r\n    {\r\n      id: 61,\r\n      title: 'Python 官方文档',\r\n      description: 'Python 编程语言官方文档',\r\n      category: '编程语言',\r\n      url: 'https://docs.python.org',\r\n      icon: '🐍'\r\n    },\r\n    {\r\n      id: 62,\r\n      title: 'Node.js 文档',\r\n      description: 'Node.js 运行时文档',\r\n      category: '编程语言',\r\n      url: 'https://nodejs.org',\r\n      icon: '📦'\r\n    },\r\n\r\n    // 工具和包管理\r\n    {\r\n      id: 63,\r\n      title: 'Git 文档',\r\n      description: '分布式版本控制系统',\r\n      category: '开发工具',\r\n      url: 'https://git-scm.com/doc',\r\n      icon: '📚'\r\n    },\r\n    {\r\n      id: 64,\r\n      title: 'NPM 文档',\r\n      description: 'Node 包管理器文档',\r\n      category: '开发工具',\r\n      url: 'https://docs.npmjs.com',\r\n      icon: '📦'\r\n    },\r\n    {\r\n      id: 65,\r\n      title: 'Yarn 文档',\r\n      description: '快速、可靠、安全的依赖管理',\r\n      category: '开发工具',\r\n      url: 'https://yarnpkg.com',\r\n      icon: '🧶'\r\n    },\r\n    {\r\n      id: 66,\r\n      title: 'VS Code 文档',\r\n      description: 'Visual Studio Code 编辑器文档',\r\n      category: '开发工具',\r\n      url: 'https://code.visualstudio.com/docs',\r\n      icon: '💻'\r\n    },\r\n\r\n    // 性能和优化\r\n    {\r\n      id: 67,\r\n      title: 'Lighthouse 文档',\r\n      description: '自动化网站质量评估工具',\r\n      category: '性能和优化',\r\n      url: 'https://developers.google.com/web/tools/lighthouse',\r\n      icon: '💡'\r\n    },\r\n    {\r\n      id: 68,\r\n      title: 'Web Vitals',\r\n      description: '网站用户体验质量指标',\r\n      category: '性能和优化',\r\n      url: 'https://web.dev/vitals',\r\n      icon: '📊'\r\n    },\r\n    {\r\n      id: 69,\r\n      title: 'Bundlephobia',\r\n      description: '检查 npm 包大小对性能的影响',\r\n      category: '性能和优化',\r\n      url: 'https://bundlephobia.com',\r\n      icon: '📦'\r\n    }\r\n  ];\r\n\r\n  // 按类别分组\r\n  const categories = [...new Set(documents.map(doc => doc.category))];\r\n\r\n  // 过滤文档\r\n  const filteredDocs = documents.filter(doc =>\r\n    doc.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    doc.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    doc.category.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleDocClick = (doc) => {\r\n    setSelectedDoc(doc);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedDoc(null);\r\n  };\r\n\r\n  const handleVisitSite = () => {\r\n    if (selectedDoc) {\r\n      window.open(selectedDoc.url, '_blank');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"documents-container\">\r\n      {/* 技术名言轮播屏 */}\r\n      <div className=\"quotes-carousel\">\r\n        <div className=\"carousel-container\">\r\n          <button className=\"carousel-btn prev-btn\" onClick={prevQuote}>\r\n            ‹\r\n          </button>\r\n          \r\n          <div className=\"quote-slide\">\r\n            <div className=\"quote-content\">\r\n              <div className=\"quote-icon\">💭</div>\r\n              <div className=\"quote-text\">\r\n                <p className=\"quote-main\">\"{techQuotes[currentQuoteIndex].text}\"</p>\r\n                <div className=\"quote-meta\">\r\n                  <span className=\"quote-author\">— {techQuotes[currentQuoteIndex].author}</span>\r\n                  <span className=\"quote-category\">{techQuotes[currentQuoteIndex].category}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <button className=\"carousel-btn next-btn\" onClick={nextQuote}>\r\n            ›\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"carousel-indicators\">\r\n          {techQuotes.map((_, index) => (\r\n            <button\r\n              key={index}\r\n              className={`indicator ${index === currentQuoteIndex ? 'active' : ''}`}\r\n              onClick={() => setCurrentQuoteIndex(index)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"documents-header\">\r\n        <h1>📚 开发文档库</h1>\r\n        <p>专注于前端和后端开发文档 - 共 {documents.length} 个资源</p>\r\n        \r\n        <div className=\"search-section\">\r\n          <div className=\"search-box\">\r\n            <span className=\"search-icon\">🔍</span>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"搜索文档名称、描述或类别...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"search-input\"\r\n            />\r\n            {searchTerm && (\r\n              <button \r\n                className=\"clear-search\"\r\n                onClick={() => setSearchTerm('')}\r\n              >\r\n                ✕\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"documents-content\">\r\n        {categories.map(category => {\r\n          const categoryDocs = filteredDocs.filter(doc => doc.category === category);\r\n          \r\n          if (categoryDocs.length === 0) return null;\r\n          \r\n          return (\r\n            <div key={category} className=\"category-section\">\r\n              <h2 className=\"category-title\">\r\n                {category} \r\n                <span className=\"category-count\">({categoryDocs.length})</span>\r\n              </h2>\r\n              <div className=\"documents-grid\">\r\n                {categoryDocs.map(doc => (\r\n                  <div\r\n                    key={doc.id}\r\n                    className=\"document-card\"\r\n                    onClick={() => handleDocClick(doc)}\r\n                  >\r\n                    <div className=\"doc-header\">\r\n                      <div className=\"doc-icon\">{doc.icon}</div>\r\n                      <div className=\"doc-info\">\r\n                        <h3 className=\"doc-title\">{doc.title}</h3>\r\n                        <p className=\"doc-description\">{doc.description}</p>\r\n                        <div className=\"doc-category\">{doc.category}</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"doc-footer\">\r\n                      <button className=\"visit-button\">\r\n                        访问网站 →\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        {filteredDocs.length === 0 && (\r\n          <div className=\"no-results\">\r\n            <div className=\"no-results-icon\">🔍</div>\r\n            <h3>未找到匹配的文档</h3>\r\n            <p>尝试调整搜索关键词</p>\r\n            <button \r\n              className=\"clear-search-btn\"\r\n              onClick={() => setSearchTerm('')}\r\n            >\r\n              清除搜索\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 文档详情模态框 */}\r\n      {selectedDoc && (\r\n        <div className=\"modal-overlay\" onClick={handleCloseModal}>\r\n          <div className=\"modal-content doc-modal\" onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"modal-header\">\r\n              <div className=\"modal-title-section\">\r\n                <span className=\"doc-modal-icon\">{selectedDoc.icon}</span>\r\n                <div>\r\n                  <h3>{selectedDoc.title}</h3>\r\n                  <span className=\"doc-category-badge\">{selectedDoc.category}</span>\r\n                </div>\r\n              </div>\r\n              <button className=\"close-btn\" onClick={handleCloseModal}>\r\n                ×\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"modal-body\">\r\n              <p className=\"doc-modal-description\">{selectedDoc.description}</p>\r\n              \r\n              <div className=\"doc-url-section\">\r\n                <label>网站地址:</label>\r\n                <div className=\"url-display\">\r\n                  <span className=\"url-text\">{selectedDoc.url}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"modal-actions\">\r\n              <button className=\"cancel-btn\" onClick={handleCloseModal}>\r\n                关闭\r\n              </button>\r\n              <button className=\"visit-site-btn\" onClick={handleVisitSite}>\r\n                🌐 访问网站\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Documents;","// services/communityService.js\r\nimport AV from 'leancloud-storage';\r\n\r\nexport class CommunityService {\r\n  // 获取帖子列表\r\n  static async getPosts(options = {}) {\r\n    const {\r\n      page = 1,\r\n      pageSize = 20,\r\n      sortBy = 'createdAt',\r\n      sortOrder = 'desc',\r\n      keyword = '',\r\n      tag = '',\r\n      authorId = ''\r\n    } = options;\r\n\r\n    const query = new AV.Query('Post');\r\n    query.equalTo('isPublic', true);\r\n    query.equalTo('status', 'published');\r\n    \r\n    // 关键词搜索\r\n    if (keyword) {\r\n      const titleQuery = new AV.Query('Post');\r\n      titleQuery.contains('title', keyword);\r\n      \r\n      const contentQuery = new AV.Query('Post');\r\n      contentQuery.contains('content', keyword);\r\n      \r\n      query = AV.Query.or(titleQuery, contentQuery);\r\n    }\r\n    \r\n    // 标签筛选\r\n    if (tag) {\r\n      query.equalTo('tags', tag);\r\n    }\r\n    \r\n    // 作者筛选\r\n    if (authorId) {\r\n      const author = AV.Object.createWithoutData('_User', authorId);\r\n      query.equalTo('author', author);\r\n    }\r\n    \r\n    query.include('author');\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    query.descending(sortBy);\r\n    \r\n    return query.find();\r\n  }\r\n\r\n  // 创建帖子\r\n  static async createPost(postData) {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) throw new Error('请先登录');\r\n    \r\n    const Post = AV.Object.extend('Post');\r\n    const post = new Post();\r\n    \r\n    post.set('title', postData.title);\r\n    post.set('content', postData.content);\r\n    post.set('author', currentUser);\r\n    post.set('tags', postData.tags || []);\r\n    post.set('isPublic', postData.isPublic !== false);\r\n    post.set('status', 'published');\r\n    post.set('likes', 0);\r\n    post.set('views', 0);\r\n    post.set('commentCount', 0);\r\n    \r\n    return post.save();\r\n  }\r\n\r\n  // 获取帖子详情\r\n  static async getPostById(id) {\r\n    const query = new AV.Query('Post');\r\n    query.include('author');\r\n    const post = await query.get(id);\r\n    \r\n    // 增加浏览数\r\n    post.increment('views', 1);\r\n    await post.save();\r\n    \r\n    return post;\r\n  }\r\n\r\n  // 获取评论\r\n  static async getComments(postId, options = {}) {\r\n    const { page = 1, pageSize = 50 } = options;\r\n    \r\n    const query = new AV.Query('Comment');\r\n    const post = AV.Object.createWithoutData('Post', postId);\r\n    query.equalTo('post', post);\r\n    query.include('author');\r\n    query.include('parent');\r\n    query.ascending('createdAt');\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    \r\n    return query.find();\r\n  }\r\n\r\n  // 添加评论\r\n  static async addComment(postId, content, parentId = null) {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) throw new Error('请先登录');\r\n    \r\n    const Comment = AV.Object.extend('Comment');\r\n    const comment = new Comment();\r\n    \r\n    const post = AV.Object.createWithoutData('Post', postId);\r\n    comment.set('post', post);\r\n    comment.set('author', currentUser);\r\n    comment.set('content', content);\r\n    comment.set('likes', 0);\r\n    \r\n    if (parentId) {\r\n      const parent = AV.Object.createWithoutData('Comment', parentId);\r\n      comment.set('parent', parent);\r\n    }\r\n    \r\n    // 更新帖子的评论数和最后评论时间\r\n    post.increment('commentCount', 1);\r\n    post.set('lastCommentedAt', new Date());\r\n    await post.save();\r\n    \r\n    return comment.save();\r\n  }\r\n\r\n  // 点赞/取消点赞\r\n  static async toggleLike(postId) {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) throw new Error('请先登录');\r\n    \r\n    const Like = AV.Object.extend('Like');\r\n    const query = new AV.Query('Like');\r\n    const post = AV.Object.createWithoutData('Post', postId);\r\n    \r\n    query.equalTo('user', currentUser);\r\n    query.equalTo('post', post);\r\n    \r\n    const existingLike = await query.first();\r\n    \r\n    if (existingLike) {\r\n      // 取消点赞\r\n      await existingLike.destroy();\r\n      \r\n      const postObj = await new AV.Query('Post').get(postId);\r\n      postObj.increment('likes', -1);\r\n      await postObj.save();\r\n      \r\n      return { liked: false };\r\n    } else {\r\n      // 添加点赞\r\n      const like = new Like();\r\n      like.set('user', currentUser);\r\n      like.set('post', post);\r\n      await like.save();\r\n      \r\n      const postObj = await new AV.Query('Post').get(postId);\r\n      postObj.increment('likes', 1);\r\n      await postObj.save();\r\n      \r\n      return { liked: true };\r\n    }\r\n  }\r\n\r\n  // 获取热门标签\r\n  static async getPopularTags(limit = 10) {\r\n    // 这里可以使用 LeanCloud 的聚合查询\r\n    // 简化版本：从所有帖子中统计标签\r\n    const query = new AV.Query('Post');\r\n    query.equalTo('isPublic', true);\r\n    query.equalTo('status', 'published');\r\n    const posts = await query.find();\r\n    \r\n    const tagCount = {};\r\n    posts.forEach(post => {\r\n      const tags = post.get('tags') || [];\r\n      tags.forEach(tag => {\r\n        tagCount[tag] = (tagCount[tag] || 0) + 1;\r\n      });\r\n    });\r\n    \r\n    return Object.entries(tagCount)\r\n      .sort(([,a], [,b]) => b - a)\r\n      .slice(0, limit)\r\n      .map(([tag, count]) => ({ tag, count }));\r\n  }\r\n}","// components/community/CreatePostModal.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport AV from 'leancloud-storage';\r\nimport './CreatePostModal.css';\r\n\r\nconst CreatePostModal = ({ onClose, onSuccess }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    content: '',\r\n    tags: '',\r\n    isPublic: true\r\n  });\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [charCount, setCharCount] = useState({ title: 0, content: 0 });\r\n  const [suggestedTags, setSuggestedTags] = useState([]);\r\n  const textareaRef = useRef(null);\r\n\r\n  const maxLengths = {\r\n    title: 100,\r\n    content: 5000\r\n  };\r\n\r\n  // 热门标签建议\r\n  const popularTags = [\r\n    'JavaScript', 'React', '算法', 'LeetCode', '前端', \r\n    '面试', 'TypeScript', 'Vue', 'CSS', 'Node.js',\r\n    '数据库', '计算机网络', '操作系统', '数据结构'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // 自动调整文本域高度\r\n    if (textareaRef.current) {\r\n      textareaRef.current.style.height = 'auto';\r\n      textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px';\r\n    }\r\n  }, [formData.content]);\r\n\r\n  useEffect(() => {\r\n    // 根据标题内容推荐标签\r\n    if (formData.title.length > 5) {\r\n      const matchedTags = popularTags.filter(tag =>\r\n        formData.title.toLowerCase().includes(tag.toLowerCase())\r\n      );\r\n      setSuggestedTags(matchedTags.slice(0, 3));\r\n    } else {\r\n      setSuggestedTags([]);\r\n    }\r\n  }, [formData.title]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.title.trim()) {\r\n      newErrors.title = '请输入帖子标题';\r\n    } else if (formData.title.length < 5) {\r\n      newErrors.title = '标题至少需要5个字符';\r\n    } else if (formData.title.length > maxLengths.title) {\r\n      newErrors.title = `标题不能超过${maxLengths.title}个字符`;\r\n    }\r\n\r\n    if (!formData.content.trim()) {\r\n      newErrors.content = '请输入帖子内容';\r\n    } else if (formData.content.length < 10) {\r\n      newErrors.content = '内容至少需要10个字符';\r\n    } else if (formData.content.length > maxLengths.content) {\r\n      newErrors.content = `内容不能超过${maxLengths.content}个字符`;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    setCharCount(prev => ({ ...prev, [field]: value.length }));\r\n    \r\n    // 清除对应字段的错误\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const handleTagSuggestionClick = (tag) => {\r\n    const currentTags = formData.tags.split(',').map(t => t.trim()).filter(t => t);\r\n    if (!currentTags.includes(tag)) {\r\n      const newTags = [...currentTags, tag].join(', ');\r\n      handleInputChange('tags', newTags);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      const tagsArray = formData.tags\r\n        .split(',')\r\n        .map(tag => tag.trim())\r\n        .filter(tag => tag)\r\n        .slice(0, 5); // 最多5个标签\r\n\r\n      const postData = {\r\n        title: formData.title.trim(),\r\n        content: formData.content.trim(),\r\n        tags: tagsArray,\r\n        isPublic: formData.isPublic\r\n      };\r\n\r\n      const newPost = await CommunityService.createPost(postData);\r\n      \r\n      // 显示成功消息\r\n      setSubmitting(false);\r\n      onSuccess(newPost);\r\n      \r\n    } catch (error) {\r\n      console.error('发布失败:', error);\r\n      setErrors({ submit: error.message || '发布失败，请重试' });\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const getTitleCharCountColor = () => {\r\n    const ratio = charCount.title / maxLengths.title;\r\n    if (ratio > 0.9) return '#ff6b6b';\r\n    if (ratio > 0.7) return '#ffa726';\r\n    return '#4ecdc4';\r\n  };\r\n\r\n  const getContentCharCountColor = () => {\r\n    const ratio = charCount.content / maxLengths.content;\r\n    if (ratio > 0.9) return '#ff6b6b';\r\n    if (ratio > 0.7) return '#ffa726';\r\n    return '#4ecdc4';\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"create-post-modal\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <div className=\"header-content\">\r\n            <h3>✏️ 发布新帖子</h3>\r\n            <p>分享你的学习心得和经验</p>\r\n          </div>\r\n          <button className=\"close-btn\" onClick={onClose}>\r\n            ✕\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"post-form\">\r\n          {/* 标题输入 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"post-title\">\r\n              帖子标题 *\r\n              <span \r\n                className=\"char-count\"\r\n                style={{ color: getTitleCharCountColor() }}\r\n              >\r\n                {charCount.title}/{maxLengths.title}\r\n              </span>\r\n            </label>\r\n            <input\r\n              id=\"post-title\"\r\n              type=\"text\"\r\n              placeholder=\"请输入有吸引力的标题...\"\r\n              value={formData.title}\r\n              onChange={(e) => handleInputChange('title', e.target.value)}\r\n              className={errors.title ? 'error' : ''}\r\n              maxLength={maxLengths.title}\r\n            />\r\n            {errors.title && <span className=\"error-message\">{errors.title}</span>}\r\n          </div>\r\n\r\n          {/* 内容输入 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"post-content\">\r\n              帖子内容 *\r\n              <span \r\n                className=\"char-count\"\r\n                style={{ color: getContentCharCountColor() }}\r\n              >\r\n                {charCount.content}/{maxLengths.content}\r\n              </span>\r\n            </label>\r\n            <textarea\r\n              ref={textareaRef}\r\n              id=\"post-content\"\r\n              placeholder=\"详细描述你的问题或分享你的经验...（支持 Markdown 格式）\"\r\n              value={formData.content}\r\n              onChange={(e) => handleInputChange('content', e.target.value)}\r\n              className={errors.content ? 'error' : ''}\r\n              maxLength={maxLengths.content}\r\n              rows=\"6\"\r\n            />\r\n            {errors.content && <span className=\"error-message\">{errors.content}</span>}\r\n            \r\n            {/* 内容格式提示 */}\r\n            <div className=\"format-tips\">\r\n              <span className=\"tip-title\">格式提示：</span>\r\n              <span className=\"tip-item\">**粗体**</span>\r\n              <span className=\"tip-item\">*斜体*</span>\r\n              <span className=\"tip-item\">`代码`</span>\r\n              <span className=\"tip-item\">- 列表项</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 标签输入 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"post-tags\">\r\n              标签\r\n              <span className=\"optional\">（可选）</span>\r\n            </label>\r\n            <input\r\n              id=\"post-tags\"\r\n              type=\"text\"\r\n              placeholder=\"输入标签，用逗号分隔（例如：JavaScript,算法,LeetCode）\"\r\n              value={formData.tags}\r\n              onChange={(e) => handleInputChange('tags', e.target.value)}\r\n            />\r\n            \r\n            {/* 标签建议 */}\r\n            {suggestedTags.length > 0 && (\r\n              <div className=\"tag-suggestions\">\r\n                <span className=\"suggestions-label\">推荐标签：</span>\r\n                {suggestedTags.map(tag => (\r\n                  <button\r\n                    key={tag}\r\n                    type=\"button\"\r\n                    className=\"tag-suggestion\"\r\n                    onClick={() => handleTagSuggestionClick(tag)}\r\n                  >\r\n                    {tag}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"tags-hint\">\r\n              最多5个标签，用逗号分隔。合适的标签有助于更多人看到你的帖子。\r\n            </div>\r\n          </div>\r\n\r\n          {/* 发布设置 */}\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-label\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={formData.isPublic}\r\n                onChange={(e) => handleInputChange('isPublic', e.target.checked)}\r\n              />\r\n              <span className=\"checkmark\"></span>\r\n              公开帖子（所有人可见）\r\n            </label>\r\n            <div className=\"privacy-hint\">\r\n              {formData.isPublic \r\n                ? '✅ 你的帖子将对所有用户可见'\r\n                : '🔒 只有你自己可以看到此帖子'\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n          {/* 提交错误 */}\r\n          {errors.submit && (\r\n            <div className=\"submit-error\">\r\n              <span className=\"error-icon\">⚠️</span>\r\n              {errors.submit}\r\n            </div>\r\n          )}\r\n\r\n          {/* 表单操作 */}\r\n          <div className=\"form-actions\">\r\n            <button \r\n              type=\"button\" \r\n              onClick={onClose}\r\n              className=\"cancel-btn\"\r\n              disabled={submitting}\r\n            >\r\n              取消\r\n            </button>\r\n            <button \r\n              type=\"submit\" \r\n              className=\"submit-btn\"\r\n              disabled={submitting}\r\n            >\r\n              {submitting ? (\r\n                <>\r\n                  <div className=\"submit-spinner\"></div>\r\n                  发布中...\r\n                </>\r\n              ) : (\r\n                '🚀 发布帖子'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePostModal;","// components/community/SearchBar.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst SearchBar = ({ onSearch, placeholder = \"搜索帖子标题或内容...\" }) => {\r\n  const [keyword, setKeyword] = useState('');\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const searchInputRef = useRef(null);\r\n\r\n  // 热门搜索建议\r\n  const popularSuggestions = [\r\n    'JavaScript',\r\n    'React',\r\n    '算法',\r\n    'LeetCode',\r\n    '前端',\r\n    '面试',\r\n    'TypeScript',\r\n    'Vue'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // 防抖搜索\r\n    const timeoutId = setTimeout(() => {\r\n      onSearch(keyword);\r\n    }, 300);\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [keyword, onSearch]);\r\n\r\n  const handleSearch = (value) => {\r\n    setKeyword(value);\r\n    setShowSuggestions(value.length > 0);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setKeyword('');\r\n    setShowSuggestions(false);\r\n    onSearch('');\r\n    searchInputRef.current?.focus();\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    setKeyword(suggestion);\r\n    setShowSuggestions(false);\r\n    onSearch(suggestion);\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    setIsFocused(true);\r\n    if (keyword.length > 0) {\r\n      setShowSuggestions(true);\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsFocused(false);\r\n    // 延迟隐藏建议列表，以便点击建议项\r\n    setTimeout(() => setShowSuggestions(false), 200);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Escape') {\r\n      setShowSuggestions(false);\r\n      searchInputRef.current?.blur();\r\n    } else if (e.key === 'Enter') {\r\n      setShowSuggestions(false);\r\n      onSearch(keyword);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <div className={`search-input-container ${isFocused ? 'focused' : ''}`}>\r\n        <div className=\"search-icon\">🔍</div>\r\n        \r\n        <input\r\n          ref={searchInputRef}\r\n          type=\"text\"\r\n          placeholder={placeholder}\r\n          value={keyword}\r\n          onChange={(e) => handleSearch(e.target.value)}\r\n          onFocus={handleFocus}\r\n          onBlur={handleBlur}\r\n          onKeyDown={handleKeyDown}\r\n          className=\"search-input\"\r\n        />\r\n\r\n        {keyword && (\r\n          <button \r\n            className=\"clear-search\"\r\n            onClick={handleClear}\r\n            type=\"button\"\r\n          >\r\n            ✕\r\n          </button>\r\n        )}\r\n\r\n        {/* 搜索建议下拉框 */}\r\n        {showSuggestions && (\r\n          <div className=\"search-suggestions\">\r\n            <div className=\"suggestions-header\">\r\n              <span className=\"suggestions-title\">搜索建议</span>\r\n              <button \r\n                className=\"close-suggestions\"\r\n                onClick={() => setShowSuggestions(false)}\r\n              >\r\n                ✕\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"suggestions-list\">\r\n              {/* 精确匹配建议 */}\r\n              {keyword.length > 0 && (\r\n                <div \r\n                  className=\"suggestion-item exact-match\"\r\n                  onClick={() => handleSuggestionClick(keyword)}\r\n                >\r\n                  <span className=\"suggestion-icon\">🔍</span>\r\n                  <span className=\"suggestion-text\">搜索: \"{keyword}\"</span>\r\n                </div>\r\n              )}\r\n\r\n              {/* 热门搜索建议 */}\r\n              <div className=\"suggestions-section\">\r\n                <div className=\"section-title\">热门搜索</div>\r\n                {popularSuggestions\r\n                  .filter(suggestion => \r\n                    suggestion.toLowerCase().includes(keyword.toLowerCase())\r\n                  )\r\n                  .map((suggestion, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"suggestion-item\"\r\n                      onClick={() => handleSuggestionClick(suggestion)}\r\n                    >\r\n                      <span className=\"suggestion-icon\">🔥</span>\r\n                      <span className=\"suggestion-text\">{suggestion}</span>\r\n                    </div>\r\n                  ))\r\n                }\r\n              </div>\r\n\r\n              {/* 搜索提示 */}\r\n              <div className=\"search-tips\">\r\n                <div className=\"tips-title\">搜索提示</div>\r\n                <div className=\"tips-list\">\r\n                  <div className=\"tip-item\">\r\n                    <span className=\"tip-icon\">💡</span>\r\n                    <span>支持搜索帖子标题、内容和标签</span>\r\n                  </div>\r\n                  <div className=\"tip-item\">\r\n                    <span className=\"tip-icon\">⏎</span>\r\n                    <span>按 Enter 键快速搜索</span>\r\n                  </div>\r\n                  <div className=\"tip-item\">\r\n                    <span className=\"tip-icon\">⎋</span>\r\n                    <span>按 ESC 键清除搜索</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 搜索统计信息 */}\r\n      {keyword && (\r\n        <div className=\"search-stats\">\r\n          <span className=\"stats-text\">\r\n            正在搜索: <strong>\"{keyword}\"</strong>\r\n          </span>\r\n          <button \r\n            className=\"advanced-search-btn\"\r\n            onClick={() => setShowSuggestions(true)}\r\n          >\r\n            高级搜索\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;","// components/community/TagCloud.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport './TagCloud.css';\r\n\r\nconst TagCloud = ({ onTagClick, maxTags = 20 }) => {\r\n  const [tags, setTags] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedTag, setSelectedTag] = useState('');\r\n\r\n  // 默认热门标签（作为回退）\r\n  const defaultTags = [\r\n    { tag: 'JavaScript', count: 25, color: '#f7df1e' },\r\n    { tag: 'React', count: 18, color: '#61dafb' },\r\n    { tag: '算法', count: 22, color: '#4ecdc4' },\r\n    { tag: 'LeetCode', count: 20, color: '#ff6b6b' },\r\n    { tag: '前端', count: 15, color: '#667eea' },\r\n    { tag: '面试', count: 12, color: '#f093fb' },\r\n    { tag: 'TypeScript', count: 10, color: '#3178c6' },\r\n    { tag: 'Vue', count: 8, color: '#41b883' },\r\n    { tag: 'CSS', count: 6, color: '#264de4' },\r\n    { tag: 'Node.js', count: 5, color: '#68a063' },\r\n    { tag: '数据库', count: 7, color: '#ffa726' },\r\n    { tag: '计算机网络', count: 4, color: '#26c6da' },\r\n    { tag: '操作系统', count: 3, color: '#ab47bc' },\r\n    { tag: '数据结构', count: 9, color: '#ec407a' },\r\n    { tag: 'Git', count: 5, color: '#f4511e' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    loadPopularTags();\r\n  }, []);\r\n\r\n  const loadPopularTags = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const popularTags = await CommunityService.getPopularTags(maxTags);\r\n      if (popularTags && popularTags.length > 0) {\r\n        // 为标签添加颜色\r\n        const tagsWithColors = popularTags.map((tagData, index) => ({\r\n          ...tagData,\r\n          color: getTagColor(index)\r\n        }));\r\n        setTags(tagsWithColors);\r\n      } else {\r\n        // 使用默认标签\r\n        setTags(defaultTags.slice(0, maxTags));\r\n      }\r\n    } catch (error) {\r\n      console.error('加载热门标签失败:', error);\r\n      // 使用默认标签作为回退\r\n      setTags(defaultTags.slice(0, maxTags));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 根据索引生成标签颜色\r\n  const getTagColor = (index) => {\r\n    const colors = [\r\n      '#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57',\r\n      '#ff9ff3', '#54a0ff', '#5f27cd', '#00d2d3', '#ff9f43',\r\n      '#f368e0', '#ff9f43', '#a55eea', '#fd79a8', '#e17055',\r\n      '#00b894', '#00cec9', '#0984e3', '#6c5ce7', '#b2bec3'\r\n    ];\r\n    return colors[index % colors.length];\r\n  };\r\n\r\n  // 根据标签数量计算字体大小\r\n  const getTagSize = (count, maxCount) => {\r\n    const sizes = ['xs', 'sm', 'md', 'lg', 'xl'];\r\n    const ratio = count / maxCount;\r\n    \r\n    if (ratio > 0.8) return sizes[4];      // xl\r\n    if (ratio > 0.6) return sizes[3];      // lg\r\n    if (ratio > 0.4) return sizes[2];      // md\r\n    if (ratio > 0.2) return sizes[1];      // sm\r\n    return sizes[0];                       // xs\r\n  };\r\n\r\n  const handleTagClick = (tag) => {\r\n    setSelectedTag(tag === selectedTag ? '' : tag);\r\n    onTagClick(tag === selectedTag ? '' : tag);\r\n  };\r\n\r\n  const handleClearFilter = () => {\r\n    setSelectedTag('');\r\n    onTagClick('');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"tag-cloud-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <span>加载标签中...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const maxCount = Math.max(...tags.map(t => t.count));\r\n  const totalPosts = tags.reduce((sum, tag) => sum + tag.count, 0);\r\n\r\n  return (\r\n    <div className=\"tag-cloud-container\">\r\n      {/* 标签云头部信息 */}\r\n      <div className=\"tag-cloud-header\">\r\n        <div className=\"tag-cloud-stats\">\r\n          <span className=\"stats-text\">\r\n            {tags.length} 个标签 • {totalPosts} 个帖子\r\n          </span>\r\n          {selectedTag && (\r\n            <button \r\n              className=\"clear-filter-btn\"\r\n              onClick={handleClearFilter}\r\n            >\r\n              清除筛选\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 标签云主体 */}\r\n      <div className=\"tag-cloud\">\r\n        {tags.map(({ tag, count, color }) => {\r\n          const size = getTagSize(count, maxCount);\r\n          const isSelected = tag === selectedTag;\r\n          \r\n          return (\r\n            <span\r\n              key={tag}\r\n              className={`tag ${size} ${isSelected ? 'selected' : ''}`}\r\n              style={{\r\n                '--tag-color': color,\r\n                '--tag-bg-color': isSelected ? color : `${color}20`,\r\n                '--tag-border-color': isSelected ? color : `${color}40`\r\n              }}\r\n              onClick={() => handleTagClick(tag)}\r\n              title={`${tag} - ${count} 个帖子`}\r\n            >\r\n              <span className=\"tag-text\">{tag}</span>\r\n              <span className=\"tag-count\">{count}</span>\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* 选中的标签提示 */}\r\n      {selectedTag && (\r\n        <div className=\"selected-tag-info\">\r\n          <span className=\"selected-tag-badge\">\r\n            <span className=\"selected-tag-text\">已选择: {selectedTag}</span>\r\n            <button \r\n              className=\"remove-selection\"\r\n              onClick={handleClearFilter}\r\n            >\r\n              ✕\r\n            </button>\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {/* 标签云说明 */}\r\n      <div className=\"tag-cloud-footer\">\r\n        <div className=\"tag-cloud-tips\">\r\n          <span className=\"tip-icon\">💡</span>\r\n          <span className=\"tip-text\">点击标签筛选相关帖子</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagCloud;","// components/community/CommunityStats.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport AV from 'leancloud-storage';\r\nimport './CommunityStats.css';\r\n\r\nconst CommunityStats = () => {\r\n  const [stats, setStats] = useState({\r\n    totalPosts: 0,\r\n    totalComments: 0,\r\n    totalLikes: 0,\r\n    activeUsers: 0,\r\n    todayPosts: 0,\r\n    trendingTags: []\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadStats();\r\n    // 每5分钟刷新一次数据\r\n    const interval = setInterval(loadStats, 5 * 60 * 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const loadStats = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // 获取帖子总数\r\n      const totalPosts = await new AV.Query('Post')\r\n        .equalTo('status', 'published')\r\n        .count()\r\n        .catch(() => 0);\r\n\r\n      // 获取评论总数\r\n      const totalComments = await new AV.Query('Comment').count().catch(() => 0);\r\n\r\n      // 获取点赞总数（需要从 Like 表统计）\r\n      const totalLikes = await new AV.Query('Like').count().catch(() => 0);\r\n\r\n      // 获取今日帖子数\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      const todayPosts = await new AV.Query('Post')\r\n        .greaterThanOrEqualTo('createdAt', today)\r\n        .count()\r\n        .catch(() => 0);\r\n\r\n      // 获取活跃用户数（最近7天有活动的用户）\r\n      const weekAgo = new Date();\r\n      weekAgo.setDate(weekAgo.getDate() - 7);\r\n      const activeUsers = await new AV.Query('Post')\r\n        .greaterThanOrEqualTo('createdAt', weekAgo)\r\n        .distinct('author')\r\n        .count()\r\n        .catch(() => 0);\r\n\r\n      // 获取热门标签\r\n      const postQuery = new AV.Query('Post');\r\n      const posts = await postQuery\r\n        .equalTo('status', 'published')\r\n        .limit(1000)\r\n        .find()\r\n        .catch(() => []);\r\n\r\n      const tagCount = {};\r\n      posts.forEach(post => {\r\n        const tags = post.get('tags') || [];\r\n        tags.forEach(tag => {\r\n          tagCount[tag] = (tagCount[tag] || 0) + 1;\r\n        });\r\n      });\r\n\r\n      const trendingTags = Object.entries(tagCount)\r\n        .sort(([,a], [,b]) => b - a)\r\n        .slice(0, 5)\r\n        .map(([tag, count]) => ({ tag, count }));\r\n\r\n      setStats({\r\n        totalPosts,\r\n        totalComments,\r\n        totalLikes,\r\n        activeUsers,\r\n        todayPosts,\r\n        trendingTags\r\n      });\r\n      setLastUpdated(new Date());\r\n    } catch (error) {\r\n      console.error('加载统计信息失败:', error);\r\n      // 使用默认数据\r\n      setStats({\r\n        totalPosts: 0,\r\n        totalComments: 0,\r\n        totalLikes: 0,\r\n        activeUsers: 0,\r\n        todayPosts: 0,\r\n        trendingTags: []\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatNumber = (num) => {\r\n    if (num >= 10000) {\r\n      return (num / 10000).toFixed(1) + '万';\r\n    }\r\n    if (num >= 1000) {\r\n      return (num / 1000).toFixed(1) + '千';\r\n    }\r\n    return num.toString();\r\n  };\r\n\r\n  const getGrowthRate = (current, previous) => {\r\n    if (previous === 0) return 100;\r\n    return ((current - previous) / previous * 100).toFixed(1);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"community-stats\">\r\n        <div className=\"stats-header\">\r\n          <h4>📊 社区统计</h4>\r\n          <button className=\"refresh-btn\" onClick={loadStats}>\r\n            🔄\r\n          </button>\r\n        </div>\r\n        <div className=\"stats-loading\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <span>加载统计中...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"community-stats\">\r\n      <div className=\"stats-header\">\r\n        <h4>📊 社区统计</h4>\r\n        <div className=\"header-actions\">\r\n          {lastUpdated && (\r\n            <span className=\"update-time\">\r\n              更新于 {lastUpdated.toLocaleTimeString('zh-CN', { \r\n                hour: '2-digit', \r\n                minute: '2-digit' \r\n              })}\r\n            </span>\r\n          )}\r\n          <button \r\n            className=\"refresh-btn\"\r\n            onClick={loadStats}\r\n            title=\"刷新数据\"\r\n          >\r\n            🔄\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"stats-grid\">\r\n        {/* 帖子统计 */}\r\n        <div className=\"stat-card primary\">\r\n          <div className=\"stat-icon\">📝</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-number\">{formatNumber(stats.totalPosts)}</div>\r\n            <div className=\"stat-label\">总帖子</div>\r\n            <div className=\"stat-subtext\">\r\n              +{stats.todayPosts} 今日\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 评论统计 */}\r\n        <div className=\"stat-card success\">\r\n          <div className=\"stat-icon\">💬</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-number\">{formatNumber(stats.totalComments)}</div>\r\n            <div className=\"stat-label\">总评论</div>\r\n            <div className=\"stat-subtext\">\r\n              互动活跃\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 点赞统计 */}\r\n        <div className=\"stat-card warning\">\r\n          <div className=\"stat-icon\">👍</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-number\">{formatNumber(stats.totalLikes)}</div>\r\n            <div className=\"stat-label\">总点赞</div>\r\n            <div className=\"stat-subtext\">\r\n              社区认可\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 活跃用户 */}\r\n        <div className=\"stat-card info\">\r\n          <div className=\"stat-icon\">👥</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-number\">{formatNumber(stats.activeUsers)}</div>\r\n            <div className=\"stat-label\">活跃用户</div>\r\n            <div className=\"stat-subtext\">\r\n              最近7天\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 热门标签 */}\r\n      {stats.trendingTags.length > 0 && (\r\n        <div className=\"trending-tags\">\r\n          <h5>🔥 热门标签</h5>\r\n          <div className=\"tags-list\">\r\n            {stats.trendingTags.map(({ tag, count }, index) => (\r\n              <div key={tag} className=\"trending-tag\">\r\n                <span className=\"tag-rank\">#{index + 1}</span>\r\n                <span className=\"tag-name\">{tag}</span>\r\n                <span className=\"tag-count\">{count}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 社区状态指示器 */}\r\n      <div className=\"community-health\">\r\n        <div className=\"health-indicator\">\r\n          <div className=\"health-label\">社区活跃度</div>\r\n          <div className=\"health-bar\">\r\n            <div \r\n              className=\"health-fill\"\r\n              style={{ \r\n                width: `${Math.min((stats.todayPosts / 10) * 100, 100)}%`,\r\n                backgroundColor: stats.todayPosts >= 5 ? '#4ecdc4' : \r\n                               stats.todayPosts >= 2 ? '#ffa726' : '#ff6b6b'\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"health-status\">\r\n            {stats.todayPosts >= 5 ? '🔥 非常活跃' :\r\n             stats.todayPosts >= 2 ? '💪 活跃' : '😴 安静'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommunityStats;","// components/community/CommentItem.jsx\r\nimport React, { useState } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport AV from 'leancloud-storage';\r\nimport './CommentItem.css';\r\n\r\n// 格式化时间函数\r\nconst formatTime = (date) => {\r\n  if (!date) return \"刚刚\";\r\n  const now = new Date();\r\n  const diffMs = now - new Date(date);\r\n  const diffMins = Math.floor(diffMs / 60000);\r\n  const diffHours = Math.floor(diffMs / 3600000);\r\n  const diffDays = Math.floor(diffMs / 86400000);\r\n\r\n  if (diffMins < 1) return \"刚刚\";\r\n  if (diffMins < 60) return `${diffMins}分钟前`;\r\n  if (diffHours < 24) return `${diffHours}小时前`;\r\n  if (diffDays < 7) return `${diffDays}天前`;\r\n  return new Date(date).toLocaleDateString('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric'\r\n  });\r\n};\r\n\r\nconst CommentItem = ({ comment, onReply, onUpdate }) => {\r\n  const [likes, setLikes] = useState(comment.get('likes') || 0);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [showActions, setShowActions] = useState(false);\r\n  const [editing, setEditing] = useState(false);\r\n  const [editContent, setEditContent] = useState(comment.get('content') || '');\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  // 获取用户信息\r\n  const getAvatarUrl = () => {\r\n    return comment.get('author')?.get('avatar') || '/default-avatar.png';\r\n  };\r\n\r\n  const getUsername = () => {\r\n    return comment.get('author')?.get('username') || '匿名用户';\r\n  };\r\n\r\n  // 检查当前用户是否是评论作者\r\n  const isAuthor = () => {\r\n    const currentUser = AV.User.current();\r\n    return currentUser && comment.get('author')?.id === currentUser.id;\r\n  };\r\n\r\n  // 处理点赞\r\n  const handleLike = async () => {\r\n    try {\r\n      const result = await CommunityService.toggleLike(comment.id, 'comment');\r\n      setLikes(result.liked ? likes + 1 : Math.max(0, likes - 1));\r\n      setIsLiked(result.liked);\r\n    } catch (error) {\r\n      console.error('点赞评论失败:', error);\r\n    }\r\n  };\r\n\r\n  // 处理回复\r\n  const handleReplyClick = () => {\r\n    onReply(comment);\r\n  };\r\n\r\n  // 处理编辑\r\n  const handleEdit = () => {\r\n    setEditing(true);\r\n    setEditContent(comment.get('content') || '');\r\n  };\r\n\r\n  // 保存编辑\r\n  const handleSaveEdit = async () => {\r\n    if (!editContent.trim()) return;\r\n\r\n    setSaving(true);\r\n    try {\r\n      // 这里需要实现更新评论的 API\r\n      // await CommunityService.updateComment(comment.id, { content: editContent });\r\n      setEditing(false);\r\n      onUpdate(); // 刷新评论列表\r\n    } catch (error) {\r\n      console.error('更新评论失败:', error);\r\n      alert('更新评论失败: ' + error.message);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  // 取消编辑\r\n  const handleCancelEdit = () => {\r\n    setEditing(false);\r\n    setEditContent(comment.get('content') || '');\r\n  };\r\n\r\n  // 处理删除\r\n  const handleDelete = async () => {\r\n    if (!window.confirm('确定要删除这条评论吗？此操作不可撤销。')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 这里需要实现删除评论的 API\r\n      // await CommunityService.deleteComment(comment.id);\r\n      onUpdate(); // 刷新评论列表\r\n    } catch (error) {\r\n      console.error('删除评论失败:', error);\r\n      alert('删除评论失败: ' + error.message);\r\n    }\r\n  };\r\n\r\n  // 渲染评论内容（支持简单的 Markdown）\r\n  const renderContent = () => {\r\n    const content = comment.get('content') || '';\r\n    \r\n    return content\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      .replace(/`(.*?)`/g, '<code>$1</code>')\r\n      .replace(/\\n/g, '<br>');\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"comment-item\"\r\n      onMouseEnter={() => setShowActions(true)}\r\n      onMouseLeave={() => setShowActions(false)}\r\n    >\r\n      {/* 评论头部 */}\r\n      <div className=\"comment-header\">\r\n        <div className=\"comment-author\">\r\n          <img \r\n            src={getAvatarUrl()} \r\n            alt=\"用户头像\"\r\n            className=\"comment-avatar\"\r\n          />\r\n          <div className=\"author-info\">\r\n            <span className=\"author-name\">{getUsername()}</span>\r\n            {isAuthor() && (\r\n              <span className=\"author-badge\">作者</span>\r\n            )}\r\n            <span className=\"comment-time\">\r\n              {formatTime(comment.get('createdAt'))}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 评论操作 */}\r\n        {showActions && (\r\n          <div className=\"comment-actions\">\r\n            <button \r\n              className=\"action-btn reply-btn\"\r\n              onClick={handleReplyClick}\r\n              title=\"回复\"\r\n            >\r\n              ↩️\r\n            </button>\r\n            \r\n            {isAuthor() && (\r\n              <>\r\n                <button \r\n                  className=\"action-btn edit-btn\"\r\n                  onClick={handleEdit}\r\n                  title=\"编辑\"\r\n                >\r\n                  ✏️\r\n                </button>\r\n                <button \r\n                  className=\"action-btn delete-btn\"\r\n                  onClick={handleDelete}\r\n                  title=\"删除\"\r\n                >\r\n                  🗑️\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 评论内容 */}\r\n      <div className=\"comment-content\">\r\n        {editing ? (\r\n          <div className=\"edit-comment\">\r\n            <textarea\r\n              value={editContent}\r\n              onChange={(e) => setEditContent(e.target.value)}\r\n              rows=\"3\"\r\n              className=\"edit-textarea\"\r\n              maxLength=\"1000\"\r\n            />\r\n            <div className=\"edit-actions\">\r\n              <button \r\n                onClick={handleCancelEdit}\r\n                className=\"cancel-edit-btn\"\r\n                disabled={saving}\r\n              >\r\n                取消\r\n              </button>\r\n              <button \r\n                onClick={handleSaveEdit}\r\n                className=\"save-edit-btn\"\r\n                disabled={!editContent.trim() || saving}\r\n              >\r\n                {saving ? '保存中...' : '保存'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div \r\n            className=\"comment-text\"\r\n            dangerouslySetInnerHTML={{ __html: renderContent() }}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {/* 评论底部 */}\r\n      <div className=\"comment-footer\">\r\n        <button \r\n          className={`like-btn ${isLiked ? 'liked' : ''}`}\r\n          onClick={handleLike}\r\n        >\r\n          <span className=\"like-icon\">👍</span>\r\n          <span className=\"like-count\">{likes}</span>\r\n        </button>\r\n\r\n        <button \r\n          className=\"reply-footer-btn\"\r\n          onClick={handleReplyClick}\r\n        >\r\n          回复\r\n        </button>\r\n      </div>\r\n\r\n      {/* 回复指示器 */}\r\n      {comment.get('parent') && (\r\n        <div className=\"reply-indicator\">\r\n          回复 <span className=\"reply-to\">@{comment.get('parent')?.get('author')?.get('username') || '用户'}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentItem;","// components/community/CommentSection.jsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport CommentItem from './CommentItem';\r\nimport AV from 'leancloud-storage';\r\nimport './CommentSection.css';\r\n\r\nconst CommentSection = ({ postId }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [sortBy, setSortBy] = useState('newest'); // newest, oldest, popular\r\n  const [replyingTo, setReplyingTo] = useState(null);\r\n  const textareaRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    loadComments();\r\n  }, [postId, sortBy]);\r\n\r\n  const loadComments = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const commentsData = await CommunityService.getComments(postId);\r\n      \r\n      // 排序评论\r\n      const sortedComments = [...commentsData].sort((a, b) => {\r\n        switch (sortBy) {\r\n          case 'oldest':\r\n            return new Date(a.get('createdAt')) - new Date(b.get('createdAt'));\r\n          case 'popular':\r\n            return (b.get('likes') || 0) - (a.get('likes') || 0);\r\n          case 'newest':\r\n          default:\r\n            return new Date(b.get('createdAt')) - new Date(a.get('createdAt'));\r\n        }\r\n      });\r\n\r\n      setComments(sortedComments);\r\n    } catch (error) {\r\n      console.error('加载评论失败:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmitComment = async () => {\r\n    if (!newComment.trim()) return;\r\n\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      alert('请先登录后再评论');\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      let parentId = null;\r\n      if (replyingTo) {\r\n        parentId = replyingTo.id;\r\n      }\r\n\r\n      await CommunityService.addComment(postId, newComment, parentId);\r\n      \r\n      // 清空输入框\r\n      setNewComment('');\r\n      setReplyingTo(null);\r\n      \r\n      // 重新加载评论\r\n      await loadComments();\r\n      \r\n      // 显示成功提示\r\n      showSuccessMessage('评论发布成功！');\r\n    } catch (error) {\r\n      console.error('发布评论失败:', error);\r\n      alert('发布评论失败: ' + error.message);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleReply = (comment) => {\r\n    setReplyingTo(comment);\r\n    setNewComment(`@${comment.get('author')?.get('username') || '用户'} `);\r\n    textareaRef.current?.focus();\r\n  };\r\n\r\n  const cancelReply = () => {\r\n    setReplyingTo(null);\r\n    setNewComment('');\r\n  };\r\n\r\n  const showSuccessMessage = (message) => {\r\n    // 可以在这里添加更美观的成功提示\r\n    console.log(message);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\r\n      handleSubmitComment();\r\n    }\r\n  };\r\n\r\n  const getCommentCountText = () => {\r\n    const count = comments.length;\r\n    if (count === 0) return '暂无评论';\r\n    if (count === 1) return '1 条评论';\r\n    return `${count} 条评论`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-section\">\r\n      {/* 评论头部 */}\r\n      <div className=\"comment-header\">\r\n        <h4 className=\"comment-title\">\r\n          💬 {getCommentCountText()}\r\n        </h4>\r\n        \r\n        <div className=\"comment-controls\">\r\n          <select \r\n            value={sortBy}\r\n            onChange={(e) => setSortBy(e.target.value)}\r\n            className=\"sort-select\"\r\n          >\r\n            <option value=\"newest\">最新</option>\r\n            <option value=\"oldest\">最早</option>\r\n            <option value=\"popular\">最热</option>\r\n          </select>\r\n          \r\n          <button \r\n            className=\"refresh-comments\"\r\n            onClick={loadComments}\r\n            disabled={loading}\r\n          >\r\n            {loading ? '🔄' : '🔄'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 评论输入框 */}\r\n      <div className=\"comment-input-section\">\r\n        {replyingTo && (\r\n          <div className=\"reply-indicator\">\r\n            <span>回复 @{replyingTo.get('author')?.get('username') || '用户'}</span>\r\n            <button onClick={cancelReply}>取消</button>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"comment-input-wrapper\">\r\n          <textarea\r\n            ref={textareaRef}\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder={replyingTo ? '写下你的回复...' : '写下你的评论...'}\r\n            rows=\"3\"\r\n            className=\"comment-textarea\"\r\n            maxLength=\"1000\"\r\n          />\r\n          \r\n          <div className=\"comment-input-footer\">\r\n            <div className=\"char-count\">\r\n              {newComment.length}/1000\r\n            </div>\r\n            \r\n            <button\r\n              onClick={handleSubmitComment}\r\n              disabled={!newComment.trim() || submitting}\r\n              className=\"submit-comment-btn\"\r\n            >\r\n              {submitting ? (\r\n                <>\r\n                  <div className=\"submit-spinner\"></div>\r\n                  发布中...\r\n                </>\r\n              ) : (\r\n                '发布评论'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"comment-tips\">\r\n          <span className=\"tip\">💡 支持 Markdown 语法</span>\r\n          <span className=\"tip\">⏎ + Ctrl 快速发布</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 评论列表 */}\r\n      <div className=\"comments-list\">\r\n        {loading ? (\r\n          <div className=\"comments-loading\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <span>加载评论中...</span>\r\n          </div>\r\n        ) : comments.length === 0 ? (\r\n          <div className=\"no-comments\">\r\n            <div className=\"no-comments-icon\">💬</div>\r\n            <h5>还没有评论</h5>\r\n            <p>成为第一个评论的人吧！</p>\r\n          </div>\r\n        ) : (\r\n          comments.map(comment => (\r\n            <CommentItem\r\n              key={comment.id}\r\n              comment={comment}\r\n              onReply={handleReply}\r\n              onUpdate={loadComments}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentSection;","// components/community/PostCard.jsx\r\nimport React, { useState } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport CommentSection from './CommentSection';\r\nimport './PostCard.css';\r\n\r\n// 格式化时间函数\r\nconst formatTime = (date) => {\r\n  if (!date) return \"刚刚\";\r\n  const now = new Date();\r\n  const diffMs = now - new Date(date);\r\n  const diffMins = Math.floor(diffMs / 60000);\r\n  const diffHours = Math.floor(diffMs / 3600000);\r\n  const diffDays = Math.floor(diffMs / 86400000);\r\n\r\n  if (diffMins < 1) return \"刚刚\";\r\n  if (diffMins < 60) return `${diffMins}分钟前`;\r\n  if (diffHours < 24) return `${diffHours}小时前`;\r\n  if (diffDays < 7) return `${diffDays}天前`;\r\n  return new Date(date).toLocaleDateString('zh-CN', {\r\n    month: 'short',\r\n    day: 'numeric'\r\n  });\r\n};\r\n\r\nconst PostCard = ({ post }) => {\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [likes, setLikes] = useState(post.get('likes') || 0);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [views, setViews] = useState(post.get('views') || 0);\r\n  \r\n  // 获取用户头像\r\n  const getAvatarUrl = () => {\r\n    return post.get('author')?.get('avatar') || '/default-avatar.png';\r\n  };\r\n\r\n  // 获取用户名\r\n  const getUsername = () => {\r\n    return post.get('author')?.get('username') || '匿名用户';\r\n  };\r\n\r\n  // 处理点赞\r\n  const handleLike = async () => {\r\n    try {\r\n      const result = await CommunityService.toggleLike(post.id);\r\n      setLikes(result.liked ? likes + 1 : Math.max(0, likes - 1));\r\n      setIsLiked(result.liked);\r\n    } catch (error) {\r\n      console.error('点赞失败:', error);\r\n    }\r\n  };\r\n\r\n  // 处理查看评论\r\n  const handleToggleComments = () => {\r\n    setShowComments(!showComments);\r\n    // 增加浏览数（只在第一次展开评论时）\r\n    if (!showComments) {\r\n      setViews(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  // 获取难度颜色\r\n  const getDifficultyColor = () => {\r\n    const difficulty = post.get('difficulty') || 'medium';\r\n    switch (difficulty) {\r\n      case 'easy': return '#52c41a';\r\n      case 'medium': return '#faad14';\r\n      case 'hard': return '#f5222d';\r\n      default: return '#666';\r\n    }\r\n  };\r\n\r\n  // 获取标签颜色\r\n  const getTagColor = (index) => {\r\n    const colors = [\r\n      '#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57',\r\n      '#ff9ff3', '#54a0ff', '#5f27cd', '#00d2d3', '#ff9f43'\r\n    ];\r\n    return colors[index % colors.length];\r\n  };\r\n\r\n  // 渲染内容（支持简单的 Markdown）\r\n  const renderContent = () => {\r\n    const content = post.get('content') || '';\r\n    \r\n    // 简单的 Markdown 处理\r\n    return content\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      .replace(/`(.*?)`/g, '<code>$1</code>')\r\n      .replace(/\\n/g, '<br>');\r\n  };\r\n\r\n  // 获取内容预览\r\n  const getContentPreview = () => {\r\n    const content = post.get('content') || '';\r\n    const plainText = content.replace(/[#*`]/g, '');\r\n    return plainText.length > 150 \r\n      ? plainText.substring(0, 150) + '...' \r\n      : plainText;\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-card\">\r\n      {/* 帖子头部 */}\r\n      <div className=\"post-header\">\r\n        <div className=\"author-section\">\r\n          <img \r\n            src={getAvatarUrl()} \r\n            alt=\"用户头像\"\r\n            className=\"author-avatar\"\r\n            style={{ width: '40px', height: '40px' }} // 内联样式作为备选\r\n\r\n          />\r\n          <div className=\"author-info\">\r\n            <div className=\"author-name\">{getUsername()}</div>\r\n            <div className=\"post-meta\">\r\n              <span className=\"post-time\">\r\n                {formatTime(post.get('createdAt'))}\r\n              </span>\r\n              {post.get('isPinned') && (\r\n                <span className=\"pinned-badge\">📌 置顶</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"post-status\">\r\n          {post.get('difficulty') && (\r\n            <span \r\n              className=\"difficulty-badge\"\r\n              style={{ backgroundColor: getDifficultyColor() }}\r\n            >\r\n              {post.get('difficulty') === 'easy' ? '简单' : \r\n               post.get('difficulty') === 'medium' ? '中等' : '困难'}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 帖子内容 */}\r\n      <div className=\"post-content\">\r\n        <h3 className=\"post-title\">{post.get('title')}</h3>\r\n        \r\n        <div \r\n          className=\"post-body\"\r\n          dangerouslySetInnerHTML={{ __html: renderContent() }}\r\n        />\r\n        \r\n        {/* 内容过长时的阅读更多 */}\r\n        {(post.get('content') || '').length > 150 && !showComments && (\r\n          <button \r\n            className=\"read-more-btn\"\r\n            onClick={() => setShowComments(true)}\r\n          >\r\n            阅读全文\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* 标签区域 */}\r\n      {post.get('tags') && post.get('tags').length > 0 && (\r\n        <div className=\"post-tags\">\r\n          {post.get('tags').map((tag, index) => (\r\n            <span\r\n              key={tag}\r\n              className=\"post-tag\"\r\n              style={{ \r\n                backgroundColor: getTagColor(index) + '20',\r\n                color: getTagColor(index),\r\n                borderColor: getTagColor(index) + '40'\r\n              }}\r\n            >\r\n              #{tag}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* 帖子统计和操作 */}\r\n      <div className=\"post-footer\">\r\n        <div className=\"post-stats\">\r\n          <button \r\n            className={`stat-btn like-btn ${isLiked ? 'liked' : ''}`}\r\n            onClick={handleLike}\r\n          >\r\n            <span className=\"stat-icon\">👍</span>\r\n            <span className=\"stat-count\">{likes}</span>\r\n          </button>\r\n          \r\n          <button \r\n            className={`stat-btn comment-btn ${showComments ? 'active' : ''}`}\r\n            onClick={handleToggleComments}\r\n          >\r\n            <span className=\"stat-icon\">💬</span>\r\n            <span className=\"stat-count\">{post.get('commentCount') || 0}</span>\r\n          </button>\r\n          \r\n          <div className=\"stat-btn view-btn\">\r\n            <span className=\"stat-icon\">👁️</span>\r\n            <span className=\"stat-count\">{views}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"post-actions\">\r\n          <button className=\"action-btn share-btn\">\r\n            🔗 分享\r\n          </button>\r\n          <button className=\"action-btn bookmark-btn\">\r\n            📌 收藏\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 评论区域 */}\r\n      {showComments && (\r\n        <CommentSection postId={post.id} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostCard;","// components/community/CommunityPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport CreatePostModal from './CreatePostModal';\r\nimport SearchBar from './SearchBar';\r\nimport TagCloud from './TagCloud';\r\nimport CommunityStats from './CommunityStats';\r\nimport PostCard from './PostCard';\r\nimport './CommunityPage.css';\r\n\r\nconst CommunityPage = () => {\r\n  const [activeTab, setActiveTab] = useState('latest');\r\n  const [posts, setPosts] = useState([]);\r\n  const [allPosts, setAllPosts] = useState([]); // 保存所有帖子用于搜索过滤\r\n  const [loading, setLoading] = useState(false);\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    pageSize: 20,\r\n    hasMore: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadPosts(true);\r\n  }, [activeTab]);\r\n\r\n  // 根据搜索关键词过滤帖子\r\n  useEffect(() => {\r\n    if (searchKeyword.trim() === '') {\r\n      // 如果没有搜索关键词，显示所有帖子\r\n      setPosts(allPosts);\r\n    } else {\r\n      // 只显示标题包含搜索关键词的帖子\r\n      const filtered = allPosts.filter(post => \r\n        post.get('title')?.toLowerCase().includes(searchKeyword.toLowerCase())\r\n      );\r\n      setPosts(filtered);\r\n    }\r\n  }, [searchKeyword, allPosts]);\r\n\r\n  const loadPosts = async (reset = false) => {\r\n    if (loading) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const currentPage = reset ? 1 : pagination.page;\r\n      const options = {\r\n        page: currentPage,\r\n        pageSize: pagination.pageSize,\r\n        sortBy: activeTab === 'latest' ? 'createdAt' : 'likes',\r\n        sortOrder: 'desc'\r\n      };\r\n\r\n      const postsData = await CommunityService.getPosts(options);\r\n      \r\n      if (reset) {\r\n        setAllPosts(postsData);\r\n        setPosts(postsData);\r\n      } else {\r\n        const newAllPosts = [...allPosts, ...postsData];\r\n        setAllPosts(newAllPosts);\r\n        \r\n        // 应用当前搜索过滤\r\n        if (searchKeyword.trim() === '') {\r\n          setPosts(newAllPosts);\r\n        } else {\r\n          const filtered = newAllPosts.filter(post => \r\n            post.get('title')?.toLowerCase().includes(searchKeyword.toLowerCase())\r\n          );\r\n          setPosts(filtered);\r\n        }\r\n      }\r\n\r\n      setPagination(prev => ({\r\n        ...prev,\r\n        page: currentPage,\r\n        hasMore: postsData.length === pagination.pageSize\r\n      }));\r\n    } catch (error) {\r\n      console.error('加载帖子失败:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (keyword) => {\r\n    setSearchKeyword(keyword);\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    if (!loading && pagination.hasMore) {\r\n      loadPosts(false);\r\n    }\r\n  };\r\n\r\n  const handlePostCreated = (newPost) => {\r\n    // 添加到所有帖子列表\r\n    setAllPosts(prev => [newPost, ...prev]);\r\n    \r\n    // 根据当前搜索条件决定是否显示新帖子\r\n    if (searchKeyword.trim() === '' || \r\n        newPost.get('title')?.toLowerCase().includes(searchKeyword.toLowerCase())) {\r\n      setPosts(prev => [newPost, ...prev]);\r\n    }\r\n    \r\n    setShowCreateModal(false);\r\n  };\r\n\r\n  // 获取搜索结果统计\r\n  const getSearchStats = () => {\r\n    if (searchKeyword.trim() === '') {\r\n      return `共 ${allPosts.length} 个帖子`;\r\n    } else {\r\n      const matchCount = allPosts.filter(post => \r\n        post.get('title')?.toLowerCase().includes(searchKeyword.toLowerCase())\r\n      ).length;\r\n      return `找到 ${posts.length} 个匹配标题的帖子（共 ${matchCount} 个）`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"community-section\">\r\n      <div className=\"container\">\r\n        {/* 头部区域 */}\r\n        <div className=\"community-header\">\r\n          <div className=\"header-content\">\r\n            <div className=\"header-text\">\r\n              <h2>学习社区</h2>\r\n              <p>与大家一起交流学习心得，分享刷题经验</p>\r\n            </div>\r\n            <button \r\n              className=\"create-post-btn modern-btn primary\"\r\n              onClick={() => setShowCreateModal(true)}\r\n            >\r\n              <span className=\"btn-icon\">✏️</span>\r\n              发布帖子\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 搜索和统计区域 */}\r\n        <div className=\"community-toolbar\">\r\n          <div className=\"toolbar-left\">\r\n            <SearchBar \r\n              onSearch={handleSearch}\r\n              placeholder=\"搜索帖子标题...\"\r\n            />\r\n          </div>\r\n          <div className=\"toolbar-right\">\r\n            <CommunityStats />\r\n          </div>\r\n        </div>\r\n\r\n        {/* 搜索统计信息 */}\r\n        {searchKeyword && (\r\n          <div className=\"search-results-info\">\r\n            <div className=\"results-stats\">\r\n              {getSearchStats()}\r\n              {searchKeyword && (\r\n                <span className=\"search-keyword\">\r\n                  搜索关键词: <strong>\"{searchKeyword}\"</strong>\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"community-layout\">\r\n          {/* 侧边栏 */}\r\n          <aside className=\"community-sidebar\">\r\n            <div className=\"sidebar-section\">\r\n              <h3>热门标签</h3>\r\n              <TagCloud \r\n                onTagClick={(tag) => handleSearch(tag)}\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"sidebar-section\">\r\n              <h3>社区指南</h3>\r\n              <div className=\"community-guidelines\">\r\n                <p>💡 分享学习心得</p>\r\n                <p>🤝 互相帮助解答</p>\r\n                <p>🎯 保持内容相关</p>\r\n                <p>👍 尊重他人观点</p>\r\n              </div>\r\n            </div>\r\n          </aside>\r\n\r\n          {/* 主内容区 */}\r\n          <main className=\"community-main\">\r\n            {/* 标签导航 */}\r\n            <div className=\"community-tabs\">\r\n              <button \r\n                className={`modern-tab ${activeTab === 'latest' ? 'active' : ''}`}\r\n                onClick={() => setActiveTab('latest')}\r\n              >\r\n                <span className=\"tab-icon\">🆕</span>\r\n                <span className=\"tab-text\">最新帖子</span>\r\n              </button>\r\n              <button \r\n                className={`modern-tab ${activeTab === 'popular' ? 'active' : ''}`}\r\n                onClick={() => setActiveTab('popular')}\r\n              >\r\n                <span className=\"tab-icon\">🔥</span>\r\n                <span className=\"tab-text\">热门内容</span>\r\n              </button>\r\n            </div>\r\n            \r\n            {/* 帖子列表 */}\r\n            <div className=\"post-list\">\r\n              {loading && (\r\n                <div className=\"loading\">\r\n                  <div className=\"spinner\"></div>\r\n                  <span>加载中...</span>\r\n                </div>\r\n              )}\r\n              \r\n              {posts.map(post => (\r\n                <PostCard key={post.id} post={post} />\r\n              ))}\r\n              \r\n              {!loading && posts.length === 0 && (\r\n                <div className=\"empty-state\">\r\n                  <div className=\"empty-icon\">\r\n                    {searchKeyword ? '🔍' : '💬'}\r\n                  </div>\r\n                  <h3>\r\n                    {searchKeyword ? '没有找到匹配的帖子' : '暂无帖子'}\r\n                  </h3>\r\n                  <p>\r\n                    {searchKeyword \r\n                      ? `没有标题包含 \"${searchKeyword}\" 的帖子，尝试调整搜索关键词`\r\n                      : '成为第一个分享学习心得的人吧！'\r\n                    }\r\n                  </p>\r\n                  {searchKeyword && (\r\n                    <button \r\n                      onClick={() => handleSearch('')}\r\n                      className=\"clear-search-btn\"\r\n                    >\r\n                      显示所有帖子\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {pagination.hasMore && posts.length > 0 && searchKeyword === '' && (\r\n              <div className=\"load-more-section\">\r\n                <button \r\n                  onClick={handleLoadMore}\r\n                  disabled={loading}\r\n                  className=\"load-more-btn\"\r\n                >\r\n                  {loading ? '加载中...' : '加载更多'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </main>\r\n        </div>\r\n        \r\n        {/* 创建帖子模态框 */}\r\n        {showCreateModal && (\r\n          <CreatePostModal \r\n            onClose={() => setShowCreateModal(false)}\r\n            onSuccess={handlePostCreated}\r\n          />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CommunityPage;","// HomePage.jsx\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\r\nimport Chatbox from \"../components/Chatbox\";\r\nimport {\r\n  getCategories,\r\n  initAV,\r\n  QueryOptions,\r\n  createCategory,\r\n  deleteCategory,\r\n} from \"../services/categoryService\";\r\nimport { getAllQuestions, updateQuestion } from \"../services/questionService\";\r\nimport { cacheService } from \"../services/cacheService\"; // 从正确的文件导入\r\nimport { offlineService } from \"../services/offlineService\"; // 从正确的文件导入\r\nimport OfflineIndicator from \"../components/OfflineIndicator\";\r\nimport AV from \"leancloud-storage\";\r\nimport CacheManagementTab from '../components/CacheManagementTab';\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ReviewReminderSection from \"../components/ReviewReminderSection\";\r\nimport CalendarTooltip from \"../components/CalendarTooltip\";\r\nimport \"./HomePage.css\";\r\nimport Documents from \"../components/Documents\";\r\nimport CommunityPage from \"../components/community/CommunityPage\";\r\n\r\n// 创建 React Query 客户端\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      staleTime: 5 * 60 * 1000, // 5分钟\r\n      cacheTime: 10 * 60 * 1000, // 10分钟\r\n      retry: 1,\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nconst HomePage = () => {\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [syncing, setSyncing] = useState(false);\r\n  const [syncMessage, setSyncMessage] = useState(\"\");\r\n  const [activeTab, setActiveTab] = useState(\"categories\");\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date());\r\n  const [showAddCategory, setShowAddCategory] = useState(false);\r\n  const [newCategoryName, setNewCategoryName] = useState(\"\");\r\n  const [newCategoryDescription, setNewCategoryDescription] = useState(\"\");\r\n  const [addingCategory, setAddingCategory] = useState(false);\r\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n  const [categoryToDelete, setCategoryToDelete] = useState(null);\r\n  const [deletingCategory, setDeletingCategory] = useState(false);\r\n\r\n  // 复习提醒相关状态\r\n  const [reviewThreshold, setReviewThreshold] = useState(7); // 默认7天\r\n  const [reviewQuestions, setReviewQuestions] = useState([]);\r\n  const [showReviewSettings, setShowReviewSettings] = useState(false);\r\n\r\n  // 用户状态\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  // 日历hover相关状态\r\n  const [hoveredDay, setHoveredDay] = useState(null);\r\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\r\n  const [tooltipVisible, setTooltipVisible] = useState(false);\r\n  const calendarRef = useRef(null);\r\n\r\n  // 新增离线相关状态\r\n  const [isOnline, setIsOnline] = useState(true);\r\n  const [cacheStatus, setCacheStatus] = useState({});\r\n  const [offlineQuestions, setOfflineQuestions] = useState([]);\r\n  const [showOfflineMode, setShowOfflineMode] = useState(false);\r\n  const [swStatus, setSwStatus] = useState({\r\n    supported: false,\r\n    activated: false,\r\n    error: null,\r\n  });\r\n\r\n  // 添加状态\r\n  const [cacheSettings, setCacheSettings] = useState({\r\n    cacheLimit: cacheService.getCacheLimit(), // 从服务获取当前限制\r\n    autoCache: true,\r\n  });\r\n\r\n\r\n\r\n  \r\n\r\n  // 新增：缓存管理函数\r\n  // 修改预缓存函数\r\n  const preCacheQuestions = useCallback(async () => {\r\n    if (!currentUser) return;\r\n\r\n    try {\r\n      console.log(\"🔄 通过 Service Worker 缓存题目...\");\r\n      setSyncing(true);\r\n\r\n      // 设置缓存限制\r\n      cacheService.setCacheLimit(cacheSettings.cacheLimit);\r\n\r\n      const success = await cacheService.cacheQuestions(questions);\r\n\r\n      if (success) {\r\n        // 更新缓存状态\r\n        const status = await cacheService.getCacheStatus();\r\n        setCacheStatus(status);\r\n        setTimeout(() => setSyncMessage(\"\"), 3000);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"预缓存失败:\", error);\r\n      setSyncMessage(\"缓存失败: \" + error.message);\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  }, [currentUser, questions, cacheSettings.cacheLimit]);\r\n\r\n  // 添加缓存设置对话框\r\n  const [showCacheSettings, setShowCacheSettings] = useState(false);\r\n\r\n  \r\n  // 缓存设置组件\r\n  const CacheSettingsModal = () => (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h3>📦 离线缓存设置</h3>\r\n          <button\r\n            className=\"close-btn\"\r\n            onClick={() => setShowCacheSettings(false)}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"cache-settings-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"cacheLimit\">\r\n              缓存题目数量: {cacheSettings.cacheLimit} 题\r\n            </label>\r\n            <input\r\n              id=\"cacheLimit\"\r\n              type=\"range\"\r\n              min=\"10\"\r\n              max=\"100\"\r\n              step=\"10\"\r\n              value={cacheSettings.cacheLimit}\r\n              onChange={(e) =>\r\n                setCacheSettings((prev) => ({\r\n                  ...prev,\r\n                  cacheLimit: parseInt(e.target.value),\r\n                }))\r\n              }\r\n              className=\"cache-limit-slider\"\r\n            />\r\n            <div className=\"range-labels\">\r\n              <span>10题</span>\r\n              <span>100题</span>\r\n            </div>\r\n            <div className=\"cache-hint\">\r\n              当前配置: 最多缓存 {cacheSettings.cacheLimit} 道题目供离线使用\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-actions\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"cancel-btn\"\r\n              onClick={() => setShowCacheSettings(false)}\r\n            >\r\n              取消\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"submit-btn\"\r\n              onClick={() => {\r\n                cacheService.setCacheLimit(cacheSettings.cacheLimit);\r\n                setShowCacheSettings(false);\r\n               \r\n                setTimeout(() => setSyncMessage(\"\"), 3000);\r\n              }}\r\n            >\r\n              保存设置\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // 新增：加载离线数据\r\n  const loadOfflineData = useCallback(async () => {\r\n    try {\r\n      const cacheData = await cacheService.getCachedQuestions();\r\n      setOfflineQuestions(cacheData.questions);\r\n      setShowOfflineMode(true);\r\n\r\n      console.log(\"📦 加载离线数据:\", cacheData.questions.length);\r\n    } catch (error) {\r\n      console.error(\"加载离线数据失败:\", error);\r\n    }\r\n  }, []);\r\n\r\n  // 新增：手动缓存功能\r\n  const handleManualCache = useCallback(async () => {\r\n    setSyncing(true);\r\n    setSyncMessage(\"正在缓存题目数据...\");\r\n\r\n    try {\r\n      await preCacheQuestions();\r\n      setCacheStatus(cacheService.getCacheStatus());\r\n    } catch (error) {\r\n      setSyncMessage(\"缓存失败: \" + error.message);\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  }, [preCacheQuestions]);\r\n\r\n  // 新增：网络状态监听\r\n  useEffect(() => {\r\n    const handleOnline = () => {\r\n      setIsOnline(true);\r\n      setShowOfflineMode(false);\r\n    };\r\n\r\n    const handleOffline = () => {\r\n      setIsOnline(false);\r\n      if (cacheService.getCacheStatus().hasCache) {\r\n        loadOfflineData();\r\n      }\r\n    };\r\n\r\n    offlineService.addEventListener(\"online\", handleOnline);\r\n    offlineService.addEventListener(\"offline\", handleOffline);\r\n\r\n    // 初始状态\r\n    setIsOnline(offlineService.isOnlineMode());\r\n    setCacheStatus(cacheService.getCacheStatus());\r\n\r\n    return () => {\r\n      offlineService.removeEventListener(\"online\", handleOnline);\r\n      offlineService.removeEventListener(\"offline\", handleOffline);\r\n    };\r\n  }, [loadOfflineData]);\r\n\r\n  // 在 HomePage.jsx 的 useEffect 中添加\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n\r\n    if (user) {\r\n      // 检查是否应该使用离线模式\r\n      if (offlineService.shouldUseOfflineData()) {\r\n        console.log(\"🚀 启动离线模式\");\r\n        setShowOfflineMode(true);\r\n        loadOfflineData();\r\n        setLoading(false);\r\n      } else {\r\n        initializeData();\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // 新增：Service Worker 事件监听\r\n  useEffect(() => {\r\n    if (!cacheService.isSupported) return;\r\n\r\n    const handleCacheUpdated = (event) => {\r\n      const { count, timestamp } = event.detail;\r\n      setSyncMessage(``);\r\n      setCacheStatus((prev) => ({ ...prev, hasCache: true, count }));\r\n    };\r\n\r\n    const handleSwActivated = (event) => {\r\n      setSwStatus((prev) => ({\r\n        ...prev,\r\n        activated: true,\r\n        version: event.detail.version,\r\n      }));\r\n      console.log(\"🚀 Service Worker 已激活:\", event.detail.version);\r\n    };\r\n\r\n    cacheService.addEventListener(\"cacheUpdated\", handleCacheUpdated);\r\n    cacheService.addEventListener(\"swActivated\", handleSwActivated);\r\n\r\n    // 初始 Service Worker 状态\r\n    setSwStatus((prev) => ({\r\n      ...prev,\r\n      supported: cacheService.isSupported,\r\n    }));\r\n\r\n    return () => {\r\n      cacheService.removeEventListener(\"cacheUpdated\", handleCacheUpdated);\r\n      cacheService.removeEventListener(\"swActivated\", handleSwActivated);\r\n    };\r\n  }, []);\r\n\r\n  // 新增：用户登录后自动缓存\r\n  useEffect(() => {\r\n    if (currentUser && questions.length > 0) {\r\n      // 延迟缓存，避免影响主要功能\r\n      const timer = setTimeout(() => {\r\n        preCacheQuestions();\r\n      }, 3000);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [currentUser, questions, preCacheQuestions]);\r\n\r\n  const handleManualRefresh = useCallback(async () => {\r\n    console.log(\"🔄 手动刷新数据...\");\r\n    setSyncMessage(\"刷新数据中...\");\r\n\r\n    try {\r\n      // 清除所有缓存\r\n      clearAllCache();\r\n      clearCategoryCache();\r\n\r\n      // 重新加载数据\r\n      await initializeData();\r\n\r\n      setSyncMessage(\"数据刷新成功！\");\r\n      setTimeout(() => setSyncMessage(\"\"), 3000);\r\n    } catch (error) {\r\n      console.error(\"刷新数据失败:\", error);\r\n      setSyncMessage(\"刷新失败: \" + error.message);\r\n      setTimeout(() => setSyncMessage(\"\"), 5000);\r\n    }\r\n  }, []);\r\n\r\n  // 添加题目后自动刷新数据\r\n  useEffect(() => {\r\n    const handleQuestionCreated = () => {\r\n      console.log(\"📝 检测到题目创建，自动刷新数据...\");\r\n      setTimeout(() => {\r\n        handleManualRefresh();\r\n      }, 1000);\r\n    };\r\n\r\n    // 监听题目创建事件\r\n    window.addEventListener(\"questionCreated\", handleQuestionCreated);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"questionCreated\", handleQuestionCreated);\r\n    };\r\n  }, [handleManualRefresh]);\r\n\r\n  // 检查用户登录状态\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n\r\n    if (user) {\r\n      initializeData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // 处理添加分类\r\n  const handleAddCategory = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!currentUser) {\r\n      alert(\"请先登录\");\r\n      return;\r\n    }\r\n\r\n    if (!newCategoryName.trim()) {\r\n      alert(\"请输入分类名称\");\r\n      return;\r\n    }\r\n\r\n    setAddingCategory(true);\r\n    try {\r\n      const newCategory = await createCategory({\r\n        name: newCategoryName.trim(),\r\n        description: newCategoryDescription.trim() || undefined,\r\n      });\r\n\r\n      // 添加新分类到列表\r\n      setCategories((prev) => [newCategory, ...prev]);\r\n\r\n      // 重置表单\r\n      setNewCategoryName(\"\");\r\n      setNewCategoryDescription(\"\");\r\n      setShowAddCategory(false);\r\n\r\n      // 显示成功消息\r\n      setSyncMessage(`分类 \"${newCategory.name}\" 创建成功！`);\r\n      setTimeout(() => setSyncMessage(\"\"), 3000);\r\n    } catch (error) {\r\n      console.error(\"创建分类失败:\", error);\r\n      setSyncMessage(\"创建分类失败: \" + (error.message || \"请检查网络连接\"));\r\n    } finally {\r\n      setAddingCategory(false);\r\n    }\r\n  };\r\n\r\n  // 处理删除分类确认\r\n  const handleDeleteClick = useCallback((category, e) => {\r\n    e.stopPropagation(); // 阻止事件冒泡，避免触发分类卡片点击\r\n    setCategoryToDelete(category);\r\n    setShowDeleteConfirm(true);\r\n  }, []);\r\n\r\n  // 确认删除分类\r\n  const handleConfirmDelete = async () => {\r\n    if (!categoryToDelete) return;\r\n\r\n    setDeletingCategory(true);\r\n    try {\r\n      await deleteCategory(categoryToDelete.id);\r\n\r\n      // 从列表中移除分类\r\n      setCategories((prev) =>\r\n        prev.filter((cat) => cat.id !== categoryToDelete.id)\r\n      );\r\n\r\n      // 关闭确认对话框\r\n      setShowDeleteConfirm(false);\r\n      setCategoryToDelete(null);\r\n\r\n      // 显示成功消息\r\n      setSyncMessage(`分类 \"${categoryToDelete.name}\" 删除成功！`);\r\n      setTimeout(() => setSyncMessage(\"\"), 3000);\r\n    } catch (error) {\r\n      console.error(\"删除分类失败:\", error);\r\n      setSyncMessage(\"删除分类失败: \" + (error.message || \"请检查网络连接\"));\r\n    } finally {\r\n      setDeletingCategory(false);\r\n    }\r\n  };\r\n\r\n  // 取消删除\r\n  const handleCancelDelete = useCallback(() => {\r\n    setShowDeleteConfirm(false);\r\n    setCategoryToDelete(null);\r\n  }, []);\r\n\r\n  const reloadData = async () => {\r\n    try {\r\n      const categoriesData = await getCategories({\r\n        page: 1,\r\n        pageSize: 50,\r\n        sortBy: QueryOptions.SORT_BY_UPDATED_AT,\r\n        sortOrder: \"desc\",\r\n      });\r\n      setCategories(categoriesData.data);\r\n\r\n      const questionsData = await getAllQuestions();\r\n      setQuestions(questionsData);\r\n    } catch (err) {\r\n      console.error(\"重新加载数据失败:\", err);\r\n    }\r\n  };\r\n\r\n  // 更新题目复习时间 - 修复版本\r\n  const handleUpdateQuestionTime = async (questionId) => {\r\n    try {\r\n      console.log(\"更新题目复习时间:\", questionId);\r\n\r\n      const question = questions.find((q) => q.id === questionId);\r\n      if (!question) {\r\n        throw new Error(\"未找到对应的题目\");\r\n      }\r\n\r\n      const currentTime = new Date();\r\n\r\n      // 只更新自定义字段，不要更新 reserved fields\r\n      await updateQuestion(questionId, {\r\n        lastReviewedAt: currentTime, // 只更新自定义的复习时间字段\r\n      });\r\n\r\n      console.log(\"LeanCloud 更新成功，开始更新本地状态\");\r\n\r\n      // 更新本地状态中的题目更新时间\r\n      setQuestions((prev) =>\r\n        prev.map((q) =>\r\n          q.id === questionId\r\n            ? {\r\n                ...q,\r\n                // updatedAt 由 LeanCloud 自动更新，我们只更新 lastReviewedAt\r\n                lastReviewedAt: currentTime.toISOString(),\r\n              }\r\n            : q\r\n        )\r\n      );\r\n\r\n      console.log(`题目 ${questionId} 复习时间已更新`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"更新题目时间失败:\", error);\r\n      console.error(\"错误详情:\", {\r\n        questionId,\r\n        errorMessage: error.message,\r\n        errorStack: error.stack,\r\n      });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleGlobalError = (event) => {\r\n      if (\r\n        event.error &&\r\n        (event.error.message.includes(\"network\") ||\r\n          event.error.message.includes(\"offline\") ||\r\n          event.error.message.includes(\"CORS\") ||\r\n          event.error.message.includes(\"LeanCloud\"))\r\n      ) {\r\n        console.log(\"🌐 捕获到网络错误，切换到离线模式\");\r\n        setShowOfflineMode(true);\r\n        event.preventDefault();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"error\", handleGlobalError);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"error\", handleGlobalError);\r\n    };\r\n  }, []);\r\n\r\n  // 计算需要复习的题目 - 修复版本\r\n  useEffect(() => {\r\n    const calculateReviewQuestions = () => {\r\n      const now = new Date();\r\n      const thresholdMs = reviewThreshold * 24 * 60 * 60 * 1000; // 转换为毫秒\r\n\r\n      const needReview = questions\r\n        .filter((question) => {\r\n          // 使用 lastReviewedAt 字段，如果不存在则使用 createdAt\r\n          const lastReviewed = new Date(\r\n            question.lastReviewedAt || question.createdAt\r\n          );\r\n          const timeDiff = now - lastReviewed;\r\n          return timeDiff >= thresholdMs;\r\n        })\r\n        .sort((a, b) => {\r\n          // 按复习时间正序排列，最久未复习的排在最前面\r\n          const timeA = new Date(a.lastReviewedAt || a.createdAt);\r\n          const timeB = new Date(b.lastReviewedAt || b.createdAt);\r\n          return timeA - timeB;\r\n        });\r\n\r\n      setReviewQuestions(needReview);\r\n    };\r\n\r\n    if (questions.length > 0) {\r\n      calculateReviewQuestions();\r\n    }\r\n  }, [questions, reviewThreshold]);\r\n\r\n  const handleChatboxNavigate = (target) => {\r\n    console.log(\"导航到:\", target);\r\n    switch (target) {\r\n      case \"categories\":\r\n        setActiveTab(\"categories\");\r\n        break;\r\n      case \"review\":\r\n        setActiveTab(\"review\");\r\n        break;\r\n      case \"stats\":\r\n        setActiveTab(\"stats\");\r\n        break;\r\n      case \"calendar\":\r\n        setActiveTab(\"calendar\");\r\n        break;\r\n      case \"community\":\r\n        setActiveTab(\"community\");\r\n        break;\r\n      case \"documents\":\r\n        setActiveTab(\"documents\");\r\n        break;\r\n      case \"createCategory\":\r\n        setShowAddCategory(true);\r\n        break;\r\n      case \"cacheQuestions\":\r\n        handleManualCache();\r\n        break;\r\n      case \"offlineMode\":\r\n        navigate(\"/offline/questions\");\r\n        break;\r\n      default:\r\n        setActiveTab(\"categories\");\r\n    }\r\n\r\n    // 滚动到顶部\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  // 优化后的 initializeData 函数\r\n  const initializeData = async () => {\r\n    try {\r\n      // 在离线模式下不初始化 LeanCloud\r\n      if (!offlineService.shouldUseOfflineData()) {\r\n        initAV();\r\n      }\r\n\r\n      console.log(\"🔄 开始加载数据...\");\r\n\r\n      // 根据网络状态决定是否使用缓存\r\n      const [categoriesData, questionsData] = await Promise.all([\r\n        getCategories({\r\n          page: 1,\r\n          pageSize: 50,\r\n          sortBy: QueryOptions.SORT_BY_UPDATED_AT,\r\n          sortOrder: \"desc\",\r\n        }),\r\n        getAllQuestions(false),\r\n      ]);\r\n\r\n      console.log(\"✅ 数据加载完成:\", {\r\n        分类数据: categoriesData.data.length,\r\n        题目数据: questionsData.length,\r\n        模式: offlineService.shouldUseOfflineData() ? \"离线\" : \"在线\",\r\n      });\r\n\r\n      setCategories(categoriesData.data);\r\n      setQuestions(questionsData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(\"❌ 初始化数据失败:\", err);\r\n\r\n      // 如果是网络错误，尝试使用完全离线模式\r\n      if (err.message.includes(\"offline\") || err.message.includes(\"network\")) {\r\n        console.log(\"🌐 网络错误，切换到完全离线模式\");\r\n        setShowOfflineMode(true);\r\n\r\n        // 尝试加载离线数据\r\n        try {\r\n          const cacheData = await cacheService.getCachedQuestions();\r\n          setOfflineQuestions(cacheData.questions);\r\n\r\n          // 设置空的分类和题目数据\r\n          setCategories([]);\r\n          setQuestions([]);\r\n          setLoading(false);\r\n          return;\r\n        } catch (cacheError) {\r\n          console.error(\"加载离线数据也失败:\", cacheError);\r\n        }\r\n      }\r\n\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 使用 useMemo 优化计算密集型操作\r\n  const filteredCategories = useMemo(() => {\r\n    return categories.filter((category) =>\r\n      category.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n  }, [categories, searchTerm]);\r\n\r\n  // 计算准确的分类题目数量统计 - 完全基于 questions 数据\r\n  const categoryStats = useMemo(() => {\r\n    if (!categories.length) {\r\n      return {\r\n        totalCategories: 0,\r\n        totalQuestions: 0,\r\n        categoriesWithQuestions: 0,\r\n      };\r\n    }\r\n\r\n    const totalQuestionsFromCategories = categories.reduce(\r\n      (sum, cat) => sum + (cat.questionCount || 0),\r\n      0\r\n    );\r\n    const categoriesWithQuestions = categories.filter(\r\n      (cat) => (cat.questionCount || 0) > 0\r\n    ).length;\r\n\r\n    // 详细的调试信息\r\n    console.log(\"🔍 详细统计信息:\", {\r\n      分类总数: categories.length,\r\n      基于分类的题目总数: totalQuestionsFromCategories,\r\n      基于所有题目的题目总数: questions.length,\r\n      差异: Math.abs(totalQuestionsFromCategories - questions.length),\r\n      有题目的分类数: categoriesWithQuestions,\r\n      对象: questions,\r\n      各分类详情: categories.map((cat) => ({\r\n        分类名称: cat.name,\r\n        服务层题目数: cat.questionCount,\r\n        前端计算题目数: questions.filter((q) => q.category?.id === cat.id)\r\n          .length,\r\n        是否匹配:\r\n          cat.questionCount ===\r\n          questions.filter((q) => q.category?.id === cat.id).length,\r\n      })),\r\n    });\r\n\r\n    return {\r\n      totalCategories: categories.length,\r\n      totalQuestions: totalQuestionsFromCategories,\r\n      categoriesWithQuestions: categoriesWithQuestions,\r\n    };\r\n  }, [categories, questions]);\r\n\r\n  // 获取某一天的题目详情\r\n  const getDayQuestions = useCallback(\r\n    (date) => {\r\n      const dateStr = date.toISOString().split(\"T\")[0];\r\n\r\n      const dayQuestions = questions.filter((question) => {\r\n        const questionDate = new Date(question.createdAt);\r\n        const questionDateStr = questionDate.toISOString().split(\"T\")[0];\r\n        return questionDateStr === dateStr;\r\n      });\r\n\r\n      // 按创建时间排序\r\n      return dayQuestions.sort(\r\n        (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\r\n      );\r\n    },\r\n    [questions]\r\n  );\r\n\r\n  // 获取固定颜色\r\n  const getDayColor = useCallback((count) => {\r\n    if (count === 0) return \"#f8f9fa\"; // 无题目 - 浅灰色\r\n    if (count <= 1) return \"#4CAF50\"; // 1题 - 深绿色\r\n    if (count <= 3) return \"#8BC34A\"; // 2-3题 - 浅绿色\r\n    if (count <= 5) return \"#FFC107\"; // 4-5题 - 黄色\r\n    if (count <= 8) return \"#FF9800\"; // 6-8题 - 橙色\r\n    return \"#F44336\"; // 9题以上 - 红色\r\n  }, []);\r\n\r\n  // 生成月度日历数据 - 使用 useMemo 优化\r\n  const getMonthlyCalendarData = useCallback(() => {\r\n    const monthStart = new Date(\r\n      selectedMonth.getFullYear(),\r\n      selectedMonth.getMonth(),\r\n      1\r\n    );\r\n    const monthEnd = new Date(\r\n      selectedMonth.getFullYear(),\r\n      selectedMonth.getMonth() + 1,\r\n      0\r\n    );\r\n\r\n    const dateCounts = {};\r\n    questions.forEach((question) => {\r\n      const questionDate = new Date(question.createdAt);\r\n      if (questionDate >= monthStart && questionDate <= monthEnd) {\r\n        const dateStr = questionDate.toISOString().split(\"T\")[0];\r\n        dateCounts[dateStr] = (dateCounts[dateStr] || 0) + 1;\r\n      }\r\n    });\r\n\r\n    const calendarData = [];\r\n    const currentDate = new Date(monthStart);\r\n\r\n    while (currentDate <= monthEnd) {\r\n      const dateStr = currentDate.toISOString().split(\"T\")[0];\r\n      const dayQuestions = getDayQuestions(currentDate);\r\n      const questionCount = dayQuestions.length;\r\n\r\n      calendarData.push({\r\n        date: new Date(currentDate),\r\n        count: questionCount,\r\n        day: currentDate.getDate(),\r\n        isToday: dateStr === new Date().toISOString().split(\"T\")[0],\r\n        questions: dayQuestions,\r\n        color: getDayColor(questionCount),\r\n      });\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    return calendarData;\r\n  }, [selectedMonth, questions, getDayQuestions, getDayColor]);\r\n\r\n  // 处理日历日期的鼠标悬停\r\n  const handleDayMouseEnter = useCallback((dayData, event) => {\r\n    setHoveredDay(dayData);\r\n    setTooltipVisible(true);\r\n\r\n    // 计算相对于日历容器的位置\r\n    if (calendarRef.current) {\r\n      const calendarRect = calendarRef.current.getBoundingClientRect();\r\n      const dayRect = event.currentTarget.getBoundingClientRect();\r\n\r\n      setTooltipPosition({\r\n        x: dayRect.left + dayRect.width / 2 - calendarRect.left,\r\n        y: dayRect.top - calendarRect.top - 10,\r\n      });\r\n    }\r\n\r\n    setTooltipVisible(true);\r\n  }, []);\r\n\r\n  const handleDayMouseLeave = useCallback(() => {\r\n    // 延迟隐藏，给用户时间移动到提示框\r\n    setTimeout(() => {\r\n      if (!document.querySelector(\".calendar-tooltip:hover\")) {\r\n        setTooltipVisible(false);\r\n      }\r\n    }, 100);\r\n  }, []);\r\n\r\n  const handleTooltipClose = useCallback(() => {\r\n    setTooltipVisible(false);\r\n    setHoveredDay(null);\r\n  }, []);\r\n\r\n  // 月份导航\r\n  const navigateMonth = useCallback(\r\n    (direction) => {\r\n      const newDate = new Date(selectedMonth);\r\n      if (direction === \"prev\") {\r\n        newDate.setMonth(newDate.getMonth() - 1);\r\n      } else {\r\n        newDate.setMonth(newDate.getMonth() + 1);\r\n      }\r\n      setSelectedMonth(newDate);\r\n    },\r\n    [selectedMonth]\r\n  );\r\n\r\n  // 获取月份统计 - 使用 useMemo 优化\r\n  const getMonthStats = useCallback(() => {\r\n    const monthData = getMonthlyCalendarData();\r\n    const daysWithQuestions = monthData.filter((day) => day.count > 0).length;\r\n    const totalQuestions = monthData.reduce((sum, day) => sum + day.count, 0);\r\n    const maxDaily = Math.max(...monthData.map((day) => day.count));\r\n\r\n    return { daysWithQuestions, totalQuestions, maxDaily };\r\n  }, [getMonthlyCalendarData]);\r\n\r\n  const getCategoryChartData = useCallback(() => {\r\n    const categoryMap = {};\r\n\r\n    questions.forEach((question) => {\r\n      const categoryName = question.category?.name || \"未分类\";\r\n      categoryMap[categoryName] = (categoryMap[categoryName] || 0) + 1;\r\n    });\r\n\r\n    return Object.entries(categoryMap)\r\n      .map(([name, count]) => ({\r\n        name: name.length > 8 ? name.substring(0, 8) + \"...\" : name,\r\n        fullName: name,\r\n        value: count,\r\n        percentage: ((count / questions.length) * 100).toFixed(1),\r\n      }))\r\n      .sort((a, b) => b.value - a.value);\r\n  }, [questions]);\r\n\r\n  const getDifficultyData = useCallback(() => {\r\n    const difficultyMap = {};\r\n\r\n    questions.forEach((question) => {\r\n      const difficulty = question.difficulty || \"unknown\";\r\n      difficultyMap[difficulty] = (difficultyMap[difficulty] || 0) + 1;\r\n    });\r\n\r\n    return Object.entries(difficultyMap).map(([name, count]) => ({\r\n      name: getDifficultyText(name),\r\n      value: count,\r\n      color: getDifficultyColor(name),\r\n    }));\r\n  }, [questions]);\r\n\r\n  const getDifficultyColor = useCallback((difficulty) => {\r\n    switch (difficulty) {\r\n      case \"easy\":\r\n        return \"#52c41a\";\r\n      case \"medium\":\r\n        return \"#faad14\";\r\n      case \"hard\":\r\n        return \"#f5222d\";\r\n      default:\r\n        return \"#666\";\r\n    }\r\n  }, []);\r\n\r\n  const getDifficultyText = useCallback((difficulty) => {\r\n    switch (difficulty) {\r\n      case \"easy\":\r\n        return \"简单\";\r\n      case \"medium\":\r\n        return \"中等\";\r\n      case \"hard\":\r\n        return \"困难\";\r\n      default:\r\n        return \"未知\";\r\n    }\r\n  }, []);\r\n\r\n  const getActiveDays = useCallback(() => {\r\n    const uniqueDays = new Set(\r\n      questions.map((q) => new Date(q.createdAt).toDateString())\r\n    );\r\n    return uniqueDays.size;\r\n  }, [questions]);\r\n\r\n  const handleCategoryClick = useCallback(\r\n    (categoryId) => {\r\n      // 在离线模式下，阻止跳转到分类页面\r\n      if (offlineService.shouldUseOfflineData()) {\r\n        alert(\"离线模式下无法查看分类详情，请连接网络后重试\");\r\n        return;\r\n      }\r\n      navigate(`/category/${categoryId}`);\r\n    },\r\n    [navigate]\r\n  );\r\n\r\n  const handleQuestionClick = useCallback(\r\n    (questionId) => {\r\n      // 找到题目对应的分类并跳转\r\n      const question = questions.find((q) => q.id === questionId);\r\n      if (question && question.category) {\r\n        navigate(`/category/${question.category.id}`);\r\n      }\r\n    },\r\n    [questions, navigate]\r\n  );\r\n\r\n  // 新增：跳转到离线分类\r\n  const navigateToOfflineCategory = useCallback((category) => {\r\n    // 在离线模式下，显示提示信息\r\n    alert(\r\n      `离线模式：查看 ${category.name} 分类的 ${category.questions.length} 道题目\\n\\n请连接网络后查看完整功能`\r\n    );\r\n  }, []);\r\n\r\n  const formatTime = useCallback((date) => {\r\n    if (!date) return \"暂无\";\r\n    const now = new Date();\r\n    const diffMs = now - new Date(date);\r\n    const diffMins = Math.floor(diffMs / 60000);\r\n    const diffHours = Math.floor(diffMs / 3600000);\r\n    const diffDays = Math.floor(diffMs / 86400000);\r\n\r\n    if (diffMins < 60) return `${diffMins}分钟前`;\r\n    if (diffHours < 24) return `${diffHours}小时前`;\r\n    if (diffDays < 30) return `${diffDays}天前`;\r\n    return new Date(date).toLocaleDateString();\r\n  }, []);\r\n\r\n  const getProgressWidth = useCallback(\r\n    (count) => {\r\n      if (!categories.length) return 0;\r\n      const maxCount = Math.max(...categories.map((c) => c.questionCount || 0));\r\n      return maxCount > 0 ? (count / maxCount) * 100 : 0;\r\n    },\r\n    [categories]\r\n  );\r\n\r\n  const defaultColors = [\r\n    \"#ff6b6b\",\r\n    \"#4ecdc4\",\r\n    \"#45b7d1\",\r\n    \"#96ceb4\",\r\n    \"#feca57\",\r\n    \"#ff9ff3\",\r\n    \"#54a0ff\",\r\n    \"#5f27cd\",\r\n    \"#00d2d3\",\r\n    \"#ff9f43\",\r\n  ];\r\n\r\n  // 使用 useMemo 缓存计算结果\r\n  const chartData = useMemo(\r\n    () => getCategoryChartData(),\r\n    [getCategoryChartData]\r\n  );\r\n  const difficultyData = useMemo(\r\n    () => getDifficultyData(),\r\n    [getDifficultyData]\r\n  );\r\n  const calendarData = useMemo(\r\n    () => getMonthlyCalendarData(),\r\n    [getMonthlyCalendarData]\r\n  );\r\n  const activeDays = useMemo(() => getActiveDays(), [getActiveDays]);\r\n  const monthStats = useMemo(() => getMonthStats(), [getMonthStats]);\r\n\r\n  const monthName = useMemo(\r\n    () =>\r\n      selectedMonth.toLocaleDateString(\"zh-CN\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n      }),\r\n    [selectedMonth]\r\n  );\r\n\r\n  // 新增：离线模式下的分类浏览\r\n  const renderOfflineCategories = useCallback(() => {\r\n    // 从离线题目中提取分类信息\r\n    const categoryMap = {};\r\n    offlineQuestions.forEach((question) => {\r\n      const categoryName = question.category?.name || \"未分类\";\r\n      if (!categoryMap[categoryName]) {\r\n        categoryMap[categoryName] = {\r\n          name: categoryName,\r\n          questions: [],\r\n          questionCount: 0,\r\n          id: `offline-${categoryName}`, // 生成离线分类ID\r\n        };\r\n      }\r\n      categoryMap[categoryName].questions.push(question);\r\n      categoryMap[categoryName].questionCount++;\r\n    });\r\n\r\n    const offlineCategories = Object.values(categoryMap);\r\n\r\n    return (\r\n      <section className=\"categories-section\">\r\n        <div className=\"container\">\r\n          <div className=\"offline-header\">\r\n            <h3 style={{ color: \"#666666\" }}>📦 离线模式</h3>\r\n            <p style={{ color: \"#666666\" }}>\r\n              当前处于离线状态，显示缓存的题目数据\r\n            </p>\r\n\r\n            <div className=\"cache-stats\" style={{ color: \"#666666\" }}>\r\n              已缓存 {offlineQuestions.length} 道题目，\r\n              {offlineCategories.length} 个分类\r\n            </div>\r\n\r\n            {/* 全局离线操作 */}\r\n            <div className=\"offline-global-actions\">\r\n              <button\r\n                onClick={() => navigate(\"/offline/questions\")}\r\n                className=\"view-all-offline-btn\"\r\n                style={{ color: \"#333333\" }}\r\n              >\r\n                📚 查看所有离线题目 ({offlineQuestions.length})\r\n              </button>\r\n              <button\r\n                onClick={() => window.location.reload()}\r\n                className=\"refresh-network-btn\"\r\n                style={{ color: \"#333333\" }}\r\n              >\r\n                🔄 检查网络连接\r\n              </button>\r\n            </div>\r\n\r\n            <div\r\n              className=\"cache-progress-fill\"\r\n              style={{\r\n                width: `${\r\n                  (offlineQuestions.length / cacheService.getCacheLimit()) * 100\r\n                }%`,\r\n              }}\r\n            ></div>\r\n          </div>\r\n\r\n          <div className=\"categories-grid\">\r\n            {offlineCategories.map((category, index) => {\r\n              const color = defaultColors[index % defaultColors.length];\r\n\r\n              return (\r\n                <div\r\n                  key={category.id}\r\n                  className=\"category-card offline-card\"\r\n                  onClick={() => navigateToOfflineCategory(category)}\r\n                  style={{ \"--accent-color\": color }}\r\n                >\r\n                  <div className=\"card-header\">\r\n                    <div\r\n                      className=\"category-icon\"\r\n                      style={{ backgroundColor: color }}\r\n                    >\r\n                      {category.name.charAt(0)}\r\n                    </div>\r\n                    <div className=\"category-info\">\r\n                      <h3 className=\"category-name\">{category.name}</h3>\r\n                      <span className=\"question-count\">\r\n                        {category.questionCount}题\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"offline-badge\">离线</div>\r\n                  </div>\r\n\r\n                  <div className=\"card-footer\">\r\n                    <div className=\"progress-info\">\r\n                      <div className=\"progress-stats\">\r\n                        <span>离线缓存数据</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <button className=\"explore-btn\">查看题目 →</button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }, [offlineQuestions, navigateToOfflineCategory, navigate]);\r\n\r\n  // 修改现有的渲染逻辑，在离线模式下显示缓存数据\r\n  const renderContent = () => {\r\n    if (showOfflineMode) {\r\n      return renderOfflineCategories();\r\n    }\r\n\r\n    // 原有的在线模式渲染逻辑\r\n    switch (activeTab) {\r\n      case \"categories\":\r\n        return renderCategoriesTab();\r\n      case \"review\":\r\n        return renderReviewTab();\r\n      case \"stats\":\r\n        return renderStatsTab();\r\n      case \"calendar\":\r\n        return renderCalendarTab();\r\n      case \"documents\":\r\n        return renderDocumentsTab();\r\n      case \"community\":\r\n        return renderCommunityTab();\r\n      case 'cache':\r\n        return (\r\n    <CacheManagementTab \r\n      questions={questions}\r\n      onCacheUpdate={setCacheStatus}\r\n      currentUser={currentUser}\r\n    />\r\n  );\r\n      default:\r\n        return renderCategoriesTab();\r\n    }\r\n  };\r\n\r\n  // 原有的标签页渲染函数\r\n  const renderCategoriesTab = () => (\r\n    <>\r\n      <section className=\"filters-section\">\r\n        <div className=\"container\">\r\n          <div className=\"filters\">\r\n            <div className=\"stats\">\r\n              找到 {filteredCategories.length} 个类别\r\n              {categories.length > 0 && ` • 总计 ${questions.length} 道题目`}\r\n            </div>\r\n            <button\r\n              className=\"add-category-btn\"\r\n              onClick={() => setShowAddCategory(true)}\r\n            >\r\n              <span className=\"btn-icon\">+</span>\r\n              新建分类\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* 添加分类弹窗 */}\r\n      {showAddCategory && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3>创建新分类</h3>\r\n              <button\r\n                className=\"close-btn\"\r\n                onClick={() => setShowAddCategory(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n\r\n            <form onSubmit={handleAddCategory} className=\"category-form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"categoryName\">分类名称 *</label>\r\n                <input\r\n                  id=\"categoryName\"\r\n                  type=\"text\"\r\n                  value={newCategoryName}\r\n                  onChange={(e) => setNewCategoryName(e.target.value)}\r\n                  placeholder=\"请输入分类名称\"\r\n                  maxLength={50}\r\n                  autoFocus\r\n                  style={{ color: \"black\" }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"categoryDescription\">分类描述</label>\r\n                <textarea\r\n                  id=\"categoryDescription\"\r\n                  value={newCategoryDescription}\r\n                  onChange={(e) => setNewCategoryDescription(e.target.value)}\r\n                  placeholder=\"请输入分类描述（可选）\"\r\n                  rows=\"3\"\r\n                  maxLength={200}\r\n                  style={{ color: \"black\" }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-actions\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"cancel-btn\"\r\n                  onClick={() => setShowAddCategory(false)}\r\n                >\r\n                  取消\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"submit-btn\"\r\n                  disabled={addingCategory || !newCategoryName.trim()}\r\n                >\r\n                  {addingCategory ? \"创建中...\" : \"创建分类\"}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 删除分类确认弹窗 */}\r\n      {showDeleteConfirm && categoryToDelete && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content delete-confirm-modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>确认删除</h3>\r\n              <button className=\"close-btn\" onClick={handleCancelDelete}>\r\n                ×\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"delete-content\">\r\n              <div className=\"delete-icon\">🗑️</div>\r\n              <div className=\"delete-message\">\r\n                <p>\r\n                  确定要删除分类 <strong>\"{categoryToDelete.name}\"</strong> 吗？\r\n                </p>\r\n                {categoryToDelete.questionCount > 0 && (\r\n                  <p className=\"warning-text\">\r\n                    ⚠️ 此分类包含 {categoryToDelete.questionCount}{\" \"}\r\n                    道题目，删除后这些题目将变为未分类状态！\r\n                  </p>\r\n                )}\r\n                <p className=\"delete-hint\">此操作不可撤销，请谨慎操作。</p>\r\n              </div>\r\n\r\n              <div className=\"delete-actions\">\r\n                <button\r\n                  className=\"cancel-delete-btn\"\r\n                  onClick={handleCancelDelete}\r\n                  disabled={deletingCategory}\r\n                >\r\n                  取消\r\n                </button>\r\n                <button\r\n                  className=\"confirm-delete-btn\"\r\n                  onClick={handleConfirmDelete}\r\n                  disabled={deletingCategory}\r\n                >\r\n                  {deletingCategory ? \"删除中...\" : \"确认删除\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <section className=\"categories-section\">\r\n        <div className=\"container\">\r\n          {filteredCategories.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              <div className=\"empty-icon\">📚</div>\r\n              <h3>暂无类别数据</h3>\r\n              <p>没有找到匹配的类别，尝试调整搜索条件或创建新分类</p>\r\n              <button\r\n                className=\"create-first-category-btn\"\r\n                onClick={() => setShowAddCategory(true)}\r\n              >\r\n                + 创建第一个分类\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"categories-grid\">\r\n              {filteredCategories.map((category, index) => {\r\n                const color = defaultColors[index % defaultColors.length];\r\n\r\n                // 基于 questions 计算该分类的实际题目数量\r\n                const actualQuestionCount = questions.filter(\r\n                  (q) => q.category?.id === category.id\r\n                ).length;\r\n\r\n                // 优先显示实际数量，如果没有则显示服务层数量\r\n                const displayCount =\r\n                  actualQuestionCount > 0\r\n                    ? actualQuestionCount\r\n                    : category.questionCount || 0;\r\n\r\n                return (\r\n                  <div\r\n                    key={category.id}\r\n                    className=\"category-card\"\r\n                    onClick={() => handleCategoryClick(category.id)}\r\n                    style={{ \"--accent-color\": color }}\r\n                  >\r\n                    <div className=\"card-header\">\r\n                      <div\r\n                        className=\"category-icon\"\r\n                        style={{ backgroundColor: color }}\r\n                      >\r\n                        {category.name.charAt(0)}\r\n                      </div>\r\n                      <div className=\"category-info\">\r\n                        <h3 className=\"category-name\">{category.name}</h3>\r\n                        {category.description && (\r\n                          <p className=\"category-description\">\r\n                            {category.description}\r\n                          </p>\r\n                        )}\r\n                        <span className=\"question-count\">{displayCount}题</span>\r\n                      </div>\r\n                      <button\r\n                        className=\"delete-category-btn\"\r\n                        onClick={(e) => handleDeleteClick(category, e)}\r\n                        title=\"删除分类\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"card-footer\">\r\n                      <div className=\"progress-info\">\r\n                        <div className=\"progress-stats\">\r\n                          <span>\r\n                            最近更新: {formatTime(category.updatedAt)}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"progress-bar\">\r\n                          <div\r\n                            className=\"progress-fill\"\r\n                            style={{\r\n                              width: `${getProgressWidth(\r\n                                category.questionCount\r\n                              )}%`,\r\n                              backgroundColor: color,\r\n                            }}\r\n                          ></div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <button className=\"explore-btn\">查看题目 →</button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n\r\n  const renderReviewTab = () => (\r\n    <ReviewReminderSection\r\n      reviewQuestions={reviewQuestions}\r\n      setReviewQuestions={setReviewQuestions}\r\n      reviewThreshold={reviewThreshold}\r\n      setReviewThreshold={setReviewThreshold}\r\n      showReviewSettings={showReviewSettings}\r\n      setShowReviewSettings={setShowReviewSettings}\r\n      onQuestionClick={handleQuestionClick}\r\n      onUpdateQuestionTime={handleUpdateQuestionTime}\r\n      questions={questions}\r\n    />\r\n  );\r\n\r\n  const renderStatsTab = () => (\r\n    <section className=\"stats-section\">\r\n      <div className=\"container\">\r\n        <div className=\"stats-overview\">\r\n          <div className=\"modern-stat-card primary\">\r\n            <div className=\"stat-icon\">📚</div>\r\n            <div className=\"stat-content\">\r\n              <div className=\"stat-number\">{categoryStats.totalCategories}</div>\r\n              <div className=\"stat-label\">总分类数</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modern-stat-card success\">\r\n            <div className=\"stat-icon\">❓</div>\r\n            <div className=\"stat-content\">\r\n              <div className=\"stat-number\">{questions.length}</div>\r\n              <div className=\"stat-label\">总题目数</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modern-stat-card warning\">\r\n            <div className=\"stat-icon\">📅</div>\r\n            <div className=\"stat-content\">\r\n              <div className=\"stat-number\">{activeDays}</div>\r\n              <div className=\"stat-label\">活跃天数</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modern-stat-card info\">\r\n            <div className=\"stat-icon\">⚡</div>\r\n            <div className=\"stat-content\">\r\n              <div className=\"stat-number\">\r\n                {categoryStats.totalQuestions > 0\r\n                  ? (categoryStats.totalQuestions / activeDays).toFixed(1)\r\n                  : 0}\r\n              </div>\r\n              <div className=\"stat-label\">日均题目</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"charts-grid\">\r\n          <div className=\"modern-chart-card\">\r\n            <div className=\"chart-header\">\r\n              <h3>📊 分类题目分布</h3>\r\n              <span className=\"chart-subtitle\">各分类题目数量占比</span>\r\n            </div>\r\n            <div className=\"chart-container\">\r\n              <ResponsiveContainer width=\"100%\" height={300}>\r\n                <PieChart>\r\n                  <Pie\r\n                    data={chartData}\r\n                    cx=\"50%\"\r\n                    cy=\"50%\"\r\n                    labelLine={false}\r\n                    label={({ name, percentage }) => `${name} ${percentage}%`}\r\n                    outerRadius={100}\r\n                    fill=\"#8884d8\"\r\n                    dataKey=\"value\"\r\n                  >\r\n                    {chartData.map((entry, index) => (\r\n                      <Cell\r\n                        key={`cell-${index}`}\r\n                        fill={defaultColors[index % defaultColors.length]}\r\n                      />\r\n                    ))}\r\n                  </Pie>\r\n                  <Tooltip formatter={(value, name) => [`${value} 题`, name]} />\r\n                  <Legend />\r\n                </PieChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"modern-chart-card\">\r\n            <div className=\"chart-header\">\r\n              <h3>🎯 难度分布</h3>\r\n              <span className=\"chart-subtitle\">题目难度等级统计</span>\r\n            </div>\r\n            <div className=\"chart-container\">\r\n              <ResponsiveContainer width=\"100%\" height={300}>\r\n                <BarChart data={difficultyData}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"name\" />\r\n                  <YAxis />\r\n                  <Tooltip formatter={(value) => [`${value} 题`, \"数量\"]} />\r\n                  <Bar dataKey=\"value\" name=\"题目数量\">\r\n                    {difficultyData.map((entry, index) => (\r\n                      <Cell key={`cell-${index}`} fill={entry.color} />\r\n                    ))}\r\n                  </Bar>\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n  const renderCalendarTab = () => (\r\n    <section className=\"modern-calendar-section\">\r\n      <div className=\"container\">\r\n        <div className=\"calendar-header\">\r\n          <h3>🗓️ 学习日历</h3>\r\n          <p>查看每月的学习活动分布</p>\r\n        </div>\r\n\r\n        <div className=\"modern-calendar-card\" ref={calendarRef}>\r\n          <div className=\"calendar-controls\">\r\n            <button\r\n              onClick={() => navigateMonth(\"prev\")}\r\n              className=\"month-nav-btn\"\r\n            >\r\n              ← 上个月\r\n            </button>\r\n            <h4 className=\"current-month\">{monthName}</h4>\r\n            <button\r\n              onClick={() => navigateMonth(\"next\")}\r\n              className=\"month-nav-btn\"\r\n            >\r\n              下个月 →\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"monthly-calendar\">\r\n            <div className=\"calendar-weekdays\">\r\n              {[\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"].map((day) => (\r\n                <div key={day} className=\"weekday\">\r\n                  {day}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"calendar-days\">\r\n              {calendarData.map((dayData, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`calendar-day ${\r\n                    dayData.count > 0 ? \"has-questions\" : \"\"\r\n                  } ${dayData.isToday ? \"today\" : \"\"}`}\r\n                  style={{ backgroundColor: dayData.color }}\r\n                  onMouseEnter={(e) => handleDayMouseEnter(dayData, e)}\r\n                  onMouseLeave={handleDayMouseLeave}\r\n                  data-count={dayData.count}\r\n                >\r\n                  <span className=\"day-number\">{dayData.day}</span>\r\n                  {dayData.count > 0 && (\r\n                    <div className=\"question-count-badge\">{dayData.count}</div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* 使用新的日历提示框组件 */}\r\n            <CalendarTooltip\r\n              dayData={hoveredDay}\r\n              position={tooltipPosition}\r\n              isVisible={tooltipVisible}\r\n              onClose={handleTooltipClose}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"calendar-stats\">\r\n            <div className=\"calendar-stat\">\r\n              <span className=\"stat-value\">{monthStats.totalQuestions}</span>\r\n              <span className=\"stat-label\">本月题目</span>\r\n            </div>\r\n            <div className=\"calendar-stat\">\r\n              <span className=\"stat-value\">{monthStats.daysWithQuestions}</span>\r\n              <span className=\"stat-label\">学习天数</span>\r\n            </div>\r\n            <div className=\"calendar-stat\">\r\n              <span className=\"stat-value\">{monthStats.maxDaily}</span>\r\n              <span className=\"stat-label\">单日最高</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"calendar-legend\">\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#f8f9fa\" }}\r\n              ></div>\r\n              <span>无题目</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#4CAF50\" }}\r\n              ></div>\r\n              <span>1题</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#8BC34A\" }}\r\n              ></div>\r\n              <span>2-3题</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#FFC107\" }}\r\n              ></div>\r\n              <span>4-5题</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#FF9800\" }}\r\n              ></div>\r\n              <span>6-8题</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#F44336\" }}\r\n              ></div>\r\n              <span>9题以上</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n  const renderDocumentsTab = () => (\r\n    <section className=\"documents-tab-section\">\r\n      <div className=\"container\">\r\n        <Documents />\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n  const renderCommunityTab = () => <CommunityPage />;\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <div className=\"auth-required-container\">\r\n          <div className=\"auth-required-icon\">🔐</div>\r\n          <h2>请先登录</h2>\r\n          <p>登录后即可查看和管理您的刷题数据</p>\r\n          <div className=\"auth-required-actions\">\r\n            <button\r\n              onClick={() => {\r\n                window.dispatchEvent(\r\n                  new CustomEvent(\"showAuthModal\", {\r\n                    detail: { tab: \"login\" },\r\n                  })\r\n                );\r\n              }}\r\n              className=\"login-btn primary\"\r\n            >\r\n              🚀 立即登录\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                window.dispatchEvent(\r\n                  new CustomEvent(\"showAuthModal\", {\r\n                    detail: { tab: \"register\" },\r\n                  })\r\n                );\r\n              }}\r\n              className=\"login-btn secondary\"\r\n            >\r\n              📝 注册账号\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"auth-features\">\r\n            <div className=\"feature-list\">\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">📚</span>\r\n                <span>管理您的刷题分类</span>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">📊</span>\r\n                <span>查看学习统计</span>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">🔄</span>\r\n                <span>使用复习提醒功能</span>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">🗓️</span>\r\n                <span>记录学习日历</span>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">📦</span>\r\n                <span>离线缓存题目</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载知识库中...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <div className=\"error-container\">\r\n          <h2>加载失败</h2>\r\n          <p>{error}</p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            className=\"retry-btn\"\r\n          >\r\n            重试\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <div className=\"homepage\">\r\n        {/* 添加离线指示器 */}\r\n        <OfflineIndicator />\r\n\r\n        <header className=\"hero-section\">\r\n          <div className=\"hero-content\">\r\n            <div className=\"user-welcome\">\r\n              <h1 className=\"hero-title\">我的知识题库</h1>\r\n              <p className=\"hero-subtitle\">\r\n                欢迎回来, {currentUser.getUsername()}！\r\n                {!isOnline && (\r\n                  <span className=\"offline-status\"> • 离线模式</span>\r\n                )}\r\n              </p>\r\n              <div className=\"cache-actions\" >\r\n  \r\n  \r\n</div>\r\n\r\n            </div>\r\n\r\n            {/* 更新头部操作区域 */}\r\n            <div className=\"header-actions\">\r\n              <div className=\"search-container\">\r\n                \r\n              </div>\r\n             \r\n              {showCacheSettings && <CacheSettingsModal />}\r\n            </div>\r\n            \r\n          </div>\r\n        </header>\r\n\r\n        {/* 现代化标签导航 */}\r\n        <section className=\"modern-tabs-section\">\r\n          <div className=\"container\">\r\n            <div className=\"modern-tabs\">\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"categories\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"categories\")}\r\n              >\r\n                <span className=\"tab-icon\">📚</span>\r\n                <span className=\"tab-text\">分类浏览</span>\r\n                {activeTab === \"categories\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"review\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"review\")}\r\n              >\r\n                <span className=\"tab-icon\">🔄</span>\r\n                <span className=\"tab-text\">\r\n                  复习提醒\r\n                  {reviewQuestions.length > 0 && (\r\n                    <span className=\"tab-badge\">{reviewQuestions.length}</span>\r\n                  )}\r\n                </span>\r\n                {activeTab === \"review\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"stats\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"stats\")}\r\n              >\r\n                <span className=\"tab-icon\">📊</span>\r\n                <span className=\"tab-text\">数据统计</span>\r\n                {activeTab === \"stats\" && <div className=\"tab-indicator\"></div>}\r\n              </button>\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"calendar\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"calendar\")}\r\n              >\r\n                <span className=\"tab-icon\">🗓️</span>\r\n                <span className=\"tab-text\">学习日历</span>\r\n                {activeTab === \"calendar\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n              {/* 新增的 Documents 按钮 */}\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"documents\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"documents\")}\r\n              >\r\n                <span className=\"tab-icon\">📖</span>\r\n                <span className=\"tab-text\">开发文档</span>\r\n                {activeTab === \"documents\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"community\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"community\")}\r\n              >\r\n                <span className=\"tab-icon\">👥</span>\r\n                <span className=\"tab-text\">学习社区</span>\r\n                {activeTab === \"community\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n\r\n\r\n              {/* 缓存状态快速入口 */}\r\n<button\r\n  className={`modern-tab ${\r\n    activeTab === \"cache\" ? \"active\" : \"\"\r\n  }`}\r\n  onClick={() => setActiveTab(\"cache\")}\r\n>\r\n  <span className=\"tab-icon\">💾</span>\r\n  <span className=\"tab-text\">\r\n    缓存管理\r\n    {cacheStatus.hasCache && (\r\n      <span className=\"tab-badge\">{cacheStatus.count}</span>\r\n    )}\r\n  </span>\r\n  {activeTab === \"cache\" && (\r\n    <div className=\"tab-indicator\"></div>\r\n  )}\r\n</button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 同步状态消息 */}\r\n        {syncMessage && <div className=\"sync-message\">{syncMessage}</div>}\r\n\r\n        {/* 主要内容区域 */}\r\n        {renderContent()}\r\n\r\n        {/* 修复底部统计 */}\r\n        <footer className=\"footer-section\">\r\n          <div className=\"container\">\r\n            <div className=\"footer-stats\">\r\n              <div className=\"stat-item\">\r\n                <div className=\"stat-number\">\r\n                  {categoryStats.totalCategories}\r\n                </div>\r\n                <div className=\"stat-label\">总类别数</div>\r\n              </div>\r\n              <div className=\"stat-item\">\r\n                <div className=\"stat-number\">{questions.length}</div>\r\n                <div className=\"stat-label\">总题目数</div>\r\n              </div>\r\n              <div className=\"stat-item\">\r\n                <div className=\"stat-number\">{cacheStatus.count || 0}</div>\r\n                <div className=\"stat-label\">缓存题目</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n\r\n        <Chatbox\r\n          onNavigate={handleChatboxNavigate}\r\n          categories={categories}\r\n          questions={questions}\r\n          currentUser={currentUser}\r\n          cacheStatus={cacheStatus}\r\n          isOnline={isOnline}\r\n        />\r\n      </div>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n\r\n// 清理缓存的函数（需要从其他文件导入）\r\nconst clearAllCache = () => {\r\n  // 实现缓存清理逻辑\r\n  console.log(\"清理所有缓存\");\r\n};\r\n\r\nconst clearCategoryCache = () => {\r\n  // 实现分类缓存清理逻辑\r\n  console.log(\"清理分类缓存\");\r\n};\r\n\r\nexport default HomePage;\r\n","// initClasses.js\r\nimport AV from 'leancloud-storage';\r\n\r\n\r\n\r\n// 初始化配置\r\nAV.init({\r\n  appId: process.env.REACT_APP_LC_APP_ID,\r\n  appKey: process.env.REACT_APP_LC_APP_KEY,\r\n  serverURL: process.env.REACT_APP_LC_SERVER_URL\r\n});\r\n\r\n// 难度选项\r\nconst DifficultyOptions = {\r\n  EASY: 'easy',\r\n  MEDIUM: 'medium',\r\n  HARD: 'hard'\r\n};\r\n\r\n// 掌握程度选项\r\nconst ProficiencyOptions = {\r\n  BEGINNER: 'beginner',\r\n  INTERMEDIATE: 'intermediate',\r\n  ADVANCED: 'advanced',\r\n  MASTER: 'master'\r\n};\r\n\r\n// 社区相关 Class 名称\r\nconst CommunityClasses = {\r\n  POST: 'Post',\r\n  COMMENT: 'Comment',\r\n  LIKE: 'Like',\r\n  FOLLOW: 'Follow'\r\n};\r\n\r\n// 帖子状态选项\r\nconst PostStatusOptions = {\r\n  PUBLISHED: 'published',\r\n  DRAFT: 'draft',\r\n  DELETED: 'deleted'\r\n};\r\n\r\n// 帖子排序选项\r\nconst PostSortOptions = {\r\n  CREATED_AT: 'createdAt',\r\n  UPDATED_AT: 'updatedAt',\r\n  LAST_COMMENTED_AT: 'lastCommentedAt',\r\n  LIKES: 'likes',\r\n  VIEWS: 'views',\r\n  COMMENT_COUNT: 'commentCount'\r\n};\r\n\r\n// Notion 数据库字段映射配置\r\nconst NotionFieldMapping = {\r\n  // 标题字段映射\r\n  TITLE: ['Title', '题目', 'Name', '名称'],\r\n  // 难度字段映射\r\n  DIFFICULTY: ['Difficulty', '难度'],\r\n  // 分类字段映射\r\n  CATEGORY: ['Category', '类别', '分类'],\r\n  // 标签字段映射\r\n  TAGS: ['Tags', '标签'],\r\n  // 答案内容字段映射\r\n  CONTENT: ['Content', '内容', 'Answer', '答案'],\r\n  // 完成时间字段映射\r\n  COMPLETION_TIME: ['CompletionTime', '完成时间', '时间']\r\n};\r\n\r\n// ==================== 社区功能相关函数 ====================\r\n\r\n/**\r\n * 创建社区相关的数据表（Post, Comment, Like, Follow）\r\n */\r\nexport const createCommunityClasses = async () => {\r\n  try {\r\n    \r\n    const results = {\r\n      Post: await createPostClass(),\r\n      Comment: await createCommentClass(),\r\n      Like: await createLikeClass(),\r\n      Follow: await createFollowClass()\r\n    };\r\n    \r\n    return results;\r\n  } catch (error) {\r\n    throw new Error(`创建社区数据表失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Post 类（帖子表）\r\n */\r\nconst createPostClass = async () => {\r\n  try {\r\n    // 检查是否已存在\r\n    const query = new AV.Query(CommunityClasses.POST);\r\n    const existing = await query.first().catch(() => null);\r\n    if (existing) {\r\n      return { exists: true, message: 'Post class already exists' };\r\n    }\r\n\r\n    // 创建 Post 类（实际上在 LeanCloud 中类会自动创建，这里我们创建示例数据来验证）\r\n    const Post = AV.Object.extend(CommunityClasses.POST);\r\n    const testPost = new Post();\r\n    \r\n    // 设置字段\r\n    testPost.set('title', '测试帖子标题');\r\n    testPost.set('content', '这是一个测试帖子的内容，用于验证 Post 类的创建。');\r\n    testPost.set('author', AV.User.current());\r\n    testPost.set('tags', ['测试', '示例']);\r\n    testPost.set('likes', 0);\r\n    testPost.set('views', 0);\r\n    testPost.set('commentCount', 0);\r\n    testPost.set('isPublic', true);\r\n    testPost.set('isPinned', false);\r\n    testPost.set('status', PostStatusOptions.PUBLISHED);\r\n    \r\n    // 设置 ACL（权限控制）\r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);    // 所有人可读\r\n    acl.setPublicWriteAccess(false);  // 只有作者可写\r\n    if (AV.User.current()) {\r\n      acl.setWriteAccess(AV.User.current(), true);\r\n    }\r\n    testPost.setACL(acl);\r\n    \r\n    await testPost.save();\r\n    console.log('✅ Post 类创建成功并添加测试数据');\r\n    \r\n    // 删除测试数据\r\n    await testPost.destroy();\r\n    console.log('🧹 已清理测试数据');\r\n    \r\n    return { \r\n      success: true, \r\n      message: 'Post class created successfully' \r\n    };\r\n  } catch (error) {\r\n    console.error('创建 Post 类失败:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Comment 类（评论表）\r\n */\r\nconst createCommentClass = async () => {\r\n  try {\r\n    // 检查是否已存在\r\n    const query = new AV.Query(CommunityClasses.COMMENT);\r\n    const existing = await query.first().catch(() => null);\r\n    if (existing) {\r\n      console.log('📝 Comment 类已存在，跳过创建');\r\n      return { exists: true, message: 'Comment class already exists' };\r\n    }\r\n\r\n    // 创建 Comment 类\r\n    const Comment = AV.Object.extend(CommunityClasses.COMMENT);\r\n    const testComment = new Comment();\r\n    \r\n    // 设置字段\r\n    testComment.set('content', '这是一个测试评论内容。');\r\n    testComment.set('author', AV.User.current());\r\n    testComment.set('likes', 0);\r\n    \r\n    // 设置 ACL\r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    if (AV.User.current()) {\r\n      acl.setWriteAccess(AV.User.current(), true);\r\n    }\r\n    testComment.setACL(acl);\r\n    \r\n    await testComment.save();\r\n    console.log('✅ Comment 类创建成功并添加测试数据');\r\n    \r\n    // 删除测试数据\r\n    await testComment.destroy();\r\n    console.log('🧹 已清理测试数据');\r\n    \r\n    return { \r\n      success: true, \r\n      message: 'Comment class created successfully' \r\n    };\r\n  } catch (error) {\r\n    console.error('创建 Comment 类失败:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Like 类（点赞关系表）\r\n */\r\nconst createLikeClass = async () => {\r\n  try {\r\n    // 检查是否已存在\r\n    const query = new AV.Query(CommunityClasses.LIKE);\r\n    const existing = await query.first().catch(() => null);\r\n    if (existing) {\r\n      console.log('📝 Like 类已存在，跳过创建');\r\n      return { exists: true, message: 'Like class already exists' };\r\n    }\r\n\r\n    // 创建 Like 类\r\n    const Like = AV.Object.extend(CommunityClasses.LIKE);\r\n    const testLike = new Like();\r\n    \r\n    // 设置字段\r\n    testLike.set('user', AV.User.current());\r\n    \r\n    // 设置 ACL\r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    if (AV.User.current()) {\r\n      acl.setWriteAccess(AV.User.current(), true);\r\n    }\r\n    testLike.setACL(acl);\r\n    \r\n    await testLike.save();\r\n    console.log('✅ Like 类创建成功并添加测试数据');\r\n    \r\n    // 删除测试数据\r\n    await testLike.destroy();\r\n    console.log('🧹 已清理测试数据');\r\n    \r\n    return { \r\n      success: true, \r\n      message: 'Like class created successfully' \r\n    };\r\n  } catch (error) {\r\n    console.error('创建 Like 类失败:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Follow 类（关注关系表）\r\n */\r\nconst createFollowClass = async () => {\r\n  try {\r\n    // 检查是否已存在\r\n    const query = new AV.Query(CommunityClasses.FOLLOW);\r\n    const existing = await query.first().catch(() => null);\r\n    if (existing) {\r\n      console.log('📝 Follow 类已存在，跳过创建');\r\n      return { exists: true, message: 'Follow class already exists' };\r\n    }\r\n\r\n    // 创建 Follow 类\r\n    const Follow = AV.Object.extend(CommunityClasses.FOLLOW);\r\n    const testFollow = new Follow();\r\n    \r\n    // 设置字段\r\n    testFollow.set('follower', AV.User.current());\r\n    \r\n    // 设置 ACL\r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    if (AV.User.current()) {\r\n      acl.setWriteAccess(AV.User.current(), true);\r\n    }\r\n    testFollow.setACL(acl);\r\n    \r\n    await testFollow.save();\r\n    console.log('✅ Follow 类创建成功并添加测试数据');\r\n    \r\n    // 删除测试数据\r\n    await testFollow.destroy();\r\n    console.log('🧹 已清理测试数据');\r\n    \r\n    return { \r\n      success: true, \r\n      message: 'Follow class created successfully' \r\n    };\r\n  } catch (error) {\r\n    console.error('创建 Follow 类失败:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n/**\r\n * 生成社区示例数据\r\n */\r\nexport const generateCommunitySampleData = async () => {\r\n  try {\r\n    console.log('🚀 开始生成社区示例数据...');\r\n    \r\n    // 首先确保数据表已创建\r\n    await createCommunityClasses();\r\n    \r\n    const results = {\r\n      posts: await createSamplePosts(),\r\n      comments: await createSampleComments(),\r\n      likes: await createSampleLikes()\r\n    };\r\n    \r\n    console.log('✅ 社区示例数据生成完成:', results);\r\n    return {\r\n      success: true,\r\n      ...results,\r\n      message: `成功生成 ${results.posts.length} 个帖子, ${results.comments.length} 条评论, ${results.likes.length} 个点赞`\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ 生成社区示例数据失败:', error);\r\n    throw new Error(`生成社区示例数据失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建示例帖子\r\n */\r\nconst createSamplePosts = async () => {\r\n  const currentUser = AV.User.current();\r\n  if (!currentUser) {\r\n    console.log('⚠️ 用户未登录，跳过创建示例帖子');\r\n    return [];\r\n  }\r\n\r\n  const Post = AV.Object.extend(CommunityClasses.POST);\r\n  const samplePosts = [\r\n    {\r\n      title: '欢迎来到学习社区！',\r\n      content: `大家好！欢迎来到我们的学习社区。这里是一个分享编程学习心得、交流刷题经验的地方。\r\n\r\n## 社区规则：\r\n1. 友善交流，互相帮助\r\n2. 分享有价值的内容\r\n3. 尊重他人观点\r\n4. 保持内容相关性\r\n\r\n希望大家都能在这里有所收获！🎉`,\r\n      tags: ['欢迎', '公告', '社区'],\r\n      isPublic: true,\r\n      isPinned: true\r\n    },\r\n    {\r\n      title: 'JavaScript 闭包的理解与实践',\r\n      content: `今天来分享一下我对 JavaScript 闭包的理解...\r\n\r\n## 什么是闭包？\r\n闭包是指那些能够访问自由变量的函数。\r\n\r\n## 实际应用场景：\r\n1. 模块化开发\r\n2. 私有变量\r\n3. 函数柯里化\r\n\r\n大家有什么补充的吗？`,\r\n      tags: ['JavaScript', '闭包', '前端'],\r\n      isPublic: true,\r\n      isPinned: false\r\n    },\r\n    {\r\n      title: 'React Hooks 使用心得',\r\n      content: `使用 React Hooks 有一段时间了，分享一些实践经验：\r\n\r\n- useState: 状态管理\r\n- useEffect: 副作用处理\r\n- useContext: 上下文传递\r\n- useMemo: 性能优化\r\n\r\n你们觉得哪个 Hook 最实用？`,\r\n      tags: ['React', 'Hooks', '前端'],\r\n      isPublic: true,\r\n      isPinned: false\r\n    }\r\n  ];\r\n\r\n  const posts = [];\r\n  for (const data of samplePosts) {\r\n    const post = new Post();\r\n    post.set('title', data.title);\r\n    post.set('content', data.content);\r\n    post.set('author', currentUser);\r\n    post.set('tags', data.tags);\r\n    post.set('likes', Math.floor(Math.random() * 10));\r\n    post.set('views', Math.floor(Math.random() * 50));\r\n    post.set('commentCount', Math.floor(Math.random() * 5));\r\n    post.set('isPublic', data.isPublic);\r\n    post.set('isPinned', data.isPinned);\r\n    post.set('status', PostStatusOptions.PUBLISHED);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    acl.setWriteAccess(currentUser, true);\r\n    post.setACL(acl);\r\n    \r\n    const saved = await post.save();\r\n    posts.push(saved);\r\n    console.log(`✅ 创建帖子: \"${data.title}\"`);\r\n  }\r\n  \r\n  return posts;\r\n};\r\n\r\n/**\r\n * 创建示例评论\r\n */\r\nconst createSampleComments = async () => {\r\n  const currentUser = AV.User.current();\r\n  if (!currentUser) {\r\n    console.log('⚠️ 用户未登录，跳过创建示例评论');\r\n    return [];\r\n  }\r\n\r\n  // 获取刚创建的帖子\r\n  const postQuery = new AV.Query(CommunityClasses.POST);\r\n  const posts = await postQuery.find();\r\n  \r\n  if (posts.length === 0) {\r\n    console.log('⚠️ 没有找到帖子，跳过创建评论');\r\n    return [];\r\n  }\r\n\r\n  const Comment = AV.Object.extend(CommunityClasses.COMMENT);\r\n  const sampleComments = [\r\n    { content: '欢迎欢迎！期待更多精彩内容！🎊' },\r\n    { content: '闭包的讲解很清晰，感谢分享！' },\r\n    { content: '我觉得 useEffect 最实用，能处理各种副作用。' },\r\n    { content: '新人报道，请多指教！' },\r\n    { content: 'Hooks 确实让 React 开发更简洁了。' }\r\n  ];\r\n\r\n  const comments = [];\r\n  for (let i = 0; i < sampleComments.length; i++) {\r\n    const comment = new Comment();\r\n    comment.set('content', sampleComments[i].content);\r\n    comment.set('author', currentUser);\r\n    comment.set('post', posts[i % posts.length]); // 轮流分配到不同帖子\r\n    comment.set('likes', Math.floor(Math.random() * 5));\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    acl.setWriteAccess(currentUser, true);\r\n    comment.setACL(acl);\r\n    \r\n    const saved = await comment.save();\r\n    comments.push(saved);\r\n    console.log(`✅ 创建评论: \"${sampleComments[i].content.substring(0, 20)}...\"`);\r\n  }\r\n  \r\n  return comments;\r\n};\r\n\r\n/**\r\n * 创建示例点赞\r\n */\r\nconst createSampleLikes = async () => {\r\n  const currentUser = AV.User.current();\r\n  if (!currentUser) {\r\n    console.log('⚠️ 用户未登录，跳过创建示例点赞');\r\n    return [];\r\n  }\r\n\r\n  // 获取刚创建的帖子和评论\r\n  const postQuery = new AV.Query(CommunityClasses.POST);\r\n  const posts = await postQuery.find();\r\n  \r\n  const commentQuery = new AV.Query(CommunityClasses.COMMENT);\r\n  const comments = await commentQuery.find();\r\n\r\n  const Like = AV.Object.extend(CommunityClasses.LIKE);\r\n  const likes = [];\r\n\r\n  // 为第一个帖子点赞\r\n  if (posts.length > 0) {\r\n    const like = new Like();\r\n    like.set('user', currentUser);\r\n    like.set('post', posts[0]);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setWriteAccess(currentUser, true);\r\n    like.setACL(acl);\r\n    \r\n    const saved = await like.save();\r\n    likes.push(saved);\r\n    console.log('✅ 创建帖子点赞');\r\n  }\r\n\r\n  // 为第一个评论点赞\r\n  if (comments.length > 0) {\r\n    const like = new Like();\r\n    like.set('user', currentUser);\r\n    like.set('comment', comments[0]);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setWriteAccess(currentUser, true);\r\n    like.setACL(acl);\r\n    \r\n    const saved = await like.save();\r\n    likes.push(saved);\r\n    console.log('✅ 创建评论点赞');\r\n  }\r\n  \r\n  return likes;\r\n};\r\n\r\n/**\r\n * 清除社区数据\r\n */\r\nexport const clearCommunityData = async () => {\r\n  try {\r\n    \r\n    let deletedCount = {\r\n      posts: 0,\r\n      comments: 0,\r\n      likes: 0,\r\n      follows: 0\r\n    };\r\n    \r\n    // 清除点赞数据\r\n    try {\r\n      const likeQuery = new AV.Query(CommunityClasses.LIKE);\r\n      const likes = await likeQuery.find();\r\n      if (likes.length > 0) {\r\n        await AV.Object.destroyAll(likes);\r\n        deletedCount.likes = likes.length;\r\n      }\r\n    } catch (error) {\r\n    }\r\n    \r\n    // 清除评论数据\r\n    try {\r\n      const commentQuery = new AV.Query(CommunityClasses.COMMENT);\r\n      const comments = await commentQuery.find();\r\n      if (comments.length > 0) {\r\n        await AV.Object.destroyAll(comments);\r\n        deletedCount.comments = comments.length;\r\n      }\r\n    } catch (error) {\r\n    }\r\n    \r\n    // 清除帖子数据\r\n    try {\r\n      const postQuery = new AV.Query(CommunityClasses.POST);\r\n      const posts = await postQuery.find();\r\n      if (posts.length > 0) {\r\n        await AV.Object.destroyAll(posts);\r\n        deletedCount.posts = posts.length;\r\n      }\r\n    } catch (error) {\r\n    }\r\n    \r\n    // 清除关注数据\r\n    try {\r\n      const followQuery = new AV.Query(CommunityClasses.FOLLOW);\r\n      const follows = await followQuery.find();\r\n      if (follows.length > 0) {\r\n        await AV.Object.destroyAll(follows);\r\n        deletedCount.follows = follows.length;\r\n      }\r\n    } catch (error) {\r\n    }\r\n    \r\n    const message = `社区数据清除完成: ${deletedCount.posts} 帖子, ${deletedCount.comments} 评论, ${deletedCount.likes} 点赞, ${deletedCount.follows} 关注`;\r\n    \r\n    return {\r\n      success: true,\r\n      ...deletedCount,\r\n      message\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ 清除社区数据失败:', error);\r\n    throw new Error(`清除社区数据失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n// ==================== 原有函数（保持不变） ====================\r\n\r\n/**\r\n * Notion 同步云函数\r\n */\r\nexport const syncProblemsFromNotion = async () => {\r\n  try {\r\n    \r\n    // 检查环境变量是否配置\r\n    if (!process.env.REACT_APP_NOTION_TOKEN || !process.env.REACT_APP_NOTION_DATABASE_ID) {\r\n      throw new Error('Notion 环境变量未配置，请检查 REACT_APP_NOTION_TOKEN 和 REACT_APP_NOTION_DATABASE_ID');\r\n    }\r\n\r\n    // 调用云函数（如果部署了云引擎版本）\r\n    try {\r\n      const result = await AV.Cloud.run('syncProblemsFromNotion');\r\n      return result;\r\n    } catch (cloudError) {\r\n      // 回退到客户端版本同步\r\n      return await syncWithClientVersion();\r\n    }\r\n  } catch (error) {\r\n    console.error('❌ Notion 同步失败:', error);\r\n    throw new Error(`同步失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 客户端版本同步（云函数不可用时的回退方案）\r\n */\r\nconst syncWithClientVersion = async () => {\r\n  try {\r\n    // 这里可以添加直接从前端调用 Notion API 的逻辑\r\n    // 但由于安全原因，建议使用云函数方式\r\n    console.log('📝 使用客户端同步模式（需要配置云函数）');\r\n    \r\n    // 模拟同步过程\r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    \r\n    return {\r\n      success: true,\r\n      message: '同步功能需要部署云函数。请参考以下步骤：\\n1. 在 LeanCloud 云引擎部署 syncProblemsFromNotion 云函数\\n2. 配置 NOTION_INTEGRATION_TOKEN 和 NOTION_DATABASE_ID 环境变量',\r\n      data: {\r\n        synced: 0,\r\n        mode: 'client_fallback'\r\n      }\r\n    };\r\n  } catch (error) {\r\n    throw new Error(`客户端同步失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Notion 同步相关的云函数定义（用于云引擎部署）\r\n */\r\nexport const defineNotionCloudFunctions = () => {\r\n  // 这些函数需要在云引擎中定义\r\n  if (typeof AV.Cloud !== 'undefined') {\r\n    // 同步题目云函数\r\n    AV.Cloud.define('syncProblemsFromNotion', async (request) => {\r\n      const { Client } = require('@notionhq/client');\r\n      \r\n      // 初始化 Notion 客户端\r\n      const notion = new Client({\r\n        auth: process.env.NOTION_INTEGRATION_TOKEN,\r\n      });\r\n\r\n      try {\r\n        console.log('开始从 Notion 数据库同步数据...');\r\n        \r\n        // 查询 Notion 数据库\r\n        const response = await notion.databases.query({\r\n          database_id: process.env.NOTION_DATABASE_ID,\r\n          sorts: [{ timestamp: 'last_edited_time', direction: 'descending' }],\r\n        });\r\n\r\n        console.log(`从 Notion 获取到 ${response.results.length} 条记录`);\r\n\r\n        const problems = [];\r\n        let syncedCount = 0;\r\n        \r\n        // 处理每条记录\r\n        for (const page of response.results) {\r\n          const problemData = parseNotionPage(page);\r\n          if (problemData) {\r\n            problems.push(problemData);\r\n          }\r\n        }\r\n\r\n        // 保存到 LeanCloud\r\n        syncedCount = await saveNotionProblemsToLeanCloud(problems);\r\n        \r\n        return {\r\n          success: true,\r\n          message: `同步完成！处理 ${response.results.length} 条记录，成功保存 ${syncedCount} 道题目`,\r\n          data: {\r\n            fetched: response.results.length,\r\n            saved: syncedCount,\r\n            problems: problems.slice(0, 5) // 返回前5条作为示例\r\n          }\r\n        };\r\n\r\n      } catch (error) {\r\n        console.error('Notion 同步错误:', error);\r\n        throw new AV.Cloud.Error(`同步失败: ${error.message}`);\r\n      }\r\n    });\r\n\r\n    // 检查 Notion 连接状态\r\n    AV.Cloud.define('checkNotionConnection', async (request) => {\r\n      const { Client } = require('@notionhq/client');\r\n      \r\n      try {\r\n        const notion = new Client({\r\n          auth: process.env.NOTION_INTEGRATION_TOKEN,\r\n        });\r\n\r\n        // 尝试查询数据库信息\r\n        const database = await notion.databases.retrieve({\r\n          database_id: process.env.NOTION_DATABASE_ID,\r\n        });\r\n\r\n        return {\r\n          success: true,\r\n          connected: true,\r\n          database: {\r\n            title: database.title[0]?.plain_text || '未命名',\r\n            properties: Object.keys(database.properties),\r\n            url: database.url\r\n          }\r\n        };\r\n      } catch (error) {\r\n        return {\r\n          success: false,\r\n          connected: false,\r\n          error: error.message\r\n        };\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * 解析 Notion 页面数据\r\n */\r\nconst parseNotionPage = (page) => {\r\n  try {\r\n    const properties = page.properties;\r\n    \r\n    // 获取标题\r\n    const title = getNotionPropertyValue(properties, NotionFieldMapping.TITLE, 'title');\r\n    if (!title) {\r\n      console.warn('跳过无标题的记录:', page.id);\r\n      return null;\r\n    }\r\n\r\n    // 获取其他字段\r\n    const difficulty = getNotionPropertyValue(properties, NotionFieldMapping.DIFFICULTY, 'select');\r\n    const categoryName = getNotionPropertyValue(properties, NotionFieldMapping.CATEGORY, 'select');\r\n    const tags = getNotionPropertyValue(properties, NotionFieldMapping.TAGS, 'multi_select') || [];\r\n    const content = getNotionPropertyValue(properties, NotionFieldMapping.CONTENT, 'rich_text');\r\n    const completionTime = getNotionPropertyValue(properties, NotionFieldMapping.COMPLETION_TIME, 'number');\r\n\r\n    return {\r\n      title: title,\r\n      difficulty: difficulty || DifficultyOptions.MEDIUM,\r\n      category: categoryName || '未分类',\r\n      tags: Array.isArray(tags) ? tags : [tags],\r\n      content: content || '',\r\n      completionTime: completionTime || 15,\r\n      notionPageId: page.id,\r\n      notionUrl: page.url,\r\n      lastEditedTime: new Date(page.last_edited_time),\r\n      isActive: true\r\n    };\r\n  } catch (error) {\r\n    console.error('解析 Notion 页面失败:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * 通用获取 Notion 属性值的方法\r\n */\r\nconst getNotionPropertyValue = (properties, fieldNames, expectedType) => {\r\n  for (const fieldName of fieldNames) {\r\n    const property = properties[fieldName];\r\n    if (property && property.type === expectedType) {\r\n      switch (expectedType) {\r\n        case 'title':\r\n          return property.title[0]?.text?.content;\r\n        case 'rich_text':\r\n          return property.rich_text[0]?.text?.content;\r\n        case 'select':\r\n          return property.select?.name;\r\n        case 'multi_select':\r\n          return property.multi_select?.map(item => item.name);\r\n        case 'number':\r\n          return property.number;\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * 保存 Notion 数据到 LeanCloud\r\n */\r\nconst saveNotionProblemsToLeanCloud = async (problems) => {\r\n  const Question = AV.Object.extend('Question');\r\n  let savedCount = 0;\r\n\r\n  for (const problemData of problems) {\r\n    try {\r\n      // 查找或创建分类\r\n      const category = await findOrCreateCategory(problemData.category);\r\n      \r\n      // 检查是否已存在相同 Notion Page ID 的题目\r\n      const query = new AV.Query('Question');\r\n      query.equalTo('notionPageId', problemData.notionPageId);\r\n      const existing = await query.first();\r\n      \r\n      const question = existing || new Question();\r\n      \r\n      // 设置题目属性\r\n      question.set('title', problemData.title);\r\n      question.set('content', problemData.content);\r\n      question.set('difficulty', problemData.difficulty);\r\n      question.set('tags', problemData.tags);\r\n      question.set('completionTime', problemData.completionTime);\r\n      question.set('category', category);\r\n      question.set('notionPageId', problemData.notionPageId);\r\n      question.set('notionUrl', problemData.notionUrl);\r\n      question.set('isActive', true);\r\n      \r\n      // 设置 ACL\r\n      const acl = new AV.ACL();\r\n      acl.setPublicReadAccess(true);\r\n      acl.setPublicWriteAccess(true);\r\n      question.setACL(acl);\r\n      \r\n      await question.save();\r\n      savedCount++;\r\n      \r\n      console.log(`✅ 保存题目: \"${problemData.title}\" → 分类 \"${problemData.category}\"`);\r\n    } catch (error) {\r\n      console.error(`保存题目失败: ${problemData.title}`, error);\r\n    }\r\n  }\r\n  \r\n  // 更新分类计数\r\n  await updateAllCategoryCounts();\r\n  \r\n  return savedCount;\r\n};\r\n\r\n/**\r\n * 查找或创建分类\r\n */\r\nconst findOrCreateCategory = async (categoryName) => {\r\n  const Category = AV.Object.extend('Category');\r\n  \r\n  // 查找现有分类\r\n  const query = new AV.Query('Category');\r\n  query.equalTo('name', categoryName);\r\n  let category = await query.first();\r\n  \r\n  // 如果不存在则创建\r\n  if (!category) {\r\n    category = new Category();\r\n    category.set('name', categoryName);\r\n    category.set('questionCount', 0);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(true);\r\n    category.setACL(acl);\r\n    \r\n    await category.save();\r\n  }\r\n  \r\n  return category;\r\n};\r\n\r\n/**\r\n * 检查 Notion 连接状态\r\n */\r\nexport const checkNotionConnection = async () => {\r\n  try {\r\n    const result = await AV.Cloud.run('checkNotionConnection');\r\n    return result;\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      connected: false,\r\n      error: error.message,\r\n      message: '请确保已部署云函数并配置环境变量'\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 生成正确格式的 Category 和 Question Class（包含示例数据）\r\n */\r\nexport const generateSampleData = async () => {\r\n  try {\r\n    console.log('开始生成示例数据...');\r\n    await clearAllData();\r\n    const categories = await createCategories();\r\n    const questions = await createQuestions(categories);\r\n    await updateCategoryCounts(categories);\r\n    \r\n    console.log('🎉 示例数据生成完成！');\r\n    return {\r\n      success: true,\r\n      categoriesCount: categories.length,\r\n      questionsCount: questions.length,\r\n      message: `成功生成 ${categories.length} 个分类和 ${questions.length} 个题目`\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ 生成示例数据失败:', error);\r\n    throw new Error(`生成失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Category 数据\r\n */\r\nconst createCategories = async () => {\r\n  const Category = AV.Object.extend('Category');\r\n  const categoriesData = [\r\n    { name: 'JavaScript 核心概念' }, { name: 'React 框架原理' }, { name: '算法与数据结构' },\r\n    { name: '计算机网络' }, { name: '数据库系统' }, { name: '操作系统' },\r\n    { name: '前端工程化' }, { name: 'TypeScript 进阶' }\r\n  ];\r\n\r\n  const categories = [];\r\n  for (const data of categoriesData) {\r\n    const category = new Category();\r\n    category.set('name', data.name);\r\n    category.set('questionCount', 0);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(true);\r\n    category.setACL(acl);\r\n    \r\n    const saved = await category.save();\r\n    categories.push(saved);\r\n    console.log(`✅ 创建分类: ${data.name}`);\r\n  }\r\n  \r\n  return categories;\r\n};\r\n\r\n/**\r\n * 创建 Question 数据（关联到 Category）\r\n */\r\nconst createQuestions = async (categories) => {\r\n  const Question = AV.Object.extend('Question');\r\n  const questionsData = [\r\n    // 你原有的题目数据...\r\n  ];\r\n\r\n  const questions = [];\r\n  for (const data of questionsData) {\r\n    const question = new Question();\r\n    question.set('title', data.title);\r\n    question.set('answer', data.answer);\r\n    question.set('tags', data.tags);\r\n    question.set('difficulty', data.difficulty);\r\n    question.set('completionTime', data.completionTime);\r\n    question.set('proficiency', data.proficiency);\r\n    question.set('category', categories[data.categoryIndex]);\r\n    question.set('isActive', true);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(true);\r\n    question.setACL(acl);\r\n    \r\n    const saved = await question.save();\r\n    questions.push(saved);\r\n    console.log(`✅ 创建题目: \"${data.title}\" → 属于 \"${categories[data.categoryIndex].get('name')}\"`);\r\n  }\r\n  \r\n  return questions;\r\n};\r\n\r\n/**\r\n * 更新 Category 的题目计数\r\n */\r\nconst updateCategoryCounts = async (categories) => {\r\n  for (const category of categories) {\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    const count = await questionQuery.count();\r\n    category.set('questionCount', count);\r\n    await category.save();\r\n    console.log(`📊 分类 \"${category.get('name')}\" 有 ${count} 个题目`);\r\n  }\r\n};\r\n\r\n/**\r\n * 更新所有分类的题目计数\r\n */\r\nconst updateAllCategoryCounts = async () => {\r\n  const categoryQuery = new AV.Query('Category');\r\n  const categories = await categoryQuery.find();\r\n  \r\n  for (const category of categories) {\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    const count = await questionQuery.count();\r\n    category.set('questionCount', count);\r\n    await category.save();\r\n  }\r\n  \r\n  console.log(`📊 更新了 ${categories.length} 个分类的题目计数`);\r\n};\r\n\r\n/**\r\n * 清除所有数据\r\n */\r\nexport const clearAllData = async () => {\r\n  try {\r\n    console.log('开始清除所有数据...');\r\n    let deletedQuestions = 0;\r\n    let deletedCategories = 0;\r\n    \r\n    try {\r\n      const questionQuery = new AV.Query('Question');\r\n      const questions = await questionQuery.find();\r\n      if (questions.length > 0) {\r\n        await AV.Object.destroyAll(questions);\r\n        deletedQuestions = questions.length;\r\n        console.log(`🗑️ 删除了 ${deletedQuestions} 个题目`);\r\n      }\r\n    } catch (error) {\r\n      console.log('没有题目需要删除或删除失败:', error.message);\r\n    }\r\n    \r\n    try {\r\n      const categoryQuery = new AV.Query('Category');\r\n      const categories = await categoryQuery.find();\r\n      if (categories.length > 0) {\r\n        await AV.Object.destroyAll(categories);\r\n        deletedCategories = categories.length;\r\n        console.log(`🗑️ 删除了 ${deletedCategories} 个分类`);\r\n      }\r\n    } catch (error) {\r\n      console.log('没有分类需要删除或删除失败:', error.message);\r\n    }\r\n    \r\n    const message = `清除完成: ${deletedCategories} 个分类, ${deletedQuestions} 个题目`;\r\n    console.log('✅ ' + message);\r\n    \r\n    return {\r\n      success: true,\r\n      deletedCategories,\r\n      deletedQuestions,\r\n      message\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ 清除数据失败:', error);\r\n    throw new Error(`清除失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 检查数据状态\r\n */\r\nexport const checkDataStatus = async () => {\r\n  try {\r\n    let categoryCount = 0;\r\n    let questionCount = 0;\r\n    \r\n    try {\r\n      const categoryQuery = new AV.Query('Category');\r\n      categoryCount = await categoryQuery.count();\r\n    } catch (error) {\r\n      categoryCount = 0;\r\n    }\r\n    \r\n    try {\r\n      const questionQuery = new AV.Query('Question');\r\n      questionCount = await questionQuery.count();\r\n    } catch (error) {\r\n      questionCount = 0;\r\n    }\r\n    \r\n    const status = {\r\n      categoryCount,\r\n      questionCount,\r\n      hasData: categoryCount > 0 || questionCount > 0\r\n    };\r\n    \r\n    console.log('📊 数据状态:', status);\r\n    return status;\r\n  } catch (error) {\r\n    console.error('检查数据状态失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 导出所有常量和函数\r\nexport { \r\n  DifficultyOptions, \r\n  ProficiencyOptions, \r\n  NotionFieldMapping,\r\n  CommunityClasses,\r\n  PostStatusOptions,\r\n  PostSortOptions\r\n};\r\n\r\n// 全局可用\r\nif (typeof window !== 'undefined') {\r\n  // 原有函数\r\n  window.generateSampleData = generateSampleData;\r\n  window.clearAllData = clearAllData;\r\n  window.checkDataStatus = checkDataStatus;\r\n  window.syncProblemsFromNotion = syncProblemsFromNotion;\r\n  window.checkNotionConnection = checkNotionConnection;\r\n  window.defineNotionCloudFunctions = defineNotionCloudFunctions;\r\n  \r\n  // 新增社区函数\r\n  window.createCommunityClasses = createCommunityClasses;\r\n  window.generateCommunitySampleData = generateCommunitySampleData;\r\n  window.clearCommunityData = clearCommunityData;\r\n  \r\n  console.log(`\r\n🎯 数据库管理工具已加载！\r\n\r\n📚 数据管理:\r\n1. generateSampleData()          - 生成示例数据\r\n2. clearAllData()                - 清除所有数据\r\n3. checkDataStatus()             - 检查数据状态\r\n\r\n🔄 Notion 同步:\r\n4. syncProblemsFromNotion()      - 从 Notion 导入题目\r\n5. checkNotionConnection()       - 检查 Notion 连接状态\r\n6. defineNotionCloudFunctions()  - 定义云函数（用于云引擎）\r\n\r\n👥 社区功能:\r\n7. createCommunityClasses()      - 创建社区数据表\r\n8. generateCommunitySampleData() - 生成社区示例数据\r\n9. clearCommunityData()          - 清除社区数据\r\n\r\n💡 使用提示:\r\n- 首次使用请运行 generateSampleData() 创建示例数据\r\n- 使用社区功能前运行 createCommunityClasses() 创建数据表\r\n- 配置 Notion 环境变量后使用 syncProblemsFromNotion() 同步\r\n- 云函数需要在 LeanCloud 云引擎部署\r\n  `);\r\n}","// InitPage.jsx\r\nimport React, { useState } from 'react';\r\nimport { \r\n  generateSampleData, \r\n  clearAllData, \r\n  checkDataStatus, \r\n  syncProblemsFromNotion, \r\n  checkNotionConnection,\r\n  createCommunityClasses,\r\n  generateCommunitySampleData,\r\n  clearCommunityData\r\n} from '../services/initClasses';\r\nimport './InitPage.css';\r\n\r\nconst InitPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [dataStatus, setDataStatus] = useState(null);\r\n  const [notionStatus, setNotionStatus] = useState(null);\r\n  const [syncResult, setSyncResult] = useState(null);\r\n  const [communityStatus, setCommunityStatus] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('notion'); // 'notion', 'data', 'community'\r\n\r\n  // 检查数据状态\r\n  const handleCheckStatus = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const status = await checkDataStatus();\r\n      setDataStatus(status);\r\n      setMessage(`📊 当前数据: ${status.categoryCount} 个分类, ${status.questionCount} 个题目`);\r\n    } catch (error) {\r\n      setMessage(`❌ 检查失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 检查社区数据状态\r\n  const handleCheckCommunityStatus = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const status = {\r\n        postCount: 0,\r\n        commentCount: 0,\r\n        likeCount: 0,\r\n        followCount: 0,\r\n        hasData: false\r\n      };\r\n      \r\n      try {\r\n        // 使用 checkDataStatus 的逻辑来检查社区数据\r\n        // 这里简化处理，实际使用时可以调用专门的社区状态检查函数\r\n        status.postCount = 0;\r\n        status.commentCount = 0;\r\n        status.likeCount = 0;\r\n        status.followCount = 0;\r\n        status.hasData = false;\r\n        \r\n        setMessage(`📊 社区数据状态已检查，请先创建社区数据表`);\r\n      } catch (error) {\r\n        setMessage(`📊 社区数据表尚未创建，请先点击\"创建社区数据表\"`);\r\n      }\r\n      \r\n      setCommunityStatus(status);\r\n    } catch (error) {\r\n      setMessage(`❌ 检查社区状态失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 检查 Notion 连接状态\r\n  const handleCheckNotionConnection = async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    setNotionStatus(null);\r\n    \r\n    try {\r\n      const result = await checkNotionConnection();\r\n      setNotionStatus(result);\r\n      \r\n      if (result.success && result.connected) {\r\n        setMessage(`✅ Notion 连接正常！数据库: ${result.database.title}`);\r\n      } else {\r\n        setMessage(`⚠️ Notion 连接异常: ${result.error || '请检查配置'}`);\r\n      }\r\n    } catch (error) {\r\n      setMessage(`❌ 检查 Notion 连接失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 从 Notion 同步数据\r\n  const handleSyncFromNotion = async () => {\r\n    if (!window.confirm('确定要从 Notion 导入数据吗？这会添加新题目到现有数据中。')) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setMessage('');\r\n    setSyncResult(null);\r\n    \r\n    try {\r\n      const result = await syncProblemsFromNotion();\r\n      setSyncResult(result);\r\n      \r\n      if (result.success) {\r\n        setMessage(`✅ ${result.message}`);\r\n        // 同步成功后更新状态\r\n        await handleCheckStatus();\r\n      } else {\r\n        setMessage(`⚠️ ${result.message}`);\r\n      }\r\n    } catch (error) {\r\n      setMessage(`❌ 同步失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 生成示例数据\r\n  const handleGenerateData = async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await generateSampleData();\r\n      setMessage(`✅ ${result.message}`);\r\n      // 更新状态\r\n      await handleCheckStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 创建社区数据表\r\n  const handleCreateCommunityClasses = async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await createCommunityClasses();\r\n      if (result.Post.success && result.Comment.success && result.Like.success && result.Follow.success) {\r\n        setMessage(`✅ 社区数据表创建成功！所有表都已就绪`);\r\n      } else {\r\n        // 检查哪些表创建失败\r\n        const failedTables = [];\r\n        if (!result.Post.success) failedTables.push('Post');\r\n        if (!result.Comment.success) failedTables.push('Comment');\r\n        if (!result.Like.success) failedTables.push('Like');\r\n        if (!result.Follow.success) failedTables.push('Follow');\r\n        \r\n        if (failedTables.length > 0) {\r\n          setMessage(`⚠️ 部分表创建失败: ${failedTables.join(', ')}。可能表已存在或权限不足`);\r\n        } else {\r\n          setMessage(`✅ 社区数据表创建完成`);\r\n        }\r\n      }\r\n      // 更新社区状态\r\n      await handleCheckCommunityStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ 创建社区数据表失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 生成社区示例数据\r\n  const handleGenerateCommunityData = async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await generateCommunitySampleData();\r\n      setMessage(`✅ ${result.message}`);\r\n      // 更新社区状态\r\n      await handleCheckCommunityStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ 生成社区示例数据失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 清除所有数据\r\n  const handleClearData = async () => {\r\n    if (!window.confirm('确定要清除所有数据吗？此操作不可撤销！')) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await clearAllData();\r\n      setMessage(`✅ ${result.message}`);\r\n      // 更新状态\r\n      await handleCheckStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 清除社区数据\r\n  const handleClearCommunityData = async () => {\r\n    if (!window.confirm('确定要清除所有社区数据吗？此操作不可撤销！')) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await clearCommunityData();\r\n      setMessage(`✅ ${result.message}`);\r\n      // 更新社区状态\r\n      await handleCheckCommunityStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ 清除社区数据失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"init-page\">\r\n      <header className=\"page-header\">\r\n        <h1>🎯 数据库管理工具</h1>\r\n        <p>管理 Category、Question 和社区数据，支持 Notion 同步</p>\r\n      </header>\r\n\r\n      {/* 标签导航 */}\r\n      <section className=\"tab-navigation\">\r\n        <div className=\"tabs\">\r\n          <button \r\n            className={`tab ${activeTab === 'notion' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('notion')}\r\n          >\r\n            🔄 Notion 同步\r\n          </button>\r\n          <button \r\n            className={`tab ${activeTab === 'data' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('data')}\r\n          >\r\n            📊 题目数据管理\r\n          </button>\r\n          <button \r\n            className={`tab ${activeTab === 'community' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('community')}\r\n          >\r\n            👥 社区数据管理\r\n          </button>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Notion 同步功能区 */}\r\n    \r\n      {activeTab === 'notion' && (\r\n        <section className=\"notion-section\">\r\n          <h2>🔄 Notion 数据同步</h2>\r\n          <div className=\"action-buttons\">\r\n            <button \r\n              onClick={handleCheckNotionConnection}\r\n              disabled={loading}\r\n              className=\"btn btn-notion\"\r\n            >\r\n              🔗 检查 Notion 连接\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleSyncFromNotion}\r\n              disabled={loading}\r\n              className=\"btn btn-sync\"\r\n            >\r\n              📥 从 Notion 导入\r\n            </button>\r\n          </div>\r\n\r\n          {notionStatus && (\r\n            <div className=\"notion-status\">\r\n              <h4>Notion 连接状态</h4>\r\n              <div className={`status-card ${notionStatus.connected ? 'connected' : 'disconnected'}`}>\r\n                <div className=\"status-header\">\r\n                  <span className=\"status-indicator\">\r\n                    {notionStatus.connected ? '🟢' : '🔴'}\r\n                  </span>\r\n                  <strong>\r\n                    {notionStatus.connected ? '连接正常' : '连接异常'}\r\n                  </strong>\r\n                </div>\r\n                \r\n                {notionStatus.connected && notionStatus.database && (\r\n                  <div className=\"database-info\">\r\n                    <p><strong>数据库:</strong> {notionStatus.database.title}</p>\r\n                    <p><strong>属性字段:</strong> {notionStatus.database.properties.length} 个</p>\r\n                    <p><strong>URL:</strong> \r\n                      <a href={notionStatus.database.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        查看数据库\r\n                      </a>\r\n                    </p>\r\n                  </div>\r\n                )}\r\n                \r\n                {!notionStatus.connected && (\r\n                  <div className=\"error-info\">\r\n                    <p><strong>错误信息:</strong> {notionStatus.error}</p>\r\n                    <p className=\"help-text\">\r\n                      💡 请确保已部署云函数并配置环境变量\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {syncResult && (\r\n            <div className=\"sync-result\">\r\n              <h4>同步结果</h4>\r\n              <div className=\"result-card\">\r\n                <div className=\"result-stats\">\r\n                  <div className=\"stat\">\r\n                    <span className=\"stat-label\">获取记录:</span>\r\n                    <span className=\"stat-value\">{syncResult.data?.fetched || 0}</span>\r\n                  </div>\r\n                  <div className=\"stat\">\r\n                    <span className=\"stat-label\">成功保存:</span>\r\n                    <span className=\"stat-value\">{syncResult.data?.saved || 0}</span>\r\n                  </div>\r\n                  <div className=\"stat\">\r\n                    <span className=\"stat-label\">同步模式:</span>\r\n                    <span className=\"stat-value\">{syncResult.data?.mode || 'cloud'}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                {syncResult.data?.problems && syncResult.data.problems.length > 0 && (\r\n                  <div className=\"synced-problems\">\r\n                    <h5>最近同步的题目:</h5>\r\n                    <ul>\r\n                      {syncResult.data.problems.slice(0, 3).map((problem, index) => (\r\n                        <li key={index}>\r\n                          <span className=\"problem-title\">{problem.title}</span>\r\n                          <span className=\"problem-category\">{problem.category}</span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </section>\r\n      )}\r\n\r\n      {/* 题目数据管理功能区 */}\r\n      {activeTab === 'data' && (\r\n        <section className=\"data-management-section\">\r\n          <h2>📊 题目数据管理</h2>\r\n          <div className=\"action-buttons\">\r\n            <button \r\n              onClick={handleCheckStatus}\r\n              disabled={loading}\r\n              className=\"btn btn-info\"\r\n            >\r\n              🔍 检查状态\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleGenerateData}\r\n              disabled={loading}\r\n              className=\"btn btn-success\"\r\n            >\r\n              🚀 生成示例数据\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleClearData}\r\n              disabled={loading}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              🗑️ 清除所有数据\r\n            </button>\r\n          </div>\r\n\r\n          {dataStatus && (\r\n            <div className=\"status-info\">\r\n              <h4>📈 数据状态</h4>\r\n              <div className=\"status-grid\">\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">分类数量:</span>\r\n                  <span className=\"value\">{dataStatus.categoryCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">题目数量:</span>\r\n                  <span className=\"value\">{dataStatus.questionCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">数据状态:</span>\r\n                  <span className={`value ${dataStatus.hasData ? 'has-data' : 'no-data'}`}>\r\n                    {dataStatus.hasData ? '有数据' : '无数据'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </section>\r\n      )}\r\n\r\n      {/* 社区数据管理功能区 */}\r\n      {activeTab === 'community' && (\r\n        <section className=\"community-management-section\">\r\n          <h2>👥 社区数据管理</h2>\r\n          <p className=\"section-description\">\r\n            管理学习社区的帖子、评论、点赞等社交功能数据\r\n          </p>\r\n          \r\n          <div className=\"action-buttons\">\r\n            <button \r\n              onClick={handleCheckCommunityStatus}\r\n              disabled={loading}\r\n              className=\"btn btn-info\"\r\n            >\r\n              🔍 检查社区状态\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleCreateCommunityClasses}\r\n              disabled={loading}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              🏗️ 创建社区数据表\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleGenerateCommunityData}\r\n              disabled={loading}\r\n              className=\"btn btn-success\"\r\n            >\r\n              🚀 生成社区示例数据\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleClearCommunityData}\r\n              disabled={loading}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              🗑️ 清除社区数据\r\n            </button>\r\n          </div>\r\n\r\n          {communityStatus && (\r\n            <div className=\"status-info\">\r\n              <h4>📈 社区数据状态</h4>\r\n              <div className=\"status-grid\">\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">帖子数量:</span>\r\n                  <span className=\"value\">{communityStatus.postCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">评论数量:</span>\r\n                  <span className=\"value\">{communityStatus.commentCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">点赞数量:</span>\r\n                  <span className=\"value\">{communityStatus.likeCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">关注数量:</span>\r\n                  <span className=\"value\">{communityStatus.followCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">数据状态:</span>\r\n                  <span className={`value ${communityStatus.hasData ? 'has-data' : 'no-data'}`}>\r\n                    {communityStatus.hasData ? '有数据' : '无数据'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"community-classes-info\">\r\n            <h4>🏗️ 社区数据表结构</h4>\r\n            <div className=\"classes-grid\">\r\n              <div className=\"class-card\">\r\n                <h5>📝 Post (帖子)</h5>\r\n                <ul>\r\n                  <li>title - 帖子标题</li>\r\n                  <li>content - 帖子内容</li>\r\n                  <li>author - 作者</li>\r\n                  <li>tags - 标签数组</li>\r\n                  <li>likes - 点赞数</li>\r\n                  <li>views - 浏览数</li>\r\n                  <li>commentCount - 评论数</li>\r\n                  <li>isPublic - 是否公开</li>\r\n                  <li>status - 帖子状态</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <div className=\"class-card\">\r\n                <h5>💬 Comment (评论)</h5>\r\n                <ul>\r\n                  <li>content - 评论内容</li>\r\n                  <li>author - 评论作者</li>\r\n                  <li>post - 所属帖子</li>\r\n                  <li>parent - 父评论</li>\r\n                  <li>likes - 点赞数</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <div className=\"class-card\">\r\n                <h5>👍 Like (点赞)</h5>\r\n                <ul>\r\n                  <li>user - 点赞用户</li>\r\n                  <li>post - 被点赞帖子</li>\r\n                  <li>comment - 被点赞评论</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <div className=\"class-card\">\r\n                <h5>👥 Follow (关注)</h5>\r\n                <ul>\r\n                  <li>follower - 关注者</li>\r\n                  <li>following - 被关注者</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n\r\n      {/* 通用状态显示 */}\r\n      {loading && (\r\n        <div className=\"loading-state\">\r\n          <div className=\"spinner\"></div>\r\n          <span>执行中...</span>\r\n        </div>\r\n      )}\r\n\r\n      {message && (\r\n        <div className={`message ${message.includes('❌') ? 'error' : message.includes('⚠️') ? 'warning' : 'success'}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      {/* 使用说明 */}\r\n      <div className=\"instructions\">\r\n        <h3>📖 使用说明</h3>\r\n        \r\n        {activeTab === 'notion' && (\r\n          <div className=\"instruction-item\">\r\n            <h4>🔄 Notion 同步</h4>\r\n            <ul>\r\n              <li><strong>检查连接:</strong> 验证 Notion API 连接状态</li>\r\n              <li><strong>从 Notion 导入:</strong> 将 Notion 数据库中的题目同步到本地</li>\r\n              <li><strong>智能匹配:</strong> 自动识别分类、难度、标签等字段</li>\r\n              <li><strong>去重机制:</strong> 基于 Notion Page ID 避免重复导入</li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'data' && (\r\n          <div className=\"instruction-item\">\r\n            <h4>📊 题目数据管理</h4>\r\n            <ul>\r\n              <li><strong>生成示例数据:</strong> 创建分类和题目示例数据</li>\r\n              <li><strong>检查状态:</strong> 查看当前数据统计</li>\r\n              <li><strong>清除数据:</strong> 删除所有题目和分类数据</li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'community' && (\r\n          <div className=\"instruction-item\">\r\n            <h4>👥 社区数据管理</h4>\r\n            <ul>\r\n              <li><strong>创建数据表:</strong> 初始化社区功能所需的数据表（Post、Comment、Like、Follow）</li>\r\n              <li><strong>生成示例数据:</strong> 创建示例帖子、评论和点赞数据</li>\r\n              <li><strong>检查状态:</strong> 查看社区数据统计</li>\r\n              <li><strong>清除数据:</strong> 删除所有社区相关数据</li>\r\n            </ul>\r\n            \r\n            <div className=\"community-features\">\r\n              <h5>社区功能特性:</h5>\r\n              <ul>\r\n                <li>📝 发帖和内容管理</li>\r\n                <li>💬 评论和回复系统</li>\r\n                <li>👍 点赞互动功能</li>\r\n                <li>👥 用户关注系统</li>\r\n                <li>🔐 完善的权限控制</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"instruction-item\">\r\n          <h4>🔧 环境配置要求</h4>\r\n          <div className=\"config-requirements\">\r\n            <div className=\"config-item\">\r\n              <strong>Notion 集成:</strong>\r\n              <span>需要配置 NOTION_INTEGRATION_TOKEN 和 NOTION_DATABASE_ID</span>\r\n            </div>\r\n            <div className=\"config-item\">\r\n              <strong>云函数部署:</strong>\r\n              <span>需要在 LeanCloud 云引擎部署同步函数</span>\r\n            </div>\r\n            <div className=\"config-item\">\r\n              <strong>数据库权限:</strong>\r\n              <span>Notion 数据库需要分享给集成</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InitPage;","// components/QuestionForm.jsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { createQuestion, updateQuestion, DifficultyOptions, ProficiencyOptions } from '../services/questionService';\r\nimport { getAllCategories } from '../services/categoryService';\r\nimport AV from 'leancloud-storage';\r\nimport './QuestionForm.css';\r\n\r\nconst QuestionForm = ({ question, onSave, onCancel, defaultCategoryId, onCategoryChange }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    detailedAnswer: '',\r\n    oralAnswer: '',\r\n    code: '',\r\n    url: '',\r\n    tags: [],\r\n    difficulty: DifficultyOptions.MEDIUM,\r\n    proficiency: ProficiencyOptions.BEGINNER,\r\n    appearanceLevel: 50,\r\n    categoryId: '',\r\n    images: [] // 新增：存储上传的图片信息\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [newTag, setNewTag] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingCategories, setLoadingCategories] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [activeAnswerTab, setActiveAnswerTab] = useState('detailed');\r\n  const [uploadingImages, setUploadingImages] = useState([]); // 新增：上传中的图片\r\n  \r\n  // 添加用户状态\r\n  const currentUser = AV.User.current();\r\n  \r\n  // 创建 ref 用于文件输入\r\n  const fileInputRef = useRef(null);\r\n  const detailedAnswerRef = useRef(null);\r\n  const oralAnswerRef = useRef(null);\r\n\r\n  const isEditing = !!question;\r\n\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    \r\n    if (user) {\r\n      loadCategories();\r\n      if (question) {\r\n        setFormData({\r\n          title: question.title || '',\r\n          detailedAnswer: question.detailedAnswer || '',\r\n          oralAnswer: question.oralAnswer || '',\r\n          code: question.code || '',\r\n          url: question.url || '',\r\n          tags: question.tags || [],\r\n          difficulty: question.difficulty || DifficultyOptions.MEDIUM,\r\n          proficiency: question.proficiency || ProficiencyOptions.BEGINNER,\r\n          appearanceLevel: question.appearanceLevel || 50,\r\n          categoryId: question.category?.id || '',\r\n          images: question.images || [] // 加载已有的图片\r\n        });\r\n      } else if (defaultCategoryId) {\r\n        setFormData(prev => ({ ...prev, categoryId: defaultCategoryId }));\r\n      }\r\n    }\r\n  }, [question, defaultCategoryId]);\r\n\r\n  const loadCategories = async () => {\r\n    if (!currentUser) {\r\n      return\r\n    };\r\n    \r\n    setLoadingCategories(true);\r\n    try {\r\n      const categoriesData = await getAllCategories();\r\n      \r\n      // 确保只显示当前用户的分类\r\n      const userCategories = categoriesData.filter(category => {\r\n        // 检查分类是否属于当前用户\r\n        const createdBy = category.createdBy;\r\n        return createdBy && createdBy.id === currentUser.id;\r\n      });\r\n      \r\n      setCategories(userCategories);\r\n      \r\n      console.log('加载到的分类:', {\r\n        总数: categoriesData.length,\r\n        用户分类: userCategories.length,\r\n        当前用户: currentUser.id,\r\n        分类详情: userCategories.map(cat => ({ id: cat.id, name: cat.name, createdBy: cat.createdBy?.id }))\r\n      });\r\n      \r\n      // 如果没有传入类别ID且没有默认类别ID，默认选择第一个类别\r\n      if (!isEditing && !defaultCategoryId && userCategories.length > 0 && !formData.categoryId) {\r\n        setFormData(prev => ({ ...prev, categoryId: userCategories[0].id }));\r\n        console.log('自动选择第一个分类:', userCategories[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error('加载类别失败:', error);\r\n      setErrors({ categories: '加载类别失败: ' + error.message });\r\n    } finally {\r\n      setLoadingCategories(false);\r\n    }\r\n  };\r\n\r\n  // 新增：处理拖拽事件\r\n  const handleDragOver = (e, answerType) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const textarea = answerType === 'detailed' ? detailedAnswerRef.current : oralAnswerRef.current;\r\n    if (textarea) {\r\n      textarea.classList.add('drag-over');\r\n    }\r\n  };\r\n\r\n  const handleDragLeave = (e, answerType) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const textarea = answerType === 'detailed' ? detailedAnswerRef.current : oralAnswerRef.current;\r\n    if (textarea) {\r\n      textarea.classList.remove('drag-over');\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e, answerType) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    const textarea = answerType === 'detailed' ? detailedAnswerRef.current : oralAnswerRef.current;\r\n    if (textarea) {\r\n      textarea.classList.remove('drag-over');\r\n    }\r\n\r\n    const files = Array.from(e.dataTransfer.files);\r\n    handleFiles(files, answerType);\r\n  };\r\n\r\n  // 新增：处理文件选择\r\n  const handleFileSelect = (e, answerType) => {\r\n    const files = Array.from(e.target.files);\r\n    handleFiles(files, answerType);\r\n    // 重置文件输入\r\n    e.target.value = '';\r\n  };\r\n\r\n  // 新增：处理文件上传\r\n  const handleFiles = async (files, answerType) => {\r\n    const imageFiles = files.filter(file => \r\n      file.type === 'image/jpeg' || \r\n      file.type === 'image/png' || \r\n      file.type === 'image/jpg'\r\n    );\r\n\r\n    if (imageFiles.length === 0) {\r\n      alert('请选择 JPG 或 PNG 格式的图片文件');\r\n      return;\r\n    }\r\n\r\n    for (const file of imageFiles) {\r\n      await uploadImage(file, answerType);\r\n    }\r\n  };\r\n\r\n  // 新增：上传图片到 LeanCloud\r\n  const uploadImage = async (file, answerType) => {\r\n    const uploadingId = Date.now().toString();\r\n    \r\n    try {\r\n      // 添加到上传中列表\r\n      setUploadingImages(prev => [...prev, uploadingId]);\r\n      \r\n      // 创建 LeanCloud 文件对象\r\n      const avFile = new AV.File(file.name, file);\r\n      \r\n      // 上传文件\r\n      const savedFile = await avFile.save();\r\n      \r\n      // 创建图片信息对象\r\n      const imageInfo = {\r\n        id: uploadingId,\r\n        objectId: savedFile.id,\r\n        url: savedFile.url(),\r\n        name: file.name,\r\n        size: file.size,\r\n        type: file.type,\r\n        answerType: answerType // 标记图片属于哪个答案类型\r\n      };\r\n      \r\n      // 添加到表单数据\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        images: [...prev.images, imageInfo]\r\n      }));\r\n      \r\n      // 插入图片标记到文本区域\r\n      insertImageMarkdown(imageInfo, answerType);\r\n      \r\n    } catch (error) {\r\n      console.error('图片上传失败:', error);\r\n      alert(`图片上传失败: ${error.message}`);\r\n    } finally {\r\n      // 从上传中列表移除\r\n      setUploadingImages(prev => prev.filter(id => id !== uploadingId));\r\n    }\r\n  };\r\n\r\n  // 新增：插入图片 Markdown 到文本区域\r\n  const insertImageMarkdown = (imageInfo, answerType) => {\r\n    const markdown = `![${imageInfo.name}](${imageInfo.url})`;\r\n    const field = answerType === 'detailed' ? 'detailedAnswer' : 'oralAnswer';\r\n    \r\n    setFormData(prev => {\r\n      const currentText = prev[field];\r\n      const newText = currentText ? `${currentText}\\n${markdown}` : markdown;\r\n      return { ...prev, [field]: newText };\r\n    });\r\n  };\r\n\r\n  // 新增：手动触发文件选择\r\n  const triggerFileInput = (answerType) => {\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.setAttribute('data-answer-type', answerType);\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  // 新增：删除图片\r\n  const removeImage = (imageId) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      images: prev.images.filter(img => img.id !== imageId)\r\n    }));\r\n  };\r\n\r\n  // 新增：获取指定答案类型的图片\r\n  const getImagesByAnswerType = (answerType) => {\r\n    return formData.images.filter(img => img.answerType === answerType);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.title.trim()) {\r\n      newErrors.title = '问题标题不能为空';\r\n    } else if (formData.title.trim().length < 2) {\r\n      newErrors.title = '问题标题至少需要2个字符';\r\n    }\r\n    \r\n    if (!formData.detailedAnswer.trim() && !formData.oralAnswer.trim()) {\r\n      newErrors.answer = '至少需要填写一个答案版本（详细版本或口述版本）';\r\n    }\r\n    \r\n    if (!formData.categoryId) {\r\n      newErrors.categoryId = '请选择类别';\r\n    }\r\n    \r\n    if (formData.tags.length > 10) {\r\n      newErrors.tags = '标签数量不能超过10个';\r\n    }\r\n\r\n    if (formData.url && !isValidUrl(formData.url)) {\r\n      newErrors.url = '请输入有效的URL链接';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const isValidUrl = (string) => {\r\n    try {\r\n      new URL(string);\r\n      return true;\r\n    } catch (_) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData(prev => ({ \r\n      ...prev, \r\n      [field]: value \r\n    }));\r\n    \r\n    // 清除该字段的错误信息\r\n    if (errors[field]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleAddTag = () => {\r\n    const tag = newTag.trim();\r\n    if (tag && !formData.tags.includes(tag)) {\r\n      if (formData.tags.length >= 10) {\r\n        setErrors({ tags: '标签数量不能超过10个' });\r\n        return;\r\n      }\r\n      \r\n      setFormData(prev => ({\r\n        ...prev,\r\n        tags: [...prev.tags, tag]\r\n      }));\r\n      setNewTag('');\r\n      \r\n      // 清除标签错误\r\n      if (errors.tags) {\r\n        setErrors(prev => ({\r\n          ...prev,\r\n          tags: ''\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRemoveTag = (tagToRemove) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      tags: prev.tags.filter(tag => tag !== tagToRemove)\r\n    }));\r\n  };\r\n\r\n  const handleTagKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleAddTag();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      if (isEditing) {\r\n        // 检查类别是否发生了变化\r\n        const oldCategory = question.category; // 原来的 category 对象\r\n        const newCategory = categories.find(cat => cat.id === formData.categoryId); // 新的 category 对象\r\n        const categoryChanged = oldCategory?.id !== newCategory?.id;\r\n        \r\n        await updateQuestion(question.id, formData);\r\n        \r\n        // 如果类别发生了变化，调用回调函数通知父组件\r\n        if (categoryChanged && onCategoryChange) {\r\n          onCategoryChange({\r\n            questionId: question.id,\r\n            oldCategoryId: oldCategory?.id,\r\n            newCategoryId: newCategory?.id,\r\n            question: { ...question, ...formData, category: newCategory }\r\n          });\r\n        }\r\n      } else {\r\n        // 创建题目时只需要传递 categoryId，questionService 会处理 Pointer 转换\r\n        await createQuestion(formData);\r\n      }\r\n      onSave();\r\n      window.dispatchEvent(new CustomEvent('questionCreated', {\r\n        detail: { question: result }\r\n      }));\r\n    } catch (error) {\r\n      console.error('保存题目失败:', error);\r\n      setErrors({ submit: error.message });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 新增：渲染答案标签页内容\r\n  const renderAnswerTab = (type, placeholder, hint) => {\r\n    const images = getImagesByAnswerType(type);\r\n    const isUploading = uploadingImages.length > 0;\r\n    const field = type === 'detailed' ? 'detailedAnswer' : 'oralAnswer';\r\n    const textareaRef = type === 'detailed' ? detailedAnswerRef : oralAnswerRef;\r\n    \r\n    return (\r\n      <div className=\"tab-panel\">\r\n        <div \r\n          className=\"answer-textarea-container\"\r\n          onDragOver={(e) => handleDragOver(e, type)}\r\n          onDragLeave={(e) => handleDragLeave(e, type)}\r\n          onDrop={(e) => handleDrop(e, type)}\r\n        >\r\n          <textarea\r\n            ref={textareaRef}\r\n            value={formData[field]}\r\n            onChange={(e) => handleInputChange(field, e.target.value)}\r\n            placeholder={placeholder}\r\n            rows={type === 'detailed' ? '6' : '4'}\r\n            disabled={loading}\r\n            className={errors.answer && !formData[field].trim() ? 'error' : ''}\r\n          />\r\n          \r\n          {/* 图片上传提示 */}\r\n          <div className=\"upload-hint\">\r\n            <div className=\"upload-hint-text\">\r\n              💡 支持拖拽 JPG/PNG 图片到此区域，或 \r\n              <button \r\n                type=\"button\" \r\n                className=\"upload-trigger-btn\"\r\n                onClick={() => triggerFileInput(type)}\r\n                disabled={loading || isUploading}\r\n              >\r\n                点击上传\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 已上传图片预览 */}\r\n        {images.length > 0 && (\r\n          <div className=\"uploaded-images\">\r\n            <div className=\"images-title\">已上传图片 ({images.length}):</div>\r\n            <div className=\"images-grid\">\r\n              {images.map((image) => (\r\n                <div key={image.id} className=\"image-item\">\r\n                  <img src={image.url} alt={image.name} />\r\n                  <div className=\"image-info\">\r\n                    <span className=\"image-name\">{image.name}</span>\r\n                    <button \r\n                      type=\"button\"\r\n                      className=\"remove-image-btn\"\r\n                      onClick={() => removeImage(image.id)}\r\n                      disabled={loading}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"tab-hint\">\r\n          {hint}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"question-form-overlay\">\r\n        <div className=\"question-form-dialog\">\r\n          <div className=\"question-form-header\">\r\n            <h3>请先登录</h3>\r\n            <button \r\n              type=\"button\" \r\n              className=\"close-button\"\r\n              onClick={onCancel}\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n          <div className=\"auth-required-container\">\r\n            <div className=\"auth-required-icon\">🔐</div>\r\n            <p>登录后即可添加或编辑题目</p>\r\n            <div className=\"auth-required-actions\">\r\n              <button \r\n                onClick={() => window.dispatchEvent(new CustomEvent('showAuthModal'))}\r\n                className=\"login-btn\"\r\n              >\r\n                立即登录\r\n              </button>\r\n              <button \r\n                onClick={onCancel}\r\n                className=\"btn-secondary\"\r\n              >\r\n                取消\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"question-form-overlay\">\r\n      <div className=\"question-form-dialog\">\r\n        <div className=\"question-form-header\">\r\n          <h3>{isEditing ? '编辑题目' : '添加新题目'}</h3>\r\n          <div className=\"user-info\">\r\n            <span className=\"user-badge\">👤 {currentUser.getUsername()}</span>\r\n          </div>\r\n          <button \r\n            type=\"button\" \r\n            className=\"close-button\"\r\n            onClick={onCancel}\r\n            disabled={loading}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"question-form\">\r\n          {/* 问题标题 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">问题标题 *</label>\r\n            <input\r\n              id=\"title\"\r\n              type=\"text\"\r\n              value={formData.title}\r\n              onChange={(e) => handleInputChange('title', e.target.value)}\r\n              placeholder=\"请输入问题标题\"\r\n              disabled={loading}\r\n              className={errors.title ? 'error' : ''}\r\n            />\r\n            {errors.title && <span className=\"error-message\">{errors.title}</span>}\r\n          </div>\r\n\r\n          {/* 答案版本标签页 */}\r\n          <div className=\"form-group\">\r\n            <label>问题答案 *</label>\r\n            <div className=\"answer-tabs-container\">\r\n              <div className=\"answer-tab-buttons\">\r\n                <button \r\n                  type=\"button\"\r\n                  className={`answer-tab-button ${activeAnswerTab === 'detailed' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('detailed')}\r\n                >\r\n                  详细版本\r\n                </button>\r\n                <button \r\n                  type=\"button\"\r\n                  className={`answer-tab-button ${activeAnswerTab === 'oral' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('oral')}\r\n                >\r\n                  口述版本\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"answer-tab-content\">\r\n                {activeAnswerTab === 'detailed' && \r\n                  renderAnswerTab(\r\n                    'detailed', \r\n                    '请输入详细的答案解释，包含技术细节、原理分析等', \r\n                    '适合记录完整的技术解析和详细说明'\r\n                  )\r\n                }\r\n\r\n                {activeAnswerTab === 'oral' && \r\n                  renderAnswerTab(\r\n                    'oral', \r\n                    '请输入简洁的口述版本答案，适合面试场景表达', \r\n                    '适合记录简洁的口头表达版本，便于面试时快速回忆'\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n            {errors.answer && <span className=\"error-message\">{errors.answer}</span>}\r\n          </div>\r\n\r\n          {/* 代码展示部分 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">相关代码（可选）</label>\r\n            <textarea\r\n              id=\"code\"\r\n              value={formData.code}\r\n              onChange={(e) => handleInputChange('code', e.target.value)}\r\n              placeholder=\"请输入与该题目相关的代码片段，将保持原格式显示\"\r\n              rows=\"8\"\r\n              disabled={loading}\r\n              className=\"code-textarea\"\r\n            />\r\n            <div className=\"field-hint\">\r\n              代码将保持原格式显示，适合展示算法实现、组件代码等\r\n            </div>\r\n          </div>\r\n\r\n          {/* URL链接 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"url\">相关链接（可选）</label>\r\n            <input\r\n              id=\"url\"\r\n              type=\"url\"\r\n              value={formData.url}\r\n              onChange={(e) => handleInputChange('url', e.target.value)}\r\n              placeholder=\"https://example.com\"\r\n              disabled={loading}\r\n              className={errors.url ? 'error' : ''}\r\n            />\r\n            {errors.url && <span className=\"error-message\">{errors.url}</span>}\r\n            <div className=\"field-hint\">\r\n              可添加相关的文档、文章或参考链接\r\n            </div>\r\n          </div>\r\n\r\n          {/* 标签管理 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"tags\">标签（可选）</label>\r\n            <div className=\"tags-input-container\">\r\n              <input\r\n                id=\"tags\"\r\n                type=\"text\"\r\n                value={newTag}\r\n                onChange={(e) => setNewTag(e.target.value)}\r\n                onKeyPress={handleTagKeyPress}\r\n                placeholder=\"输入标签后按回车或点击添加\"\r\n                disabled={loading}\r\n                maxLength={20}\r\n              />\r\n              <button \r\n                type=\"button\" \r\n                onClick={handleAddTag}\r\n                disabled={loading || !newTag.trim()}\r\n                className=\"add-tag-button\"\r\n              >\r\n                添加\r\n              </button>\r\n            </div>\r\n            {errors.tags && <span className=\"error-message\">{errors.tags}</span>}\r\n            \r\n            {/* 标签列表 */}\r\n            {formData.tags.length > 0 && (\r\n              <div className=\"tags-list\">\r\n                <div className=\"tags-header\">\r\n                  <span>已添加标签 ({formData.tags.length}/10):</span>\r\n                </div>\r\n                <div className=\"tags-container\">\r\n                  {formData.tags.map((tag, index) => (\r\n                    <span key={index} className=\"tag\">\r\n                      {tag}\r\n                      <button \r\n                        type=\"button\" \r\n                        onClick={() => handleRemoveTag(tag)}\r\n                        disabled={loading}\r\n                        className=\"remove-tag-button\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* 难度和掌握程度 */}\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"difficulty\">难度</label>\r\n              <select\r\n                id=\"difficulty\"\r\n                value={formData.difficulty}\r\n                onChange={(e) => handleInputChange('difficulty', e.target.value)}\r\n                disabled={loading}\r\n              >\r\n                <option value={DifficultyOptions.EASY}>简单</option>\r\n                <option value={DifficultyOptions.MEDIUM}>中等</option>\r\n                <option value={DifficultyOptions.HARD}>困难</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"proficiency\">掌握程度</label>\r\n              <select\r\n                id=\"proficiency\"\r\n                value={formData.proficiency}\r\n                onChange={(e) => handleInputChange('proficiency', e.target.value)}\r\n                disabled={loading}\r\n              >\r\n                <option value={ProficiencyOptions.BEGINNER}>初级</option>\r\n                <option value={ProficiencyOptions.INTERMEDIATE}>中级</option>\r\n                <option value={ProficiencyOptions.ADVANCED}>高级</option>\r\n                <option value={ProficiencyOptions.MASTER}>精通</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n            \r\n          {/* 出现频率 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"appearanceLevel\">\r\n              出现频率: {formData.appearanceLevel}%\r\n              <span className=\"field-hint\">（数值越高，在复习时出现的概率越大）</span>\r\n            </label>\r\n            <input\r\n              id=\"appearanceLevel\"\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              value={formData.appearanceLevel}\r\n              onChange={(e) => handleInputChange('appearanceLevel', parseInt(e.target.value))}\r\n              disabled={loading}\r\n              className=\"appearance-slider\"\r\n            />\r\n            <div className=\"slider-labels\">\r\n              <span>低频</span>\r\n              <span>中频</span>\r\n              <span>高频</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 类别选择 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"category\">类别 *</label>\r\n            {loadingCategories ? (\r\n              <div className=\"loading-categories\">加载类别中...</div>\r\n            ) : categories.length === 0 ? (\r\n              <div className=\"no-categories\">\r\n                <div className=\"no-categories-icon\">📁</div>\r\n                <p>暂无类别，请先创建类别</p>\r\n                <button \r\n                  type=\"button\"\r\n                  className=\"create-category-btn\"\r\n                  onClick={() => {\r\n                    onCancel(); // 关闭题目表单\r\n                    // 触发创建分类的事件或跳转到分类管理页面\r\n                    window.dispatchEvent(new CustomEvent('showCategoryManagement'));\r\n                  }}\r\n                >\r\n                  🚀 去创建分类\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <select\r\n                id=\"category\"\r\n                value={formData.categoryId}\r\n                onChange={(e) => handleInputChange('categoryId', e.target.value)}\r\n                disabled={loading}\r\n                className={errors.categoryId ? 'error' : ''}\r\n              >\r\n                <option value=\"\">请选择类别</option>\r\n                {categories.map(category => (\r\n                  <option key={category.id} value={category.id}>\r\n                    {category.name} ({category.questionCount || 0}题)\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            )}\r\n            {errors.categoryId && <span className=\"error-message\">{errors.categoryId}</span>}\r\n          </div>\r\n\r\n          {/* 提交错误 */}\r\n          {errors.submit && (\r\n            <div className=\"submit-error\">\r\n              {errors.submit}\r\n            </div>\r\n          )}\r\n\r\n          {/* 表单操作 */}\r\n          <div className=\"form-actions\">\r\n            <button \r\n              type=\"button\" \r\n              onClick={onCancel}\r\n              disabled={loading}\r\n              className=\"btn-secondary\"\r\n            >\r\n              取消\r\n            </button>\r\n            <button \r\n              type=\"submit\" \r\n              disabled={loading}\r\n              className=\"btn-primary\"\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <span className=\"loading-spinner\"></span>\r\n                  {isEditing ? '更新中...' : '添加中...'}\r\n                </>\r\n              ) : (\r\n                isEditing ? '更新题目' : '添加题目'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        {/* 隐藏的文件输入 */}\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          style={{ display: 'none' }}\r\n          accept=\".jpg,.jpeg,.png\"\r\n          multiple\r\n          onChange={(e) => {\r\n            const answerType = e.target.getAttribute('data-answer-type');\r\n            handleFileSelect(e, answerType);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionForm;","// components/QuestionDetailCard.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport QuestionForm from './QuestionForm';\r\nimport AV from 'leancloud-storage';\r\nimport './QuestionDetailCard.css';\r\n\r\nconst QuestionDetailCard = ({ \r\n  question, \r\n  onDelete, \r\n  isExpandedView = false, \r\n  onUpdateField,\r\n  onEdit, // 新增：接收编辑回调函数\r\n  showQuestionForm, // 新增：控制表单显示\r\n  setShowQuestionForm, // 新增：控制表单显示状态\r\n  editingQuestion, // 新增：正在编辑的题目\r\n  setEditingQuestion // 新增：设置编辑题目\r\n}) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [showFullAnswer, setShowFullAnswer] = useState(isExpandedView);\r\n  const [deleteLoading, setDeleteLoading] = useState(false);\r\n  const [editLoading, setEditLoading] = useState(false);\r\n  const [activeAnswerTab, setActiveAnswerTab] = useState('oral');\r\n  const [localAppearanceLevel, setLocalAppearanceLevel] = useState(question?.appearanceLevel || 50);\r\n  const [updatingAppearance, setUpdatingAppearance] = useState(false);\r\n  \r\n  // 添加确认复习相关状态\r\n  const [showReviewConfirm, setShowReviewConfirm] = useState(false);\r\n  const [reviewDays, setReviewDays] = useState(7); // 默认7天\r\n  const [confirmingReview, setConfirmingReview] = useState(false);\r\n  \r\n  // 添加移除复习相关状态\r\n  const [showRemoveReview, setShowRemoveReview] = useState(false);\r\n  const [removeDays, setRemoveDays] = useState(7); // 默认7天\r\n  const [removingReview, setRemovingReview] = useState(false);\r\n  \r\n  // 添加用户状态\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n  }, []);\r\n\r\n  // 当question的appearanceLevel变化时更新本地状态\r\n  useEffect(() => {\r\n    console.log('question.appearanceLevel 变化:', question?.appearanceLevel);\r\n    setLocalAppearanceLevel(question?.appearanceLevel);\r\n  }, [question?.appearanceLevel]);\r\n\r\n  // 监控状态变化用于调试\r\n  useEffect(() => {\r\n    console.log('localAppearanceLevel 状态变化:', localAppearanceLevel);\r\n  }, [localAppearanceLevel]);\r\n\r\n  // 增强的 Markdown 解析函数 - 支持图片预览\r\n  const parseMarkdown = (text) => {\r\n    if (!text || text.trim() === '') {\r\n      return <span className=\"no-content\">暂无内容</span>;\r\n    }\r\n\r\n    // 分割文本为行\r\n    const lines = text.split('\\n');\r\n    const elements = [];\r\n    let inCodeBlock = false;\r\n    let codeBlockContent = [];\r\n    let codeLanguage = '';\r\n\r\n    lines.forEach((line, index) => {\r\n      // 检查代码块开始 (```language)\r\n      if (line.trim().startsWith('```')) {\r\n        if (!inCodeBlock) {\r\n          inCodeBlock = true;\r\n          codeLanguage = line.trim().substring(3).trim() || 'text';\r\n          codeBlockContent = [];\r\n          return;\r\n        } else {\r\n          inCodeBlock = false;\r\n          elements.push(\r\n            <pre key={`code-${index}`} className=\"code-block\">\r\n              <code className={`language-${codeLanguage}`}>{codeBlockContent.join('\\n')}</code>\r\n            </pre>\r\n          );\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (inCodeBlock) {\r\n        codeBlockContent.push(line);\r\n        return;\r\n      }\r\n\r\n      if (line.trim() === '') {\r\n        elements.push(<br key={`br-${index}`} />);\r\n        return;\r\n      }\r\n\r\n      // 处理图片标记 - 新增：直接渲染为小预览图\r\n      const imageMatch = line.match(/!\\[(.*?)\\]\\((.*?)\\)/);\r\n      if (imageMatch) {\r\n        const altText = imageMatch[1];\r\n        const imageUrl = imageMatch[2];\r\n        elements.push(\r\n          <div key={`img-${index}`} className=\"markdown-image-container\">\r\n            <img \r\n              src={imageUrl} \r\n              alt={altText} \r\n              className=\"markdown-image-preview\"\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                // 点击预览图可以查看大图\r\n                window.open(imageUrl, '_blank');\r\n              }}\r\n            />\r\n            {altText && altText !== '' && (\r\n              <div className=\"image-alt-text\">{altText}</div>\r\n            )}\r\n          </div>\r\n        );\r\n        return;\r\n      }\r\n\r\n      let processedLine = line;\r\n\r\n      // 处理标题\r\n      if (line.startsWith('### ')) {\r\n        elements.push(<h3 key={`h3-${index}`} className=\"md-h3\">{line.substring(4)}</h3>);\r\n        return;\r\n      } else if (line.startsWith('## ')) {\r\n        elements.push(<h2 key={`h2-${index}`} className=\"md-h2\">{line.substring(3)}</h2>);\r\n        return;\r\n      } else if (line.startsWith('# ')) {\r\n        elements.push(<h1 key={`h1-${index}`} className=\"md-h1\">{line.substring(2)}</h1>);\r\n        return;\r\n      }\r\n\r\n      // 处理粗体\r\n      processedLine = processedLine.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\r\n      processedLine = processedLine.replace(/__(.*?)__/g, '<strong>$1</strong>');\r\n\r\n      // 处理斜体\r\n      processedLine = processedLine.replace(/\\*(.*?)\\*/g, '<em>$1</em>');\r\n      processedLine = processedLine.replace(/_(.*?)_/g, '<em>$1</em>');\r\n\r\n      // 处理代码片段\r\n      processedLine = processedLine.replace(/`(.*?)`/g, '<code class=\"inline-code\">$1</code>');\r\n\r\n      // 处理链接\r\n      processedLine = processedLine.replace(/\\[(.*?)\\]\\((.*?)\\)/g, '<a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"md-link\">$1</a>');\r\n\r\n      // 处理无序列表\r\n      if (line.trim().startsWith('- ') || line.trim().startsWith('* ')) {\r\n        const listItem = line.trim().substring(2);\r\n        elements.push(\r\n          <div key={`li-${index}`} className=\"md-list-item\">\r\n            • {listItem}\r\n          </div>\r\n        );\r\n        return;\r\n      }\r\n\r\n      // 处理有序列表\r\n      const orderedListMatch = line.trim().match(/^(\\d+)\\.\\s+(.*)$/);\r\n      if (orderedListMatch) {\r\n        elements.push(\r\n          <div key={`oli-${index}`} className=\"md-list-item\">\r\n            {orderedListMatch[1]}. {orderedListMatch[2]}\r\n          </div>\r\n        );\r\n        return;\r\n      }\r\n\r\n      // 处理引用块\r\n      if (line.trim().startsWith('> ')) {\r\n        elements.push(\r\n          <blockquote key={`blockquote-${index}`} className=\"md-blockquote\">\r\n            {line.substring(2)}\r\n          </blockquote>\r\n        );\r\n        return;\r\n      }\r\n\r\n      // 普通段落\r\n      elements.push(\r\n        <div \r\n          key={`p-${index}`} \r\n          className=\"md-paragraph\"\r\n          dangerouslySetInnerHTML={{ __html: processedLine }}\r\n        />\r\n      );\r\n    });\r\n\r\n    if (inCodeBlock && codeBlockContent.length > 0) {\r\n      elements.push(\r\n        <pre key=\"code-final\" className=\"code-block\">\r\n          <code className={`language-${codeLanguage}`}>{codeBlockContent.join('\\n')}</code>\r\n        </pre>\r\n      );\r\n    }\r\n\r\n    return <div className=\"markdown-content\">{elements}</div>;\r\n  };\r\n\r\n  const getDifficultyColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#52c41a';\r\n      case 'medium': return '#faad14';\r\n      case 'hard': return '#f5222d';\r\n      default: return '#666';\r\n    }\r\n  };\r\n\r\n  const getDifficultyText = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '简单';\r\n      case 'medium': return '中等';\r\n      case 'hard': return '困难';\r\n      default: return difficulty;\r\n    }\r\n  };\r\n\r\n  const getProficiencyText = (proficiency) => {\r\n    switch (proficiency) {\r\n      case 'beginner': return '初级';\r\n      case 'intermediate': return '中级';\r\n      case 'advanced': return '高级';\r\n      case 'master': return '精通';\r\n      default: return proficiency;\r\n    }\r\n  };\r\n\r\n  const getAppearanceLevelColor = (level) => {\r\n    if (level >= 80) return '#ff6b6b';\r\n    if (level >= 60) return '#ffa726';\r\n    if (level >= 40) return '#4ecdc4';\r\n    return '#95a5a6';\r\n  };\r\n\r\n  const formatText = (text) => {\r\n    return parseMarkdown(text);\r\n  };\r\n\r\n  const formatCode = (code) => {\r\n    if (!code || code.trim() === '') {\r\n      return null;\r\n    }\r\n    return (\r\n      <pre className=\"code-block\">\r\n        <code>{code}</code>\r\n      </pre>\r\n    );\r\n  };\r\n\r\n  // 修改后的编辑处理函数 - 调用父组件的 onEdit\r\n  const handleEdit = () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    \r\n    if (onEdit) {\r\n      // 调用父组件的编辑函数\r\n      onEdit(question);\r\n    } else {\r\n      // 如果没有提供 onEdit，使用原来的内部状态管理\r\n      setIsEditing(true);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    if (deleteLoading) return;\r\n    \r\n    if (!window.confirm(`确定要删除题目 \"${question.title}\" 吗？此操作不可撤销！`)) {\r\n      return;\r\n    }\r\n\r\n    setDeleteLoading(true);\r\n    try {\r\n      await onDelete(question.id);\r\n    } catch (error) {\r\n      console.error('删除题目失败:', error);\r\n    } finally {\r\n      setDeleteLoading(false);\r\n    }\r\n  };\r\n\r\n  // 内部编辑状态的处理函数（如果使用内部状态）\r\n  const handleSave = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const toggleAnswer = () => {\r\n    setShowFullAnswer(!showFullAnswer);\r\n  };\r\n\r\n  // 处理出现频率更改 - 优化版本\r\n  const handleAppearanceLevelChange = async (newLevel) => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    console.log('开始更新出现频率:', {\r\n      新值: newLevel,\r\n      当前prop值: question?.appearanceLevel,\r\n      当前本地状态值: localAppearanceLevel\r\n    });\r\n    \r\n    // 立即更新本地状态（乐观更新）\r\n    setLocalAppearanceLevel(newLevel);\r\n    \r\n    if (onUpdateField && question?.id) {\r\n      setUpdatingAppearance(true);\r\n      try {\r\n        await onUpdateField(question.id, 'appearanceLevel', newLevel);\r\n        console.log('出现频率更新成功，等待父组件数据更新');\r\n        \r\n        // 注意：这里不直接更新本地状态，等待父组件传递新的 question prop\r\n        // 父组件应该在 onUpdateField 成功后更新数据并重新传递 question prop\r\n        \r\n      } catch (error) {\r\n        console.error('更新出现频率失败:', error);\r\n        // 出错时回滚到原来的值\r\n        setLocalAppearanceLevel(question?.appearanceLevel || 50);\r\n      } finally {\r\n        setUpdatingAppearance(false);\r\n      }\r\n    } else {\r\n      console.warn('缺少 onUpdateField 或 question.id');\r\n    }\r\n  };\r\n\r\n  // 防抖的滑块处理函数\r\n  const handleSliderChange = (e) => {\r\n    const newLevel = parseInt(e.target.value);\r\n    handleAppearanceLevelChange(newLevel);\r\n  };\r\n\r\n  // 处理确认复习\r\n  const handleConfirmReview = async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    if (confirmingReview) return;\r\n\r\n    setConfirmingReview(true);\r\n    try {\r\n      // 计算下次提醒时间\r\n      const nextReviewDate = new Date();\r\n      nextReviewDate.setDate(nextReviewDate.getDate() + reviewDays);\r\n      \r\n      // 更新题目的下次复习时间\r\n      if (onUpdateField && question?.id) {\r\n        await onUpdateField(question.id, 'nextReviewDate', nextReviewDate.toISOString());\r\n        console.log(`题目将在 ${reviewDays} 天后再次提醒复习`);\r\n        \r\n        // 显示成功消息\r\n        alert(`已确认复习！该题目将在 ${reviewDays} 天后再次出现在复习列表中`);\r\n        \r\n        // 关闭确认对话框\r\n        setShowReviewConfirm(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('确认复习失败:', error);\r\n      alert('确认复习失败，请重试');\r\n    } finally {\r\n      setConfirmingReview(false);\r\n    }\r\n  };\r\n\r\n  // 处理移除复习\r\n  const handleRemoveFromReview = async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    if (removingReview) return;\r\n\r\n    setRemovingReview(true);\r\n    try {\r\n      // 计算下次提醒时间\r\n      const nextReviewDate = new Date();\r\n      nextReviewDate.setDate(nextReviewDate.getDate() + removeDays);\r\n      \r\n      // 更新题目的下次复习时间\r\n      if (onUpdateField && question?.id) {\r\n        await onUpdateField(question.id, 'nextReviewDate', nextReviewDate.toISOString());\r\n        console.log(`题目将在 ${removeDays} 天后再次提醒复习`);\r\n        \r\n        // 显示成功消息\r\n        alert(`已暂停复习！该题目将在 ${removeDays} 天后再次出现在复习列表中`);\r\n        \r\n        // 关闭确认对话框\r\n        setShowRemoveReview(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('移除复习失败:', error);\r\n      alert('操作失败，请重试');\r\n    } finally {\r\n      setRemovingReview(false);\r\n    }\r\n  };\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className={`question-detail-card ${isExpandedView ? 'expanded-view' : ''}`}>\r\n        <div className=\"auth-required-container\">\r\n          <div className=\"auth-required-icon\">🔐</div>\r\n          <h3>请先登录</h3>\r\n          <p>登录后即可查看题目详情</p>\r\n          <div className=\"auth-required-actions\">\r\n            <button \r\n              onClick={() => window.dispatchEvent(new CustomEvent('showAuthModal'))}\r\n              className=\"login-btn\"\r\n            >\r\n              立即登录\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 如果使用内部编辑状态并且正在编辑\r\n  if (isEditing && !onEdit) {\r\n    return (\r\n      <div className={`question-edit-container ${isExpandedView ? 'expanded-view' : ''}`}>\r\n        <QuestionForm\r\n          question={question}\r\n          onSave={handleSave}\r\n          onCancel={handleCancel}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 安全地获取数据\r\n  const detailedAnswer = question?.detailedAnswer || '';\r\n  const oralAnswer = question?.oralAnswer || '';\r\n  const code = question?.code || '';\r\n  const url = question?.url || '';\r\n  // 使用本地状态而不是直接使用 question.appearanceLevel\r\n  const appearanceLevel = localAppearanceLevel;\r\n\r\n  return (\r\n    <div className={`question-detail-card ${isExpandedView ? 'expanded-view' : ''}`}>\r\n     \r\n      {/* 头部信息 */}\r\n      {!isExpandedView && (\r\n        <div className=\"question-header\">\r\n          <div className=\"question-title-section\">\r\n            <h3 className=\"question-title\">{question?.title || '无标题'}</h3>\r\n            <div className=\"question-meta-badges\">\r\n              <span \r\n                className=\"difficulty-badge\"\r\n                style={{ backgroundColor: getDifficultyColor(question?.difficulty) }}\r\n              >\r\n                {getDifficultyText(question?.difficulty)}\r\n              </span>\r\n              <span className=\"proficiency-badge\">\r\n                {getProficiencyText(question?.proficiency)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"question-actions\">\r\n            <button \r\n              onClick={handleEdit}\r\n              className=\"btn-edit\"\r\n              title=\"编辑题目\"\r\n              disabled={deleteLoading}\r\n            >\r\n              {editLoading ? '编辑中...' : '✏️ 编辑'}\r\n            </button>\r\n\r\n            <button \r\n              onClick={() => setShowRemoveReview(true)}\r\n              className=\"btn-remove-review\"\r\n              title=\"暂时移除复习\"\r\n            >\r\n              ⏸️ 暂停复习\r\n            </button>\r\n            <button \r\n              onClick={handleDelete}\r\n              className=\"btn-delete\"\r\n              title=\"删除题目\"\r\n              disabled={deleteLoading}\r\n            >\r\n              {deleteLoading ? '删除中...' : '🗑️ 删除'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 出现频率显示 - 可编辑 */}\r\n      <div className=\"appearance-level-display\">\r\n        <div className=\"appearance-header\">\r\n          <span className=\"appearance-label\">出现频率</span>\r\n          <span className={`appearance-value ${updatingAppearance ? 'updating' : ''}`}>\r\n            {updatingAppearance ? '保存中...' : `${appearanceLevel}%`}\r\n          </span>\r\n        </div>\r\n        <div className=\"appearance-slider-container\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={appearanceLevel}\r\n            onChange={handleSliderChange}\r\n            className=\"appearance-slider-editable\"\r\n            disabled={updatingAppearance}\r\n            style={{\r\n              background: `linear-gradient(90deg, \r\n                ${getAppearanceLevelColor(0)} 0%, \r\n                ${getAppearanceLevelColor(50)} 50%, \r\n                ${getAppearanceLevelColor(100)} 100%)`\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"appearance-labels\">\r\n          <span className=\"appearance-label-low\">低频</span>\r\n          <span className=\"appearance-label-high\">高频</span>\r\n        </div>\r\n        <div className=\"appearance-hint\">\r\n          拖动滑块调整出现频率，数值越高在复习时出现的概率越大\r\n          {updatingAppearance && <span className=\"saving-indicator\"> • 保存中...</span>}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 答案内容区域 */}\r\n      <div className=\"answer-section\">\r\n        {!isExpandedView && (\r\n          <div className=\"answer-header\">\r\n            <h4>答案</h4>\r\n            <div className=\"answer-controls\">\r\n              <div className=\"answer-tabs\">\r\n                <button \r\n                  className={`tab-button ${activeAnswerTab === 'detailed' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('detailed')}\r\n                >\r\n                  详细版本\r\n                </button>\r\n                <button \r\n                  className={`tab-button ${activeAnswerTab === 'oral' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('oral')}\r\n                >\r\n                  口述版本\r\n                </button>\r\n              </div>\r\n              <button \r\n                onClick={toggleAnswer}\r\n                className=\"toggle-answer-btn\"\r\n              >\r\n                {showFullAnswer ? '收起' : '展开'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 答案内容 */}\r\n        <div className={`answer-content ${showFullAnswer || isExpandedView ? 'expanded' : 'collapsed'}`}>\r\n          {isExpandedView ? (\r\n            <div className=\"expanded-answer-tabs\">\r\n              <div className=\"expanded-tab-buttons\">\r\n                <button \r\n                  className={`expanded-tab-button ${activeAnswerTab === 'detailed' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('detailed')}\r\n                >\r\n                  详细版本\r\n                </button>\r\n                <button \r\n                  className={`expanded-tab-button ${activeAnswerTab === 'oral' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('oral')}\r\n                >\r\n                  口述版本\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"expanded-tab-content\">\r\n                {activeAnswerTab === 'detailed' ? (\r\n                  <div className=\"detailed-answer\">\r\n                    <h5>详细答案</h5>\r\n                    <div className=\"answer-text markdown-enabled\">\r\n                      {formatText(detailedAnswer)}\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"oral-answer\">\r\n                    <h5>口述答案</h5>\r\n                    <div className=\"answer-text markdown-enabled\">\r\n                      {formatText(oralAnswer)}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"answer-text markdown-enabled\">\r\n              {activeAnswerTab === 'detailed' ? formatText(detailedAnswer) : formatText(oralAnswer)}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* 代码部分 */}\r\n        {code && code.trim() && (\r\n          <div className=\"code-section\">\r\n            <h5>相关代码</h5>\r\n            {formatCode(code)}\r\n          </div>\r\n        )}\r\n\r\n        {/* 链接部分 */}\r\n        {url && url.trim() && (\r\n          <div className=\"url-section\">\r\n            <h5>相关链接</h5>\r\n            <a \r\n              href={url} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\"\r\n              className=\"question-link\"\r\n            >\r\n              🔗 {url}\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 确认复习按钮 */}\r\n      <div className=\"review-confirm-section\">\r\n        <button \r\n          className=\"confirm-review-btn\"\r\n          onClick={() => setShowReviewConfirm(true)}\r\n        >\r\n          ✅ 确认已复习\r\n        </button>\r\n        <p className=\"review-hint\">\r\n          点击确认后，该题目将在一段时间内不会出现在复习列表中\r\n        </p>\r\n      </div>\r\n\r\n      {/* 确认复习对话框 */}\r\n      {showReviewConfirm && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content review-confirm-modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>确认复习完成</h3>\r\n              <button \r\n                className=\"close-btn\"\r\n                onClick={() => setShowReviewConfirm(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"modal-body\">\r\n              <p>请选择在多少天内不再提醒复习这道题目：</p>\r\n              \r\n              <div className=\"review-days-selector\">\r\n                <div className=\"days-presets\">\r\n                  {[1, 3, 7, 14, 30].map(days => (\r\n                    <button\r\n                      key={days}\r\n                      className={`days-preset-btn ${reviewDays === days ? 'active' : ''}`}\r\n                      onClick={() => setReviewDays(days)}\r\n                    >\r\n                      {days}天\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                \r\n                <div className=\"custom-days-input\">\r\n                  <label htmlFor=\"customDays\">自定义天数：</label>\r\n                  <input\r\n                    id=\"customDays\"\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"365\"\r\n                    value={reviewDays}\r\n                    onChange={(e) => setReviewDays(parseInt(e.target.value) || 1)}\r\n                    className=\"days-input\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"review-info\">\r\n                <p><strong>题目：</strong>{question?.title}</p>\r\n                <p><strong>下次提醒时间：</strong>\r\n                  {new Date(Date.now() + reviewDays * 24 * 60 * 60 * 1000).toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"modal-actions\">\r\n              <button\r\n                className=\"cancel-btn\"\r\n                onClick={() => setShowReviewConfirm(false)}\r\n                disabled={confirmingReview}\r\n              >\r\n                取消\r\n              </button>\r\n              <button\r\n                className=\"confirm-btn\"\r\n                onClick={handleConfirmReview}\r\n                disabled={confirmingReview}\r\n              >\r\n                {confirmingReview ? '确认中...' : '确认复习'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 移除复习对话框 */}\r\n      {showRemoveReview && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content remove-review-modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>暂停复习提醒</h3>\r\n              <button \r\n                className=\"close-btn\"\r\n                onClick={() => setShowRemoveReview(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"modal-body\">\r\n              <p>选择在多少天内不再提醒复习这道题目：</p>\r\n              \r\n              <div className=\"remove-days-selector\">\r\n                <div className=\"days-presets\">\r\n                  {[1, 3, 7, 14, 30, 90].map(days => (\r\n                    <button\r\n                      key={days}\r\n                      className={`days-preset-btn ${removeDays === days ? 'active' : ''}`}\r\n                      onClick={() => setRemoveDays(days)}\r\n                    >\r\n                      {days}天\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                \r\n                <div className=\"custom-days-input\">\r\n                  <label htmlFor=\"customRemoveDays\">自定义天数：</label>\r\n                  <input\r\n                    id=\"customRemoveDays\"\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"365\"\r\n                    value={removeDays}\r\n                    onChange={(e) => setRemoveDays(parseInt(e.target.value) || 1)}\r\n                    className=\"days-input\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"remove-review-info\">\r\n                <p><strong>题目：</strong>{question?.title}</p>\r\n                <p><strong>下次提醒时间：</strong>\r\n                  {new Date(Date.now() + removeDays * 24 * 60 * 60 * 1000).toLocaleDateString()}\r\n                </p>\r\n                <p className=\"info-text\">\r\n                  💡 在此期间，该题目不会出现在复习列表中\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"modal-actions\">\r\n              <button\r\n                className=\"cancel-btn\"\r\n                onClick={() => setShowRemoveReview(false)}\r\n                disabled={removingReview}\r\n              >\r\n                取消\r\n              </button>\r\n              <button\r\n                className=\"confirm-btn\"\r\n                onClick={handleRemoveFromReview}\r\n                disabled={removingReview}\r\n              >\r\n                {removingReview ? '处理中...' : '确认暂停'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 详细信息 */}\r\n      <div className=\"card-details\">\r\n        {!isExpandedView && (\r\n          <div className=\"category-info\">\r\n            <span className=\"category-label\">所属分类:</span>\r\n            <span className=\"category-name\">{question?.category?.name || '未分类'}</span>\r\n          </div>\r\n        )}\r\n\r\n        {question?.tags && question.tags.length > 0 && (\r\n          <div className=\"tags-section\">\r\n            <h4>标签</h4>\r\n            <div className=\"tags-container\">\r\n              {question.tags.map((tag, index) => (\r\n                <span key={index} className=\"tag\">\r\n                  #{tag}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"time-info\">\r\n          <span className=\"create-time\">\r\n            创建: {question?.createdAt ? new Date(question.createdAt).toLocaleDateString() : '未知'}\r\n          </span>\r\n          <span className=\"update-time\">\r\n            更新: {question?.updatedAt ? new Date(question.updatedAt).toLocaleDateString() : '未知'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 展开视图下的操作按钮 */}\r\n      {isExpandedView && (\r\n        <div className=\"expanded-actions\">\r\n          <button \r\n            onClick={handleEdit}\r\n            className=\"btn-edit primary\"\r\n            disabled={deleteLoading}\r\n          >\r\n            ✏️ 编辑题目\r\n          </button>\r\n          <button \r\n            onClick={() => setShowRemoveReview(true)}\r\n            className=\"btn-remove-review secondary\"\r\n          >\r\n            ⏸️ 暂停复习\r\n          </button>\r\n          <button \r\n            onClick={handleDelete}\r\n            className=\"btn-delete secondary\"\r\n            disabled={deleteLoading}\r\n          >\r\n            🗑️ 删除题目\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* 在虚拟化容器之外渲染编辑表单 - 新增 */}\r\n      {showQuestionForm && editingQuestion && editingQuestion.id === question.id && (\r\n        <div \r\n          className=\"form-modal-overlay\"\r\n          style={{\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            zIndex: 9999,\r\n            padding: '20px'\r\n          }}\r\n        >\r\n          <QuestionForm\r\n            question={editingQuestion}\r\n            onSave={() => {\r\n              setShowQuestionForm(false);\r\n              setEditingQuestion(null);\r\n            }}\r\n            onCancel={() => {\r\n              setShowQuestionForm(false);\r\n              setEditingQuestion(null);\r\n            }}\r\n            defaultCategoryId={question?.category?.id}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionDetailCard;","// pages/CategoryDetailPage.jsx\r\nimport React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useInfiniteQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { useVirtualizer } from '@tanstack/react-virtual';\r\nimport { initAV, getCategoryWithQuestions, getAllCategories, getQuestionsByCategory } from '../services/categoryService';\r\nimport { deleteQuestion, updateQuestion } from '../services/questionService';\r\nimport QuestionDetailCard from '../components/QuestionDetailCard';\r\nimport QuestionForm from '../components/QuestionForm';\r\nimport AV from 'leancloud-storage';\r\nimport './CategoryDetailPage.css';\r\n\r\n// 分页配置\r\nconst PAGE_SIZE = 20; // 每页加载的题目数量\r\n\r\n// 防抖函数\r\nconst debounce = (func, wait) => {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n};\r\n\r\nconst CategoryDetailPage = () => {\r\n  const { categoryId } = useParams();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  \r\n  const [category, setCategory] = useState(null);\r\n  const [allCategories, setAllCategories] = useState([]);\r\n  const [showQuestionForm, setShowQuestionForm] = useState(false);\r\n  const [editingQuestion, setEditingQuestion] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortBy, setSortBy] = useState('createdAt');\r\n  const [expandedQuestions, setExpandedQuestions] = useState(new Set());\r\n  const [viewMode, setViewMode] = useState('accordion');\r\n  const [draggingQuestion, setDraggingQuestion] = useState(null);\r\n  const [dragOverQuestion, setDragOverQuestion] = useState(null);\r\n  const [syncMessage, setSyncMessage] = useState('');\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  const loadMoreTriggerRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n\r\n  // 初始化用户和基础数据\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n    \r\n    if (user) {\r\n      initializeData();\r\n    }\r\n  }, [categoryId]);\r\n\r\n  // 滚动到指定题目的事件监听\r\n  useEffect(() => {\r\n    const handleScrollToQuestion = (event) => {\r\n      const { questionId } = event.detail;\r\n      \r\n      const questionElement = document.querySelector(`[data-question-id=\"${questionId}\"]`);\r\n      if (questionElement) {\r\n        questionElement.scrollIntoView({ \r\n          behavior: 'smooth', \r\n          block: 'center' \r\n        });\r\n        \r\n        questionElement.style.boxShadow = '0 0 0 3px #667eea';\r\n        setTimeout(() => {\r\n          questionElement.style.boxShadow = '';\r\n        }, 2000);\r\n        \r\n        if (!expandedQuestions.has(questionId)) {\r\n          toggleQuestion(questionId);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scrollToQuestion', handleScrollToQuestion);\r\n    \r\n    return () => {\r\n      window.removeEventListener('scrollToQuestion', handleScrollToQuestion);\r\n    };\r\n  }, [expandedQuestions]);\r\n\r\n  // 初始化基础数据\r\n  const initializeData = async () => {\r\n    try {\r\n      initAV();\r\n      \r\n      // 串行执行，避免并发请求\r\n      await loadCategoryInfo();\r\n      await new Promise(resolve => setTimeout(resolve, 300)); // 添加延迟\r\n      await loadAllCategories();\r\n    } catch (error) {\r\n      console.error('初始化失败:', error);\r\n      // 如果是429错误，显示友好提示\r\n      if (error.code === 429 || error.message.includes('Too many requests')) {\r\n        setSyncMessage('请求过于频繁，请稍后重试');\r\n        setTimeout(() => setSyncMessage(''), 5000);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 加载分类信息\r\n  const loadCategoryInfo = async () => {\r\n    try {\r\n      const data = await getCategoryWithQuestions(categoryId);\r\n      setCategory(data.category);\r\n    } catch (error) {\r\n      console.error('加载分类信息失败:', error);\r\n    }\r\n  };\r\n\r\n  // 加载所有分类\r\n  const loadAllCategories = async () => {\r\n    try {\r\n      const categoriesData = await getAllCategories();\r\n      const userCategories = categoriesData.filter(cat => {\r\n        const createdBy = cat.createdBy;\r\n        return createdBy && createdBy.id === currentUser?.id;\r\n      });\r\n      setAllCategories(userCategories);\r\n    } catch (error) {\r\n      console.error('加载所有分类失败:', error);\r\n      // 处理429错误\r\n      if (error.code === 429 || error.message.includes('Too many requests')) {\r\n        setSyncMessage('服务器繁忙，请稍后重试');\r\n        setTimeout(() => setSyncMessage(''), 5000);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // 修复无限滚动查询\r\n  const {\r\n    data,\r\n    fetchNextPage,\r\n    hasNextPage,\r\n    isFetchingNextPage,\r\n    isLoading,\r\n    error,\r\n    refetch\r\n  } = useInfiniteQuery({\r\n    queryKey: ['questions', categoryId, sortBy],\r\n    queryFn: async ({ pageParam = 0 }) => {\r\n      console.log('正在获取第', pageParam + 1, '页数据');\r\n      \r\n      const result = await getQuestionsByCategory(categoryId, {\r\n        page: pageParam,\r\n        pageSize: PAGE_SIZE,\r\n        sortBy,\r\n        sortOrder: 'desc'\r\n      });\r\n      \r\n      console.log('第', pageParam + 1, '页返回数据:', {\r\n        dataLength: result.data?.length,\r\n        hasMore: result.data?.length === PAGE_SIZE,\r\n        total: result.total\r\n      });\r\n      \r\n      return {\r\n        questions: result.data || [],\r\n        total: result.total,\r\n        nextPage: result.data?.length === PAGE_SIZE ? pageParam + 1 : undefined\r\n      };\r\n    },\r\n    getNextPageParam: (lastPage, allPages) => {\r\n      const nextPage = lastPage.nextPage;\r\n      \r\n      return nextPage;\r\n    },\r\n    enabled: !!categoryId && !!currentUser,\r\n    staleTime: 1000 * 60 * 5,\r\n    initialPageParam: 0,\r\n  });\r\n\r\n// 在扁平化所有页面的题目时添加去重\r\nconst allQuestions = useMemo(() => {\r\n  const questions = data?.pages.flatMap(page => page.questions) || [];\r\n  \r\n  // 去重逻辑：基于 question.id\r\n  const uniqueQuestions = questions.reduce((acc, current) => {\r\n    const existing = acc.find(item => item.id === current.id);\r\n    if (!existing) {\r\n      acc.push(current);\r\n    } else {\r\n      console.warn('发现重复题目:', current.id, current.title);\r\n    }\r\n    return acc;\r\n  }, []);\r\n  \r\n  return uniqueQuestions;\r\n}, [data]);\r\n\r\n// 在搜索过滤后的题目中也确保去重\r\nconst filteredQuestions = useMemo(() => {\r\n  if (!searchTerm) return allQuestions;\r\n  \r\n  const filtered = allQuestions.filter(question =>\r\n    question.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    (question.detailedAnswer && question.detailedAnswer.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n    (question.oralAnswer && question.oralAnswer.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n    (question.code && question.code.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n    (question.tags && question.tags.some(tag => \r\n      tag.toLowerCase().includes(searchTerm.toLowerCase())\r\n    ))\r\n  );\r\n  \r\n  // 再次去重确保安全\r\n  const uniqueFiltered = Array.from(new Map(filtered.map(item => [item.id, item])).values());\r\n  \r\n  return uniqueFiltered;\r\n}, [allQuestions, searchTerm]);\r\n\r\n// 在排序后的题目中也确保去重\r\nconst sortedQuestions = useMemo(() => {\r\n  const sorted = [...filteredQuestions].sort((a, b) => {\r\n    switch (sortBy) {\r\n      case 'title':\r\n        return a.title.localeCompare(b.title);\r\n      case 'difficulty':\r\n        const difficultyOrder = { 'easy': 1, 'medium': 2, 'hard': 3 };\r\n        return difficultyOrder[a.difficulty] - difficultyOrder[b.difficulty];\r\n      case 'appearanceLevel':\r\n        return (b.appearanceLevel || 50) - (a.appearanceLevel || 50);\r\n      case 'createdAt':\r\n        return new Date(b.createdAt) - new Date(a.createdAt);\r\n      case 'updatedAt':\r\n        return new Date(b.updatedAt) - new Date(a.createdAt);\r\n      default:\r\n        return (b.appearanceLevel || 50) - (a.appearanceLevel || 50);\r\n    }\r\n  });\r\n  \r\n  // 最终去重检查\r\n  const finalUnique = Array.from(new Map(sorted.map(item => [item.id, item])).values());\r\n  \r\n  return finalUnique;\r\n}, [filteredQuestions, sortBy]);\r\n  // React Virtual 虚拟化配置\r\n  const virtualizer = useVirtualizer({\r\n    count: sortedQuestions.length,\r\n    getScrollElement: () => containerRef.current,\r\n    estimateSize: () => viewMode === 'grid' ? 200 : 120,\r\n    overscan: 10,\r\n  });\r\n\r\n  // 修复：改进的滚动加载逻辑\r\n  const handleScroll = useCallback(() => {\r\n    const container = containerRef.current;\r\n    if (!container || !hasNextPage || isFetchingNextPage) {\r\n      return;\r\n    }\r\n\r\n    const { scrollTop, scrollHeight, clientHeight } = container;\r\n    const scrollThreshold = 100;\r\n    const distanceFromBottom = scrollHeight - scrollTop - clientHeight;\r\n    \r\n    console.log('滚动检查:', {\r\n      distanceFromBottom,\r\n      shouldLoad: distanceFromBottom < scrollThreshold,\r\n      hasNextPage,\r\n      isFetchingNextPage\r\n    });\r\n    \r\n    if (distanceFromBottom < scrollThreshold) {\r\n      console.log('🎯 触发加载更多！当前页数:', data?.pages?.length || 0);\r\n      fetchNextPage();\r\n    }\r\n  }, [hasNextPage, isFetchingNextPage, fetchNextPage, data]);\r\n\r\n  // 修复：确保滚动监听正确绑定\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n    if (!container) {\r\n      console.log('❌ 未找到滚动容器');\r\n      return;\r\n    }\r\n\r\n    console.log('✅ 绑定滚动监听器');\r\n    const debouncedScroll = debounce(handleScroll, 50);\r\n    \r\n    container.addEventListener('scroll', debouncedScroll);\r\n    \r\n    return () => {\r\n      container.removeEventListener('scroll', debouncedScroll);\r\n    };\r\n  }, [handleScroll]);\r\n\r\n  // 修复：改进的 Intersection Observer\r\n  useEffect(() => {\r\n    if (!loadMoreTriggerRef.current || !hasNextPage || isFetchingNextPage) {\r\n      return;\r\n    }\r\n\r\n    console.log('🔍 设置 Intersection Observer');\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          console.log('🎯 Intersection Observer 触发加载更多！');\r\n          fetchNextPage();\r\n        }\r\n      },\r\n      { \r\n        threshold: 0.1,\r\n        root: containerRef.current,\r\n        rootMargin: '100px'\r\n      }\r\n    );\r\n\r\n    observer.observe(loadMoreTriggerRef.current);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [hasNextPage, isFetchingNextPage, fetchNextPage, sortedQuestions.length]);\r\n\r\n  // 修复：手动测试加载更多的函数\r\n  const handleManualLoadMore = () => {\r\n    console.log('🔄 手动触发加载更多');\r\n    fetchNextPage();\r\n  };\r\n\r\n  // 删除题目 mutation\r\n  const deleteQuestionMutation = useMutation({\r\n    mutationFn: deleteQuestion,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['questions', categoryId]);\r\n      setSyncMessage('题目删除成功');\r\n      setTimeout(() => setSyncMessage(''), 3000);\r\n    },\r\n    onError: (error) => {\r\n      console.error('删除题目失败:', error);\r\n      alert('删除失败: ' + error.message);\r\n    }\r\n  });\r\n\r\n  // 更新题目 mutation\r\n  const updateQuestionMutation = useMutation({\r\n    mutationFn: ({ questionId, data }) => updateQuestion(questionId, data),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['questions', categoryId]);\r\n    },\r\n    onError: (error) => {\r\n      console.error('更新题目失败:', error);\r\n      throw new Error('更新失败: ' + error.message);\r\n    }\r\n  });\r\n\r\n  // 处理题目类别变化\r\n  const handleQuestionCategoryChange = ({ questionId, oldCategoryId, newCategoryId, question }) => {\r\n    const currentCategory = category;\r\n    \r\n    if (oldCategoryId === currentCategory.id) {\r\n      queryClient.invalidateQueries(['questions', categoryId]);\r\n      \r\n      setExpandedQuestions(prev => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(questionId);\r\n        return newSet;\r\n      });\r\n      \r\n      const newCategory = allCategories.find(cat => cat.id === newCategoryId);\r\n      setSyncMessage(`题目已移动到分类: ${newCategory?.name || '其他分类'}`);\r\n      setTimeout(() => setSyncMessage(''), 3000);\r\n    }\r\n  };\r\n\r\n  const toggleQuestion = (questionId) => {\r\n    setExpandedQuestions(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(questionId)) {\r\n        newSet.delete(questionId);\r\n      } else {\r\n        newSet.add(questionId);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const expandAllQuestions = () => {\r\n    const allQuestionIds = new Set(sortedQuestions.map(q => q.id));\r\n    setExpandedQuestions(allQuestionIds);\r\n  };\r\n\r\n  const collapseAllQuestions = () => {\r\n    setExpandedQuestions(new Set());\r\n  };\r\n\r\n  const handleAddQuestion = () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    setEditingQuestion(null);\r\n    setShowQuestionForm(true);\r\n  };\r\n\r\n  const handleEditQuestion = (question) => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    setEditingQuestion(question);\r\n    setShowQuestionForm(true);\r\n  };\r\n\r\n  const handleDeleteQuestion = async (questionId) => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    const questionToDelete = sortedQuestions.find(q => q.id === questionId);\r\n    if (!questionToDelete) {\r\n      throw new Error('未找到要删除的题目');\r\n    }\r\n\r\n    const confirmMessage = `确定要删除题目 \"${questionToDelete.title}\" 吗？此操作不可撤销！`;\r\n    if (!window.confirm(confirmMessage)) {\r\n      return;\r\n    }\r\n\r\n    deleteQuestionMutation.mutate(questionId);\r\n    \r\n    setExpandedQuestions(prev => {\r\n      const newSet = new Set(prev);\r\n      newSet.delete(questionId);\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const handleUpdateQuestionField = async (questionId, field, value) => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await updateQuestionMutation.mutateAsync({\r\n        questionId,\r\n        data: { [field]: value }\r\n      });\r\n    } catch (error) {\r\n      console.error('更新题目字段失败:', error);\r\n      throw new Error('更新失败: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    refetch();\r\n  };\r\n\r\n  // 拖拽相关函数\r\n  const handleDragStart = (e, questionId) => {\r\n    if (expandedQuestions.size > 0) return;\r\n    \r\n    setDraggingQuestion(questionId);\r\n    e.dataTransfer.effectAllowed = 'move';\r\n    e.dataTransfer.setData('text/plain', questionId);\r\n    \r\n    e.currentTarget.style.opacity = '0.4';\r\n  };\r\n\r\n  const handleDragOver = (e, questionId) => {\r\n    if (expandedQuestions.size > 0 || !draggingQuestion) return;\r\n    \r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = 'move';\r\n    setDragOverQuestion(questionId);\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    setDragOverQuestion(null);\r\n  };\r\n\r\n  const handleDrop = async (e, targetQuestionId) => {\r\n    if (expandedQuestions.size > 0 || !draggingQuestion) return;\r\n    \r\n    e.preventDefault();\r\n    \r\n    if (draggingQuestion !== targetQuestionId) {\r\n      const fromIndex = sortedQuestions.findIndex(q => q.id === draggingQuestion);\r\n      const toIndex = sortedQuestions.findIndex(q => q.id === targetQuestionId);\r\n      \r\n      const newQuestions = [...sortedQuestions];\r\n      const [movedQuestion] = newQuestions.splice(fromIndex, 1);\r\n      newQuestions.splice(toIndex, 0, movedQuestion);\r\n      \r\n      try {\r\n        await updateQuestionMutation.mutateAsync({\r\n          questionId: movedQuestion.id,\r\n          data: { appearanceLevel: movedQuestion.appearanceLevel }\r\n        });\r\n        console.log('排序保存成功');\r\n      } catch (error) {\r\n        console.error('保存排序失败:', error);\r\n        refetch();\r\n      }\r\n    }\r\n    \r\n    setDraggingQuestion(null);\r\n    setDragOverQuestion(null);\r\n  };\r\n\r\n  const handleDragEnd = (e) => {\r\n    setDraggingQuestion(null);\r\n    setDragOverQuestion(null);\r\n    e.currentTarget.style.opacity = '1';\r\n  };\r\n\r\n  // 调试信息\r\n  useEffect(() => {\r\n    console.log('分页状态:', {\r\n      hasNextPage,\r\n      isFetchingNextPage,\r\n      totalQuestions: allQuestions.length,\r\n      pages: data?.pages?.length || 0\r\n    });\r\n  }, [hasNextPage, isFetchingNextPage, allQuestions.length, data]);\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"category-detail-page\">\r\n        <div className=\"auth-required-container\">\r\n          <div className=\"auth-required-icon\">🔐</div>\r\n          <h2>请先登录</h2>\r\n          <p>登录后即可查看和管理题目</p>\r\n          <div className=\"auth-required-actions\">\r\n            <button \r\n              onClick={() => window.dispatchEvent(new CustomEvent('showAuthModal'))}\r\n              className=\"login-btn\"\r\n            >\r\n              立即登录\r\n            </button>\r\n            <button onClick={handleBack} className=\"btn-back\">\r\n              返回首页\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading && !category) {\r\n    return (\r\n      <div className=\"category-detail-page\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载题目中...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  if (error && !category) {\r\n    return (\r\n      <div className=\"category-detail-page\">\r\n        <div className=\"error-container\">\r\n          <div className=\"error-icon\">⚠️</div>\r\n          <h2>加载失败</h2>\r\n          <p>{error.message}</p>\r\n          <div className=\"error-actions\">\r\n            <button onClick={handleRetry} className=\"btn-retry\">\r\n              重新加载\r\n            </button>\r\n            <button onClick={handleBack} className=\"btn-back\">\r\n              返回首页\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!category) {\r\n    return (\r\n      <div className=\"category-detail-page\">\r\n        <div className=\"error-container\">\r\n          <div className=\"error-icon\">📁</div>\r\n          <h2>分类不存在</h2>\r\n          <p>未找到指定的分类，可能已被删除</p>\r\n          <button onClick={handleBack} className=\"btn-back\">\r\n            返回首页\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"category-detail-page\">\r\n      {/* 现代化头部 */}\r\n      <header className=\"modern-header\">\r\n        <div className=\"container\">\r\n          <div className=\"header-content\">\r\n            <button onClick={handleBack} className=\"back-button\">\r\n              <span className=\"back-icon\">←</span>\r\n              返回知识库\r\n            </button>\r\n            <div className=\"category-hero\">\r\n              <div className=\"category-badge\">\r\n                <span className=\"category-emoji\">📚</span>\r\n                <span className=\"category-name\">{category.name}</span>\r\n              </div>\r\n              <div className=\"user-welcome\">\r\n                <span className=\"welcome-text\">欢迎, {currentUser.getUsername()}!</span>\r\n              </div>\r\n              <div className=\"hero-stats\">\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-number\">{category.questionCount}</span>\r\n                  <span className=\"stat-label\">总题目</span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-number\">{allQuestions.length}</span>\r\n                  <span className=\"stat-label\">已加载</span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-number\">{expandedQuestions.size}</span>\r\n                  <span className=\"stat-label\">已展开</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* 同步消息提示 */}\r\n      {syncMessage && (\r\n        <div className=\"sync-message\">\r\n          {syncMessage}\r\n        </div>\r\n      )}\r\n\r\n      {/* 控制面板 */}\r\n      <section className=\"control-panel\">\r\n        <div className=\"container\">\r\n          <div className=\"panel-grid\">\r\n            {/* 搜索区域 */}\r\n            <div className=\"search-panel\">\r\n              <div className=\"search-wrapper\">\r\n                <div className=\"search-icon\">🔍</div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"搜索题目、答案或标签...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"modern-search\"\r\n                  style={{ color: '#333', backgroundColor: '#fff' }}\r\n                />\r\n                {searchTerm && (\r\n                  <button \r\n                    onClick={() => setSearchTerm('')}\r\n                    className=\"clear-search\"\r\n                  >\r\n                    ✕\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* 控制区域 */}\r\n            <div className=\"controls-panel\">\r\n              <div className=\"controls-group\">\r\n                <label>排序方式</label>\r\n                <select \r\n                  value={sortBy}\r\n                  onChange={(e) => setSortBy(e.target.value)}\r\n                  className=\"modern-select\"\r\n                  style={{ color: '#333', backgroundColor: '#fff' }}\r\n                >\r\n                  <option value=\"appearanceLevel\">出现频率</option>\r\n                  <option value=\"updatedAt\">最近更新</option>\r\n                  <option value=\"createdAt\">创建时间</option>\r\n                  <option value=\"title\">标题顺序</option>\r\n                  <option value=\"difficulty\">难度等级</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"controls-group\">\r\n                <label>批量操作</label>\r\n                <div className=\"batch-actions\">\r\n                  <button \r\n                    onClick={expandAllQuestions}\r\n                    className=\"action-btn expand-btn\"\r\n                    disabled={sortedQuestions.length === 0}\r\n                  >\r\n                    📖 展开全部\r\n                  </button>\r\n                  <button \r\n                    onClick={collapseAllQuestions}\r\n                    className=\"action-btn collapse-btn\"\r\n                    disabled={expandedQuestions.size === 0}\r\n                  >\r\n                    📕 折叠全部\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <button \r\n                className=\"add-question-btn primary\"\r\n                onClick={handleAddQuestion}\r\n              >\r\n                <span className=\"btn-icon\">+</span>\r\n                添加题目\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 调试控制面板 */}\r\n          <div className=\"debug-controls\" style={{ marginTop: '10px', padding: '10px', background: '#f0f0f0', borderRadius: '4px' }}>\r\n            <button \r\n              onClick={handleManualLoadMore}\r\n              disabled={!hasNextPage || isFetchingNextPage}\r\n              style={{ \r\n                padding: '5px 10px', \r\n                fontSize: '12px',\r\n                background: hasNextPage ? '#1890ff' : '#ccc',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '3px'\r\n              }}\r\n            >\r\n              {isFetchingNextPage ? '加载中...' : hasNextPage ? '手动加载更多' : '已无更多'}\r\n            </button>\r\n            <span style={{ marginLeft: '10px', fontSize: '12px', color: '#666' }}>\r\n              状态: {hasNextPage ? `有更多 (${allQuestions.length}/?)` : '已加载全部'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* 内容区域 */}\r\n      <section className=\"content-section\">\r\n        <div className=\"container\">\r\n          {sortedQuestions.length === 0 ? (\r\n            <div className=\"modern-empty\">\r\n              <div className=\"empty-illustration\">\r\n                {searchTerm ? '🔍' : '📝'}\r\n              </div>\r\n              <h3>{searchTerm ? '没有找到匹配的题目' : '此分类下暂无题目'}</h3>\r\n              <p>\r\n                {searchTerm \r\n                  ? `尝试调整搜索条件或清除搜索框来查看所有题目`\r\n                  : '点击\"添加题目\"按钮创建第一个题目，开始你的学习之旅'\r\n                }\r\n              </p>\r\n              {searchTerm ? (\r\n                <button \r\n                  onClick={() => setSearchTerm('')}\r\n                  className=\"clear-search-btn\"\r\n                >\r\n                  清除搜索条件\r\n                </button>\r\n              ) : (\r\n                <button \r\n                  onClick={handleAddQuestion}\r\n                  className=\"add-first-btn\"\r\n                >\r\n                  🚀 创建第一个题目\r\n                </button>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* 统计信息 */}\r\n              <div className=\"results-stats\">\r\n                <span className=\"results-count\">\r\n                  找到 {sortedQuestions.length} 个题目\r\n                  {searchTerm && <span>（搜索关键词: \"{searchTerm}\"）</span>}\r\n                  {hasNextPage && <span> - 滚动加载更多</span>}\r\n                </span>\r\n                <span className=\"expand-count\">\r\n                  {expandedQuestions.size} / {sortedQuestions.length} 已展开\r\n                </span>\r\n                {expandedQuestions.size === 0 && (\r\n                  <span className=\"drag-hint\">\r\n                    🎯 提示: 可以拖拽题目调整顺序\r\n                  </span>\r\n                )}\r\n              </div>\r\n\r\n              {/* 调试信息 */}\r\n              <div className=\"debug-info\" style={{ fontSize: '12px', color: '#666', padding: '8px', background: '#f5f5f5', borderRadius: '4px', marginBottom: '10px' }}>\r\n                分页状态: 已加载 {allQuestions.length} 题, 还有更多: {hasNextPage ? '是' : '否'}, 正在加载: {isFetchingNextPage ? '是' : '否'}\r\n              </div>\r\n\r\n              {/* 虚拟化题目列表 */}\r\n              <div \r\n                ref={containerRef}\r\n                className={`questions-container ${viewMode}`}\r\n                style={{ \r\n                  height: 'calc(100vh - 400px)',\r\n                  overflow: 'auto',\r\n                  position: 'relative',\r\n                  border: '1px solid #e1e5e9',\r\n                  borderRadius: '8px'\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    height: `${virtualizer.getTotalSize()}px`,\r\n                    width: '100%',\r\n                    position: 'relative',\r\n                  }}\r\n                >\r\n                  {virtualizer.getVirtualItems().map((virtualItem) => {\r\n                    const question = sortedQuestions[virtualItem.index];\r\n                    \r\n                    return (\r\n                      <div\r\n                        key={question.id}\r\n                        data-index={virtualItem.index}\r\n                        ref={virtualizer.measureElement}\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          top: 0,\r\n                          left: 0,\r\n                          width: \"100%\",\r\n                          transform: `translateY(${virtualItem.start}px)`,\r\n                        }}\r\n                      >\r\n                        <QuestionAccordion\r\n                          question={question}\r\n                          index={virtualItem.index}\r\n                          isExpanded={expandedQuestions.has(question.id)}\r\n                          onToggle={() => toggleQuestion(question.id)}\r\n                          onDelete={handleDeleteQuestion}\r\n                          onEdit={handleEditQuestion}\r\n                          onUpdateField={handleUpdateQuestionField}\r\n                          viewMode={viewMode}\r\n                          isDragging={draggingQuestion === question.id}\r\n                          isDragOver={dragOverQuestion === question.id}\r\n                          onDragStart={(e) => handleDragStart(e, question.id)}\r\n                          onDragOver={(e) => handleDragOver(e, question.id)}\r\n                          onDragLeave={handleDragLeave}\r\n                          onDrop={(e) => handleDrop(e, question.id)}\r\n                          onDragEnd={handleDragEnd}\r\n                          canDrag={expandedQuestions.size === 0}\r\n                          showQuestionForm={showQuestionForm}\r\n                          setShowQuestionForm={setShowQuestionForm}\r\n                          editingQuestion={editingQuestion}\r\n                          setEditingQuestion={setEditingQuestion}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n\r\n                {/* 加载更多触发元素 */}\r\n                {hasNextPage && (\r\n                  <div\r\n                    ref={loadMoreTriggerRef}\r\n                    style={{\r\n                      height: '60px',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      position: 'relative',\r\n                      background: 'transparent'\r\n                    }}\r\n                  >\r\n                    {isFetchingNextPage ? (\r\n                      <div className=\"loading-more\">\r\n                        <div className=\"modern-spinner small\"></div>\r\n                        <span>加载更多题目...</span>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"load-more-trigger\" style={{ padding: '10px', color: '#666' }}>\r\n                        <span>↓ 继续滚动加载更多</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                {!hasNextPage && allQuestions.length > 0 && (\r\n                  <div style={{ \r\n                    textAlign: 'center', \r\n                    padding: '20px', \r\n                    color: '#999',\r\n                    fontStyle: 'italic'\r\n                  }}>\r\n                    已加载全部 {allQuestions.length} 个题目\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </section>\r\n\r\n      {/* 在虚拟化容器之外渲染编辑表单 */}\r\n      {showQuestionForm && (\r\n        <div \r\n          className=\"form-modal-overlay\"\r\n          style={{\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            zIndex: 9999,\r\n            padding: '20px'\r\n          }}\r\n        >\r\n          <QuestionForm\r\n            question={editingQuestion}\r\n            onSave={() => {\r\n              setShowQuestionForm(false);\r\n              setEditingQuestion(null);\r\n              queryClient.invalidateQueries(['questions', categoryId]);\r\n            }}\r\n            onCancel={() => {\r\n              setShowQuestionForm(false);\r\n              setEditingQuestion(null);\r\n            }}\r\n            defaultCategoryId={categoryId}\r\n            onCategoryChange={handleQuestionCategoryChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// QuestionAccordion 组件保持不变\r\nconst QuestionAccordion = ({ \r\n  question, \r\n  index, \r\n  isExpanded, \r\n  onToggle, \r\n  onDelete,\r\n  onEdit,\r\n  onUpdateField,\r\n  viewMode,\r\n  isDragging,\r\n  isDragOver,\r\n  onDragStart,\r\n  onDragOver,\r\n  onDragLeave,\r\n  onDrop,\r\n  onDragEnd,\r\n  canDrag,\r\n  showQuestionForm,\r\n  setShowQuestionForm,\r\n  editingQuestion,\r\n  setEditingQuestion\r\n}) => {\r\n  const getDifficultyColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#52c41a';\r\n      case 'medium': return '#faad14';\r\n      case 'hard': return '#f5222d';\r\n      default: return '#666';\r\n    }\r\n  };\r\n\r\n  const getDifficultyBorderColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#b7eb8f';\r\n      case 'medium': return '#ffe58f';\r\n      case 'hard': return '#ffa39e';\r\n      default: return '#d9d9d9';\r\n    }\r\n  };\r\n\r\n  const getDifficultyBackgroundColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#f6ffed';\r\n      case 'medium': return '#fffbe6';\r\n      case 'hard': return '#fff2f0';\r\n      default: return '#fafafa';\r\n    }\r\n  };\r\n\r\n  const getDifficultyText = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '简单';\r\n      case 'medium': return '中等';\r\n      case 'hard': return '困难';\r\n      default: return difficulty;\r\n    }\r\n  };\r\n\r\n  const getProficiencyColor = (proficiency) => {\r\n    switch (proficiency) {\r\n      case 'beginner': return '#ff6b6b';\r\n      case 'intermediate': return '#4ecdc4';\r\n      case 'advanced': return '#45b7d1';\r\n      case 'master': return '#96ceb4';\r\n      default: return '#95a5a6';\r\n    }\r\n  };\r\n\r\n  const getProficiencyIcon = (proficiency) => {\r\n    switch (proficiency) {\r\n      case 'beginner': return '🎀';\r\n      case 'intermediate': return '🎗️';\r\n      case 'advanced': return '🏅';\r\n      case 'master': return '👑';\r\n      default: return '🎯';\r\n    }\r\n  };\r\n\r\n  const getProficiencyText = (proficiency) => {\r\n    switch (proficiency) {\r\n      case 'beginner': return '初级';\r\n      case 'intermediate': return '中级';\r\n      case 'advanced': return '高级';\r\n      case 'master': return '精通';\r\n      default: return proficiency;\r\n    }\r\n  };\r\n\r\n  const getAppearanceLevelColor = (level) => {\r\n    if (level >= 80) return '#ff6b6b';\r\n    if (level >= 60) return '#ffa726';\r\n    if (level >= 40) return '#4ecdc4';\r\n    return '#95a5a6';\r\n  };\r\n\r\n  const formatTime = (date) => {\r\n    return new Date(date).toLocaleDateString('zh-CN', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  // 获取答案预览文本\r\n  const getAnswerPreview = () => {\r\n    const answerText = question.oralAnswer || question.detailedAnswer;\r\n    if (!answerText) {\r\n      return '暂无答案内容';\r\n    }\r\n    return answerText.substring(0, 150) + (answerText.length > 150 ? '...' : '');\r\n  };\r\n\r\n  // 如果已经展开，显示扩展视图\r\n  if (isExpanded) {\r\n    return (\r\n      <div className=\"expanded-question-view\" data-question-id={question.id}>\r\n        <div className=\"expanded-header\">\r\n          <button onClick={onToggle} className=\"back-to-list-btn\">\r\n            <span className=\"back-icon\">←</span>\r\n            返回列表\r\n          </button>\r\n          <div className=\"expanded-title\">\r\n            <span className=\"question-index\">#{index + 1}</span>\r\n            <h3>{question.title}</h3>\r\n          </div>\r\n          <div className=\"expanded-actions\">\r\n            <button \r\n              onClick={() => onEdit(question)}\r\n              className=\"btn-edit\"\r\n            >\r\n              ✏️ 编辑\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"expanded-content\">\r\n          <QuestionDetailCard\r\n            question={question}\r\n            onDelete={onDelete}\r\n            onUpdateField={onUpdateField}\r\n            isExpandedView={true}\r\n            onEdit={onEdit}\r\n            showQuestionForm={showQuestionForm}\r\n            setShowQuestionForm={setShowQuestionForm}\r\n            editingQuestion={editingQuestion}\r\n            setEditingQuestion={setEditingQuestion}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 折叠状态下的显示\r\n  if (viewMode === 'grid') {\r\n    return (\r\n      <div \r\n        className={`question-grid-card ${isDragging ? 'dragging' : ''} ${isDragOver ? 'drag-over' : ''}`}\r\n        onClick={onToggle}\r\n        draggable={canDrag}\r\n        onDragStart={onDragStart}\r\n        onDragOver={onDragOver}\r\n        onDragLeave={onDragLeave}\r\n        onDrop={onDrop}\r\n        onDragEnd={onDragEnd}\r\n        data-question-id={question.id}\r\n        style={{\r\n          borderLeft: `4px solid ${getDifficultyColor(question.difficulty)}`,\r\n          backgroundColor: getDifficultyBackgroundColor(question.difficulty),\r\n          border: `1px solid ${getDifficultyBorderColor(question.difficulty)}`\r\n        }}\r\n      >\r\n        {/* 掌握程度蝴蝶结标识 */}\r\n        <div \r\n          className=\"proficiency-ribbon\"\r\n          style={{ backgroundColor: getProficiencyColor(question.proficiency) }}\r\n        >\r\n          <span className=\"ribbon-icon\">{getProficiencyIcon(question.proficiency)}</span>\r\n          <span className=\"ribbon-text\">{getProficiencyText(question.proficiency)}</span>\r\n        </div>\r\n\r\n        <div className=\"grid-header\">\r\n          <span className=\"question-index\">#{index + 1}</span>\r\n          <span \r\n            className=\"difficulty-tag\"\r\n            style={{ backgroundColor: getDifficultyColor(question.difficulty) }}\r\n          >\r\n            {getDifficultyText(question.difficulty)}\r\n          </span>\r\n        </div>\r\n        <h4 className=\"grid-title\">{question.title}</h4>\r\n        \r\n        {/* 出现频率指示器 */}\r\n        <div className=\"appearance-level-indicator\">\r\n          <div \r\n            className=\"appearance-bar\"\r\n            style={{ \r\n              width: `${question.appearanceLevel || 50}%`,\r\n              backgroundColor: getAppearanceLevelColor(question.appearanceLevel || 50)\r\n            }}\r\n          ></div>\r\n          <span className=\"appearance-text\">{question.appearanceLevel || 50}%</span>\r\n        </div>\r\n\r\n        <div className=\"grid-meta\">\r\n          <span className=\"update-time\">更新: {formatTime(question.updatedAt)}</span>\r\n        </div>\r\n        <div className=\"grid-preview\">\r\n          <div className=\"preview-content\">\r\n            {getAnswerPreview()}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 拖拽手柄 */}\r\n        {canDrag && <div className=\"drag-handle\">⋮⋮</div>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 列表视图下的折叠状态\r\n  return (\r\n    <div \r\n      className={`modern-accordion ${isExpanded ? 'expanded' : ''} ${isDragging ? 'dragging' : ''} ${isDragOver ? 'drag-over' : ''}`}\r\n      draggable={canDrag}\r\n      onDragStart={onDragStart}\r\n      onDragOver={onDragOver}\r\n      onDragLeave={onDragLeave}\r\n      onDrop={onDrop}\r\n      onDragEnd={onDragEnd}\r\n      data-question-id={question.id}\r\n      style={{\r\n        borderLeft: `4px solid ${getDifficultyColor(question.difficulty)}`,\r\n        backgroundColor: getDifficultyBackgroundColor(question.difficulty),\r\n        border: `1px solid ${getDifficultyBorderColor(question.difficulty)}`\r\n      }}\r\n    >\r\n      {/* 掌握程度蝴蝶结标识 */}\r\n      <div \r\n        className=\"proficiency-ribbon\"\r\n        style={{ backgroundColor: getProficiencyColor(question.proficiency) }}\r\n      >\r\n        <span className=\"ribbon-icon\">{getProficiencyIcon(question.proficiency)}</span>\r\n        <span className=\"ribbon-text\">{getProficiencyText(question.proficiency)}</span>\r\n      </div>\r\n\r\n      <div className=\"accordion-header\" onClick={onToggle}>\r\n        <div className=\"header-main\">\r\n          <div className=\"question-meta\">\r\n            <span className=\"question-index\">#{index + 1}</span>\r\n            <span \r\n              className=\"difficulty-badge\"\r\n              style={{ backgroundColor: getDifficultyColor(question.difficulty) }}\r\n            >\r\n              {getDifficultyText(question.difficulty)}\r\n            </span>\r\n            <span className=\"appearance-badge\">\r\n              📊 {question.appearanceLevel || 50}%\r\n            </span>\r\n            <span className=\"time-badge\">\r\n              ⏱️ {formatTime(question.updatedAt)}\r\n            </span>\r\n          </div>\r\n          <h3 className=\"question-title\">{question.title}</h3>\r\n          <div className=\"question-preview\">\r\n            {getAnswerPreview()}\r\n          </div>\r\n        </div>\r\n        <div className=\"header-actions\">\r\n          {/* 拖拽手柄 */}\r\n          {canDrag && (\r\n            <div \r\n              className=\"drag-handle\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              ⋮⋮\r\n            </div>\r\n          )}\r\n          <span className=\"accordion-icon\">\r\n            {isExpanded ? '▼' : '►'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryDetailPage;","// services/userService.js\r\nimport AV from 'leancloud-storage';\r\n\r\nexport const UserService = {\r\n  /**\r\n   * 用户注册\r\n   */\r\n  register: async (username, password, email) => {\r\n    try {\r\n      const user = new AV.User();\r\n      user.setUsername(username);\r\n      user.setPassword(password);\r\n      user.setEmail(email);\r\n      \r\n      const result = await user.signUp();\r\n      console.log('注册成功:', result);\r\n      return result;\r\n    } catch (error) {\r\n      console.error('注册失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 用户登录\r\n   */\r\n  login: async (username, password) => {\r\n    try {\r\n      const result = await AV.User.logIn(username, password);\r\n      console.log('登录成功:', result);\r\n      return result;\r\n    } catch (error) {\r\n      console.error('登录失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 用户退出\r\n   */\r\n  logout: async () => {\r\n    try {\r\n      await AV.User.logOut();\r\n      console.log('退出成功');\r\n    } catch (error) {\r\n      console.error('退出失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 获取当前用户\r\n   */\r\n  getCurrentUser: () => {\r\n    return AV.User.current();\r\n  },\r\n\r\n  /**\r\n   * 检查登录状态\r\n   */\r\n  isLoggedIn: () => {\r\n    return !!AV.User.current();\r\n  },\r\n\r\n  /**\r\n   * 更新用户信息\r\n   */\r\n  updateProfile: async (updates) => {\r\n    try {\r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n\r\n      Object.keys(updates).forEach(key => {\r\n        currentUser.set(key, updates[key]);\r\n      });\r\n\r\n      await currentUser.save();\r\n      return currentUser;\r\n    } catch (error) {\r\n      console.error('更新用户信息失败:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};","// components/UserTestPanel.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { UserService } from '../services/userService';\r\nimport { createCategory } from '../services/categoryService';\r\nimport { createQuestion } from '../services/questionService';\r\nimport './UserTestPanel.css';\r\n\r\nconst UserTestPanel = () => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [testData, setTestData] = useState({\r\n    register: { username: '', password: '', email: '', nickname: '' },\r\n    login: { username: '', password: '' },\r\n    category: { name: '', description: '' },\r\n    question: { title: '', detailedAnswer: '', categoryId: '' }\r\n  });\r\n\r\n  // 检查当前登录状态\r\n  useEffect(() => {\r\n    checkCurrentUser();\r\n  }, []);\r\n\r\n  const checkCurrentUser = () => {\r\n    const user = UserService.getCurrentUser();\r\n    setCurrentUser(user);\r\n    console.log('当前用户:', user);\r\n  };\r\n\r\n  // 用户注册\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await UserService.register(testData.register);\r\n      setMessage(`✅ 注册成功！用户ID: ${result.id}`);\r\n      setCurrentUser(result);\r\n      \r\n      // 清空表单\r\n      setTestData(prev => ({\r\n        ...prev,\r\n        register: { username: '', password: '', email: '', nickname: '' }\r\n      }));\r\n    } catch (error) {\r\n      setMessage(`❌ 注册失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 用户登录\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await UserService.login(testData.login.username, testData.login.password);\r\n      setMessage(`✅ 登录成功！欢迎 ${result.username}`);\r\n      setCurrentUser(result);\r\n      \r\n      // 清空表单\r\n      setTestData(prev => ({\r\n        ...prev,\r\n        login: { username: '', password: '' }\r\n      }));\r\n    } catch (error) {\r\n      setMessage(`❌ 登录失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 用户登出\r\n  const handleLogout = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await UserService.logout();\r\n      setMessage('✅ 已退出登录');\r\n      setCurrentUser(null);\r\n    } catch (error) {\r\n      setMessage(`❌ 登出失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 创建测试分类\r\n  const handleCreateCategory = async (e) => {\r\n    e.preventDefault();\r\n    if (!currentUser) {\r\n      setMessage('❌ 请先登录');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const result = await createCategory(testData.category);\r\n      setMessage(`✅ 分类创建成功！ID: ${result.id}`);\r\n      \r\n      // 保存分类ID用于创建题目\r\n      setTestData(prev => ({\r\n        ...prev,\r\n        question: { ...prev.question, categoryId: result.id },\r\n        category: { name: '', description: '' }\r\n      }));\r\n    } catch (error) {\r\n      setMessage(`❌ 创建分类失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 创建测试题目\r\n  const handleCreateQuestion = async (e) => {\r\n    e.preventDefault();\r\n    if (!currentUser) {\r\n      setMessage('❌ 请先登录');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const result = await createQuestion({\r\n        ...testData.question,\r\n        categoryId: testData.question.categoryId,\r\n        oralAnswer: '这是口述版本的答案',\r\n        tags: ['测试', '示例'],\r\n        difficulty: 'medium',\r\n        proficiency: 'intermediate'\r\n      });\r\n      setMessage(`✅ 题目创建成功！ID: ${result.id}`);\r\n      \r\n      setTestData(prev => ({\r\n        ...prev,\r\n        question: { title: '', detailedAnswer: '', categoryId: prev.question.categoryId }\r\n      }));\r\n    } catch (error) {\r\n      setMessage(`❌ 创建题目失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateTestData = (section, field, value) => {\r\n    setTestData(prev => ({\r\n      ...prev,\r\n      [section]: {\r\n        ...prev[section],\r\n        [field]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-test-panel\">\r\n      <h2>🧪 用户系统测试面板</h2>\r\n      \r\n      {/* 当前用户状态 */}\r\n      <div className=\"user-status\">\r\n        <h3>当前状态</h3>\r\n        {currentUser ? (\r\n          <div className=\"user-info\">\r\n            <p>✅ 已登录</p>\r\n            <p>用户名: {currentUser.username}</p>\r\n            <p>邮箱: {currentUser.email}</p>\r\n            <p>用户ID: {currentUser.id}</p>\r\n            <button onClick={handleLogout} disabled={loading}>\r\n              退出登录\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <p>❌ 未登录</p>\r\n        )}\r\n      </div>\r\n\r\n      {message && (\r\n        <div className={`test-message ${message.includes('✅') ? 'success' : 'error'}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"test-sections\">\r\n        {/* 注册测试 */}\r\n        <div className=\"test-section\">\r\n          <h3>1. 用户注册测试</h3>\r\n          <form onSubmit={handleRegister}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"用户名\"\r\n              value={testData.register.username}\r\n              onChange={(e) => updateTestData('register', 'username', e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n              value={testData.register.password}\r\n              onChange={(e) => updateTestData('register', 'password', e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"邮箱\"\r\n              value={testData.register.email}\r\n              onChange={(e) => updateTestData('register', 'email', e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"昵称 (可选)\"\r\n              value={testData.register.nickname}\r\n              onChange={(e) => updateTestData('register', 'nickname', e.target.value)}\r\n            />\r\n            <button type=\"submit\" disabled={loading}>\r\n              {loading ? '注册中...' : '注册'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* 登录测试 */}\r\n        <div className=\"test-section\">\r\n          <h3>2. 用户登录测试</h3>\r\n          <form onSubmit={handleLogin}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"用户名\"\r\n              value={testData.login.username}\r\n              onChange={(e) => updateTestData('login', 'username', e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n              value={testData.login.password}\r\n              onChange={(e) => updateTestData('login', 'password', e.target.value)}\r\n              required\r\n            />\r\n            <button type=\"submit\" disabled={loading}>\r\n              {loading ? '登录中...' : '登录'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* 创建分类测试 */}\r\n        {currentUser && (\r\n          <div className=\"test-section\">\r\n            <h3>3. 创建测试分类</h3>\r\n            <form onSubmit={handleCreateCategory}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"分类名称\"\r\n                value={testData.category.name}\r\n                onChange={(e) => updateTestData('category', 'name', e.target.value)}\r\n                required\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"分类描述 (可选)\"\r\n                value={testData.category.description}\r\n                onChange={(e) => updateTestData('category', 'description', e.target.value)}\r\n              />\r\n              <button type=\"submit\" disabled={loading}>\r\n                {loading ? '创建中...' : '创建分类'}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {/* 创建题目测试 */}\r\n        {currentUser && testData.question.categoryId && (\r\n          <div className=\"test-section\">\r\n            <h3>4. 创建测试题目</h3>\r\n            <p>分类ID: {testData.question.categoryId}</p>\r\n            <form onSubmit={handleCreateQuestion}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"题目标题\"\r\n                value={testData.question.title}\r\n                onChange={(e) => updateTestData('question', 'title', e.target.value)}\r\n                required\r\n              />\r\n              <textarea\r\n                placeholder=\"详细答案\"\r\n                value={testData.question.detailedAnswer}\r\n                onChange={(e) => updateTestData('question', 'detailedAnswer', e.target.value)}\r\n                required\r\n              />\r\n              <button type=\"submit\" disabled={loading}>\r\n                {loading ? '创建中...' : '创建题目'}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 快速测试按钮 */}\r\n      <div className=\"quick-test\">\r\n        <h3>🚀 快速测试</h3>\r\n        <button \r\n          onClick={() => {\r\n            setTestData({\r\n              register: {\r\n                username: `testuser_${Date.now()}`,\r\n                password: '123456',\r\n                email: `test_${Date.now()}@example.com`,\r\n                nickname: '测试用户'\r\n              },\r\n              login: { username: '', password: '' },\r\n              category: { name: '测试分类', description: '这是一个测试分类' },\r\n              question: { title: '', detailedAnswer: '', categoryId: '' }\r\n            });\r\n          }}\r\n        >\r\n          填充测试数据\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTestPanel;","\r\n// services/dataMigrationService.js\r\nimport AV from 'leancloud-storage';\r\nimport { UserService } from './userService';\r\n\r\n/**\r\n * 数据迁移服务 - 将现有数据关联到管理员账户\r\n */\r\nexport const DataMigrationService = {\r\n  /**\r\n   * 创建管理员账户（使用当前登录用户作为管理员）\r\n   */\r\n  setupAdminUser: async () => {\r\n    try {\r\n      console.log('设置当前用户为管理员...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('请先登录一个账户作为管理员');\r\n      }\r\n      \r\n      console.log('使用当前用户作为管理员:', currentUser.id);\r\n      return {\r\n        id: currentUser.id,\r\n        username: currentUser.getUsername(),\r\n        email: currentUser.getEmail(),\r\n        nickname: currentUser.get('nickname')\r\n      };\r\n    } catch (error) {\r\n      console.error('设置管理员失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 迁移现有分类到当前用户\r\n   */\r\n  migrateCategoriesToCurrentUser: async () => {\r\n    try {\r\n      console.log('开始迁移分类数据...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n      \r\n      const query = new AV.Query('Category');\r\n      \r\n      // 获取所有没有 createdBy 字段的分类\r\n      query.doesNotExist('createdBy');\r\n      const categories = await query.find();\r\n      \r\n      console.log(`找到 ${categories.length} 个需要迁移的分类`);\r\n      \r\n      let migratedCount = 0;\r\n      for (const category of categories) {\r\n        try {\r\n          category.set('createdBy', currentUser);\r\n          \r\n          // 更新 ACL 权限\r\n          const acl = new AV.ACL();\r\n          acl.setReadAccess(currentUser, true);\r\n          acl.setWriteAccess(currentUser, true);\r\n          acl.setPublicReadAccess(true); // 保持公开可读\r\n          category.setACL(acl);\r\n          \r\n          await category.save();\r\n          migratedCount++;\r\n          console.log(`✅ 迁移分类: ${category.get('name')}`);\r\n        } catch (error) {\r\n          console.error(`迁移分类失败 ${category.id}:`, error);\r\n        }\r\n      }\r\n      \r\n      console.log(`分类迁移完成: ${migratedCount}/${categories.length}`);\r\n      return { migrated: migratedCount, total: categories.length };\r\n    } catch (error) {\r\n      console.error('迁移分类数据失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 迁移现有题目到当前用户\r\n   */\r\n  migrateQuestionsToCurrentUser: async () => {\r\n    try {\r\n      console.log('开始迁移题目数据...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n      \r\n      const query = new AV.Query('Question');\r\n      \r\n      // 获取所有没有 createdBy 字段的题目\r\n      query.doesNotExist('createdBy');\r\n      const questions = await query.find();\r\n      \r\n      console.log(`找到 ${questions.length} 个需要迁移的题目`);\r\n      \r\n      let migratedCount = 0;\r\n      for (const question of questions) {\r\n        try {\r\n          question.set('createdBy', currentUser);\r\n          \r\n          // 更新 ACL 权限\r\n          const acl = new AV.ACL();\r\n          acl.setReadAccess(currentUser, true);\r\n          acl.setWriteAccess(currentUser, true);\r\n          acl.setPublicReadAccess(true); // 保持公开可读\r\n          question.setACL(acl);\r\n          \r\n          await question.save();\r\n          migratedCount++;\r\n          console.log(`✅ 迁移题目: ${question.get('title')}`);\r\n        } catch (error) {\r\n          console.error(`迁移题目失败 ${question.id}:`, error);\r\n        }\r\n      }\r\n      \r\n      console.log(`题目迁移完成: ${migratedCount}/${questions.length}`);\r\n      return { migrated: migratedCount, total: questions.length };\r\n    } catch (error) {\r\n      console.error('迁移题目数据失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 执行完整的数据迁移（使用当前登录用户）\r\n   */\r\n  performFullMigration: async () => {\r\n    try {\r\n      console.log('🚀 开始完整数据迁移...');\r\n      \r\n      // 1. 使用当前用户作为管理员\r\n      const adminUser = await DataMigrationService.setupAdminUser();\r\n      \r\n      // 2. 迁移分类数据\r\n      const categoryResult = await DataMigrationService.migrateCategoriesToCurrentUser();\r\n      \r\n      // 3. 迁移题目数据\r\n      const questionResult = await DataMigrationService.migrateQuestionsToCurrentUser();\r\n      \r\n      console.log('🎉 数据迁移完成！');\r\n      \r\n      return {\r\n        success: true,\r\n        adminUser,\r\n        categories: categoryResult,\r\n        questions: questionResult,\r\n        message: `迁移完成: ${categoryResult.migrated}个分类, ${questionResult.migrated}个题目`\r\n      };\r\n    } catch (error) {\r\n      console.error('数据迁移失败:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message\r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 检查数据迁移状态\r\n   */\r\n  checkMigrationStatus: async () => {\r\n    try {\r\n      // 检查没有 createdBy 的分类数量\r\n      const categoryQuery = new AV.Query('Category');\r\n      categoryQuery.doesNotExist('createdBy');\r\n      const orphanCategories = await categoryQuery.count();\r\n      \r\n      // 检查没有 createdBy 的题目数量\r\n      const questionQuery = new AV.Query('Question');\r\n      questionQuery.doesNotExist('createdBy');\r\n      const orphanQuestions = await questionQuery.count();\r\n      \r\n      // 检查总数据量\r\n      const totalCategories = await new AV.Query('Category').count();\r\n      const totalQuestions = await new AV.Query('Question').count();\r\n      \r\n      return {\r\n        orphanCategories,\r\n        orphanQuestions,\r\n        totalCategories,\r\n        totalQuestions,\r\n        migrationNeeded: orphanCategories > 0 || orphanQuestions > 0\r\n      };\r\n    } catch (error) {\r\n      console.error('检查迁移状态失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  migrateQuestionCreatedBy: async () => {\r\n    try {\r\n      console.log('开始专门迁移 Question 的 createdBy 属性...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n      \r\n      const query = new AV.Query('Question');\r\n      \r\n      // 获取所有没有 createdBy 字段的题目\r\n      query.doesNotExist('createdBy');\r\n      const questions = await query.find();\r\n      \r\n      console.log(`找到 ${questions.length} 个需要添加 createdBy 的题目`);\r\n      \r\n      let migratedCount = 0;\r\n      for (const question of questions) {\r\n        try {\r\n          question.set('createdBy', currentUser);\r\n          \r\n          // 更新 ACL 权限\r\n          const acl = new AV.ACL();\r\n          acl.setReadAccess(currentUser, true);\r\n          acl.setWriteAccess(currentUser, true);\r\n          acl.setPublicReadAccess(false);\r\n          question.setACL(acl);\r\n          \r\n          await question.save();\r\n          migratedCount++;\r\n          console.log(`✅ 为题目添加 createdBy: ${question.get('title')}`);\r\n        } catch (error) {\r\n          console.error(`迁移题目失败 ${question.id}:`, error);\r\n        }\r\n      }\r\n      \r\n      console.log(`Question createdBy 迁移完成: ${migratedCount}/${questions.length}`);\r\n      return { migrated: migratedCount, total: questions.length };\r\n    } catch (error) {\r\n      console.error('迁移 Question createdBy 失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * 只迁移 Question 的完整流程\r\n   */\r\n  performQuestionMigrationOnly: async () => {\r\n    try {\r\n      console.log('🚀 开始专门迁移 Question 数据...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('请先登录');\r\n      }\r\n      \r\n      // 只迁移 Question\r\n      const questionResult = await DataMigrationService.migrateQuestionCreatedBy();\r\n      \r\n      console.log('🎉 Question 迁移完成！');\r\n      \r\n      return {\r\n        success: true,\r\n        questions: questionResult,\r\n        message: `Question 迁移完成: ${questionResult.migrated}个题目`\r\n      };\r\n    } catch (error) {\r\n      console.error('Question 迁移失败:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n};","// components/DataMigrationPanel.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataMigrationService } from '../services/dataMigrationService';\r\nimport { UserService } from '../services/userService';\r\nimport './DataMigrationPanel.css';\r\n\r\nconst DataMigrationPanel = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [migrationStatus, setMigrationStatus] = useState(null);\r\n  const [migrationResult, setMigrationResult] = useState(null);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  // 检查当前用户状态和迁移状态\r\n  useEffect(() => {\r\n    checkCurrentUser();\r\n    checkMigrationStatus();\r\n  }, []);\r\n\r\n  const checkCurrentUser = () => {\r\n    const user = UserService.getCurrentUser();\r\n    setCurrentUser(user);\r\n  };\r\n\r\n  const checkMigrationStatus = async () => {\r\n    try {\r\n      const status = await DataMigrationService.checkMigrationStatus();\r\n      setMigrationStatus(status);\r\n    } catch (error) {\r\n      console.error('检查迁移状态失败:', error);\r\n    }\r\n  };\r\n\r\n  const handleMigration = async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录一个账户作为管理员');\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(`确定要将所有现有数据关联到当前用户 \"${currentUser.username}\" 吗？`)) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMigrationResult(null);\r\n    \r\n    try {\r\n      const result = await DataMigrationService.performFullMigration();\r\n      setMigrationResult(result);\r\n      \r\n      // 重新检查状态\r\n      await checkMigrationStatus();\r\n    } catch (error) {\r\n      setMigrationResult({\r\n        success: false,\r\n        error: error.message\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-migration-panel\">\r\n      <h2>🔄 数据迁移工具</h2>\r\n      <p>将现有分类和题目数据关联到当前登录用户</p>\r\n\r\n      {/* 当前用户状态 */}\r\n      <div className=\"user-status-section\">\r\n        <h3>当前用户状态</h3>\r\n        {currentUser ? (\r\n          <div className=\"user-info\">\r\n            <p>✅ 已登录: <strong>{currentUser.username}</strong></p>\r\n            <p>邮箱: {currentUser.email}</p>\r\n            <p>用户ID: {currentUser.id}</p>\r\n            <p className=\"admin-note\">此用户将被设置为所有现有数据的管理员</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"user-info not-logged-in\">\r\n            <p>❌ 未登录</p>\r\n            <p className=\"login-required\">请先登录一个账户作为管理员</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 迁移状态 */}\r\n      {migrationStatus && (\r\n        <div className=\"migration-status\">\r\n          <h3>当前数据状态</h3>\r\n          <div className=\"status-grid\">\r\n            <div className=\"status-item\">\r\n              <span className=\"label\">总分类数:</span>\r\n              <span className=\"value\">{migrationStatus.totalCategories}</span>\r\n            </div>\r\n            <div className=\"status-item\">\r\n              <span className=\"label\">总题目数:</span>\r\n              <span className=\"value\">{migrationStatus.totalQuestions}</span>\r\n            </div>\r\n            <div className=\"status-item warning\">\r\n              <span className=\"label\">未关联分类:</span>\r\n              <span className=\"value\">{migrationStatus.orphanCategories}</span>\r\n            </div>\r\n            <div className=\"status-item warning\">\r\n              <span className=\"label\">未关联题目:</span>\r\n              <span className=\"value\">{migrationStatus.orphanQuestions}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          {migrationStatus.migrationNeeded ? (\r\n            <div className=\"migration-needed\">\r\n              ⚠️ 检测到未关联的数据，需要执行迁移\r\n            </div>\r\n          ) : (\r\n            <div className=\"migration-complete\">\r\n              ✅ 所有数据都已关联到用户\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* 迁移操作 */}\r\n      <div className=\"migration-actions\">\r\n        <button\r\n          onClick={handleMigration}\r\n          disabled={loading || !currentUser || !migrationStatus?.migrationNeeded}\r\n          className=\"migrate-btn\"\r\n        >\r\n          {loading ? '迁移中...' : '执行数据迁移'}\r\n        </button>\r\n        \r\n        <button\r\n          onClick={checkMigrationStatus}\r\n          disabled={loading}\r\n          className=\"refresh-btn\"\r\n        >\r\n          刷新状态\r\n        </button>\r\n      </div>\r\n\r\n      {/* 迁移结果 */}\r\n      {migrationResult && (\r\n        <div className={`migration-result ${migrationResult.success ? 'success' : 'error'}`}>\r\n          <h4>{migrationResult.success ? '✅ 迁移成功' : '❌ 迁移失败'}</h4>\r\n          {migrationResult.success ? (\r\n            <div>\r\n              <p>{migrationResult.message}</p>\r\n              {migrationResult.adminUser && (\r\n                <div className=\"admin-info\">\r\n                  <p><strong>管理员账户:</strong> {migrationResult.adminUser.username}</p>\r\n                  <p><strong>用户ID:</strong> {migrationResult.adminUser.id}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <p>错误: {migrationResult.error}</p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* 使用说明 */}\r\n      <div className=\"migration-instructions\">\r\n        <h3>📖 使用说明</h3>\r\n        <ol>\r\n          <li><strong>首先登录一个账户</strong>（可以是新注册的或现有的）</li>\r\n          <li>确认上方显示有未关联的数据</li>\r\n          <li>点击\"执行数据迁移\"按钮</li>\r\n          <li>迁移完成后，所有现有数据将关联到当前登录用户</li>\r\n          <li>之后可以使用此账户登录系统管理所有数据</li>\r\n        </ol>\r\n        \r\n        <div className=\"important-notes\">\r\n          <h4>⚠️ 重要提示</h4>\r\n          <ul>\r\n            <li>迁移过程不会删除或修改现有数据内容</li>\r\n            <li>只会添加 createdBy 字段和更新权限</li>\r\n            <li>迁移后，只有当前用户可以看到所有现有数据</li>\r\n            <li>新注册的用户只能看到自己创建的数据</li>\r\n            <li><strong>建议使用一个专门的账户作为管理员</strong></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataMigrationPanel;","// pages/TestPage.jsx\r\nimport React from 'react';\r\nimport UserTestPanel from '../components/UserTestPanel';\r\nimport DataMigrationPanel from '../components/DataMigrationPanel';\r\n\r\nconst TestPage = () => {\r\n  return (\r\n    <div className=\"test-page\">\r\n      <div className=\"container\">\r\n        <h1>用户系统测试与数据迁移</h1>\r\n        \r\n        <div className=\"test-sections\">\r\n          <section className=\"test-section\">\r\n            <h2>🔄 数据迁移</h2>\r\n            <DataMigrationPanel />\r\n          </section>\r\n          \r\n          <section className=\"test-section\">\r\n            <h2>🧪 用户功能测试</h2>\r\n            <UserTestPanel />\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestPage;","// components/Navigation.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AV from 'leancloud-storage';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ onShowAuthModal }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [showUserMenu, setShowUserMenu] = useState(false);\r\n  const userMenuRef = useRef(null);\r\n\r\n  // 检查用户登录状态\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n  }, []);\r\n\r\n  // 点击外部关闭用户菜单\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (userMenuRef.current && !userMenuRef.current.contains(event.target)) {\r\n        setShowUserMenu(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  // 添加头像更新事件监听\r\n  useEffect(() => {\r\n    const handleAvatarUpdate = async () => {\r\n      console.log('收到头像更新事件，重新加载用户数据');\r\n      const user = AV.User.current();\r\n      if (user) {\r\n        try {\r\n          const freshUser = await user.fetch();\r\n          setCurrentUser(freshUser);\r\n        } catch (error) {\r\n          console.error('重新加载用户数据失败:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('userAvatarUpdated', handleAvatarUpdate);\r\n    \r\n    return () => {\r\n      window.removeEventListener('userAvatarUpdated', handleAvatarUpdate);\r\n    };\r\n  }, []);\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await AV.User.logOut();\r\n      setCurrentUser(null);\r\n      setShowUserMenu(false);\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error('退出失败:', error);\r\n      alert('退出失败，请重试');\r\n    }\r\n  };\r\n\r\n  const handleUserMenuToggle = () => {\r\n    setShowUserMenu(!showUserMenu);\r\n  };\r\n\r\n  // 检查是否为特定邮箱用户\r\n  const isAuthorizedEmail = () => {\r\n    if (!currentUser) return false;\r\n    const userEmail = currentUser.getEmail();\r\n    return userEmail === 'wu1149823510@outlook.com';\r\n  };\r\n\r\n  // 优化的头像组件 - 支持缓存清除和完全覆盖\r\n  const UserAvatar = ({ user, size = 'normal' }) => {\r\n    const avatar = user.get('avatar');\r\n    const fallbackText = user.getUsername()?.charAt(0).toUpperCase();\r\n    \r\n    // 添加时间戳避免缓存\r\n    const getAvatarUrl = () => {\r\n      if (!avatar) return null;\r\n      \r\n      if (typeof avatar === 'string') {\r\n        const timestamp = new Date().getTime();\r\n        return `${avatar}?t=${timestamp}`;\r\n      } else if (typeof avatar.get === 'function') {\r\n        return avatar.get('url');\r\n      }\r\n      return null;\r\n    };\r\n    \r\n    const avatarUrl = getAvatarUrl();\r\n    \r\n    return (\r\n      <div className={`user-avatar ${size === 'large' ? 'user-avatar-large' : ''}`}>\r\n        {avatarUrl ? (\r\n          <>\r\n            <img \r\n              src={avatarUrl} \r\n              alt=\"用户头像\"\r\n              onLoad={() => console.log('✅ Navigation 头像加载成功')}\r\n              onError={(e) => {\r\n                console.error('❌ Navigation 头像加载失败:', avatarUrl);\r\n                e.target.style.display = 'none';\r\n                // 显示占位符\r\n                const fallback = e.target.nextSibling;\r\n                if (fallback) fallback.style.display = 'flex';\r\n              }}\r\n              style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                objectFit: 'cover',\r\n                objectPosition: 'center'\r\n              }}\r\n            />\r\n            <div \r\n              className={`avatar-fallback ${size === 'large' ? 'avatar-fallback-large' : ''}`}\r\n              style={{ display: 'none' }}\r\n            >\r\n              {fallbackText}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className={`avatar-fallback ${size === 'large' ? 'avatar-fallback-large' : ''}`}>\r\n            {fallbackText}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <nav className=\"modern-nav\">\r\n      <div className=\"nav-container\">\r\n        {/* 左侧导航链接 */}\r\n        <div className=\"nav-left\">\r\n          <Link to=\"/\" className=\"nav-brand\">\r\n            <span className=\"brand-icon\">📚</span>\r\n            <span className=\"brand-text\">知识题库</span>\r\n          </Link>\r\n          \r\n          <div className=\"nav-links\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              <span className=\"link-icon\">🏠</span>\r\n              首页\r\n            </Link>\r\n            {/* 只有特定邮箱用户才能看到初始化数据库选项 */}\r\n            {currentUser && isAuthorizedEmail() && (\r\n              <Link to=\"/init\" className=\"nav-link\">\r\n                <span className=\"link-icon\">⚙️</span>\r\n                初始化数据库\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* 右侧用户区域 */}\r\n        <div className=\"nav-right\">\r\n          {currentUser ? (\r\n            <div className=\"user-section\" ref={userMenuRef}>\r\n              <button \r\n                className=\"user-menu-trigger\"\r\n                onClick={handleUserMenuToggle}\r\n              >\r\n                <UserAvatar user={currentUser} />\r\n                <span className=\"user-name\">{currentUser.getUsername()}</span>\r\n                {isAuthorizedEmail() && (\r\n                  <span className=\"admin-badge\" title=\"管理员\">⚡</span>\r\n                )}\r\n                <span className={`dropdown-arrow ${showUserMenu ? 'open' : ''}`}>\r\n                  ▼\r\n                </span>\r\n              </button>\r\n\r\n              {/* 用户下拉菜单 */}\r\n              {showUserMenu && (\r\n                <div className=\"user-dropdown-menu\">\r\n                  <div className=\"dropdown-header\">\r\n                    <div className=\"user-info-card\">\r\n                      <UserAvatar user={currentUser} size=\"large\" />\r\n                      <div className=\"user-details\">\r\n                        <div className=\"user-display-name\">\r\n                          {currentUser.get('nickname') || currentUser.getUsername()}\r\n                          {isAuthorizedEmail() && (\r\n                            <span className=\"admin-tag\">管理员</span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"user-email\">\r\n                          {currentUser.getEmail() || '未设置邮箱'}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"dropdown-divider\"></div>\r\n\r\n                  <div className=\"dropdown-items\">\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.dispatchEvent(new CustomEvent('showUserSettings'));\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">👤</span>\r\n                      <span className=\"item-text\">账户设置</span>\r\n                    </button>\r\n\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.dispatchEvent(new CustomEvent('showUserSettings', { \r\n                          detail: { tab: 'stats' } \r\n                        }));\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">📊</span>\r\n                      <span className=\"item-text\">学习统计</span>\r\n                    </button>\r\n\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.dispatchEvent(new CustomEvent('showUserSettings', { \r\n                          detail: { tab: 'preferences' } \r\n                        }));\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">🔔</span>\r\n                      <span className=\"item-text\">通知设置</span>\r\n                    </button>\r\n                  </div>\r\n\r\n                  {/* 管理员专属功能区域 */}\r\n                  {isAuthorizedEmail() && (\r\n                    <>\r\n                      <div className=\"dropdown-divider\"></div>\r\n                      <div className=\"dropdown-section\">\r\n                        <div className=\"section-label\">管理员功能</div>\r\n                        <div className=\"dropdown-items\">\r\n                          <Link \r\n                            to=\"/init\" \r\n                            className=\"dropdown-item\"\r\n                            onClick={() => setShowUserMenu(false)}\r\n                          >\r\n                            <span className=\"item-icon\">⚙️</span>\r\n                            <span className=\"item-text\">初始化数据库</span>\r\n                          </Link>\r\n                          <button \r\n                            className=\"dropdown-item\"\r\n                            onClick={() => {\r\n                              setShowUserMenu(false);\r\n                              console.log('管理员功能');\r\n                            }}\r\n                          >\r\n                            <span className=\"item-icon\">🔧</span>\r\n                            <span className=\"item-text\">系统管理</span>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  <div className=\"dropdown-divider\"></div>\r\n\r\n                  <div className=\"dropdown-items\">\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.open('/help', '_blank');\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">❓</span>\r\n                      <span className=\"item-text\">帮助文档</span>\r\n                    </button>\r\n\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.open('mailto:support@example.com', '_blank');\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">💬</span>\r\n                      <span className=\"item-text\">意见反馈</span>\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"dropdown-divider\"></div>\r\n\r\n                  <div className=\"dropdown-items\">\r\n                    <button \r\n                      className=\"dropdown-item logout-item\"\r\n                      onClick={handleLogout}\r\n                    >\r\n                      <span className=\"item-icon\">🚪</span>\r\n                      <span className=\"item-text\">退出登录</span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"auth-buttons\">\r\n              <button \r\n                className=\"auth-btn login-btn\"\r\n                onClick={() => onShowAuthModal('login')}\r\n              >\r\n                登录\r\n              </button>\r\n              <button \r\n                className=\"auth-btn login-btn\"\r\n                onClick={() => onShowAuthModal('register')}\r\n              >\r\n                注册\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;","// components/AuthModal.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { UserService } from '../services/userService';\r\nimport { WechatAuthService } from '../services/wechatAuthService';\r\nimport './AuthModal.css';\r\n\r\nconst AuthModal = ({ isOpen, onClose, defaultTab = 'login', onAuthSuccess }) => {\r\n  const [activeTab, setActiveTab] = useState(defaultTab);\r\n  const [formData, setFormData] = useState({\r\n    loginUsername: '',\r\n    loginPassword: '',\r\n    registerUsername: '',\r\n    registerEmail: '',\r\n    registerPassword: '',\r\n    registerConfirmPassword: ''\r\n  });\r\n  const [isWechatLoading, setIsWechatLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setActiveTab(defaultTab);\r\n      setFormData({\r\n        loginUsername: '',\r\n        loginPassword: '',\r\n        registerUsername: '',\r\n        registerEmail: '',\r\n        registerPassword: '',\r\n        registerConfirmPassword: ''\r\n      });\r\n    }\r\n  }, [isOpen, defaultTab]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await UserService.login(formData.loginUsername, formData.loginPassword);\r\n      if (onAuthSuccess) onAuthSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      alert(`登录失败: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.registerPassword !== formData.registerConfirmPassword) {\r\n      alert('两次输入的密码不一致');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await UserService.register(\r\n        formData.registerUsername,\r\n        formData.registerPassword,\r\n        formData.registerEmail\r\n      );\r\n      if (onAuthSuccess) onAuthSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      alert(`注册失败: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleWechatLogin = async () => {\r\n    setIsWechatLoading(true);\r\n    try {\r\n      await WechatAuthService.wechatLogin();\r\n      if (onAuthSuccess) onAuthSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      alert(`微信登录失败: ${error.message}`);\r\n    } finally {\r\n      setIsWechatLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleWechatQRLogin = async () => {\r\n    setIsWechatLoading(true);\r\n    try {\r\n      await WechatAuthService.wechatQRLogin();\r\n      if (onAuthSuccess) onAuthSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      alert(`微信扫码登录失败: ${error.message}`);\r\n    } finally {\r\n      setIsWechatLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"auth-modal\" onClick={onClose}>\r\n      <div className=\"auth-content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"auth-header\">\r\n          <h3>{activeTab === 'login' ? '用户登录' : '用户注册'}</h3>\r\n          <button className=\"close-btn\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <div className=\"auth-tabs\">\r\n          <button \r\n            className={`auth-tab ${activeTab === 'login' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('login')}\r\n          >\r\n            登录\r\n          </button>\r\n          <button \r\n            className={`auth-tab ${activeTab === 'register' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('register')}\r\n          >\r\n            注册\r\n          </button>\r\n        </div>\r\n\r\n        {/* 第三方登录选项 \r\n        <div className=\"social-auth-section\">\r\n          <div className=\"social-auth-buttons\">\r\n            <button \r\n              className=\"social-auth-btn wechat-btn\"\r\n              onClick={handleWechatLogin}\r\n              disabled={isWechatLoading}\r\n            >\r\n              <span className=\"social-icon\">💬</span>\r\n              <span className=\"social-text\">\r\n                {isWechatLoading ? '登录中...' : '微信登录'}\r\n              </span>\r\n            </button>\r\n            \r\n            <button \r\n              className=\"social-auth-btn wechat-qr-btn\"\r\n              onClick={handleWechatQRLogin}\r\n              disabled={isWechatLoading}\r\n            >\r\n              <span className=\"social-icon\">📱</span>\r\n              <span className=\"social-text\">\r\n                {isWechatLoading ? '加载中...' : '微信扫码登录'}\r\n              </span>\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"divider\">\r\n            <span>或</span>\r\n          </div>\r\n        </div>\r\n*/}\r\n        {/* 登录表单 */}\r\n        <form \r\n          className={`auth-form ${activeTab === 'login' ? 'active' : ''}`}\r\n          onSubmit={handleLogin}\r\n        >\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"loginUsername\">用户名</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"loginUsername\" \r\n              value={formData.loginUsername}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"loginPassword\">密码</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"loginPassword\" \r\n              value={formData.loginPassword}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"auth-btn primary\">登录</button>\r\n        </form>\r\n\r\n        {/* 注册表单 */}\r\n        <form \r\n          className={`auth-form ${activeTab === 'register' ? 'active' : ''}`}\r\n          onSubmit={handleRegister}\r\n        >\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerUsername\">用户名</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"registerUsername\" \r\n              value={formData.registerUsername}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerEmail\">邮箱</label>\r\n            <input \r\n              type=\"email\" \r\n              id=\"registerEmail\" \r\n              value={formData.registerEmail}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerPassword\">密码</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"registerPassword\" \r\n              value={formData.registerPassword}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerConfirmPassword\">确认密码</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"registerConfirmPassword\" \r\n              value={formData.registerConfirmPassword}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"auth-btn secondary\">注册</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthModal;","// components/UserSettingsModal.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport AV from 'leancloud-storage';\r\nimport './UserSettingsModal.css';\r\n\r\nconst UserSettingsModal = ({ isOpen, onClose }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('profile');\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [message, setMessage] = useState({ type: '', text: '' });\r\n  const [avatarFile, setAvatarFile] = useState(null);\r\n  const [avatarPreview, setAvatarPreview] = useState('');\r\n\r\n  // 学习统计数据状态\r\n  const [studyStats, setStudyStats] = useState({\r\n    totalCategories: 0,\r\n    totalQuestions: 0,\r\n    reviewQuestions: 0,\r\n    todayReviewed: 0\r\n  });\r\n\r\n  // 表单状态\r\n  const [profileForm, setProfileForm] = useState({\r\n    username: '',\r\n    email: '',\r\n    nickname: '',\r\n    bio: ''\r\n  });\r\n\r\n  const [passwordForm, setPasswordForm] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const [preferencesForm, setPreferencesForm] = useState({\r\n    theme: 'light',\r\n    language: 'zh-CN',\r\n    notifications: true,\r\n    emailUpdates: false\r\n  });\r\n\r\n  const [securityForm, setSecurityForm] = useState({\r\n    emailVerified: false\r\n  });\r\n\r\n  // 调试用户信息\r\n  const debugUserInfo = (user) => {\r\n    if (!user) return;\r\n   \r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      const user = AV.User.current();\r\n      setCurrentUser(user);\r\n      if (user) {\r\n        debugUserInfo(user);\r\n        loadUserData(user);\r\n        loadStudyStats(user);\r\n      }\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const loadUserData = async (user) => {\r\n    try {\r\n      // 确保获取最新的用户数据\r\n      const freshUser = await user.fetch();\r\n      \r\n    \r\n\r\n      setProfileForm({\r\n        username: freshUser.getUsername() || '',\r\n        email: freshUser.getEmail() || '',\r\n        nickname: freshUser.get('nickname') || '',\r\n        bio: freshUser.get('bio') || ''\r\n      });\r\n\r\n      setPreferencesForm({\r\n        theme: freshUser.get('theme') || 'light',\r\n        language: freshUser.get('language') || 'zh-CN',\r\n        notifications: freshUser.get('notifications') !== false,\r\n        emailUpdates: freshUser.get('emailUpdates') || false\r\n      });\r\n\r\n      setSecurityForm({\r\n        emailVerified: freshUser.get('emailVerified') || false\r\n      });\r\n\r\n      // 加载用户头像 - 添加时间戳避免缓存\r\n      const avatar = freshUser.get('avatar');\r\n      if (avatar && typeof avatar === 'string') {\r\n        const timestamp = new Date().getTime();\r\n        const avatarUrlWithCacheBust = `${avatar}?t=${timestamp}`;\r\n        setAvatarPreview(avatarUrlWithCacheBust);\r\n      } else {\r\n        setAvatarPreview('');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('加载用户数据失败:', error);\r\n    }\r\n  };\r\n\r\n  const loadStudyStats = async (user) => {\r\n    try {\r\n      // 获取分类数量\r\n      const categoriesQuery = new AV.Query('Category');\r\n      categoriesQuery.equalTo('createdBy', user);\r\n      const categories = await categoriesQuery.find();\r\n\r\n      // 获取题目数量\r\n      const questionsQuery = new AV.Query('Question');\r\n      questionsQuery.equalTo('createdBy', user);\r\n      const questions = await questionsQuery.find();\r\n\r\n      // 计算待复习题目\r\n      const now = new Date();\r\n      const reviewThreshold = 1;\r\n      const reviewQuestions = questions.filter(question => {\r\n        const lastReviewed = new Date(question.get('lastReviewedAt') || question.get('createdAt'));\r\n        const daysSinceReview = Math.floor((now - lastReviewed) / (1000 * 60 * 60 * 24));\r\n        return daysSinceReview >= reviewThreshold;\r\n      });\r\n\r\n      // 计算今日复习题目\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      const todayReviewed = questions.filter(question => {\r\n        const lastReviewed = new Date(question.get('lastReviewedAt'));\r\n        return lastReviewed >= today;\r\n      }).length;\r\n\r\n      setStudyStats({\r\n        totalCategories: categories.length,\r\n        totalQuestions: questions.length,\r\n        reviewQuestions: reviewQuestions.length,\r\n        todayReviewed: todayReviewed\r\n      });\r\n    } catch (error) {\r\n      console.error('加载学习统计失败:', error);\r\n      setStudyStats({\r\n        totalCategories: 0,\r\n        totalQuestions: 0,\r\n        reviewQuestions: 0,\r\n        todayReviewed: 0\r\n      });\r\n    }\r\n  };\r\n\r\n  const showMessage = (type, text, duration = 3000) => {\r\n    setMessage({ type, text });\r\n    setTimeout(() => setMessage({ type: '', text: '' }), duration);\r\n  };\r\n\r\n  // 头像上传处理\r\n  const handleAvatarUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    // 检查文件类型\r\n    if (!file.type.startsWith('image/')) {\r\n      showMessage('error', '请选择图片文件（JPG、PNG、GIF）');\r\n      return;\r\n    }\r\n\r\n    // 检查文件大小\r\n    if (file.size > 2 * 1024 * 1024) {\r\n      showMessage('error', '图片大小不能超过 2MB');\r\n      return;\r\n    }\r\n\r\n    setAvatarFile(file);\r\n    \r\n    // 创建预览\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      setAvatarPreview(e.target.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleAvatarSave = async () => {\r\n    if (!avatarFile || !currentUser) {\r\n      showMessage('error', '请先选择图片');\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    try {\r\n\r\n      // 首先清除旧的头像预览\r\n      setAvatarPreview('');\r\n      \r\n      // 将文件转换为 base64\r\n      const fileData = await new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          const base64Data = e.target.result.split(',')[1];\r\n          resolve(base64Data);\r\n        };\r\n        reader.onerror = () => reject(new Error('文件读取失败'));\r\n        reader.readAsDataURL(avatarFile);\r\n      });\r\n\r\n      // 调用云函数\r\n      const result = await AV.Cloud.run('updateUserAvatar', {\r\n        fileData: fileData,\r\n        fileName: avatarFile.name,\r\n        mimeType: avatarFile.type\r\n      });\r\n\r\n      if (result.success) {\r\n        showMessage('success', '头像上传成功！');\r\n        \r\n        // 使用时间戳避免浏览器缓存\r\n        const timestamp = new Date().getTime();\r\n        const avatarUrlWithCacheBust = `${result.avatarUrl}?t=${timestamp}`;\r\n        \r\n        console.log('设置带时间戳的头像URL:', avatarUrlWithCacheBust);\r\n        \r\n        // 更新本地预览\r\n        setAvatarPreview(avatarUrlWithCacheBust);\r\n        \r\n        // 清除文件选择状态\r\n        setAvatarFile(null);\r\n        \r\n        // 重新获取用户数据\r\n        setTimeout(async () => {\r\n          try {\r\n            const updatedUser = await AV.User.current().fetch();\r\n            setCurrentUser(updatedUser);\r\n            console.log('用户数据已更新');\r\n            \r\n            // 强制重新渲染 Navigation 组件\r\n            window.dispatchEvent(new CustomEvent('userAvatarUpdated'));\r\n          } catch (fetchError) {\r\n            console.error('获取更新后的用户数据失败:', fetchError);\r\n          }\r\n        }, 1000);\r\n        \r\n      } else {\r\n        throw new Error(result.message || '头像上传失败');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('❌ 头像上传失败:', error);\r\n      showMessage('error', `上传失败: ${error.message}`);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleProfileUpdate = async (e) => {\r\n    e.preventDefault();\r\n    if (!currentUser) return;\r\n\r\n    setSaving(true);\r\n    try {\r\n      console.log('开始更新个人信息...', {\r\n        nickname: profileForm.nickname,\r\n        bio: profileForm.bio\r\n      });\r\n\r\n      // 使用云函数更新个人信息\r\n      const result = await AV.Cloud.run('updateUserProfile', {\r\n        nickname: profileForm.nickname,\r\n        bio: profileForm.bio\r\n      });\r\n\r\n      if (result.success) {\r\n        showMessage('success', '个人信息更新成功！');\r\n        \r\n        // 重新获取用户数据\r\n        setTimeout(async () => {\r\n          try {\r\n            const updatedUser = await AV.User.current().fetch();\r\n            setCurrentUser(updatedUser);\r\n            console.log('用户数据已更新');\r\n          } catch (fetchError) {\r\n            console.error('获取更新后的用户数据失败:', fetchError);\r\n          }\r\n        }, 500);\r\n      } else {\r\n        throw new Error(result.message || '更新失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('更新个人信息失败:', error);\r\n      \r\n      let errorMessage = '更新失败，请重试';\r\n      if (error.code === 401) {\r\n        errorMessage = '请先登录';\r\n      } else if (error.message.includes('network')) {\r\n        errorMessage = '网络连接失败，请检查网络';\r\n      } else {\r\n        errorMessage = `更新失败: ${error.message}`;\r\n      }\r\n      \r\n      showMessage('error', errorMessage);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (passwordForm.newPassword !== passwordForm.confirmPassword) {\r\n      showMessage('error', '新密码和确认密码不一致');\r\n      return;\r\n    }\r\n\r\n    if (passwordForm.newPassword.length < 6) {\r\n      showMessage('error', '新密码至少需要6位字符');\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    try {\r\n      await currentUser.updatePassword(\r\n        passwordForm.currentPassword,\r\n        passwordForm.newPassword\r\n      );\r\n      \r\n      showMessage('success', '密码修改成功！');\r\n      setPasswordForm({\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      });\r\n    } catch (error) {\r\n      console.error('修改密码失败:', error);\r\n      showMessage('error', `密码修改失败: ${error.message}`);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handlePreferencesUpdate = async (e) => {\r\n    e.preventDefault();\r\n    if (!currentUser) return;\r\n\r\n    setSaving(true);\r\n    try {\r\n      console.log('开始更新偏好设置...', preferencesForm);\r\n\r\n      // 使用云函数更新偏好设置\r\n      const result = await AV.Cloud.run('updateUserPreferences', {\r\n        theme: preferencesForm.theme,\r\n        language: preferencesForm.language,\r\n        notifications: preferencesForm.notifications,\r\n        emailUpdates: preferencesForm.emailUpdates\r\n      });\r\n\r\n      if (result.success) {\r\n        showMessage('success', '偏好设置更新成功！');\r\n        \r\n        // 重新获取用户数据\r\n        setTimeout(async () => {\r\n          try {\r\n            const updatedUser = await AV.User.current().fetch();\r\n            setCurrentUser(updatedUser);\r\n          } catch (fetchError) {\r\n            console.error('获取更新后的用户数据失败:', fetchError);\r\n          }\r\n        }, 500);\r\n      } else {\r\n        throw new Error(result.message || '更新失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('更新偏好设置失败:', error);\r\n      showMessage('error', `更新失败: ${error.message}`);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  // 邮箱验证\r\n  const handleEmailVerification = async () => {\r\n    if (!currentUser || !currentUser.getEmail()) {\r\n      showMessage('error', '请先设置邮箱地址');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await AV.User.requestEmailVerify(currentUser.getEmail());\r\n      showMessage('success', '验证邮件已发送，请检查您的邮箱');\r\n    } catch (error) {\r\n      console.error('发送验证邮件失败:', error);\r\n      showMessage('error', `发送验证邮件失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 密码重置\r\n  const handlePasswordReset = async () => {\r\n    if (!currentUser || !currentUser.getEmail()) {\r\n      showMessage('error', '请先设置邮箱地址');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await AV.User.requestPasswordReset(currentUser.getEmail());\r\n      showMessage('success', '密码重置邮件已发送，请检查您的邮箱');\r\n    } catch (error) {\r\n      console.error('发送重置邮件失败:', error);\r\n      showMessage('error', `发送重置邮件失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 数据导出\r\n  const handleDataExport = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [categories, questions] = await Promise.all([\r\n        new AV.Query('Category')\r\n          .equalTo('createdBy', currentUser)\r\n          .find(),\r\n        new AV.Query('Question')\r\n          .equalTo('createdBy', currentUser)\r\n          .include('category')\r\n          .find()\r\n      ]);\r\n\r\n      const exportData = {\r\n        exportTime: new Date().toISOString(),\r\n        user: {\r\n          username: currentUser.getUsername(),\r\n          email: currentUser.getEmail(),\r\n          nickname: currentUser.get('nickname')\r\n        },\r\n        categories: categories.map(cat => ({\r\n          id: cat.id,\r\n          name: cat.get('name'),\r\n          description: cat.get('description'),\r\n          questionCount: cat.get('questionCount') || 0,\r\n          createdAt: cat.get('createdAt'),\r\n          updatedAt: cat.get('updatedAt')\r\n        })),\r\n        questions: questions.map(q => ({\r\n          id: q.id,\r\n          title: q.get('title'),\r\n          detailedAnswer: q.get('detailedAnswer'),\r\n          oralAnswer: q.get('oralAnswer'),\r\n          code: q.get('code'),\r\n          difficulty: q.get('difficulty'),\r\n          proficiency: q.get('proficiency'),\r\n          appearanceLevel: q.get('appearanceLevel'),\r\n          tags: q.get('tags') || [],\r\n          category: q.get('category') ? {\r\n            id: q.get('category').id,\r\n            name: q.get('category').get('name')\r\n          } : null,\r\n          createdAt: q.get('createdAt'),\r\n          updatedAt: q.get('updatedAt')\r\n        }))\r\n      };\r\n\r\n      const dataStr = JSON.stringify(exportData, null, 2);\r\n      const dataBlob = new Blob([dataStr], { type: 'application/json' });\r\n      const url = URL.createObjectURL(dataBlob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `knowledge-base-export-${new Date().toISOString().split('T')[0]}.json`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      URL.revokeObjectURL(url);\r\n\r\n      showMessage('success', '数据导出成功！');\r\n    } catch (error) {\r\n      console.error('数据导出失败:', error);\r\n      showMessage('error', `数据导出失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (formType, field, value) => {\r\n    switch (formType) {\r\n      case 'profile':\r\n        setProfileForm(prev => ({ ...prev, [field]: value }));\r\n        break;\r\n      case 'password':\r\n        setPasswordForm(prev => ({ ...prev, [field]: value }));\r\n        break;\r\n      case 'preferences':\r\n        setPreferencesForm(prev => ({ ...prev, [field]: value }));\r\n        break;\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"user-settings-overlay\">\r\n      <div className=\"user-settings-modal\">\r\n        {/* 头部 */}\r\n        <div className=\"settings-header\">\r\n          <div className=\"header-content\">\r\n            <h2>账户设置</h2>\r\n            <p>管理您的账户信息和偏好设置</p>\r\n          </div>\r\n          <button \r\n            className=\"close-button\"\r\n            onClick={onClose}\r\n            disabled={saving}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        {/* 消息提示 */}\r\n        {message.text && (\r\n          <div className={`message ${message.type}`}>\r\n            {message.text}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"settings-content\">\r\n          {/* 侧边栏导航 */}\r\n          <div className=\"settings-sidebar\">\r\n            <button \r\n              className={`sidebar-item ${activeTab === 'profile' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('profile')}\r\n            >\r\n              <span className=\"item-icon\">👤</span>\r\n              <span className=\"item-text\">个人信息</span>\r\n            </button>\r\n            \r\n            <button \r\n              className={`sidebar-item ${activeTab === 'security' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('security')}\r\n            >\r\n              <span className=\"item-icon\">🔒</span>\r\n              <span className=\"item-text\">安全设置</span>\r\n            </button>\r\n            \r\n            <button \r\n              className={`sidebar-item ${activeTab === 'preferences' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('preferences')}\r\n            >\r\n              <span className=\"item-icon\">⚙️</span>\r\n              <span className=\"item-text\">偏好设置</span>\r\n            </button>\r\n            \r\n            <button \r\n              className={`sidebar-item ${activeTab === 'data' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('data')}\r\n            >\r\n              <span className=\"item-icon\">📊</span>\r\n              <span className=\"item-text\">学习统计</span>\r\n            </button>\r\n          </div>\r\n\r\n          {/* 主要内容区域 */}\r\n          <div className=\"settings-main\">\r\n            {activeTab === 'profile' && (\r\n              <div className=\"tab-content\">\r\n                <h3>个人信息</h3>\r\n                \r\n                {/* 头像上传区域 */}\r\n                <div className=\"avatar-section\">\r\n                  <div className=\"avatar-upload\">\r\n                    <div className=\"avatar-preview\">\r\n                      {avatarPreview ? (\r\n                        <img \r\n                          src={avatarPreview} \r\n                          alt=\"头像预览\"\r\n                          style={{\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            objectFit: 'cover',\r\n                            objectPosition: 'center'\r\n                          }}\r\n                          onLoad={() => console.log('✅ 头像预览加载成功')}\r\n                          onError={(e) => {\r\n                            console.error('❌ 头像预览加载失败:', avatarPreview);\r\n                            e.target.style.display = 'none';\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <div className=\"avatar-placeholder\">\r\n                          {profileForm.username?.charAt(0).toUpperCase()}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"avatar-controls\">\r\n                      <input\r\n                        type=\"file\"\r\n                        id=\"avatar-upload\"\r\n                        accept=\"image/*\"\r\n                        onChange={handleAvatarUpload}\r\n                        className=\"avatar-input\"\r\n                      />\r\n                      <label htmlFor=\"avatar-upload\" className=\"avatar-upload-btn\">\r\n                        选择图片\r\n                      </label>\r\n                      {avatarFile && (\r\n                        <button \r\n                          className=\"avatar-save-btn\"\r\n                          onClick={handleAvatarSave}\r\n                          disabled={saving}\r\n                        >\r\n                          {saving ? '上传中...' : '保存头像'}\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"avatar-hint\">\r\n                    支持 JPG、PNG 格式，大小不超过 2MB\r\n                  </div>\r\n                </div>\r\n\r\n                <form onSubmit={handleProfileUpdate} className=\"settings-form\">\r\n                  <div className=\"form-group\">\r\n                    <label>用户名</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={profileForm.username}\r\n                      disabled\r\n                      className=\"disabled-input\"\r\n                    />\r\n                    <div className=\"field-hint\">用户名创建后不可修改</div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>邮箱地址</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      value={profileForm.email}\r\n                      disabled\r\n                      className=\"disabled-input\"\r\n                    />\r\n                    <div className=\"field-hint\">\r\n                      {profileForm.email ? '邮箱已验证' : '未设置邮箱'}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>昵称</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={profileForm.nickname}\r\n                      onChange={(e) => handleInputChange('profile', 'nickname', e.target.value)}\r\n                      placeholder=\"请输入您的昵称\"\r\n                      maxLength={20}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>个人简介</label>\r\n                    <textarea\r\n                      value={profileForm.bio}\r\n                      onChange={(e) => handleInputChange('profile', 'bio', e.target.value)}\r\n                      placeholder=\"介绍一下您自己...\"\r\n                      rows=\"3\"\r\n                      maxLength={200}\r\n                    />\r\n                    <div className=\"char-count\">\r\n                      {profileForm.bio.length}/200\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-actions\">\r\n                    <button \r\n                      type=\"submit\" \r\n                      className=\"save-button\"\r\n                      disabled={saving}\r\n                    >\r\n                      {saving ? '保存中...' : '保存更改'}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'security' && (\r\n              <div className=\"tab-content\">\r\n                <h3>安全设置</h3>\r\n                \r\n                {/* 邮箱验证 */}\r\n                <div className=\"security-section\">\r\n                  <h4>邮箱验证</h4>\r\n                  <div className=\"security-item\">\r\n                    <div className=\"security-info\">\r\n                      <span className=\"security-label\">邮箱状态</span>\r\n                      <span className={`security-status ${securityForm.emailVerified ? 'verified' : 'unverified'}`}>\r\n                        {securityForm.emailVerified ? '已验证' : '未验证'}\r\n                      </span>\r\n                    </div>\r\n                    {!securityForm.emailVerified && (\r\n                      <button \r\n                        className=\"security-action-btn\"\r\n                        onClick={handleEmailVerification}\r\n                        disabled={loading || !profileForm.email}\r\n                      >\r\n                        {loading ? '发送中...' : '发送验证邮件'}\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 密码修改 */}\r\n                <div className=\"security-section\">\r\n                  <h4>修改密码</h4>\r\n                  <form onSubmit={handlePasswordChange} className=\"settings-form\">\r\n                    <div className=\"form-group\">\r\n                      <label>当前密码</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        value={passwordForm.currentPassword}\r\n                        onChange={(e) => handleInputChange('password', 'currentPassword', e.target.value)}\r\n                        placeholder=\"请输入当前密码\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>新密码</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        value={passwordForm.newPassword}\r\n                        onChange={(e) => handleInputChange('password', 'newPassword', e.target.value)}\r\n                        placeholder=\"请输入新密码（至少6位）\"\r\n                        minLength={6}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>确认新密码</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        value={passwordForm.confirmPassword}\r\n                        onChange={(e) => handleInputChange('password', 'confirmPassword', e.target.value)}\r\n                        placeholder=\"请再次输入新密码\"\r\n                        minLength={6}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"password-strength\">\r\n                      <div className=\"strength-bar\">\r\n                        <div \r\n                          className={`strength-fill ${\r\n                            passwordForm.newPassword.length >= 6 ? 'strong' : 'weak'\r\n                          }`}\r\n                          style={{ \r\n                            width: `${Math.min((passwordForm.newPassword.length / 6) * 100, 100)}%` \r\n                          }}\r\n                        ></div>\r\n                      </div>\r\n                      <div className=\"strength-text\">\r\n                        {passwordForm.newPassword.length >= 6 ? '密码强度足够' : '密码至少需要6位'}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-actions\">\r\n                      <button \r\n                        type=\"submit\" \r\n                        className=\"save-button\"\r\n                        disabled={saving}\r\n                      >\r\n                        {saving ? '更新中...' : '修改密码'}\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n\r\n                {/* 密码重置 */}\r\n                <div className=\"security-section\">\r\n                  <h4>密码重置</h4>\r\n                  <div className=\"security-item\">\r\n                    <div className=\"security-info\">\r\n                      <span className=\"security-label\">忘记密码？</span>\r\n                      <span className=\"security-description\">\r\n                        通过邮箱重置您的密码\r\n                      </span>\r\n                    </div>\r\n                    <button \r\n                      className=\"security-action-btn secondary\"\r\n                      onClick={handlePasswordReset}\r\n                      disabled={loading || !profileForm.email}\r\n                    >\r\n                      {loading ? '发送中...' : '发送重置邮件'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'preferences' && (\r\n              <div className=\"tab-content\">\r\n                <h3>偏好设置</h3>\r\n                <form onSubmit={handlePreferencesUpdate} className=\"settings-form\">\r\n                  <div className=\"form-group\">\r\n                    <label>主题模式</label>\r\n                    <div className=\"radio-group\">\r\n                      <label className=\"radio-option\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          name=\"theme\"\r\n                          value=\"light\"\r\n                          checked={preferencesForm.theme === 'light'}\r\n                          onChange={(e) => handleInputChange('preferences', 'theme', e.target.value)}\r\n                        />\r\n                        <span className=\"radio-label\">\r\n                          <span className=\"radio-icon\">🌞</span>\r\n                          浅色模式\r\n                        </span>\r\n                      </label>\r\n                      <label className=\"radio-option\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          name=\"theme\"\r\n                          value=\"dark\"\r\n                          checked={preferencesForm.theme === 'dark'}\r\n                          onChange={(e) => handleInputChange('preferences', 'theme', e.target.value)}\r\n                        />\r\n                        <span className=\"radio-label\">\r\n                          <span className=\"radio-icon\">🌙</span>\r\n                          深色模式\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>语言</label>\r\n                    <select\r\n                      value={preferencesForm.language}\r\n                      onChange={(e) => handleInputChange('preferences', 'language', e.target.value)}\r\n                    >\r\n                      <option value=\"zh-CN\">简体中文</option>\r\n                      <option value=\"en-US\">English</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>通知设置</label>\r\n                    <div className=\"switch-group\">\r\n                      <label className=\"switch\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={preferencesForm.notifications}\r\n                          onChange={(e) => handleInputChange('preferences', 'notifications', e.target.checked)}\r\n                        />\r\n                        <span className=\"slider\"></span>\r\n                      </label>\r\n                      <span className=\"switch-label\">\r\n                        启用浏览器通知\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>邮件更新</label>\r\n                    <div className=\"switch-group\">\r\n                      <label className=\"switch\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={preferencesForm.emailUpdates}\r\n                          onChange={(e) => handleInputChange('preferences', 'emailUpdates', e.target.checked)}\r\n                        />\r\n                        <span className=\"slider\"></span>\r\n                      </label>\r\n                      <span className=\"switch-label\">\r\n                        接收产品更新邮件\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-actions\">\r\n                    <button \r\n                      type=\"submit\" \r\n                      className=\"save-button\"\r\n                      disabled={saving}\r\n                    >\r\n                      {saving ? '保存中...' : '保存设置'}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'data' && (\r\n              <div className=\"tab-content\">\r\n                <h3>学习统计</h3>\r\n                \r\n                {/* 使用与 HomePage 相同的统计样式 */}\r\n                <div className=\"stats-overview\">\r\n                  <div className=\"stats-grid\">\r\n                    <div className=\"stat-card\">\r\n                      <div className=\"stat-icon\">📚</div>\r\n                      <div className=\"stat-content\">\r\n                        <div className=\"stat-number\">{studyStats.totalCategories}</div>\r\n                        <div className=\"stat-label\">知识分类</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"stat-card\">\r\n                      <div className=\"stat-icon\">❓</div>\r\n                      <div className=\"stat-content\">\r\n                        <div className=\"stat-number\">{studyStats.totalQuestions}</div>\r\n                        <div className=\"stat-label\">题目总数</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"stat-card\">\r\n                      <div className=\"stat-icon\">📖</div>\r\n                      <div className=\"stat-content\">\r\n                        <div className=\"stat-number\">{studyStats.reviewQuestions}</div>\r\n                        <div className=\"stat-label\">待复习</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"stat-card\">\r\n                      <div className=\"stat-icon\">⚡</div>\r\n                      <div className=\"stat-content\">\r\n                        <div className=\"stat-number\">{studyStats.todayReviewed}</div>\r\n                        <div className=\"stat-label\">今日复习</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 进度统计 */}\r\n                <div className=\"progress-section\">\r\n                  <div className=\"progress-item\">\r\n                    <div className=\"progress-header\">\r\n                      <span className=\"progress-label\">复习进度</span>\r\n                      <span className=\"progress-percent\">\r\n                        {studyStats.totalQuestions > 0 \r\n                          ? Math.round(((studyStats.totalQuestions - studyStats.reviewQuestions) / studyStats.totalQuestions) * 100)\r\n                          : 0\r\n                        }%\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"progress-bar\">\r\n                      <div \r\n                        className=\"progress-fill\"\r\n                        style={{ \r\n                          width: `${studyStats.totalQuestions > 0 \r\n                            ? ((studyStats.totalQuestions - studyStats.reviewQuestions) / studyStats.totalQuestions) * 100 \r\n                            : 0\r\n                          }%` \r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"progress-text\">\r\n                      已复习 {studyStats.totalQuestions - studyStats.reviewQuestions} / {studyStats.totalQuestions} 题目\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 数据导出 */}\r\n                <div className=\"data-section\">\r\n                  <h4>数据导出</h4>\r\n                  <div className=\"data-item\">\r\n                    <div className=\"data-info\">\r\n                      <span className=\"data-label\">导出学习数据</span>\r\n                      <span className=\"data-description\">\r\n                        导出您的所有分类和题目数据为 JSON 格式\r\n                      </span>\r\n                    </div>\r\n                    <button \r\n                      className=\"data-action-btn\"\r\n                      onClick={handleDataExport}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? '导出中...' : '导出数据'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 数据清理 */}\r\n                <div className=\"data-section\">\r\n                  <h4>数据清理</h4>\r\n                  <div className=\"data-item danger\">\r\n                    <div className=\"data-info\">\r\n                      <span className=\"data-label\">删除账户数据</span>\r\n                      <span className=\"data-description\">\r\n                        永久删除您的所有学习数据，此操作不可撤销\r\n                      </span>\r\n                    </div>\r\n                    <button \r\n                      className=\"data-action-btn danger\"\r\n                      disabled\r\n                    >\r\n                      即将开放\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSettingsModal;","// src/pages/ReviewPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport { getAllQuestions, updateQuestion } from '../services/questionService';\r\nimport AV from 'leancloud-storage';\r\nimport ReviewReminderSection from '../components/ReviewReminderSection';\r\nimport './ReviewPage.css';\r\n\r\n// 创建 React Query 客户端\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      staleTime: 5 * 60 * 1000,\r\n      cacheTime: 10 * 60 * 1000,\r\n      retry: 1,\r\n    },\r\n  },\r\n});\r\n\r\nconst ReviewPage = () => {\r\n  const navigate = useNavigate();\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // 复习提醒相关状态\r\n  const [reviewThreshold, setReviewThreshold] = useState(7);\r\n  const [reviewQuestions, setReviewQuestions] = useState([]);\r\n  const [showReviewSettings, setShowReviewSettings] = useState(false);\r\n\r\n  // 用户状态\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  // 检查用户登录状态\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n    \r\n    if (user) {\r\n      initializeData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const initializeData = async () => {\r\n    try {\r\n      const questionsData = await getAllQuestions();\r\n      setQuestions(questionsData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 计算需要复习的题目\r\n  useEffect(() => {\r\n    const calculateReviewQuestions = () => {\r\n      const now = new Date();\r\n      const thresholdMs = reviewThreshold * 24 * 60 * 60 * 1000;\r\n      \r\n      const needReview = questions.filter(question => {\r\n        const lastReviewed = new Date(question.updatedAt || question.createdAt);\r\n        const timeDiff = now - lastReviewed;\r\n        return timeDiff >= thresholdMs;\r\n      }).sort((a, b) => {\r\n        return new Date(a.updatedAt || a.createdAt) - new Date(b.updatedAt || b.createdAt);\r\n      });\r\n      \r\n      setReviewQuestions(needReview);\r\n    };\r\n\r\n    if (questions.length > 0) {\r\n      calculateReviewQuestions();\r\n    }\r\n  }, [questions, reviewThreshold]);\r\n\r\n  // 更新题目复习时间\r\n  const handleUpdateQuestionTime = async (questionId) => {\r\n    try {\r\n      console.log('更新题目复习时间:', questionId);\r\n      \r\n      const currentTime = new Date().toISOString();\r\n      \r\n      await updateQuestion(questionId, {\r\n        updatedAt: currentTime\r\n      });\r\n      \r\n      setQuestions(prev => prev.map(q => \r\n        q.id === questionId \r\n          ? { ...q, updatedAt: currentTime }\r\n          : q\r\n      ));\r\n      \r\n      console.log(`题目 ${questionId} 复习时间已更新`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('更新题目时间失败:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleQuestionClick = (questionId) => {\r\n    const question = questions.find(q => q.id === questionId);\r\n    if (question && question.category) {\r\n      navigate(`/category/${question.category.id}`);\r\n    }\r\n  };\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"review-page\">\r\n        <div className=\"auth-required-container\">\r\n          <div className=\"auth-required-icon\">🔐</div>\r\n          <h2>请先登录</h2>\r\n          <p>登录后即可使用复习提醒功能</p>\r\n          <div className=\"auth-required-actions\">\r\n            <button \r\n              onClick={() => {\r\n                window.dispatchEvent(new CustomEvent('showAuthModal', { \r\n                  detail: { tab: 'login' } \r\n                }));\r\n              }}\r\n              className=\"login-btn primary\"\r\n            >\r\n              🚀 立即登录\r\n            </button>\r\n            <button \r\n              onClick={() => {\r\n                window.dispatchEvent(new CustomEvent('showAuthModal', { \r\n                  detail: { tab: 'register' } \r\n                }));\r\n              }}\r\n              className=\"login-btn secondary\"\r\n            >\r\n              📝 注册账号\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"review-page\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载复习数据中...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"review-page\">\r\n        <div className=\"error-container\">\r\n          <h2>加载失败</h2>\r\n          <p>{error}</p>\r\n          <button onClick={() => window.location.reload()} className=\"retry-btn\">\r\n            重试\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <div className=\"review-page\">\r\n        <header className=\"review-hero-section\">\r\n          <div className=\"hero-content\">\r\n            <div className=\"user-welcome\">\r\n              <h1 className=\"hero-title\">📚 复习提醒</h1>\r\n              <p className=\"hero-subtitle\">\r\n                智能管理您的学习进度，{reviewQuestions.length > 0 ? \r\n                  `有 ${reviewQuestions.length} 道题目需要复习` : \r\n                  '所有题目都已及时复习'\r\n                }\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"review-stats-overview\">\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-number\">{questions.length}</div>\r\n                <div className=\"stat-label\">总题目数</div>\r\n              </div>\r\n              <div className=\"stat-card warning\">\r\n                <div className=\"stat-number\">{reviewQuestions.length}</div>\r\n                <div className=\"stat-label\">待复习</div>\r\n              </div>\r\n              <div className=\"stat-card success\">\r\n                <div className=\"stat-number\">{questions.length - reviewQuestions.length}</div>\r\n                <div className=\"stat-label\">已复习</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <ReviewReminderSection\r\n          reviewQuestions={reviewQuestions}\r\n          setReviewQuestions={setReviewQuestions}\r\n          reviewThreshold={reviewThreshold}\r\n          setReviewThreshold={setReviewThreshold}\r\n          showReviewSettings={showReviewSettings}\r\n          setShowReviewSettings={setShowReviewSettings}\r\n          onQuestionClick={handleQuestionClick}\r\n          onUpdateQuestionTime={handleUpdateQuestionTime}\r\n          questions={questions}\r\n        />\r\n\r\n        <footer className=\"review-footer\">\r\n          <div className=\"footer-actions\">\r\n            <button \r\n              onClick={() => navigate('/')}\r\n              className=\"back-to-home-btn\"\r\n            >\r\n              ← 返回首页\r\n            </button>\r\n            <div className=\"footer-info\">\r\n              基于间隔重复原理，帮助您高效记忆\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n\r\nexport default ReviewPage;","// src/components/PWAInstallPrompt.jsx\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst PWAInstallPrompt = () => {\r\n  const [deferredPrompt, setDeferredPrompt] = useState(null);\r\n  const [showPrompt, setShowPrompt] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleBeforeInstallPrompt = (e) => {\r\n      // 阻止默认的安装提示\r\n      e.preventDefault();\r\n      // 保存事件以便后续使用\r\n      setDeferredPrompt(e);\r\n      setShowPrompt(true);\r\n    };\r\n\r\n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\r\n    };\r\n  }, []);\r\n\r\n  const handleInstallClick = async () => {\r\n    if (!deferredPrompt) return;\r\n\r\n    // 显示安装提示\r\n    deferredPrompt.prompt();\r\n    \r\n    // 等待用户选择\r\n    const { outcome } = await deferredPrompt.userChoice;\r\n    \r\n    if (outcome === 'accepted') {\r\n      console.log('用户接受了安装');\r\n    } else {\r\n      console.log('用户拒绝了安装');\r\n    }\r\n    \r\n    setDeferredPrompt(null);\r\n    setShowPrompt(false);\r\n  };\r\n\r\n  const handleDismiss = () => {\r\n    setDeferredPrompt(null);\r\n    setShowPrompt(false);\r\n  };\r\n\r\n  if (!showPrompt) return null;\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      bottom: '20px',\r\n      right: '20px',\r\n      background: 'white',\r\n      padding: '16px',\r\n      borderRadius: '8px',\r\n      boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\r\n      zIndex: 1000,\r\n      maxWidth: '300px'\r\n    }}>\r\n      <h4>安装应用</h4>\r\n      <p>将此应用安装到您的设备上以获得更好的体验</p>\r\n      <div style={{ display: 'flex', gap: '8px', marginTop: '12px' }}>\r\n        <button \r\n          onClick={handleInstallClick}\r\n          style={{\r\n            background: '#007bff',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '8px 16px',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          安装\r\n        </button>\r\n        <button \r\n          onClick={handleDismiss}\r\n          style={{\r\n            background: 'transparent',\r\n            border: '1px solid #ccc',\r\n            padding: '8px 16px',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          稍后\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PWAInstallPrompt;","// pages/OfflineQuestionsPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { cacheService } from '../services/cacheService';\r\nimport './OfflineQuestionsPage.css';\r\n\r\n// 临时内联组件，避免依赖问题\r\nconst OfflineQuestionDetailCard = ({ \r\n  questionId, \r\n  onBack,\r\n  onNavigateToQuestion \r\n}) => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [offlineQuestions, setOfflineQuestions] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    loadOfflineQuestions();\r\n  }, [questionId]);\r\n\r\n  const loadOfflineQuestions = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const cacheData = await cacheService.getCachedQuestions();\r\n      const questions = cacheData.questions || [];\r\n      \r\n      setOfflineQuestions(questions);\r\n      \r\n      // 查找当前题目\r\n      let targetQuestion = null;\r\n      let targetIndex = 0;\r\n      \r\n      if (questionId) {\r\n        // 通过 ID 查找\r\n        targetQuestion = questions.find(q => q.id === questionId);\r\n        targetIndex = questions.findIndex(q => q.id === questionId);\r\n      } else {\r\n        // 没有指定 ID，显示第一题\r\n        targetQuestion = questions[0] || null;\r\n        targetIndex = 0;\r\n      }\r\n      \r\n      if (targetQuestion) {\r\n        setCurrentQuestion(targetQuestion);\r\n        setCurrentIndex(targetIndex);\r\n      } else {\r\n        setError('未找到该题目或题目不在缓存中');\r\n      }\r\n    } catch (error) {\r\n      console.error('加载离线题目失败:', error);\r\n      setError('加载离线题目失败: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 导航到上一题\r\n  const goToPrevious = () => {\r\n    if (currentIndex > 0) {\r\n      const newIndex = currentIndex - 1;\r\n      setCurrentIndex(newIndex);\r\n      setCurrentQuestion(offlineQuestions[newIndex]);\r\n      \r\n      // 通知父组件 URL 变化\r\n      if (onNavigateToQuestion) {\r\n        onNavigateToQuestion(offlineQuestions[newIndex].id);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 导航到下一题\r\n  const goToNext = () => {\r\n    if (currentIndex < offlineQuestions.length - 1) {\r\n      const newIndex = currentIndex + 1;\r\n      setCurrentIndex(newIndex);\r\n      setCurrentQuestion(offlineQuestions[newIndex]);\r\n      \r\n      // 通知父组件 URL 变化\r\n      if (onNavigateToQuestion) {\r\n        onNavigateToQuestion(offlineQuestions[newIndex].id);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"offline-detail-container\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载离线题目...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"offline-detail-container\">\r\n        <div className=\"error-container\">\r\n          <div className=\"error-icon\">❌</div>\r\n          <h3>加载失败</h3>\r\n          <p>{error}</p>\r\n          <button onClick={onBack} className=\"back-btn\">\r\n            返回列表\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!currentQuestion) {\r\n    return (\r\n      <div className=\"offline-detail-container\">\r\n        <div className=\"empty-state\">\r\n          <div className=\"empty-icon\">📭</div>\r\n          <h3>题目不存在</h3>\r\n          <p>该题目可能已被删除或不在缓存中</p>\r\n          <button onClick={onBack} className=\"back-btn\">\r\n            返回列表\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"offline-detail-container\">\r\n      {/* 离线模式头部 */}\r\n      <div className=\"offline-detail-header\">\r\n        <div className=\"header-left\">\r\n          <button onClick={onBack} className=\"back-button\">\r\n            ← 返回\r\n          </button>\r\n          <div className=\"offline-badge\">离线模式</div>\r\n        </div>\r\n        \r\n        <div className=\"header-center\">\r\n          <h3>题目详情</h3>\r\n          <span className=\"question-counter\">\r\n            {currentIndex + 1} / {offlineQuestions.length}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"header-right\">\r\n          <button \r\n            onClick={goToPrevious}\r\n            disabled={currentIndex === 0}\r\n            className=\"nav-button\"\r\n          >\r\n            ← 上一题\r\n          </button>\r\n          <button \r\n            onClick={goToNext}\r\n            disabled={currentIndex === offlineQuestions.length - 1}\r\n            className=\"nav-button\"\r\n          >\r\n            下一题 →\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 离线模式提示 */}\r\n      <div className=\"offline-notice\">\r\n        <div className=\"notice-icon\">📶</div>\r\n        <div className=\"notice-content\">\r\n          <strong>离线模式</strong>\r\n          <span>当前处于离线状态，部分功能受限</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 简化版题目详情显示 */}\r\n      <div className=\"question-card-wrapper\">\r\n        <div className=\"offline-question-card\">\r\n          <div className=\"question-header\">\r\n            <h2 className=\"question-title\">{currentQuestion.title}</h2>\r\n            <div className=\"question-meta\">\r\n              <span \r\n                className=\"difficulty-badge\"\r\n                style={{ backgroundColor: getDifficultyColor(currentQuestion.difficulty) }}\r\n              >\r\n                {getDifficultyText(currentQuestion.difficulty)}\r\n              </span>\r\n              <span className=\"category-tag\">\r\n                {currentQuestion.category?.name || '未分类'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"question-content\">\r\n            <div className=\"answer-section\">\r\n              <h4>详细答案</h4>\r\n              <div className=\"answer-text\">\r\n                {currentQuestion.detailedAnswer || currentQuestion.oralAnswer || '暂无答案'}\r\n              </div>\r\n            </div>\r\n\r\n            {currentQuestion.code && (\r\n              <div className=\"code-section\">\r\n                <h4>代码</h4>\r\n                <pre className=\"code-block\">\r\n                  <code>{currentQuestion.code}</code>\r\n                </pre>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 底部导航 */}\r\n      <div className=\"offline-detail-footer\">\r\n        <button \r\n          onClick={goToPrevious}\r\n          disabled={currentIndex === 0}\r\n          className=\"footer-nav-button\"\r\n        >\r\n          ← 上一题\r\n        </button>\r\n        \r\n        <div className=\"progress-info\">\r\n          <div className=\"progress-bar\">\r\n            <div \r\n              className=\"progress-fill\"\r\n              style={{\r\n                width: `${((currentIndex + 1) / offlineQuestions.length) * 100}%`\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <span>进度: {currentIndex + 1} / {offlineQuestions.length}</span>\r\n        </div>\r\n        \r\n        <button \r\n          onClick={goToNext}\r\n          disabled={currentIndex === offlineQuestions.length - 1}\r\n          className=\"footer-nav-button\"\r\n        >\r\n          下一题 →\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 工具函数\r\nconst getDifficultyColor = (difficulty) => {\r\n  switch (difficulty) {\r\n    case 'easy': return '#52c41a';\r\n    case 'medium': return '#faad14';\r\n    case 'hard': return '#f5222d';\r\n    default: return '#666';\r\n  }\r\n};\r\n\r\nconst getDifficultyText = (difficulty) => {\r\n  switch (difficulty) {\r\n    case 'easy': return '简单';\r\n    case 'medium': return '中等';\r\n    case 'hard': return '困难';\r\n    default: return difficulty;\r\n  }\r\n};\r\n\r\nconst OfflineQuestionsPage = () => {\r\n  const { categoryName, questionId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [offlineQuestions, setOfflineQuestions] = useState([]);\r\n  const [filteredQuestions, setFilteredQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [viewMode, setViewMode] = useState('list'); // 'list' 或 'detail'\r\n\r\n  useEffect(() => {\r\n    loadOfflineData();\r\n  }, [categoryName, questionId]);\r\n\r\n  const loadOfflineData = async () => {\r\n    try {\r\n      const cacheData = await cacheService.getCachedQuestions();\r\n      const questions = cacheData.questions || [];\r\n      \r\n      setOfflineQuestions(questions);\r\n      \r\n      // 根据分类过滤题目\r\n      if (categoryName && categoryName !== 'all') {\r\n        const filtered = questions.filter(q => \r\n          q.category?.name === categoryName || '未分类' === categoryName\r\n        );\r\n        setFilteredQuestions(filtered);\r\n      } else {\r\n        setFilteredQuestions(questions);\r\n      }\r\n\r\n      // 检查是否直接进入详情模式\r\n      if (questionId) {\r\n        setViewMode('detail');\r\n      }\r\n    } catch (error) {\r\n      console.error('加载离线题目失败:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleQuestionClick = (question) => {\r\n    setViewMode('detail');\r\n    navigate(`/offline/questions/${question.id}`);\r\n  };\r\n\r\n  const handleBackToList = () => {\r\n    setViewMode('list');\r\n    navigate('/offline/questions');\r\n  };\r\n\r\n  const handleNavigateToQuestion = (newQuestionId) => {\r\n    navigate(`/offline/questions/${newQuestionId}`);\r\n  };\r\n\r\n  // 详情视图\r\n  if (viewMode === 'detail') {\r\n    return (\r\n      <OfflineQuestionDetailCard \r\n        questionId={questionId}\r\n        onBack={handleBackToList}\r\n        onNavigateToQuestion={handleNavigateToQuestion}\r\n      />\r\n    );\r\n  }\r\n\r\n  // 列表视图\r\n  if (loading) {\r\n    return (\r\n      <div className=\"offline-page\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载离线数据...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (filteredQuestions.length === 0) {\r\n    return (\r\n      <div className=\"offline-page\">\r\n        <div className=\"empty-state\">\r\n          <div className=\"empty-icon\">📦</div>\r\n          <h3>暂无离线题目</h3>\r\n          <p>当前没有缓存的题目数据，请连接网络后缓存题目</p>\r\n          <button \r\n            onClick={() => window.history.back()}\r\n            className=\"back-btn\"\r\n          >\r\n            返回\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"offline-page\">\r\n      <div className=\"offline-header\">\r\n        <button \r\n          onClick={() => window.history.back()}\r\n          className=\"back-button\"\r\n        >\r\n          ← 返回主页\r\n        </button>\r\n        <h2>📦 离线题目</h2>\r\n        {categoryName && categoryName !== 'all' && (\r\n          <p>分类: {categoryName}</p>\r\n        )}\r\n        <div className=\"offline-stats\">\r\n          共 {filteredQuestions.length} 道题目 • 离线模式\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"offline-actions\">\r\n        <div className=\"view-options\">\r\n          <span>排序方式:</span>\r\n          <select className=\"sort-select\">\r\n            <option value=\"default\">默认顺序</option>\r\n            <option value=\"difficulty\">按难度</option>\r\n            <option value=\"title\">按标题</option>\r\n          </select>\r\n        </div>\r\n        \r\n        <div className=\"cache-info\">\r\n          缓存时间: {new Date().toLocaleString()}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"offline-questions-list\">\r\n        {filteredQuestions.map((question, index) => (\r\n          <div\r\n            key={question.id || index}\r\n            className=\"offline-question-card\"\r\n            onClick={() => handleQuestionClick(question)}\r\n          >\r\n            <div className=\"question-card-header\">\r\n              <h4 className=\"question-title\">{question.title}</h4>\r\n              <span \r\n                className=\"difficulty-badge\"\r\n                style={{ \r\n                  backgroundColor: getDifficultyColor(question.difficulty) \r\n                }}\r\n              >\r\n                {getDifficultyText(question.difficulty)}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className=\"question-card-body\">\r\n              <p className=\"question-preview\">\r\n                {getAnswerPreview(question)}\r\n              </p>\r\n              \r\n              <div className=\"question-meta\">\r\n                <span className=\"category-tag\">\r\n                  {question.category?.name || '未分类'}\r\n                </span>\r\n                <span className=\"offline-tag\">离线</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"question-card-footer\">\r\n              <span className=\"question-date\">\r\n                创建: {new Date(question.createdAt).toLocaleDateString()}\r\n              </span>\r\n              <button className=\"view-detail-btn\">\r\n                查看详情 →\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getAnswerPreview = (question) => {\r\n  const answer = question.oralAnswer || question.detailedAnswer || '';\r\n  const preview = answer.substring(0, 120).replace(/[#*`]/g, '');\r\n  return preview + (answer.length > 120 ? '...' : '');\r\n};\r\n\r\nexport default OfflineQuestionsPage;","// App.jsx\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport HomePage from './pages/HomePage';\nimport InitPage from './components/InitPage';\nimport CategoryDetailPage from './pages/CategoryDetailPage';\nimport TestPage from './pages/TestPage';\nimport Navigation from './components/Navigation';\nimport AuthModal from './components/AuthModal';\nimport UserSettingsModal from './components/UserSettingsModal';\nimport ReviewPage from './pages/ReviewPage';\nimport './App.css';\nimport PWAInstallPrompt from './components/PWAInstallPrompt';\nimport OfflineQuestionsPage from './pages/OfflineQuestionsPage';\n\n\n\n// 在组件外部创建 QueryClient 实例\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 1,\n      staleTime: 5 * 60 * 1000, // 5分钟\n      gcTime: 10 * 60 * 1000, // 缓存时间10分钟\n    },\n  },\n});\n\nfunction App() {\n  const [isAuthModalOpen, setIsAuthModalOpen] = useState(false);\n  const [authModalTab, setAuthModalTab] = useState('login');\n  const [isUserSettingsOpen, setIsUserSettingsOpen] = useState(false);\n  const [userSettingsTab, setUserSettingsTab] = useState('profile');\n\n  // 监听自定义事件\n  useEffect(() => {\n    const handleShowAuthModal = (event) => {\n      const tab = event.detail?.tab || 'login';\n      setAuthModalTab(tab);\n      setIsAuthModalOpen(true);\n    };\n\n    const handleShowUserSettings = (event) => {\n      const tab = event.detail?.tab || 'profile';\n      setUserSettingsTab(tab);\n      setIsUserSettingsOpen(true);\n    };\n\n    window.addEventListener('showAuthModal', handleShowAuthModal);\n    window.addEventListener('showUserSettings', handleShowUserSettings);\n\n    return () => {\n      window.removeEventListener('showAuthModal', handleShowAuthModal);\n      window.removeEventListener('showUserSettings', handleShowUserSettings);\n    };\n  }, []);\n\n  const handleShowAuthModal = (tab = 'login') => {\n    setAuthModalTab(tab);\n    setIsAuthModalOpen(true);\n  };\n\n  // 添加认证成功回调\n  const handleAuthSuccess = () => {\n    window.location.reload();\n  };\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Router>\n        <Navigation onShowAuthModal={handleShowAuthModal} />\n        \n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/init\" element={<InitPage />} />\n          <Route path=\"/category/:categoryId\" element={<CategoryDetailPage />} />\n          <Route path=\"/test\" element={<TestPage />} />\n          <Route path=\"/review\" element={<ReviewPage />} />\n          <Route path=\"/offline/questions\" element={<OfflineQuestionsPage />} />\n<Route path=\"/offline/questions/:questionId\" element={<OfflineQuestionsPage />} />\n<Route path=\"/offline/category/:categoryName\" element={<OfflineQuestionsPage />} />\n<Route path=\"/offline/category/:categoryName/question/:questionId\" element={<OfflineQuestionsPage />} />\n        </Routes>\n\n        <AuthModal \n          isOpen={isAuthModalOpen}\n          onClose={() => setIsAuthModalOpen(false)}\n          defaultTab={authModalTab}\n          onAuthSuccess={handleAuthSuccess}\n        />\n\n        <UserSettingsModal \n          isOpen={isUserSettingsOpen}\n          onClose={() => setIsUserSettingsOpen(false)}\n        />\n                <PWAInstallPrompt />\n\n      </Router>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;","import 'core-js/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// 注册 Service Worker\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', async () => {\n    try {\n      // 先检查 sw.js 文件是否存在\n      const response = await fetch('/sw.js');\n      if (!response.ok) {\n        throw new Error(`sw.js not found: ${response.status}`);\n      }\n      \n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('javascript')) {\n        throw new Error(`Invalid MIME type: ${contentType}`);\n      }\n      \n      // 文件存在且类型正确，进行注册\n      const registration = await navigator.serviceWorker.register('/sw.js');\n      console.log('SW registered successfully: ', registration);\n    } catch (error) {\n      console.log('SW registration failed: ', error);\n      console.log('Error details:', error.message);\n    }\n  });\n}"],"names":["constructor","this","baseUrl","sessions","Map","checkServerStatus","console","log","response","fetch","data","json","ok","error","message","sendWelcome","userId","getFallbackWelcome","requestBody","method","headers","body","JSON","stringify","status","statusText","errorText","text","Error","success","intent","warn","stack","detectIntent","getFallbackResponse","confidence","parameters","msg","toLowerCase","includes","Chatbox","onNavigate","categories","questions","currentUser","isOpen","setIsOpen","useState","messages","setMessages","inputText","setInputText","isTyping","setIsTyping","messagesEndRef","useRef","useEffect","length","sendWelcomeMessage","async","DialogflowService","id","welcomeMessage","Date","now","isBot","timestamp","quickReplies","fallbackMessage","getUsername","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","prev","botResponse","actions","processMessage","botMessage","_jsxs","_Fragment","children","className","onClick","title","_jsx","clearConversation","map","split","line","i","toLocaleTimeString","hour","minute","reply","index","setTimeout","action","type","target","confirmMessage","label","searchMessage","handleFunctionAction","handleActionClick","ref","value","onChange","e","onKeyPress","key","shiftKey","preventDefault","placeholder","rows","disabled","offlineService","isOnline","setupOnlineListeners","window","addEventListener","dispatchEvent","navigator","onLine","isOnlineMode","shouldUseOfflineData","simulateNetworkRequest","Promise","resolve","reject","eventName","CustomEvent","detail","callback","removeEventListener","initAV","AV","appId","process","appKey","serverURL","QueryOptions","SORT_BY_NAME","SORT_BY_QUESTION_COUNT","SORT_BY_UPDATED_AT","cacheConfig","ttl","categoryDetails","categoryDetailTtl","questionCounts","questionCountTtl","OFFLINE_CATEGORIES_KEY","isCacheValid","getOfflineCategories","cached","localStorage","getItem","parse","total","page","pageSize","saveCategoriesToOffline","setItem","getCategoriesQuestionCounts","counts","forEach","cat","categoryIds","categoryId","uncachedCategoryIds","get","count","push","countPromises","categoryPointer","createWithoutData","questionQuery","equalTo","countResults","all","set","batchError","categoryPointers","containedIn","select","find","question","category","fallbackError","getAllCategories","query","include","descending","result","name","description","questionCount","undefined","createdAt","updatedAt","createdBy","getCategories","options","isDefaultQuery","sortBy","SORT_BY_CREATED_AT","skip","limit","categoriesWithCount","createCategory","extend","categoryData","acl","setReadAccess","setWriteAccess","setPublicReadAccess","setACL","save","clear","requestManager","pendingRequests","cache","cacheTimeout","debounce","fn","delay","has","clearTimeout","timer","delete","cachedRequest","useCache","clearCache","DifficultyOptions","ProficiencyOptions","OFFLINE_QUESTIONS_KEY","getCategoryId","objectId","createCategoryPointer","batchUpdateQueue","batchUpdateTimer","scheduleBatchUpdate","change","updates","categoryUpdates","updatePromises","Object","entries","totalChange","categoryQuery","freshCategory","currentCount","newCount","Math","max","batchUpdateCategoryCounts","formatQuestionResponse","detailedAnswer","oralAnswer","code","url","tags","difficulty","proficiency","appearanceLevel","lastReviewedAt","getOfflineQuestions","saveQuestionsToOffline","createQuestion","questionData","updateCategoryCountImmediately","deleteQuestion","questionId","first","destroy","getAllQuestions","allQuestions","hasMore","batchResults","题目总数","批次","最新题目","slice","q","updateQuestion","updateData","oldCategory","keys","newCategoryId","oldCategoryId","updatedQuestion","cacheService","isSupported","checkSupport","cacheLimit","setCacheLimit","getCacheLimit","cacheQuestions","cacheQuestionsFallback","cacheData","version","min","getCachedQuestions","getCachedQuestionsFallback","getCacheStatus","getCacheStatusFallback","supported","hasCache","isExpired","removeItem","getCacheConfig","maxLimit","minLimit","defaultLimit","resetToDefault","OfflineIndicator","setIsOnline","cacheStatus","setCacheStatus","handleOnline","handleOffline","interval","setInterval","clearInterval","CacheManagementTab","onCacheUpdate","navigate","useNavigate","syncing","setSyncing","cacheSettings","setCacheSettings","autoCache","cacheStrategy","tempCacheLimit","setTempCacheLimit","showSettings","setShowSettings","debouncedCacheLimit","useDebounce","debouncedValue","setDebouncedValue","handler","throttledCacheLimit","useThrottle","throttledValue","setThrottledValue","lastRan","handleManualCache","useCallback","newStatus","alert","handleClearCache","handleSliderChange","CacheSettingsModal","htmlFor","step","parseInt","onInput","progress","style","setProperty","ReviewReminderSection","reviewQuestions","setReviewQuestions","reviewThreshold","setReviewThreshold","showReviewSettings","setShowReviewSettings","onQuestionClick","onUpdateQuestionTime","selectedUrgency","setSelectedUrgency","searchTerm","setSearchTerm","updatingQuestions","setUpdatingQuestions","Set","setCurrentUser","formatTimeAgo","date","diffMs","diffDays","floor","diffWeeks","diffMonths","getUrgencyLevel","lastReviewed","daysAgo","getUrgencyText","urgency","getUrgencyDaysDescription","handleQuestionClick","categoryUrl","history","pushState","PopStateEvent","location","href","filteredQuestions","filter","matchesSearch","questionsByUrgency","high","medium","low","getProgressPercentage","totalQuestions","reviewedQuestions","round","width","days","backgroundColor","urgencyColor","getUrgencyColor","isUpdating","substring","tag","tagIndex","stopPropagation","add","newList","errorMessage","newSet","handleReviewNow","handlePostpone","QuestionItem","React","getDifficultyColor","color","getDifficultyText","displayName","CalendarTooltip","dayData","position","onClose","isVisible","tooltipRef","queryClient","useQueryClient","cachedQuestions","setCachedQuestions","itemHeights","setItemHeights","questionsData","isLoading","useQuery","queryKey","toISOString","join","queryFn","missingQuestionIds","getQueryData","questionIds","batches","results","batch","getQuestionsBatch","setQueryData","enabled","staleTime","cacheTime","retry","retryDelay","parentRef","virtualizer","useVirtualizer","getScrollElement","estimateSize","overscan","handleClickOutside","event","contains","document","handleEscape","virtualQuestions","getVirtualItems","left","x","innerWidth","top","y","transform","getDate","toLocaleDateString","weekday","year","month","day","height","viewBox","fill","d","overflow","getTotalSize","virtualRow","size","start","Documents","selectedDoc","setSelectedDoc","currentQuoteIndex","setCurrentQuoteIndex","techQuotes","author","prevIndex","documents","icon","doc","filteredDocs","handleCloseModal","prevQuote","nextQuote","_","categoryDocs","handleDocClick","handleVisitSite","open","CommunityService","getPosts","sortOrder","keyword","authorId","titleQuery","contentQuery","or","createPost","postData","post","content","isPublic","getPostById","increment","getComments","postId","ascending","addComment","parentId","comment","parent","toggleLike","Like","existingLike","postObj","liked","like","getPopularTags","posts","tagCount","sort","a","b","CreatePostModal","onSuccess","formData","setFormData","submitting","setSubmitting","errors","setErrors","charCount","setCharCount","suggestedTags","setSuggestedTags","textareaRef","maxLengths","popularTags","scrollHeight","matchedTags","handleInputChange","field","onSubmit","validateForm","newErrors","tagsArray","newPost","submit","getTitleCharCountColor","ratio","maxLength","getContentCharCountColor","currentTags","t","newTags","handleTagSuggestionClick","checked","SearchBar","onSearch","setKeyword","isFocused","setIsFocused","showSuggestions","setShowSuggestions","searchInputRef","timeoutId","handleSuggestionClick","suggestion","handleSearch","onFocus","handleFocus","onBlur","handleBlur","onKeyDown","blur","handleClear","focus","TagCloud","onTagClick","maxTags","setTags","loading","setLoading","selectedTag","setSelectedTag","defaultTags","loadPopularTags","tagsWithColors","tagData","getTagColor","colors","handleClearFilter","maxCount","totalPosts","reduce","sum","getTagSize","sizes","isSelected","handleTagClick","CommunityStats","stats","setStats","totalComments","totalLikes","activeUsers","todayPosts","trendingTags","lastUpdated","setLastUpdated","loadStats","catch","today","setHours","greaterThanOrEqualTo","weekAgo","setDate","distinct","postQuery","formatNumber","num","toFixed","toString","formatTime","diffMins","diffHours","CommentItem","onReply","onUpdate","likes","setLikes","isLiked","setIsLiked","showActions","setShowActions","editing","setEditing","editContent","setEditContent","saving","setSaving","isAuthor","handleReplyClick","onMouseEnter","onMouseLeave","src","alt","handleEdit","confirm","handleCancelEdit","dangerouslySetInnerHTML","__html","replace","CommentSection","comments","setComments","newComment","setNewComment","setSortBy","replyingTo","setReplyingTo","loadComments","sortedComments","handleSubmitComment","showSuccessMessage","handleReply","getCommentCountText","cancelReply","ctrlKey","metaKey","PostCard","showComments","setShowComments","views","setViews","borderColor","handleToggleComments","CommunityPage","activeTab","setActiveTab","setPosts","allPosts","setAllPosts","showCreateModal","setShowCreateModal","searchKeyword","setSearchKeyword","pagination","setPagination","loadPosts","filtered","reset","currentPage","postsData","newAllPosts","getSearchStats","matchCount","handleLoadMore","QueryClient","defaultOptions","queries","HomePage","setCategories","setQuestions","setError","syncMessage","setSyncMessage","selectedMonth","setSelectedMonth","showAddCategory","setShowAddCategory","newCategoryName","setNewCategoryName","newCategoryDescription","setNewCategoryDescription","addingCategory","setAddingCategory","showDeleteConfirm","setShowDeleteConfirm","categoryToDelete","setCategoryToDelete","deletingCategory","setDeletingCategory","hoveredDay","setHoveredDay","tooltipPosition","setTooltipPosition","tooltipVisible","setTooltipVisible","calendarRef","offlineQuestions","setOfflineQuestions","showOfflineMode","setShowOfflineMode","swStatus","setSwStatus","activated","preCacheQuestions","showCacheSettings","setShowCacheSettings","loadOfflineData","user","initializeData","handleCacheUpdated","handleSwActivated","handleManualRefresh","handleQuestionCreated","handleAddCategory","newCategory","handleDeleteClick","handleConfirmDelete","deletedQuestions","destroyAll","clearCategoryCacheById","deleteCategory","handleCancelDelete","handleUpdateQuestionTime","currentTime","errorStack","handleGlobalError","calculateReviewQuestions","thresholdMs","needReview","categoriesData","分类数据","题目数据","模式","err","cacheError","filteredCategories","useMemo","categoryStats","totalCategories","categoriesWithQuestions","totalQuestionsFromCategories","分类总数","基于分类的题目总数","基于所有题目的题目总数","差异","abs","有题目的分类数","对象","各分类详情","分类名称","服务层题目数","前端计算题目数","是否匹配","getDayQuestions","dateStr","getDayColor","getMonthlyCalendarData","monthStart","getFullYear","getMonth","monthEnd","dateCounts","questionDate","calendarData","currentDate","dayQuestions","isToday","handleDayMouseEnter","calendarRect","getBoundingClientRect","dayRect","currentTarget","handleDayMouseLeave","querySelector","handleTooltipClose","navigateMonth","direction","newDate","setMonth","getMonthStats","monthData","daysWithQuestions","maxDaily","getCategoryChartData","categoryMap","categoryName","fullName","percentage","getDifficultyData","difficultyMap","getActiveDays","toDateString","handleCategoryClick","navigateToOfflineCategory","getProgressWidth","c","defaultColors","chartData","difficultyData","activeDays","monthStats","monthName","renderOfflineCategories","offlineCategories","values","reload","charAt","QueryClientProvider","client","renderContent","autoFocus","actualQuestionCount","displayCount","ResponsiveContainer","PieChart","Pie","cx","cy","labelLine","outerRadius","dataKey","entry","Cell","Tooltip","formatter","Legend","BarChart","CartesianGrid","strokeDasharray","XAxis","YAxis","Bar","scrollTo","tab","CommunityClasses","PostStatusOptions","NotionFieldMapping","createCommunityClasses","Post","createPostClass","Comment","createCommentClass","createLikeClass","Follow","createFollowClass","exists","testPost","setPublicWriteAccess","testComment","testLike","testFollow","generateCommunitySampleData","createSamplePosts","createSampleComments","createSampleLikes","samplePosts","isPinned","random","saved","sampleComments","commentQuery","clearCommunityData","deletedCount","follows","likeQuery","followQuery","syncProblemsFromNotion","REACT_APP_NOTION_TOKEN","REACT_APP_NOTION_DATABASE_ID","run","cloudError","syncWithClientVersion","synced","mode","parseNotionPage","properties","getNotionPropertyValue","completionTime","Array","isArray","notionPageId","notionUrl","lastEditedTime","last_edited_time","isActive","fieldNames","expectedType","fieldName","property","rich_text","multi_select","item","number","saveNotionProblemsToLeanCloud","Question","savedCount","problemData","problems","findOrCreateCategory","updateAllCategoryCounts","Category","checkNotionConnection","connected","generateSampleData","clearAllData","createCategories","createQuestions","updateCategoryCounts","categoriesCount","questionsCount","answer","categoryIndex","deletedCategories","checkDataStatus","categoryCount","hasData","defineNotionCloudFunctions","define","Client","require","notion","auth","NOTION_INTEGRATION_TOKEN","databases","database_id","NOTION_DATABASE_ID","sorts","syncedCount","fetched","database","retrieve","plain_text","InitPage","setMessage","dataStatus","setDataStatus","notionStatus","setNotionStatus","syncResult","setSyncResult","communityStatus","setCommunityStatus","handleCheckStatus","handleCheckCommunityStatus","postCount","commentCount","likeCount","followCount","rel","problem","failedTables","QuestionForm","onSave","onCancel","defaultCategoryId","onCategoryChange","images","newTag","setNewTag","loadingCategories","setLoadingCategories","activeAnswerTab","setActiveAnswerTab","uploadingImages","setUploadingImages","fileInputRef","detailedAnswerRef","oralAnswerRef","isEditing","loadCategories","userCategories","总数","用户分类","当前用户","分类详情","handleFiles","files","answerType","imageFiles","file","uploadImage","uploadingId","avFile","savedFile","imageInfo","insertImageMarkdown","markdown","currentText","newText","handleAddTag","renderAnswerTab","hint","img","isUploading","onDragOver","handleDragOver","textarea","classList","onDragLeave","handleDragLeave","remove","onDrop","handleDrop","from","dataTransfer","setAttribute","click","triggerFileInput","image","removeImage","imageId","string","URL","isValidUrl","categoryChanged","handleRemoveTag","tagToRemove","display","accept","multiple","getAttribute","handleFileSelect","QuestionDetailCard","onDelete","isExpandedView","onUpdateField","onEdit","showQuestionForm","setShowQuestionForm","editingQuestion","setEditingQuestion","setIsEditing","showFullAnswer","setShowFullAnswer","deleteLoading","setDeleteLoading","editLoading","setEditLoading","localAppearanceLevel","setLocalAppearanceLevel","updatingAppearance","setUpdatingAppearance","showReviewConfirm","setShowReviewConfirm","reviewDays","setReviewDays","confirmingReview","setConfirmingReview","showRemoveReview","setShowRemoveReview","removeDays","setRemoveDays","removingReview","setRemovingReview","getAppearanceLevelColor","level","formatText","lines","elements","inCodeBlock","codeBlockContent","codeLanguage","startsWith","imageMatch","match","altText","imageUrl","processedLine","listItem","orderedListMatch","parseMarkdown","handleDelete","handleSave","handleCancel","getProficiencyText","新值","newLevel","当前prop值","当前本地状态值","handleAppearanceLevelChange","background","toggleAnswer","formatCode","nextReviewDate","right","bottom","justifyContent","alignItems","zIndex","padding","QuestionAccordion","isExpanded","onToggle","viewMode","isDragging","isDragOver","onDragStart","onDragEnd","canDrag","getDifficultyBorderColor","getDifficultyBackgroundColor","getProficiencyColor","getProficiencyIcon","getAnswerPreview","answerText","draggable","borderLeft","border","CategoryDetailPage","useParams","setCategory","allCategories","setAllCategories","expandedQuestions","setExpandedQuestions","setViewMode","draggingQuestion","setDraggingQuestion","dragOverQuestion","setDragOverQuestion","loadMoreTriggerRef","containerRef","handleScrollToQuestion","questionElement","block","boxShadow","toggleQuestion","loadCategoryInfo","loadAllCategories","formattedQuestions","getCategoryWithQuestions","fetchNextPage","hasNextPage","isFetchingNextPage","refetch","useInfiniteQuery","pageParam","addAscending","addDescending","getQuestionsByCategory","dataLength","nextPage","getNextPageParam","lastPage","allPages","initialPageParam","pages","flatMap","acc","some","sortedQuestions","sorted","localeCompare","difficultyOrder","handleScroll","container","scrollTop","clientHeight","distanceFromBottom","shouldLoad","debouncedScroll","func","timeout","args","later","observer","IntersectionObserver","isIntersecting","threshold","root","rootMargin","observe","disconnect","deleteQuestionMutation","useMutation","mutationFn","invalidateQueries","onError","updateQuestionMutation","handleAddQuestion","handleEditQuestion","handleDeleteQuestion","questionToDelete","mutate","handleUpdateQuestionField","mutateAsync","handleBack","handleDragEnd","opacity","handleRetry","expandAllQuestions","allQuestionIds","collapseAllQuestions","marginTop","borderRadius","handleManualLoadMore","fontSize","marginLeft","marginBottom","virtualItem","measureElement","handleDragStart","effectAllowed","setData","dropEffect","targetQuestionId","fromIndex","findIndex","toIndex","newQuestions","movedQuestion","splice","textAlign","fontStyle","handleQuestionCategoryChange","UserService","username","password","email","setUsername","setPassword","setEmail","signUp","logIn","getCurrentUser","UserTestPanel","testData","setTestData","register","nickname","login","checkCurrentUser","updateTestData","section","logOut","required","DataMigrationService","setupAdminUser","getEmail","migrateCategoriesToCurrentUser","doesNotExist","migratedCount","migrated","migrateQuestionsToCurrentUser","performFullMigration","adminUser","categoryResult","questionResult","checkMigrationStatus","orphanCategories","orphanQuestions","migrationNeeded","migrateQuestionCreatedBy","performQuestionMigrationOnly","DataMigrationPanel","migrationStatus","setMigrationStatus","migrationResult","setMigrationResult","TestPage","Navigation","onShowAuthModal","showUserMenu","setShowUserMenu","userMenuRef","handleAvatarUpdate","freshUser","isAuthorizedEmail","UserAvatar","avatar","fallbackText","toUpperCase","avatarUrl","getAvatarUrl","getTime","onLoad","fallback","nextSibling","objectFit","objectPosition","Link","to","handleUserMenuToggle","AuthModal","defaultTab","onAuthSuccess","loginUsername","loginPassword","registerUsername","registerEmail","registerPassword","registerConfirmPassword","isWechatLoading","setIsWechatLoading","UserSettingsModal","avatarFile","setAvatarFile","avatarPreview","setAvatarPreview","studyStats","setStudyStats","todayReviewed","profileForm","setProfileForm","bio","passwordForm","setPasswordForm","currentPassword","newPassword","confirmPassword","preferencesForm","setPreferencesForm","theme","language","notifications","emailUpdates","securityForm","setSecurityForm","emailVerified","loadUserData","loadStudyStats","categoriesQuery","questionsQuery","showMessage","duration","formType","reader","FileReader","onload","readAsDataURL","fileData","base64Data","onerror","fileName","mimeType","avatarUrlWithCacheBust","updatedUser","fetchError","requestEmailVerify","updatePassword","minLength","requestPasswordReset","exportData","exportTime","dataStr","dataBlob","Blob","createObjectURL","link","createElement","download","appendChild","removeChild","revokeObjectURL","ReviewPage","PWAInstallPrompt","deferredPrompt","setDeferredPrompt","showPrompt","setShowPrompt","handleBeforeInstallPrompt","maxWidth","gap","prompt","outcome","userChoice","cursor","handleDismiss","OfflineQuestionDetailCard","onBack","onNavigateToQuestion","currentQuestion","setCurrentQuestion","currentIndex","setCurrentIndex","loadOfflineQuestions","targetQuestion","targetIndex","goToPrevious","newIndex","goToNext","OfflineQuestionsPage","setFilteredQuestions","handleBackToList","newQuestionId","back","toLocaleString","refetchOnWindowFocus","gcTime","isAuthModalOpen","setIsAuthModalOpen","authModalTab","setAuthModalTab","isUserSettingsOpen","setIsUserSettingsOpen","userSettingsTab","setUserSettingsTab","handleShowAuthModal","handleShowUserSettings","Router","Routes","Route","path","element","handleAuthSuccess","ReactDOM","getElementById","render","App","contentType","registration","serviceWorker"],"sourceRoot":""}