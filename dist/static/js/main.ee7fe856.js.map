{"version":3,"file":"static/js/main.ee7fe856.js","mappings":"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","sources":["webpack://bagu/./src/services/dialogflowService.js","webpack://bagu/./src/components/Chatbox.jsx","webpack://bagu/./src/services/offlineService.js","webpack://bagu/./src/services/categoryService.js","webpack://bagu/./src/services/cacheService.js","webpack://bagu/./src/services/questionService.js","webpack://bagu/./src/components/OfflineIndicator.jsx","webpack://bagu/./src/components/CacheManagementTab.jsx","webpack://bagu/./src/components/ReviewReminderSection.jsx","webpack://bagu/./src/components/CalendarTooltip.jsx","webpack://bagu/./src/components/Documents.jsx","webpack://bagu/./src/services/communityService.js","webpack://bagu/./src/components/community/CreatePostModal.jsx","webpack://bagu/./src/components/community/SearchBar.jsx","webpack://bagu/./src/components/community/TagCloud.jsx","webpack://bagu/./src/components/community/CommunityStats.jsx","webpack://bagu/./src/components/community/CommentItem.jsx","webpack://bagu/./src/components/community/CommentSection.jsx","webpack://bagu/./src/components/community/PostCard.jsx","webpack://bagu/./src/components/community/CommunityPage.jsx","webpack://bagu/./src/pages/HomePage.jsx","webpack://bagu/./src/services/initClasses.js","webpack://bagu/./src/components/InitPage.jsx","webpack://bagu/./src/components/QuestionForm.jsx","webpack://bagu/./src/components/QuestionDetailCard.jsx","webpack://bagu/./src/pages/CategoryDetailPage.jsx","webpack://bagu/./src/services/userService.js","webpack://bagu/./src/components/UserTestPanel.jsx","webpack://bagu/./src/services/dataMigrationService.js","webpack://bagu/./src/components/DataMigrationPanel.jsx","webpack://bagu/./src/pages/TestPage.jsx","webpack://bagu/./src/components/Navigation.jsx","webpack://bagu/./src/components/AuthModal.jsx","webpack://bagu/./src/components/UserSettingsModal.jsx","webpack://bagu/./src/pages/ReviewPage.jsx","webpack://bagu/./src/components/PWAInstallPrompt.jsx","webpack://bagu/./src/pages/OfflineQuestionsPage.jsx","webpack://bagu/./src/App.js","webpack://bagu/./src/index.js"],"sourcesContent":["// services/dialogflowService.js\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\n// 环境变量配置\r\nconst PROJECT_ID = process.env.REACT_APP_DIALOGFLOW_PROJECT_ID;\r\nconst CLIENT_EMAIL = process.env.REACT_APP_DIALOGFLOW_CLIENT_EMAIL;\r\nconst PRIVATE_KEY = process.env.REACT_APP_DIALOGFLOW_PRIVATE_KEY?.replace(/\\\\n/g, '\\n');\r\n\r\n/**\r\n * 生成 JWT Token\r\n */\r\nconst generateJWT = async () => {\r\n  const header = {\r\n    alg: 'RS256',\r\n    typ: 'JWT'\r\n  };\r\n\r\n  const now = Math.floor(Date.now() / 1000);\r\n  const payload = {\r\n    iss: CLIENT_EMAIL,\r\n    scope: 'https://www.googleapis.com/auth/cloud-platform',\r\n    aud: 'https://oauth2.googleapis.com/token',\r\n    exp: now + 3600,\r\n    iat: now\r\n  };\r\n\r\n  // 编码 header 和 payload\r\n  const encodedHeader = btoa(JSON.stringify(header)).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\r\n  const encodedPayload = btoa(JSON.stringify(payload)).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\r\n  \r\n  const signatureInput = `${encodedHeader}.${encodedPayload}`;\r\n  \r\n  // 使用 Web Crypto API 进行签名\r\n  const privateKey = await crypto.subtle.importKey(\r\n    'pkcs8',\r\n    str2ab(atob(PRIVATE_KEY.replace('-----BEGIN PRIVATE KEY-----', '').replace('-----END PRIVATE KEY-----', '').replace(/\\n/g, ''))),\r\n    {\r\n      name: 'RSASSA-PKCS1-v1_5',\r\n      hash: { name: 'SHA-256' }\r\n    },\r\n    false,\r\n    ['sign']\r\n  );\r\n\r\n  const signature = await crypto.subtle.sign(\r\n    'RSASSA-PKCS1-v1_5',\r\n    privateKey,\r\n    new TextEncoder().encode(signatureInput)\r\n  );\r\n\r\n  const encodedSignature = btoa(String.fromCharCode(...new Uint8Array(signature)))\r\n    .replace(/=/g, '')\r\n    .replace(/\\+/g, '-')\r\n    .replace(/\\//g, '_');\r\n\r\n  return `${signatureInput}.${encodedSignature}`;\r\n};\r\n\r\n/**\r\n * 获取访问令牌\r\n */\r\nconst getAccessToken = async () => {\r\n  try {\r\n    const jwt = await generateJWT();\r\n    \r\n    const response = await fetch('https://oauth2.googleapis.com/token', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: `grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer&assertion=${jwt}`\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Token request failed: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.access_token;\r\n  } catch (error) {\r\n    console.error('获取访问令牌失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 向 Dialogflow 发送请求\r\n */\r\nexport const detectIntent = async (text, sessionId = 'react-client-session') => {\r\n  if (!text.trim()) {\r\n    throw new Error('Query text cannot be empty');\r\n  }\r\n\r\n  try {\r\n    const accessToken = await getAccessToken();\r\n    const sessionPath = `projects/${PROJECT_ID}/agent/sessions/${sessionId}`;\r\n\r\n    const request = {\r\n      queryInput: {\r\n        text: {\r\n          text: text,\r\n          languageCode: 'zh-CN',\r\n        },\r\n      },\r\n    };\r\n\r\n    const API_URL = `https://dialogflow.googleapis.com/v2/${sessionPath}:detectIntent`;\r\n    const response = await fetch(API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n      },\r\n      body: JSON.stringify(request),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorDetails = await response.text();\r\n      throw new Error(`Dialogflow API request failed: ${response.status} ${response.statusText}. ${errorDetails}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    \r\n    return {\r\n      text: data.queryResult.fulfillmentText || '抱歉，我没有理解您的意思。',\r\n      actions: extractActions(data.queryResult),\r\n      quickReplies: ['查看分类', '搜索题目', '开始复习', '学习统计']\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('Dialogflow 请求失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 发送欢迎消息\r\n */\r\nexport const sendWelcome = async (userId) => {\r\n  try {\r\n    const response = await detectIntent('你好', `user-${userId || 'anonymous'}`);\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Welcome message failed, using fallback:', error);\r\n    return {\r\n      text: `👋 你好！我是你的学习助手，我可以帮你：\\n\\n• 导航到不同功能页面\\n• 查找分类和题目\\n• 管理复习计划\\n• 查看学习统计\\n\\n请问需要什么帮助？`,\r\n      quickReplies: ['查看所有分类', '需要复习的题目', '学习统计', '创建新分类'],\r\n      actions: []\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 从响应中提取动作\r\n */\r\nconst extractActions = (queryResult) => {\r\n  const actions = [];\r\n  \r\n  if (queryResult.intent?.displayName === 'SearchQuestions') {\r\n    actions.push({\r\n      type: 'function',\r\n      target: 'searchQuestions',\r\n      label: '🔍 开始搜索'\r\n    });\r\n  }\r\n  \r\n  actions.push(\r\n    {\r\n      type: 'navigate',\r\n      target: '/categories',\r\n      label: '📚 查看分类'\r\n    },\r\n    {\r\n      type: 'navigate', \r\n      target: '/review',\r\n      label: '🔄 开始复习'\r\n    }\r\n  );\r\n  \r\n  return actions;\r\n};\r\n\r\n/**\r\n * 字符串转 ArrayBuffer\r\n */\r\nconst str2ab = (str) => {\r\n  const buf = new ArrayBuffer(str.length);\r\n  const bufView = new Uint8Array(buf);\r\n  for (let i = 0; i < str.length; i++) {\r\n    bufView[i] = str.charCodeAt(i);\r\n  }\r\n  return buf;\r\n};\r\n\r\nexport default {\r\n  detectIntent,\r\n  sendWelcome\r\n};","// components/Chatbox.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport DialogflowService from '../services/dialogflowService';\r\nimport './Chatbox.css';\r\n\r\nconst Chatbox = ({ onNavigate, categories, questions, currentUser }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // 初始欢迎消息\r\n  useEffect(() => {\r\n    if (isOpen && messages.length === 0) {\r\n      sendWelcomeMessage();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const sendWelcomeMessage = async () => {\r\n    setIsTyping(true);\r\n    \r\n    try {\r\n      // 使用新的代理服务器 API\r\n      const response = await DialogflowService.sendWelcome(currentUser?.id);\r\n      \r\n      const welcomeMessage = {\r\n        id: Date.now(),\r\n        text: response.text,\r\n        isBot: true,\r\n        timestamp: new Date(),\r\n        quickReplies: [\r\n          '查看所有分类',\r\n          '需要复习的题目',\r\n          '学习统计',\r\n          '创建新分类'\r\n        ]\r\n      };\r\n\r\n      setMessages([welcomeMessage]);\r\n    } catch (error) {\r\n      console.error('Welcome message error:', error);\r\n      // 回退到本地欢迎消息\r\n      const fallbackMessage = {\r\n        id: 1,\r\n        text: `👋 你好${currentUser ? ` ${currentUser.getUsername()}` : ''}！我是你的学习助手，我可以帮你：\\n\\n• 导航到不同功能页面\\n• 查找分类和题目\\n• 管理复习计划\\n• 查看学习统计\\n\\n请问需要什么帮助？`,\r\n        isBot: true,\r\n        timestamp: new Date(),\r\n        quickReplies: [\r\n          '查看所有分类',\r\n          '需要复习的题目',\r\n          '学习统计',\r\n          '创建新分类'\r\n        ]\r\n      };\r\n      setMessages([fallbackMessage]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // 使用新的代理服务器处理消息\r\n  const processMessage = async (userMessage) => {\r\n    setIsTyping(true);\r\n    \r\n    try {\r\n      // 直接使用 detectIntent，它现在返回适配的格式\r\n      const response = await DialogflowService.detectIntent(userMessage, currentUser?.id);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Message processing error:', error);\r\n      return {\r\n        text: '网络错误，请稍后重试。',\r\n        quickReplies: ['查看分类', '搜索题目', '开始复习', '学习统计'],\r\n        actions: []\r\n      };\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputText.trim()) return;\r\n\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      text: inputText,\r\n      isBot: false,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputText('');\r\n\r\n    // 处理消息并获取回复\r\n    const botResponse = await processMessage(inputText);\r\n    \r\n    const botMessage = {\r\n      id: Date.now() + 1,\r\n      text: botResponse.text,\r\n      isBot: true,\r\n      timestamp: new Date(),\r\n      actions: botResponse.actions,\r\n      quickReplies: botResponse.quickReplies\r\n    };\r\n\r\n    setMessages(prev => [...prev, botMessage]);\r\n  };\r\n\r\n  const handleQuickReply = (text) => {\r\n    setInputText(text);\r\n    setTimeout(() => {\r\n      handleSendMessage();\r\n    }, 100);\r\n  };\r\n\r\n  const handleActionClick = (action) => {\r\n    if (action.type === 'navigate' && onNavigate) {\r\n      onNavigate(action.target);\r\n      \r\n      // 添加导航确认消息\r\n      const confirmMessage = {\r\n        id: Date.now(),\r\n        text: `✅ 正在为你跳转到 ${action.label}...`,\r\n        isBot: true,\r\n        timestamp: new Date()\r\n      };\r\n      setMessages(prev => [...prev, confirmMessage]);\r\n    } else if (action.type === 'function') {\r\n      // 处理功能型动作\r\n      handleFunctionAction(action);\r\n    }\r\n  };\r\n\r\n  const handleFunctionAction = (action) => {\r\n    switch (action.target) {\r\n      case 'searchQuestions':\r\n        // 触发搜索功能\r\n        const searchMessage = {\r\n          id: Date.now(),\r\n          text: '请告诉我你想搜索题目的关键词：',\r\n          isBot: true,\r\n          timestamp: new Date()\r\n        };\r\n        setMessages(prev => [...prev, searchMessage]);\r\n        break;\r\n      default:\r\n        console.log('Function action:', action);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  // 清除对话历史\r\n  const clearConversation = () => {\r\n    setMessages([]);\r\n    sendWelcomeMessage();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* 悬浮按钮 */}\r\n      {!isOpen && (\r\n        <button \r\n          className=\"chatbox-floating-btn\"\r\n          onClick={() => setIsOpen(true)}\r\n          title=\"AI学习助手\"\r\n        >\r\n          <span className=\"chatbot-icon\">🤖</span>\r\n          <span className=\"pulse-dot\"></span>\r\n        </button>\r\n      )}\r\n\r\n      {/* 聊天窗口 */}\r\n      {isOpen && (\r\n        <div className=\"chatbox-container\">\r\n          <div className=\"chatbox-header\">\r\n            <div className=\"chatbox-title\">\r\n              <span className=\"bot-avatar\">🤖</span>\r\n              <div className=\"title-text\">\r\n                <h4>AI学习助手</h4>\r\n                <span className=\"status\">AI在线</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"header-actions\">\r\n              <button \r\n                className=\"clear-btn\"\r\n                onClick={clearConversation}\r\n                title=\"清除对话\"\r\n              >\r\n                🗑️\r\n              </button>\r\n              <button \r\n                className=\"close-btn\"\r\n                onClick={() => setIsOpen(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chatbox-messages\">\r\n            {messages.map((message) => (\r\n              <div\r\n                key={message.id}\r\n                className={`message ${message.isBot ? 'bot-message' : 'user-message'}`}\r\n              >\r\n                <div className=\"message-content\">\r\n                  <div className=\"message-text\">\r\n                    {message.text.split('\\n').map((line, i) => (\r\n                      <span key={i}>\r\n                        {line}\r\n                        <br />\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"message-time\">\r\n                    {message.timestamp.toLocaleTimeString('zh-CN', { \r\n                      hour: '2-digit', \r\n                      minute: '2-digit' \r\n                    })}\r\n                  </div>\r\n                  \r\n                  {/* 快速回复按钮 */}\r\n                  {message.quickReplies && (\r\n                    <div className=\"quick-replies\">\r\n                      {message.quickReplies.map((reply, index) => (\r\n                        <button\r\n                          key={index}\r\n                          className=\"quick-reply-btn\"\r\n                          onClick={() => handleQuickReply(reply)}\r\n                        >\r\n                          {reply}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {/* 操作按钮 */}\r\n                  {message.actions && (\r\n                    <div className=\"action-buttons\">\r\n                      {message.actions.map((action, index) => (\r\n                        <button\r\n                          key={index}\r\n                          className=\"action-btn\"\r\n                          onClick={() => handleActionClick(action)}\r\n                        >\r\n                          {action.label}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            \r\n            {isTyping && (\r\n              <div className=\"message bot-message\">\r\n                <div className=\"message-content\">\r\n                  <div className=\"typing-indicator\">\r\n                    <span>AI正在思考</span>\r\n                    <div className=\"typing-dots\">\r\n                      <span></span>\r\n                      <span></span>\r\n                      <span></span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n\r\n          <div className=\"chatbox-input\">\r\n            <div className=\"input-container\">\r\n              <textarea\r\n                value={inputText}\r\n                onChange={(e) => setInputText(e.target.value)}\r\n                onKeyPress={handleKeyPress}\r\n                placeholder=\"向AI助手提问...\"\r\n                rows=\"1\"\r\n                className=\"message-input\"\r\n              />\r\n              <button \r\n                onClick={handleSendMessage}\r\n                disabled={!inputText.trim() || isTyping}\r\n                className=\"send-btn\"\r\n              >\r\n                {isTyping ? '⏳' : '📤'}\r\n              </button>\r\n            </div>\r\n            <div className=\"input-hint\">\r\n              按 Enter 发送，Shift + Enter 换行\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatbox;","// services/offlineService.js\r\nexport class OfflineService {\r\n  constructor() {\r\n    this.isOnline = true;\r\n    this.setupOnlineListeners();\r\n  }\r\n\r\n  // 设置网络状态监听\r\n  setupOnlineListeners() {\r\n    if (typeof window === 'undefined') return;\r\n\r\n    window.addEventListener('online', () => {\r\n      console.log('🌐 网络已连接');\r\n      this.isOnline = true;\r\n      this.dispatchEvent('online');\r\n    });\r\n\r\n    window.addEventListener('offline', () => {\r\n      console.log('📶 网络已断开');\r\n      this.isOnline = false;\r\n      this.dispatchEvent('offline');\r\n    });\r\n\r\n    // 初始状态\r\n    this.isOnline = navigator.onLine;\r\n  }\r\n\r\n  // 检查网络状态\r\n  isOnlineMode() {\r\n    return this.isOnline;\r\n  }\r\n\r\n  // 检查是否应该使用离线数据\r\n  shouldUseOfflineData() {\r\n    // 如果明确是离线模式，或者网络不可用\r\n    return !this.isOnline;\r\n  }\r\n\r\n  // 模拟网络请求 - 在离线模式下返回假数据\r\n  simulateNetworkRequest() {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.shouldUseOfflineData()) {\r\n        reject(new Error('网络不可用，当前处于离线模式'));\r\n      } else {\r\n        resolve();\r\n      }\r\n    });\r\n  }\r\n\r\n  // 事件分发\r\n  dispatchEvent(eventName, data) {\r\n    if (typeof window !== 'undefined') {\r\n      window.dispatchEvent(new CustomEvent(`offline:${eventName}`, { detail: data }));\r\n    }\r\n  }\r\n\r\n  // 添加事件监听\r\n  addEventListener(eventName, callback) {\r\n    if (typeof window !== 'undefined') {\r\n      window.addEventListener(`offline:${eventName}`, callback);\r\n    }\r\n  }\r\n\r\n  // 移除事件监听\r\n  removeEventListener(eventName, callback) {\r\n    if (typeof window !== 'undefined') {\r\n      window.removeEventListener(`offline:${eventName}`, callback);\r\n    }\r\n  }\r\n}\r\n\r\nexport const offlineService = new OfflineService();","// services/categoryService.js\r\nimport AV from 'leancloud-storage';\r\nimport { offlineService } from './offlineService';\r\n\r\n// 初始化\r\nexport const initAV = () => {\r\n  // 在离线模式下不初始化 LeanCloud\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：跳过 LeanCloud 初始化');\r\n    return;\r\n  }\r\n  \r\n  AV.init({\r\n    appId: process.env.REACT_APP_LC_APP_ID,\r\n    appKey: process.env.REACT_APP_LC_APP_KEY,\r\n    serverURL: process.env.REACT_APP_LC_SERVER_URL\r\n  });\r\n};\r\n\r\n/**\r\n * 查询选项\r\n */\r\nexport const QueryOptions = {\r\n  SORT_BY_NAME: 'name',\r\n  SORT_BY_QUESTION_COUNT: 'questionCount',\r\n  SORT_BY_UPDATED_AT: 'updatedAt'\r\n};\r\n\r\n// 缓存配置\r\nconst cacheConfig = {\r\n  // 分类列表缓存（5分钟）\r\n  categories: {\r\n    data: null,\r\n    timestamp: 0,\r\n    ttl: 5 * 60 * 1000\r\n  },\r\n  // 分类详情缓存（3分钟）\r\n  categoryDetails: new Map(),\r\n  categoryDetailTtl: 3 * 60 * 1000,\r\n  // 题目数量统计缓存（2分钟）\r\n  questionCounts: new Map(),\r\n  questionCountTtl: 2 * 60 * 1000\r\n};\r\n\r\n// 离线数据存储键\r\nconst OFFLINE_CATEGORIES_KEY = 'offline_categories';\r\n\r\n/**\r\n * 清除所有缓存\r\n */\r\nexport const clearCategoryCache = () => {\r\n  cacheConfig.categories.data = null;\r\n  cacheConfig.categories.timestamp = 0;\r\n  cacheConfig.categoryDetails.clear();\r\n  cacheConfig.questionCounts.clear();\r\n};\r\n\r\n/**\r\n * 清除特定分类的缓存\r\n */\r\nexport const clearCategoryCacheById = (categoryId) => {\r\n  if (categoryId) {\r\n    cacheConfig.categoryDetails.delete(categoryId);\r\n    cacheConfig.questionCounts.delete(categoryId);\r\n  }\r\n  // 同时清除分类列表缓存\r\n  cacheConfig.categories.data = null;\r\n  cacheConfig.categories.timestamp = 0;\r\n};\r\n\r\n/**\r\n * 检查缓存是否有效\r\n */\r\nconst isCacheValid = (timestamp, ttl) => {\r\n  return timestamp && (Date.now() - timestamp < ttl);\r\n};\r\n\r\n/**\r\n * 获取离线分类数据\r\n */\r\nconst getOfflineCategories = () => {\r\n  try {\r\n    const cached = localStorage.getItem(OFFLINE_CATEGORIES_KEY);\r\n    if (cached) {\r\n      const data = JSON.parse(cached);\r\n      console.log('📦 从离线存储加载分类数据:', data.data.length, '个分类');\r\n      return data;\r\n    }\r\n    \r\n    // 如果没有离线数据，返回空数据\r\n    return {\r\n      data: [],\r\n      total: 0,\r\n      page: 1,\r\n      pageSize: 50\r\n    };\r\n  } catch (error) {\r\n    console.error('获取离线分类数据失败:', error);\r\n    return {\r\n      data: [],\r\n      total: 0,\r\n      page: 1,\r\n      pageSize: 50\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 保存分类数据到离线存储\r\n */\r\nconst saveCategoriesToOffline = (categories) => {\r\n  try {\r\n    const data = {\r\n      data: categories,\r\n      total: categories.length,\r\n      page: 1,\r\n      pageSize: 50,\r\n      timestamp: Date.now()\r\n    };\r\n    localStorage.setItem(OFFLINE_CATEGORIES_KEY, JSON.stringify(data));\r\n  } catch (error) {\r\n    console.error('保存分类数据到离线存储失败:', error);\r\n  }\r\n};\r\n\r\n/**\r\n * 批量获取分类题目数量（修复版本）\r\n */\r\nconst getCategoriesQuestionCounts = async (categories) => {\r\n  // 离线模式下返回空计数\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：跳过题目数量统计');\r\n    const counts = {};\r\n    categories.forEach(cat => {\r\n      counts[cat.id] = 0;\r\n    });\r\n    return counts;\r\n  }\r\n\r\n  try {\r\n    const categoryIds = categories.map(cat => cat.id);\r\n    const questionCounts = {};\r\n    const now = Date.now();\r\n    \r\n    // 初始化所有分类的计数为0\r\n    categoryIds.forEach(categoryId => {\r\n      questionCounts[categoryId] = 0;\r\n    });\r\n    \r\n    // 检查缓存中已有的数据\r\n    const uncachedCategoryIds = [];\r\n    \r\n    categoryIds.forEach(categoryId => {\r\n      const cached = cacheConfig.questionCounts.get(categoryId);\r\n      if (cached && isCacheValid(cached.timestamp, cacheConfig.questionCountTtl)) {\r\n        questionCounts[categoryId] = cached.count;\r\n      } else {\r\n        uncachedCategoryIds.push(categoryId);\r\n      }\r\n    });\r\n    \r\n    // 如果有未缓存的分类，批量查询\r\n    if (uncachedCategoryIds.length > 0) {\r\n      try {\r\n        // 方法1: 分别查询每个分类的题目数量（更准确）\r\n        const countPromises = uncachedCategoryIds.map(async (categoryId) => {\r\n          try {\r\n            const categoryPointer = AV.Object.createWithoutData('Category', categoryId);\r\n            const questionQuery = new AV.Query('Question');\r\n            questionQuery.equalTo('category', categoryPointer);\r\n            const count = await questionQuery.count();\r\n            return { categoryId, count };\r\n          } catch (error) {\r\n            console.warn(`获取分类 ${categoryId} 题目数量失败:`, error);\r\n            return { categoryId, count: 0 };\r\n          }\r\n        });\r\n        \r\n        const countResults = await Promise.all(countPromises);\r\n        \r\n        // 更新计数\r\n        countResults.forEach(({ categoryId, count }) => {\r\n          questionCounts[categoryId] = count;\r\n        });\r\n        \r\n        // 更新缓存\r\n        countResults.forEach(({ categoryId, count }) => {\r\n          cacheConfig.questionCounts.set(categoryId, {\r\n            count,\r\n            timestamp: now\r\n          });\r\n        });\r\n        \r\n      } catch (batchError) {\r\n        console.warn('批量获取题目数量失败，尝试备用方案:', batchError);\r\n        \r\n        // 备用方案：使用 containedIn 查询\r\n        try {\r\n          const categoryPointers = uncachedCategoryIds.map(id => \r\n            AV.Object.createWithoutData('Category', id)\r\n          );\r\n          \r\n          const questionQuery = new AV.Query('Question');\r\n          questionQuery.containedIn('category', categoryPointers);\r\n          questionQuery.select(['category']);\r\n          \r\n          const questions = await questionQuery.find();\r\n          \r\n          // 统计题目数量\r\n          questions.forEach(question => {\r\n            const category = question.get('category');\r\n            if (category) {\r\n              const categoryId = category.id;\r\n              questionCounts[categoryId] = (questionCounts[categoryId] || 0) + 1;\r\n            }\r\n          });\r\n          \r\n          // 更新缓存\r\n          uncachedCategoryIds.forEach(categoryId => {\r\n            const count = questionCounts[categoryId] || 0;\r\n            cacheConfig.questionCounts.set(categoryId, {\r\n              count,\r\n              timestamp: now\r\n            });\r\n          });\r\n        } catch (fallbackError) {\r\n          console.warn('备用方案也失败:', fallbackError);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return questionCounts;\r\n  } catch (error) {\r\n    console.warn('批量获取题目数量失败:', error);\r\n    return {};\r\n  }\r\n};\r\n\r\n/**\r\n * 获取所有类别（不分页）- 带缓存\r\n */\r\nexport const getAllCategories = async () => {\r\n  // 离线模式处理\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从本地存储获取分类数据');\r\n    const offlineData = getOfflineCategories();\r\n    return offlineData.data || [];\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    // 检查缓存\r\n    const now = Date.now();\r\n    if (cacheConfig.categories.data && \r\n        isCacheValid(cacheConfig.categories.timestamp, cacheConfig.categories.ttl)) {\r\n      return cacheConfig.categories.data;\r\n    }\r\n\r\n    const query = new AV.Query('Category');\r\n    query.equalTo('createdBy', currentUser);\r\n    query.include('createdBy');\r\n    query.descending('updatedAt');\r\n    \r\n    const categories = await query.find();\r\n    \r\n    // 批量获取题目数量\r\n    const questionCounts = await getCategoriesQuestionCounts(categories);\r\n    \r\n    const result = categories.map(category => ({\r\n      id: category.id,\r\n      name: category.get('name'),\r\n      description: category.get('description'),\r\n      questionCount: questionCounts[category.id] !== undefined \r\n        ? questionCounts[category.id] \r\n        : category.get('questionCount') || 0,\r\n      createdAt: category.get('createdAt'),\r\n      updatedAt: category.get('updatedAt'),\r\n      createdBy: category.get('createdBy')\r\n    }));\r\n\r\n    // 更新缓存和离线存储\r\n    cacheConfig.categories.data = result;\r\n    cacheConfig.categories.timestamp = now;\r\n    saveCategoriesToOffline(result);\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取所有分类失败:', error);\r\n    \r\n    // 网络请求失败时，尝试使用离线数据\r\n    if (error.message.includes('offline') || error.message.includes('network') || error.message.includes('CORS')) {\r\n      console.log('🌐 网络请求失败，尝试使用离线数据');\r\n      const offlineData = getOfflineCategories();\r\n      return offlineData.data || [];\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 分页获取类别列表 - 带缓存\r\n */\r\nexport const getCategories = async (options = {}) => {\r\n  // 离线模式处理\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从本地存储获取分类数据');\r\n    return getOfflineCategories();\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    // 检查缓存（仅对默认查询使用缓存）\r\n    const isDefaultQuery = !options.page && !options.pageSize && \r\n                          (!options.sortBy || options.sortBy === QueryOptions.SORT_BY_UPDATED_AT);\r\n    \r\n    const now = Date.now();\r\n    if (isDefaultQuery && cacheConfig.categories.data && \r\n        isCacheValid(cacheConfig.categories.timestamp, cacheConfig.categories.ttl)) {\r\n      return {\r\n        data: cacheConfig.categories.data,\r\n        total: cacheConfig.categories.data.length,\r\n        page: 1,\r\n        pageSize: cacheConfig.categories.data.length\r\n      };\r\n    }\r\n\r\n    const query = new AV.Query('Category');\r\n    query.equalTo('createdBy', currentUser);\r\n    \r\n    // 设置排序\r\n    if (options.sortBy === QueryOptions.SORT_BY_UPDATED_AT) {\r\n      query.descending('updatedAt');\r\n    } else if (options.sortBy === QueryOptions.SORT_BY_CREATED_AT) {\r\n      query.descending('createdAt');\r\n    } else {\r\n      query.descending('updatedAt');\r\n    }\r\n\r\n    // 设置分页\r\n    if (options.page && options.pageSize) {\r\n      const skip = (options.page - 1) * options.pageSize;\r\n      query.limit(options.pageSize);\r\n      query.skip(skip);\r\n    }\r\n\r\n    const categories = await query.find();\r\n    \r\n    // 批量获取题目数量\r\n    const questionCounts = await getCategoriesQuestionCounts(categories);\r\n\r\n    const categoriesWithCount = categories.map((category) => ({\r\n      id: category.id,\r\n      name: category.get('name'),\r\n      description: category.get('description'),\r\n      questionCount: questionCounts[category.id] !== undefined \r\n        ? questionCounts[category.id] \r\n        : category.get('questionCount') || 0,\r\n      createdAt: category.get('createdAt'),\r\n      updatedAt: category.get('updatedAt'),\r\n      createdBy: category.get('createdBy')\r\n    }));\r\n\r\n    const result = {\r\n      data: categoriesWithCount,\r\n      total: categoriesWithCount.length,\r\n      page: options.page || 1,\r\n      pageSize: options.pageSize || categoriesWithCount.length\r\n    };\r\n\r\n    // 如果是默认查询，更新缓存和离线存储\r\n    if (isDefaultQuery) {\r\n      cacheConfig.categories.data = categoriesWithCount;\r\n      cacheConfig.categories.timestamp = now;\r\n      saveCategoriesToOffline(categoriesWithCount);\r\n    }\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取分类失败:', error);\r\n    \r\n    // 网络请求失败时，尝试使用离线数据\r\n    if (error.message.includes('offline') || error.message.includes('network') || error.message.includes('CORS')) {\r\n      console.log('🌐 网络请求失败，尝试使用离线数据');\r\n      return getOfflineCategories();\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 根据ID获取单个类别详情 - 带缓存\r\n */\r\nexport const getCategoryById = async (categoryId) => {\r\n  // 离线模式下返回空数据\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法获取单个分类详情');\r\n    throw new Error('离线模式下无法获取分类详情');\r\n  }\r\n\r\n  try {\r\n    // 检查缓存\r\n    const cached = cacheConfig.categoryDetails.get(categoryId);\r\n    const now = Date.now();\r\n    if (cached && isCacheValid(cached.timestamp, cacheConfig.categoryDetailTtl)) {\r\n      return cached.data;\r\n    }\r\n\r\n    const query = new AV.Query('Category');\r\n    const category = await query.get(categoryId);\r\n    \r\n    if (!category) {\r\n      throw new Error('未找到该类别');\r\n    }\r\n    \r\n    // 获取准确的题目数量\r\n    let questionCount = category.get('questionCount') || 0;\r\n    try {\r\n      const questionQuery = new AV.Query('Question');\r\n      questionQuery.equalTo('category', category);\r\n      questionCount = await questionQuery.count();\r\n    } catch (countError) {\r\n      console.warn('获取题目数量失败，使用缓存值:', countError);\r\n    }\r\n    \r\n    const result = {\r\n      id: category.id,\r\n      name: category.get('name'),\r\n      questionCount,\r\n      updatedAt: category.updatedAt,\r\n      createdAt: category.createdAt\r\n    };\r\n\r\n    // 更新缓存\r\n    cacheConfig.categoryDetails.set(categoryId, {\r\n      data: result,\r\n      timestamp: now\r\n    });\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取类别详情失败:', error);\r\n    throw new Error(`获取详情失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取分类及其题目列表 - 带缓存\r\n */\r\nexport const getCategoryWithQuestions = async (categoryId) => {\r\n  // 离线模式下返回空数据\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法获取分类题目列表');\r\n    throw new Error('离线模式下无法获取分类题目列表');\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    // 获取分类\r\n    const categoryQuery = new AV.Query('Category');\r\n    const category = await categoryQuery.get(categoryId);\r\n    \r\n    // 验证分类是否属于当前用户\r\n    const categoryCreator = category.get('createdBy');\r\n    if (categoryCreator.id !== currentUser.id) {\r\n      throw new Error('无权访问此分类');\r\n    }\r\n\r\n    // 获取该分类下的题目\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    questionQuery.equalTo('createdBy', currentUser);\r\n    questionQuery.include('category');\r\n    questionQuery.descending('updatedAt');\r\n    \r\n    const questions = await questionQuery.find();\r\n    \r\n    const formattedQuestions = questions.map(question => ({\r\n      id: question.id,\r\n      title: question.get('title'),\r\n      detailedAnswer: question.get('detailedAnswer'),\r\n      oralAnswer: question.get('oralAnswer'),\r\n      code: question.get('code'),\r\n      difficulty: question.get('difficulty'),\r\n      appearanceLevel: question.get('appearanceLevel'),\r\n      proficiency: question.get('proficiency'),\r\n      tags: question.get('tags') || [],\r\n      category: {\r\n        id: question.get('category').id,\r\n        name: question.get('category').get('name')\r\n      },\r\n      createdAt: question.get('createdAt'),\r\n      updatedAt: question.get('updatedAt')\r\n    }));\r\n\r\n    const result = {\r\n      category: {\r\n        id: category.id,\r\n        name: category.get('name'),\r\n        description: category.get('description'),\r\n        questionCount: questions.length,\r\n        createdAt: category.get('createdAt'),\r\n        updatedAt: category.get('updatedAt')\r\n      },\r\n      questions: formattedQuestions\r\n    };\r\n\r\n    // 更新题目数量缓存\r\n    const now = Date.now();\r\n    cacheConfig.questionCounts.set(categoryId, {\r\n      count: questions.length,\r\n      timestamp: now\r\n    });\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取分类详情失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 创建新类别 - 清除相关缓存\r\n */\r\nexport const createCategory = async (categoryData) => {\r\n  // 离线模式下不允许创建分类\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    throw new Error('离线模式下无法创建分类');\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    const Category = AV.Object.extend('Category');\r\n    const category = new Category();\r\n    \r\n    category.set('name', categoryData.name);\r\n    category.set('description', categoryData.description || '');\r\n    category.set('createdBy', currentUser);\r\n\r\n    // 设置 ACL 权限\r\n    const acl = new AV.ACL();\r\n    acl.setReadAccess(currentUser, true);\r\n    acl.setWriteAccess(currentUser, true);\r\n    acl.setPublicReadAccess(false);\r\n    category.setACL(acl);\r\n\r\n    await category.save();\r\n    \r\n    // 清除分类列表缓存\r\n    clearCategoryCache();\r\n\r\n    return {\r\n      id: category.id,\r\n      name: category.get('name'),\r\n      description: category.get('description'),\r\n      questionCount: 0,\r\n      createdAt: category.get('createdAt'),\r\n      updatedAt: category.get('updatedAt')\r\n    };\r\n  } catch (error) {\r\n    console.error('创建分类失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新类别 - 清除相关缓存\r\n */\r\nexport const updateCategory = async (categoryId, updateData) => {\r\n  // 离线模式下不允许更新分类\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    throw new Error('离线模式下无法更新分类');\r\n  }\r\n\r\n  try {\r\n    if (updateData.name && updateData.name.trim() === '') {\r\n      throw new Error('类别名不能为空');\r\n    }\r\n\r\n    const category = AV.Object.createWithoutData('Category', categoryId);\r\n    \r\n    if (updateData.name) {\r\n      category.set('name', updateData.name.trim());\r\n    }\r\n    \r\n    const updatedCategory = await category.save();\r\n    \r\n    // 清除相关缓存\r\n    clearCategoryCacheById(categoryId);\r\n\r\n    return {\r\n      id: updatedCategory.id,\r\n      name: updatedCategory.get('name'),\r\n      questionCount: updatedCategory.get('questionCount'),\r\n      updatedAt: updatedCategory.updatedAt\r\n    };\r\n  } catch (error) {\r\n    console.error('更新类别失败:', error);\r\n    throw new Error(`更新失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 更新类别题目计数 - 清除相关缓存\r\n */\r\nexport const updateCategoryQuestionCount = async (categoryId) => {\r\n  // 离线模式下不允许更新计数\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    throw new Error('离线模式下无法更新题目计数');\r\n  }\r\n\r\n  try {\r\n    const category = AV.Object.createWithoutData('Category', categoryId);\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    \r\n    const count = await questionQuery.count();\r\n    \r\n    category.set('questionCount', count);\r\n    await category.save();\r\n    \r\n    // 清除相关缓存\r\n    clearCategoryCacheById(categoryId);\r\n\r\n    return count;\r\n  } catch (error) {\r\n    console.error('更新题目计数失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 删除类别 - 清除相关缓存\r\n */\r\nexport const deleteCategory = async (categoryId) => {\r\n  // 离线模式下不允许删除分类\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    throw new Error('离线模式下无法删除分类');\r\n  }\r\n\r\n  try {\r\n    const category = AV.Object.createWithoutData('Category', categoryId);\r\n    \r\n    // 先删除该类别下的所有题目\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    const questions = await questionQuery.find();\r\n    \r\n    let deletedQuestions = 0;\r\n    if (questions.length > 0) {\r\n      await AV.Object.destroyAll(questions);\r\n      deletedQuestions = questions.length;\r\n    }\r\n    \r\n    // 再删除类别本身\r\n    await category.destroy();\r\n    \r\n    // 清除相关缓存\r\n    clearCategoryCacheById(categoryId);\r\n\r\n    return { \r\n      success: true, \r\n      message: `类别及关联的 ${deletedQuestions} 个题目已删除`,\r\n      deletedQuestions\r\n    };\r\n  } catch (error) {\r\n    console.error('删除类别失败:', error);\r\n    throw new Error(`删除失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 批量获取类别统计信息 - 带缓存\r\n */\r\nexport const getCategoriesStats = async () => {\r\n  try {\r\n    const categories = await getAllCategories(); // 使用带缓存的函数\r\n    \r\n    const stats = {\r\n      totalCategories: categories.length,\r\n      totalQuestions: categories.reduce((sum, cat) => sum + (cat.questionCount || 0), 0),\r\n      averageQuestionsPerCategory: categories.length > 0 \r\n        ? (categories.reduce((sum, cat) => sum + (cat.questionCount || 0), 0) / categories.length).toFixed(1)\r\n        : 0,\r\n      categoriesWithQuestions: categories.filter(cat => (cat.questionCount || 0) > 0).length,\r\n      emptyCategories: categories.filter(cat => (cat.questionCount || 0) === 0).length\r\n    };\r\n    \r\n    return stats;\r\n  } catch (error) {\r\n    console.error('获取类别统计失败:', error);\r\n    throw new Error(`获取统计失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 搜索类别 - 不使用缓存\r\n */\r\nexport const searchCategories = async (searchTerm, options = {}) => {\r\n  // 离线模式下返回空结果\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法搜索分类');\r\n    return {\r\n      data: [],\r\n      pagination: {\r\n        current: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        totalPages: 0\r\n      }\r\n    };\r\n  }\r\n\r\n  try {\r\n    const { page = 1, pageSize = 10 } = options;\r\n    \r\n    const query = new AV.Query('Category');\r\n    query.contains('name', searchTerm);\r\n    query.addDescending('updatedAt');\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    \r\n    const results = await query.find();\r\n    const totalCount = await query.count();\r\n    \r\n    return {\r\n      data: results.map(result => ({\r\n        id: result.id,\r\n        name: result.get('name'),\r\n        questionCount: result.get('questionCount') || 0,\r\n        updatedAt: result.updatedAt,\r\n        createdAt: result.createdAt\r\n      })),\r\n      pagination: {\r\n        current: page,\r\n        pageSize,\r\n        total: totalCount,\r\n        totalPages: Math.ceil(totalCount / pageSize)\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.error('搜索类别失败:', error);\r\n    throw new Error(`搜索失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取分类下的题目 - 不使用缓存（因为题目经常变动）\r\n */\r\nexport const getQuestionsByCategory = async (categoryId, options = {}) => {\r\n  // 离线模式下返回空结果\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法获取分类题目');\r\n    return {\r\n      data: []\r\n    };\r\n  }\r\n\r\n  try {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      throw new Error('用户未登录');\r\n    }\r\n\r\n    const { \r\n      page = 1, \r\n      pageSize = 20,\r\n      sortBy = 'updatedAt',\r\n      sortOrder = 'desc'\r\n    } = options;\r\n    \r\n    const categoryPointer = AV.Object.createWithoutData('Category', categoryId);\r\n    const query = new AV.Query('Question');\r\n    \r\n    query.equalTo('category', categoryPointer);\r\n    query.equalTo('createdBy', currentUser);\r\n    query.include('category');\r\n    \r\n    // 排序\r\n    if (sortOrder === 'asc') {\r\n      query.addAscending(sortBy);\r\n    } else {\r\n      query.addDescending(sortBy);\r\n    }\r\n    \r\n    // 分页\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    \r\n    const results = await query.find();\r\n    \r\n    return {\r\n      data: results.map(question => {\r\n        const category = question.get('category');\r\n        return {\r\n          id: question.id,\r\n          title: question.get('title'),\r\n          detailedAnswer: question.get('detailedAnswer'),\r\n          oralAnswer: question.get('oralAnswer'),\r\n          code: question.get('code'),\r\n          url: question.get('url'),\r\n          tags: question.get('tags') || [],\r\n          difficulty: question.get('difficulty'),\r\n          proficiency: question.get('proficiency'),\r\n          appearanceLevel: question.get('appearanceLevel') || 50,\r\n          category: category ? {\r\n            id: category.id,\r\n            objectId: category.id,\r\n            name: category.get('name'),\r\n            description: category.get('description'),\r\n            questionCount: category.get('questionCount') || 0\r\n          } : null,\r\n          createdAt: question.get('createdAt'),\r\n          updatedAt: question.get('updatedAt'),\r\n          lastReviewedAt: question.get('lastReviewedAt')\r\n        };\r\n      })\r\n    };\r\n  } catch (error) {\r\n    console.error('获取分类题目失败:', error);\r\n    throw new Error(`获取题目失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n// 获取所有题目（分页方式）\r\nexport const getAllQuestionsPaginated = async (options = {}) => {\r\n  // 离线模式下返回空结果\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：无法获取分页题目');\r\n    return {\r\n      data: [],\r\n      total: 0,\r\n      hasMore: false\r\n    };\r\n  }\r\n\r\n  const {\r\n    page = 0,\r\n    pageSize = 50,\r\n    sortBy = 'updatedAt',\r\n    sortOrder = 'desc'\r\n  } = options;\r\n\r\n  try {\r\n    const query = new AV.Query('Question');\r\n    \r\n    // 包含分类信息\r\n    query.include('category');\r\n    \r\n    // 排序\r\n    if (sortBy === 'title') {\r\n      query.addAscending('title');\r\n    } else if (sortBy === 'difficulty') {\r\n      query.addAscending('difficulty');\r\n    } else if (sortBy === 'appearanceLevel') {\r\n      query.addDescending('appearanceLevel');\r\n    } else {\r\n      query.addDescending('updatedAt');\r\n    }\r\n    \r\n    // 分页\r\n    query.limit(pageSize);\r\n    query.skip(page * pageSize);\r\n    \r\n    const results = await query.find();\r\n    \r\n    const questions = results.map(item => ({\r\n      id: item.id,\r\n      title: item.get('title'),\r\n      detailedAnswer: item.get('detailedAnswer'),\r\n      oralAnswer: item.get('oralAnswer'),\r\n      code: item.get('code'),\r\n      difficulty: item.get('difficulty'),\r\n      proficiency: item.get('proficiency'),\r\n      appearanceLevel: item.get('appearanceLevel'),\r\n      tags: item.get('tags') || [],\r\n      lastReviewedAt: item.get('lastReviewedAt'),\r\n      createdAt: item.get('createdAt'),\r\n      updatedAt: item.get('updatedAt'),\r\n      category: item.get('category') ? {\r\n        id: item.get('category').id,\r\n        name: item.get('category').get('name'),\r\n        description: item.get('category').get('description')\r\n      } : null\r\n    }));\r\n    \r\n    return {\r\n      data: questions,\r\n      total: questions.length,\r\n      hasMore: questions.length === pageSize\r\n    };\r\n  } catch (error) {\r\n    console.error('获取题目失败:', error);\r\n    throw error;\r\n  }\r\n};","// src/services/cacheService.js\r\nimport { offlineService } from './offlineService';\r\n\r\n/**\r\n * 缓存服务 - 双缓存策略实现\r\n * 同时使用 Service Worker Cache API 和 localStorage 进行数据缓存\r\n * 提供更好的离线体验和缓存可靠性\r\n */\r\nexport class CacheService {\r\n  constructor() {\r\n    this.isSupported = this.checkSupport();\r\n    this.cacheLimit = 30; // 默认缓存30题\r\n    this.cacheVersion = '2.0.0'; // 缓存版本号\r\n    this.cacheExpiry = 7 * 24 * 60 * 60 * 1000; // 7天过期时间\r\n    \r\n    // 缓存键名常量\r\n    this.CACHE_KEYS = {\r\n      SW_CACHE: 'questions-data-v2',\r\n      LOCAL_STORAGE: 'offline_questions_v2',\r\n      FALLBACK: 'offline_questions_fallback_v2',\r\n      META: 'cache_metadata_v2'\r\n    };\r\n    \r\n    // 初始化缓存状态\r\n    this.cacheState = {\r\n      swAvailable: false,\r\n      localStorageAvailable: false,\r\n      lastSync: null,\r\n      strategy: 'dual' // dual, sw-only, ls-only, none\r\n    };\r\n    \r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * 初始化缓存服务\r\n   */\r\n  async init() {\r\n    try {\r\n      // 检测支持情况\r\n      this.cacheState.swAvailable = await this.checkSWCacheSupport();\r\n      this.cacheState.localStorageAvailable = this.checkLocalStorageSupport();\r\n      \r\n      // 确定缓存策略\r\n      this.determineCacheStrategy();\r\n      \r\n      console.log(`🔄 缓存服务初始化完成 - 策略: ${this.cacheState.strategy}`, {\r\n        sw: this.cacheState.swAvailable,\r\n        ls: this.cacheState.localStorageAvailable\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('❌ 缓存服务初始化失败:', error);\r\n      this.cacheState.strategy = 'none';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检查浏览器支持情况\r\n   */\r\n  checkSupport() {\r\n    return typeof window !== 'undefined' && \r\n           ('serviceWorker' in navigator || 'caches' in window);\r\n  }\r\n\r\n  /**\r\n   * 检查 Service Worker Cache API 支持\r\n   */\r\n  async checkSWCacheSupport() {\r\n    try {\r\n      if (!('caches' in window)) return false;\r\n      \r\n      // 测试缓存操作\r\n      const testCache = await caches.open('test-cache-support');\r\n      await testCache.put(\r\n        new Request('/test-support'), \r\n        new Response('test')\r\n      );\r\n      await testCache.delete('/test-support');\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检查 localStorage 支持\r\n   */\r\n  checkLocalStorageSupport() {\r\n    try {\r\n      const testKey = 'test_local_storage_support';\r\n      localStorage.setItem(testKey, 'test');\r\n      localStorage.removeItem(testKey);\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 确定最佳缓存策略\r\n   */\r\n  determineCacheStrategy() {\r\n    if (this.cacheState.swAvailable && this.cacheState.localStorageAvailable) {\r\n      this.cacheState.strategy = 'dual';\r\n    } else if (this.cacheState.swAvailable) {\r\n      this.cacheState.strategy = 'sw-only';\r\n    } else if (this.cacheState.localStorageAvailable) {\r\n      this.cacheState.strategy = 'ls-only';\r\n    } else {\r\n      this.cacheState.strategy = 'none';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置缓存题目数量限制\r\n   */\r\n  setCacheLimit(limit) {\r\n    if (limit > 0 && limit <= 500) {\r\n      this.cacheLimit = limit;\r\n      console.log(`🔄 缓存题目数量限制设置为: ${limit}`);\r\n      \r\n      // 更新元数据\r\n      this.updateCacheMetadata();\r\n      return true;\r\n    }\r\n    console.warn('❌ 缓存数量限制必须在 1-500 之间');\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * 获取当前缓存限制\r\n   */\r\n  getCacheLimit() {\r\n    return this.cacheLimit;\r\n  }\r\n\r\n  /**\r\n   * 双缓存策略：同时缓存到 Service Worker Cache 和 localStorage\r\n   */\r\n  async cacheQuestions(questions) {\r\n    if (offlineService.shouldUseOfflineData()) {\r\n      console.log('📦 离线模式下跳过缓存操作');\r\n      return false;\r\n    }\r\n\r\n    if (this.cacheState.strategy === 'none') {\r\n      console.warn('❌ 当前环境不支持任何缓存策略');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const cacheData = {\r\n        questions: questions.slice(0, this.cacheLimit),\r\n        timestamp: Date.now(),\r\n        version: this.cacheVersion,\r\n        count: Math.min(questions.length, this.cacheLimit),\r\n        cacheLimit: this.cacheLimit,\r\n        strategy: this.cacheState.strategy\r\n      };\r\n\r\n      // 并行执行多种缓存策略\r\n      const cachePromises = [];\r\n\r\n      // Service Worker Cache 缓存\r\n      if (this.cacheState.swAvailable) {\r\n        cachePromises.push(this.cacheToServiceWorker(cacheData));\r\n      }\r\n\r\n      // localStorage 缓存\r\n      if (this.cacheState.localStorageAvailable) {\r\n        cachePromises.push(this.cacheToLocalStorage(cacheData));\r\n      }\r\n\r\n      // 等待所有缓存操作完成\r\n      await Promise.allSettled(cachePromises);\r\n      \r\n      // 更新缓存状态\r\n      this.cacheState.lastSync = Date.now();\r\n      this.updateCacheMetadata(cacheData);\r\n      \r\n      console.log(`✅ 题目数据双缓存成功: ${cacheData.count} 道题目`, {\r\n        strategy: this.cacheState.strategy,\r\n        limit: this.cacheLimit\r\n      });\r\n      \r\n      // 通知缓存更新\r\n      this.dispatchEvent('cacheUpdated', {\r\n        count: cacheData.count,\r\n        timestamp: cacheData.timestamp,\r\n        cacheLimit: this.cacheLimit,\r\n        strategy: this.cacheState.strategy\r\n      });\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('❌ 双缓存策略失败:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 缓存到 Service Worker Cache API\r\n   */\r\n  async cacheToServiceWorker(cacheData) {\r\n    try {\r\n      const cache = await caches.open(this.CACHE_KEYS.SW_CACHE);\r\n      \r\n      // 创建缓存请求和响应\r\n      const cacheRequest = new Request('/api/cached/questions');\r\n      const cacheResponse = new Response(JSON.stringify(cacheData), {\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n\r\n      // 存储到缓存\r\n      await cache.put(cacheRequest, cacheResponse);\r\n      \r\n      console.log('✅ Service Worker 缓存成功');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('❌ Service Worker 缓存失败:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 缓存到 localStorage\r\n   */\r\n  async cacheToLocalStorage(cacheData) {\r\n    try {\r\n      localStorage.setItem(this.CACHE_KEYS.LOCAL_STORAGE, JSON.stringify(cacheData));\r\n      console.log('✅ localStorage 缓存成功');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('❌ localStorage 缓存失败:', error);\r\n      \r\n      // 尝试使用回退方案\r\n      try {\r\n        const fallbackData = {\r\n          ...cacheData,\r\n          version: cacheData.version + '-fallback'\r\n        };\r\n        localStorage.setItem(this.CACHE_KEYS.FALLBACK, JSON.stringify(fallbackData));\r\n        console.log('✅ 使用回退方案缓存成功');\r\n        return true;\r\n      } catch (fallbackError) {\r\n        console.error('❌ 回退方案也失败:', fallbackError);\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取缓存的题目数据 - 智能读取策略\r\n   */\r\n  async getCachedQuestions() {\r\n    if (this.cacheState.strategy === 'none') {\r\n      return this.getEmptyCacheData();\r\n    }\r\n\r\n    try {\r\n      let cacheData = null;\r\n      \r\n      // 根据策略优先级读取数据\r\n      if (this.cacheState.strategy === 'dual' || this.cacheState.strategy === 'sw-only') {\r\n        cacheData = await this.getFromServiceWorker();\r\n      }\r\n      \r\n      // 如果 Service Worker 缓存失败或没有数据，尝试 localStorage\r\n      if (!cacheData && (this.cacheState.strategy === 'dual' || this.cacheState.strategy === 'ls-only')) {\r\n        cacheData = this.getFromLocalStorage();\r\n      }\r\n      \r\n      // 如果都没有数据，返回空数据\r\n      if (!cacheData) {\r\n        return this.getEmptyCacheData();\r\n      }\r\n\r\n      // 检查缓存是否过期\r\n      if (this.isCacheExpired(cacheData.timestamp)) {\r\n        console.log('🕒 缓存已过期，清理旧数据');\r\n        await this.clearCache();\r\n        return this.getEmptyCacheData();\r\n      }\r\n\r\n      return cacheData;\r\n    } catch (error) {\r\n      console.error('❌ 获取缓存数据失败:', error);\r\n      return this.getEmptyCacheData();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 从 Service Worker Cache 读取数据\r\n   */\r\n  async getFromServiceWorker() {\r\n    try {\r\n      const cache = await caches.open(this.CACHE_KEYS.SW_CACHE);\r\n      const response = await cache.match('/api/cached/questions');\r\n      \r\n      if (response) {\r\n        const data = await response.json();\r\n        console.log('✅ 从 Service Worker 缓存读取数据');\r\n        return data;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error('❌ 从 Service Worker 读取失败:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 从 localStorage 读取数据 - 同步方法\r\n   */\r\n  getFromLocalStorage() {\r\n    try {\r\n      // 尝试主存储\r\n      const cached = localStorage.getItem(this.CACHE_KEYS.LOCAL_STORAGE);\r\n      if (cached) {\r\n        const data = JSON.parse(cached);\r\n        console.log('✅ 从 localStorage 读取数据');\r\n        return data;\r\n      }\r\n      \r\n      // 尝试回退存储\r\n      const fallback = localStorage.getItem(this.CACHE_KEYS.FALLBACK);\r\n      if (fallback) {\r\n        const data = JSON.parse(fallback);\r\n        console.log('✅ 从回退存储读取数据');\r\n        return data;\r\n      }\r\n      \r\n      return null;\r\n    } catch (error) {\r\n      console.error('❌ 从 localStorage 读取失败:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检查缓存是否过期\r\n   */\r\n  isCacheExpired(timestamp) {\r\n    return Date.now() - timestamp > this.cacheExpiry;\r\n  }\r\n\r\n  /**\r\n   * 获取空缓存数据结构\r\n   */\r\n  getEmptyCacheData() {\r\n    return {\r\n      questions: [],\r\n      timestamp: null,\r\n      version: null,\r\n      count: 0,\r\n      cacheLimit: this.cacheLimit,\r\n      strategy: this.cacheState.strategy\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取缓存状态信息 - 同步方法\r\n   */\r\n  getCacheStatus() {\r\n    if (this.cacheState.strategy === 'none') {\r\n      return this.getDefaultCacheStatus();\r\n    }\r\n\r\n    try {\r\n      let cacheData = null;\r\n      \r\n      // 根据策略优先级读取数据\r\n      if (this.cacheState.strategy === 'dual' || this.cacheState.strategy === 'sw-only') {\r\n        // 对于 Service Worker，我们无法同步获取，使用 localStorage 作为后备\r\n        cacheData = this.getFromLocalStorage();\r\n      } else if (this.cacheState.strategy === 'ls-only') {\r\n        cacheData = this.getFromLocalStorage();\r\n      }\r\n      \r\n      if (!cacheData) {\r\n        return this.getDefaultCacheStatus();\r\n      }\r\n\r\n      // 检查缓存是否过期\r\n      const isExpired = this.isCacheExpired(cacheData.timestamp);\r\n      \r\n      if (isExpired) {\r\n        console.log('🕒 缓存状态：已过期');\r\n        return {\r\n          ...this.getDefaultCacheStatus(),\r\n          isExpired: true\r\n        };\r\n      }\r\n\r\n      const metadata = this.getCacheMetadata();\r\n      \r\n      return {\r\n        supported: this.cacheState.strategy !== 'none',\r\n        hasCache: true,\r\n        count: cacheData.questions.length,\r\n        timestamp: cacheData.timestamp,\r\n        cacheLimit: this.cacheLimit,\r\n        strategy: this.cacheState.strategy,\r\n        swAvailable: this.cacheState.swAvailable,\r\n        lsAvailable: this.cacheState.localStorageAvailable,\r\n        isExpired: false,\r\n        lastSync: this.cacheState.lastSync,\r\n        metadata: metadata\r\n      };\r\n    } catch (error) {\r\n      console.error('❌ 获取缓存状态失败:', error);\r\n      return this.getDefaultCacheStatus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取默认缓存状态\r\n   */\r\n  getDefaultCacheStatus() {\r\n    return {\r\n      supported: this.cacheState.strategy !== 'none',\r\n      hasCache: false,\r\n      count: 0,\r\n      timestamp: null,\r\n      cacheLimit: this.cacheLimit,\r\n      strategy: this.cacheState.strategy,\r\n      swAvailable: this.cacheState.swAvailable,\r\n      lsAvailable: this.cacheState.localStorageAvailable,\r\n      isExpired: false,\r\n      lastSync: this.cacheState.lastSync,\r\n      metadata: this.getCacheMetadata()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 更新缓存元数据\r\n   */\r\n  updateCacheMetadata(cacheData = null) {\r\n    try {\r\n      const metadata = {\r\n        version: this.cacheVersion,\r\n        cacheLimit: this.cacheLimit,\r\n        lastUpdated: Date.now(),\r\n        strategy: this.cacheState.strategy,\r\n        dataInfo: cacheData ? {\r\n          count: cacheData.count,\r\n          timestamp: cacheData.timestamp\r\n        } : null\r\n      };\r\n      \r\n      if (this.cacheState.localStorageAvailable) {\r\n        localStorage.setItem(this.CACHE_KEYS.META, JSON.stringify(metadata));\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ 更新缓存元数据失败:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取缓存元数据 - 同步方法\r\n   */\r\n  getCacheMetadata() {\r\n    try {\r\n      if (this.cacheState.localStorageAvailable) {\r\n        const metadata = localStorage.getItem(this.CACHE_KEYS.META);\r\n        return metadata ? JSON.parse(metadata) : null;\r\n      }\r\n      return null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清理所有缓存\r\n   */\r\n  async clearCache() {\r\n    try {\r\n      const clearPromises = [];\r\n\r\n      // 清理 Service Worker 缓存\r\n      if (this.cacheState.swAvailable) {\r\n        clearPromises.push(\r\n          caches.delete(this.CACHE_KEYS.SW_CACHE).catch(() => {})\r\n        );\r\n      }\r\n\r\n      // 清理 localStorage\r\n      if (this.cacheState.localStorageAvailable) {\r\n        Object.values(this.CACHE_KEYS).forEach(key => {\r\n          localStorage.removeItem(key);\r\n        });\r\n      }\r\n\r\n      await Promise.allSettled(clearPromises);\r\n      \r\n      // 重置状态\r\n      this.cacheState.lastSync = null;\r\n      \r\n      console.log('🗑️ 所有缓存已清理');\r\n      \r\n      // 通知缓存清理\r\n      this.dispatchEvent('cacheCleared', {\r\n        strategy: this.cacheState.strategy\r\n      });\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('❌ 清理缓存失败:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取缓存配置信息\r\n   */\r\n  getCacheConfig() {\r\n    return {\r\n      cacheLimit: this.cacheLimit,\r\n      strategy: this.cacheState.strategy,\r\n      swAvailable: this.cacheState.swAvailable,\r\n      lsAvailable: this.cacheState.localStorageAvailable,\r\n      maxLimit: 500,\r\n      minLimit: 1,\r\n      defaultLimit: 30,\r\n      expiryDays: 7,\r\n      version: this.cacheVersion\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 重置为默认配置\r\n   */\r\n  resetToDefault() {\r\n    this.cacheLimit = 30;\r\n    this.updateCacheMetadata();\r\n    console.log('🔄 缓存配置已重置为默认值');\r\n    return this.cacheLimit;\r\n  }\r\n\r\n  /**\r\n   * 测试缓存性能\r\n   */\r\n  async testCachePerformance() {\r\n    const testData = {\r\n      questions: Array.from({ length: 10 }, (_, i) => ({\r\n        id: i,\r\n        question: `测试问题 ${i}`,\r\n        answer: `测试答案 ${i}`\r\n      })),\r\n      timestamp: Date.now(),\r\n      count: 10\r\n    };\r\n\r\n    const startTime = performance.now();\r\n    \r\n    try {\r\n      await this.cacheQuestions(testData.questions);\r\n      const retrievedData = await this.getCachedQuestions();\r\n      const endTime = performance.now();\r\n      \r\n      const success = retrievedData.questions.length === testData.questions.length;\r\n      const duration = endTime - startTime;\r\n      \r\n      console.log(`📊 缓存性能测试: ${success ? '成功' : '失败'}`, {\r\n        耗时: `${duration.toFixed(2)}ms`,\r\n        策略: this.cacheState.strategy,\r\n        数据量: testData.questions.length\r\n      });\r\n      \r\n      return { success, duration, strategy: this.cacheState.strategy };\r\n    } catch (error) {\r\n      console.error('❌ 缓存性能测试失败:', error);\r\n      return { success: false, duration: 0, strategy: this.cacheState.strategy };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 事件分发\r\n   */\r\n  dispatchEvent(eventName, data) {\r\n    if (typeof window !== 'undefined') {\r\n      window.dispatchEvent(new CustomEvent(`cache:${eventName}`, { \r\n        detail: {\r\n          ...data,\r\n          timestamp: Date.now(),\r\n          service: 'CacheService'\r\n        }\r\n      }));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 添加事件监听\r\n   */\r\n  addEventListener(eventName, callback) {\r\n    if (typeof window !== 'undefined') {\r\n      window.addEventListener(`cache:${eventName}`, callback);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 移除事件监听\r\n   */\r\n  removeEventListener(eventName, callback) {\r\n    if (typeof window !== 'undefined') {\r\n      window.removeEventListener(`cache:${eventName}`, callback);\r\n    }\r\n  }\r\n}\r\n\r\n// 创建单例实例\r\nexport const cacheService = new CacheService();","// services/questionService.js\r\nimport AV from 'leancloud-storage';\r\nimport { offlineService } from './offlineService';\r\nimport { cacheService } from './cacheService';\r\n\r\n/**\r\n * 难度选项\r\n */\r\nexport const DifficultyOptions = {\r\n  EASY: 'easy',\r\n  MEDIUM: 'medium',\r\n  HARD: 'hard'\r\n};\r\n\r\n/**\r\n * 掌握程度选项\r\n */\r\nexport const ProficiencyOptions = {\r\n  BEGINNER: 'beginner',\r\n  INTERMEDIATE: 'intermediate',\r\n  ADVANCED: 'advanced',\r\n  MASTER: 'master'\r\n};\r\n\r\n// 请求配置\r\nconst REQUEST_DELAY = 1000; // 1秒延迟\r\nconst BATCH_SIZE = 10; // 批量请求大小\r\n\r\n/**\r\n * 获取分类ID的辅助函数\r\n */\r\nconst getCategoryId = (category) => {\r\n  if (category && category.objectId) return category.objectId;\r\n  if (typeof category === 'string') return category;\r\n  if (category && category.id) return category.id;\r\n  return null;\r\n};\r\n\r\n/**\r\n * 创建分类 Pointer 对象的辅助函数\r\n */\r\nconst createCategoryPointer = (categoryId) => {\r\n  if (!categoryId) return null;\r\n  return AV.Object.createWithoutData('Category', categoryId);\r\n};\r\n\r\n/**\r\n * 批量更新分类题目数量的辅助函数\r\n */\r\nconst batchUpdateCategoryCounts = async (updates) => {\r\n  // 离线模式下跳过分类计数更新\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：跳过分类计数更新');\r\n    return;\r\n  }\r\n\r\n  if (updates.length === 0) return;\r\n\r\n  try {\r\n    // 按分类分组更新\r\n    const categoryUpdates = {};\r\n    updates.forEach(({ categoryId, change }) => {\r\n      if (categoryId && !categoryUpdates[categoryId]) {\r\n        categoryUpdates[categoryId] = 0;\r\n      }\r\n      if (categoryId) {\r\n        categoryUpdates[categoryId] += change;\r\n      }\r\n    });\r\n\r\n    // 批量更新分类\r\n    const updatePromises = Object.entries(categoryUpdates).map(async ([categoryId, totalChange]) => {\r\n      try {\r\n        const categoryQuery = new AV.Query('Category');\r\n        const freshCategory = await categoryQuery.get(categoryId);\r\n        \r\n        const currentCount = freshCategory.get('questionCount') || 0;\r\n        const newCount = Math.max(0, currentCount + totalChange);\r\n        \r\n        freshCategory.set('questionCount', newCount);\r\n        await freshCategory.save();\r\n        \r\n        console.log(`分类 ${freshCategory.get('name')} 题目数量批量更新: ${currentCount} -> ${newCount}`);\r\n      } catch (error) {\r\n        console.error(`更新分类 ${categoryId} 题目数量失败:`, error);\r\n      }\r\n    });\r\n\r\n    await Promise.all(updatePromises);\r\n  } catch (error) {\r\n    console.error('批量更新分类题目数量失败:', error);\r\n  }\r\n};\r\n\r\n// 批量更新队列\r\nlet batchUpdateQueue = [];\r\nlet batchUpdateTimer = null;\r\n\r\n/**\r\n * 调度批量更新\r\n */\r\nconst scheduleBatchUpdate = (category, change) => {\r\n  // 离线模式下跳过批量更新\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    return;\r\n  }\r\n\r\n  const categoryId = getCategoryId(category);\r\n  if (!categoryId) return;\r\n\r\n  batchUpdateQueue.push({ categoryId, change });\r\n\r\n  if (batchUpdateTimer) {\r\n    clearTimeout(batchUpdateTimer);\r\n  }\r\n\r\n  batchUpdateTimer = setTimeout(() => {\r\n    const updates = [...batchUpdateQueue];\r\n    batchUpdateQueue = [];\r\n    batchUpdateTimer = null;\r\n    \r\n    batchUpdateCategoryCounts(updates);\r\n  }, 2000); // 2秒后执行批量更新\r\n};\r\n\r\n/**\r\n * 格式化题目响应\r\n */\r\nconst formatQuestionResponse = (question) => {\r\n  const category = question.get('category');\r\n  return {\r\n    id: question.id,\r\n    objectId: question.id,\r\n    title: question.get('title'),\r\n    detailedAnswer: question.get('detailedAnswer'),\r\n    oralAnswer: question.get('oralAnswer'),\r\n    code: question.get('code'),\r\n    url: question.get('url'),\r\n    tags: question.get('tags') || [],\r\n    difficulty: question.get('difficulty'),\r\n    proficiency: question.get('proficiency'),\r\n    appearanceLevel: question.get('appearanceLevel') || 50,\r\n    category: category ? {\r\n      id: category.id,\r\n      objectId: category.id,\r\n      name: category.get('name'),\r\n      description: category.get('description'),\r\n      questionCount: category.get('questionCount') || 0\r\n    } : null,\r\n    createdAt: question.get('createdAt'),\r\n    updatedAt: question.get('updatedAt'),\r\n    lastReviewedAt: question.get('lastReviewedAt')\r\n  };\r\n};\r\n\r\n/**\r\n * 延迟函数\r\n */\r\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n/**\r\n * 检查用户登录状态\r\n */\r\nconst checkUserAuth = () => {\r\n  const currentUser = AV.User.current();\r\n  if (!currentUser) {\r\n    throw new Error('用户未登录');\r\n  }\r\n  return currentUser;\r\n};\r\n\r\n/**\r\n * 检查离线模式\r\n */\r\nconst checkOfflineMode = (operation = '操作') => {\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log(`📦 离线模式：无法${operation}`);\r\n    throw new Error(`离线模式下无法${operation}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建题目\r\n */\r\nexport const createQuestion = async (questionData) => {\r\n  checkOfflineMode('创建题目');\r\n\r\n  try {\r\n    const currentUser = checkUserAuth();\r\n\r\n    const Question = AV.Object.extend('Question');\r\n    const question = new Question();\r\n    \r\n    // 设置题目字段\r\n    question.set('title', questionData.title || '');\r\n    question.set('detailedAnswer', questionData.detailedAnswer || '');\r\n    question.set('oralAnswer', questionData.oralAnswer || '');\r\n    question.set('code', questionData.code || '');\r\n    question.set('url', questionData.url || '');\r\n    question.set('tags', questionData.tags || []);\r\n    question.set('difficulty', questionData.difficulty || DifficultyOptions.MEDIUM);\r\n    question.set('proficiency', questionData.proficiency || ProficiencyOptions.BEGINNER);\r\n    question.set('appearanceLevel', questionData.appearanceLevel || 50);\r\n    question.set('createdBy', currentUser);\r\n\r\n    // 设置分类\r\n    if (questionData.categoryId) {\r\n      const categoryPointer = createCategoryPointer(questionData.categoryId);\r\n      question.set('category', categoryPointer);\r\n    }\r\n\r\n    // 设置 ACL 权限\r\n    const acl = new AV.ACL();\r\n    acl.setReadAccess(currentUser, true);\r\n    acl.setWriteAccess(currentUser, true);\r\n    acl.setPublicReadAccess(false);\r\n    question.setACL(acl);\r\n\r\n    await question.save();\r\n    \r\n    // 立即更新分类计数\r\n    if (questionData.categoryId) {\r\n      await updateCategoryCountImmediately(questionData.categoryId, 1);\r\n    }\r\n    \r\n    return formatQuestionResponse(question);\r\n  } catch (error) {\r\n    console.error('创建题目失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取类别的题目列表\r\n */\r\nexport const getQuestionsByCategory = async (categoryId, options = {}) => {\r\n  // 离线模式下从缓存获取数据\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从缓存获取分类题目列表');\r\n    const cached = await cacheService.getCachedQuestions();\r\n    const categoryQuestions = cached.questions.filter(q => \r\n      q.category && getCategoryId(q.category) === categoryId\r\n    );\r\n    \r\n    // 应用过滤条件\r\n    let filteredQuestions = categoryQuestions;\r\n    const { difficulty, proficiency, tag } = options;\r\n    \r\n    if (difficulty) {\r\n      filteredQuestions = filteredQuestions.filter(q => q.difficulty === difficulty);\r\n    }\r\n    if (proficiency) {\r\n      filteredQuestions = filteredQuestions.filter(q => q.proficiency === proficiency);\r\n    }\r\n    if (tag) {\r\n      filteredQuestions = filteredQuestions.filter(q => q.tags.includes(tag));\r\n    }\r\n    \r\n    const { page = 1, pageSize = 10 } = options;\r\n    const startIndex = (page - 1) * pageSize;\r\n    const paginatedQuestions = filteredQuestions.slice(startIndex, startIndex + pageSize);\r\n    \r\n    return {\r\n      data: paginatedQuestions,\r\n      pagination: {\r\n        current: page,\r\n        pageSize,\r\n        total: filteredQuestions.length,\r\n        totalPages: Math.ceil(filteredQuestions.length / pageSize)\r\n      }\r\n    };\r\n  }\r\n\r\n  await delay(REQUEST_DELAY);\r\n  \r\n  try {\r\n    const currentUser = checkUserAuth();\r\n\r\n    const { \r\n      page = 1, \r\n      pageSize = 10, \r\n      sortBy = 'updatedAt',\r\n      sortOrder = 'desc',\r\n      difficulty,\r\n      proficiency,\r\n      tag\r\n    } = options;\r\n    \r\n    const categoryPointer = createCategoryPointer(categoryId);\r\n    const query = new AV.Query('Question');\r\n    \r\n    query.equalTo('category', categoryPointer);\r\n    query.equalTo('createdBy', currentUser);\r\n    query.include('category');\r\n    \r\n    // 过滤条件\r\n    if (difficulty) query.equalTo('difficulty', difficulty);\r\n    if (proficiency) query.equalTo('proficiency', proficiency);\r\n    if (tag) query.containsAll('tags', [tag]);\r\n    \r\n    // 排序\r\n    if (sortOrder === 'asc') {\r\n      query.addAscending(sortBy);\r\n    } else {\r\n      query.addDescending(sortBy);\r\n    }\r\n    \r\n    // 分页\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    \r\n    const results = await query.find();\r\n    const totalCount = await query.count();\r\n    \r\n    const response = {\r\n      data: results.map(result => formatQuestionResponse(result)),\r\n      pagination: {\r\n        current: page,\r\n        pageSize,\r\n        total: totalCount,\r\n        totalPages: Math.ceil(totalCount / pageSize)\r\n      }\r\n    };\r\n    \r\n    return response;\r\n  } catch (error) {\r\n    console.error('获取题目列表失败:', error);\r\n    throw new Error(`获取题目失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 根据ID获取单个题目详情\r\n */\r\nexport const getQuestionById = async (id) => {\r\n  // 离线模式下从缓存获取数据\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从缓存获取单个题目详情');\r\n    const cached = await cacheService.getCachedQuestions();\r\n    const question = cached.questions.find(q => q.id === id || q.objectId === id);\r\n    \r\n    if (!question) {\r\n      throw new Error('题目不存在或未缓存');\r\n    }\r\n    \r\n    return question;\r\n  }\r\n\r\n  try {\r\n    const query = new AV.Query('Question');\r\n    query.equalTo('objectId', id);\r\n    query.include('category');\r\n    \r\n    const question = await query.first();\r\n    \r\n    if (!question) {\r\n      throw new Error('题目不存在');\r\n    }\r\n    \r\n    return formatQuestionResponse(question);\r\n  } catch (error) {\r\n    console.error(`获取题目 ${id} 失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 批量获取题目详情（优化性能）\r\n */\r\nexport const getQuestionsBatch = async (questionIds) => {\r\n  if (!questionIds || questionIds.length === 0) return [];\r\n\r\n  // 离线模式下从缓存获取数据\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从缓存批量获取题目');\r\n    const cached = await cacheService.getCachedQuestions();\r\n    return cached.questions.filter(q => \r\n      questionIds.includes(q.id) || questionIds.includes(q.objectId)\r\n    );\r\n  }\r\n\r\n  // 分批处理，避免过多请求\r\n  const batches = [];\r\n  for (let i = 0; i < questionIds.length; i += BATCH_SIZE) {\r\n    batches.push(questionIds.slice(i, i + BATCH_SIZE));\r\n  }\r\n\r\n  const results = [];\r\n  \r\n  for (const batch of batches) {\r\n    await delay(REQUEST_DELAY);\r\n    \r\n    try {\r\n      const currentUser = checkUserAuth();\r\n\r\n      const query = new AV.Query('Question');\r\n      query.containedIn('objectId', batch);\r\n      query.equalTo('createdBy', currentUser);\r\n      query.include('category');\r\n      \r\n      const batchResults = await query.find();\r\n      results.push(...batchResults.map(q => formatQuestionResponse(q)));\r\n    } catch (error) {\r\n      console.error('批量获取题目失败:', error);\r\n      // 继续处理其他批次\r\n    }\r\n  }\r\n\r\n  return results;\r\n};\r\n\r\n/**\r\n * 删除题目\r\n */\r\nexport const deleteQuestion = async (questionId) => {\r\n  checkOfflineMode('删除题目');\r\n\r\n  try {\r\n    const currentUser = checkUserAuth();\r\n\r\n    // 验证题目是否属于当前用户\r\n    const query = new AV.Query('Question');\r\n    query.equalTo('objectId', questionId);\r\n    query.equalTo('createdBy', currentUser);\r\n    query.include('category');\r\n    const question = await query.first();\r\n    \r\n    if (!question) {\r\n      throw new Error('题目不存在或无权删除');\r\n    }\r\n\r\n    // 获取分类信息用于更新计数\r\n    const category = question.get('category');\r\n    \r\n    await question.destroy();\r\n    \r\n    // 立即更新分类计数\r\n    if (category) {\r\n      await updateCategoryCountImmediately(category, -1);\r\n    }\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('删除题目失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 搜索题目\r\n */\r\nexport const searchQuestions = async (searchTerm, options = {}) => {\r\n  // 离线模式下从缓存搜索\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：在缓存中搜索题目');\r\n    const cached = await cacheService.getCachedQuestions();\r\n    \r\n    const searchLower = searchTerm.toLowerCase();\r\n    const searchedQuestions = cached.questions.filter(question => \r\n      question.title.toLowerCase().includes(searchLower) ||\r\n      question.detailedAnswer.toLowerCase().includes(searchLower) ||\r\n      question.oralAnswer.toLowerCase().includes(searchLower) ||\r\n      question.code.toLowerCase().includes(searchLower) ||\r\n      (question.tags && question.tags.some(tag => \r\n        tag.toLowerCase().includes(searchLower)\r\n      ))\r\n    );\r\n    \r\n    const { page = 1, pageSize = 10 } = options;\r\n    const startIndex = (page - 1) * pageSize;\r\n    const paginatedQuestions = searchedQuestions.slice(startIndex, startIndex + pageSize);\r\n    \r\n    return {\r\n      data: paginatedQuestions,\r\n      pagination: {\r\n        current: page,\r\n        pageSize,\r\n        total: searchedQuestions.length,\r\n        totalPages: Math.ceil(searchedQuestions.length / pageSize)\r\n      }\r\n    };\r\n  }\r\n\r\n  await delay(REQUEST_DELAY);\r\n  \r\n  try {\r\n    const currentUser = checkUserAuth();\r\n\r\n    const { page = 1, pageSize = 10 } = options;\r\n    \r\n    const titleQuery = new AV.Query('Question');\r\n    titleQuery.contains('title', searchTerm);\r\n    titleQuery.equalTo('createdBy', currentUser);\r\n    \r\n    const detailedAnswerQuery = new AV.Query('Question');\r\n    detailedAnswerQuery.contains('detailedAnswer', searchTerm);\r\n    detailedAnswerQuery.equalTo('createdBy', currentUser);\r\n    \r\n    const oralAnswerQuery = new AV.Query('Question');\r\n    oralAnswerQuery.contains('oralAnswer', searchTerm);\r\n    oralAnswerQuery.equalTo('createdBy', currentUser);\r\n    \r\n    const codeQuery = new AV.Query('Question');\r\n    codeQuery.contains('code', searchTerm);\r\n    codeQuery.equalTo('createdBy', currentUser);\r\n    \r\n    const tagsQuery = new AV.Query('Question');\r\n    tagsQuery.containsAll('tags', [searchTerm]);\r\n    tagsQuery.equalTo('createdBy', currentUser);\r\n    \r\n    const query = AV.Query.or(\r\n      titleQuery, \r\n      detailedAnswerQuery, \r\n      oralAnswerQuery, \r\n      codeQuery, \r\n      tagsQuery\r\n    );\r\n    \r\n    query.include('category');\r\n    query.addDescending('updatedAt');\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    \r\n    const results = await query.find();\r\n    const totalCount = await query.count();\r\n    \r\n    return {\r\n      data: results.map(result => formatQuestionResponse(result)),\r\n      pagination: {\r\n        current: page,\r\n        pageSize,\r\n        total: totalCount,\r\n        totalPages: Math.ceil(totalCount / pageSize)\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.error('搜索题目失败:', error);\r\n    throw new Error(`搜索失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 获取所有题目 - 确保获取全部数据\r\n */\r\nexport const getAllQuestions = async () => {\r\n  // 离线模式处理\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从缓存获取所有题目数据');\r\n    const cached = await cacheService.getCachedQuestions();\r\n    return cached.questions;\r\n  }\r\n\r\n  await delay(REQUEST_DELAY);\r\n  \r\n  try {\r\n    const currentUser = checkUserAuth();\r\n\r\n    const allQuestions = [];\r\n    let skip = 0;\r\n    const limit = 100; // LeanCloud 单次查询限制\r\n    let hasMore = true;\r\n\r\n    // 循环获取所有数据\r\n    while (hasMore) {\r\n      const query = new AV.Query('Question');\r\n      query.equalTo('createdBy', currentUser);\r\n      query.include('category');\r\n      query.descending('updatedAt');\r\n      query.limit(limit);\r\n      query.skip(skip);\r\n      \r\n      const batchResults = await query.find();\r\n      allQuestions.push(...batchResults);\r\n      \r\n      // 检查是否还有更多数据\r\n      hasMore = batchResults.length === limit;\r\n      skip += limit;\r\n      \r\n      console.log(`📦 批量获取题目: 第 ${skip/limit} 批, 获取 ${batchResults.length} 条`);\r\n    }\r\n\r\n    const result = allQuestions.map(question => formatQuestionResponse(question));\r\n    \r\n    console.log('📊 getAllQuestions 实时查询结果:', {\r\n      题目总数: result.length,\r\n      批次: `${skip/limit} 批`,\r\n      最新题目: result.slice(0, 3).map(q => ({ id: q.id, title: q.title }))\r\n    });\r\n    \r\n    // 保存到缓存服务\r\n    await cacheService.cacheQuestions(result);\r\n    \r\n    return result;\r\n  } catch (error) {\r\n    console.error('获取所有题目失败:', error);\r\n    \r\n    // 网络请求失败时，尝试使用缓存数据\r\n    if (error.message.includes('offline') || error.message.includes('network') || error.message.includes('CORS')) {\r\n      console.log('🌐 网络请求失败，尝试使用缓存数据');\r\n      const cached = await cacheService.getCachedQuestions();\r\n      return cached.questions;\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新题目\r\n */\r\nexport const updateQuestion = async (questionId, updateData) => {\r\n  checkOfflineMode('更新题目');\r\n\r\n  try {\r\n    console.log('questionService: 更新题目', questionId, updateData);\r\n    \r\n    const question = AV.Object.createWithoutData('Question', questionId);\r\n    \r\n    // 记录旧的分类信息\r\n    let oldCategory = null;\r\n    if (updateData.categoryId) {\r\n      const oldQuestion = await new AV.Query('Question')\r\n        .include('category')\r\n        .get(questionId);\r\n      oldCategory = oldQuestion.get('category');\r\n    }\r\n    \r\n    // 设置更新字段\r\n    Object.keys(updateData).forEach(key => {\r\n      if (updateData[key] !== undefined) {\r\n        // 如果是 categoryId，转换为 Pointer 对象\r\n        if (key === 'categoryId') {\r\n          const categoryPointer = createCategoryPointer(updateData[key]);\r\n          question.set('category', categoryPointer);\r\n        } else {\r\n          question.set(key, updateData[key]);\r\n        }\r\n      }\r\n    });\r\n    \r\n    const result = await question.save();\r\n    console.log('questionService: 更新成功', result);\r\n    \r\n    // 如果分类发生变化，更新分类计数\r\n    if (updateData.categoryId && oldCategory) {\r\n      const newCategoryId = updateData.categoryId;\r\n      const oldCategoryId = getCategoryId(oldCategory);\r\n      \r\n      if (oldCategoryId !== newCategoryId) {\r\n        // 减少旧分类的计数\r\n        if (oldCategoryId) {\r\n          scheduleBatchUpdate(oldCategoryId, -1);\r\n        }\r\n        // 增加新分类的计数\r\n        if (newCategoryId) {\r\n          scheduleBatchUpdate(newCategoryId, 1);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 重新获取更新后的题目信息\r\n    const updatedQuestion = await new AV.Query('Question')\r\n      .include('category')\r\n      .get(questionId);\r\n    \r\n    return formatQuestionResponse(updatedQuestion);\r\n  } catch (error) {\r\n    console.error('questionService: 更新题目失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新题目复习时间\r\n */\r\nexport const updateQuestionReviewTime = async (questionId) => {\r\n  checkOfflineMode('更新复习时间');\r\n\r\n  try {\r\n    const currentUser = checkUserAuth();\r\n\r\n    const question = AV.Object.createWithoutData('Question', questionId);\r\n    question.set('lastReviewedAt', new Date());\r\n    \r\n    const result = await question.save();\r\n    \r\n    return result;\r\n  } catch (error) {\r\n    console.error('更新题目复习时间失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取需要复习的题目\r\n */\r\nexport const getReviewQuestions = async (thresholdDays = 7) => {\r\n  // 离线模式下从缓存获取\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    console.log('📦 离线模式：从缓存获取复习题目');\r\n    const cached = await cacheService.getCachedQuestions();\r\n    const thresholdDate = new Date();\r\n    thresholdDate.setDate(thresholdDate.getDate() - thresholdDays);\r\n    \r\n    return cached.questions.filter(question => {\r\n      if (!question.lastReviewedAt) return true;\r\n      const lastReviewed = new Date(question.lastReviewedAt);\r\n      return lastReviewed < thresholdDate;\r\n    });\r\n  }\r\n\r\n  try {\r\n    const currentUser = checkUserAuth();\r\n\r\n    const thresholdDate = new Date();\r\n    thresholdDate.setDate(thresholdDate.getDate() - thresholdDays);\r\n\r\n    const query = new AV.Query('Question');\r\n    query.equalTo('createdBy', currentUser);\r\n    query.lessThan('lastReviewedAt', thresholdDate);\r\n    query.include('category');\r\n    query.addAscending('lastReviewedAt');\r\n    \r\n    const questions = await query.find();\r\n    \r\n    return questions.map(question => formatQuestionResponse(question));\r\n  } catch (error) {\r\n    console.error('获取复习题目失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 立即更新分类计数\r\n */\r\nconst updateCategoryCountImmediately = async (category, change) => {\r\n  // 离线模式下跳过分类计数更新\r\n  if (offlineService.shouldUseOfflineData()) {\r\n    return;\r\n  }\r\n\r\n  if (!category) return;\r\n  \r\n  const categoryId = getCategoryId(category);\r\n  if (!categoryId) return;\r\n\r\n  try {\r\n    const categoryQuery = new AV.Query('Category');\r\n    const freshCategory = await categoryQuery.get(categoryId);\r\n    \r\n    const currentCount = freshCategory.get('questionCount') || 0;\r\n    const newCount = Math.max(0, currentCount + change);\r\n    \r\n    freshCategory.set('questionCount', newCount);\r\n    await freshCategory.save();\r\n    \r\n    console.log(`分类 ${freshCategory.get('name')} 题目数量立即更新: ${currentCount} -> ${newCount}`);\r\n  } catch (error) {\r\n    console.error(`立即更新分类 ${categoryId} 题目数量失败:`, error);\r\n  }\r\n};\r\n\r\n/**\r\n * 刷新缓存 - 重新获取所有数据并更新缓存\r\n */\r\nexport const refreshCache = async () => {\r\n  try {\r\n    console.log('🔄 开始刷新题目缓存');\r\n    const questions = await getAllQuestions();\r\n    await cacheService.cacheQuestions(questions);\r\n    console.log('✅ 题目缓存刷新完成');\r\n    return questions;\r\n  } catch (error) {\r\n    console.error('❌ 刷新缓存失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 导出辅助函数\r\nexport { batchUpdateCategoryCounts, createCategoryPointer };","// components/OfflineIndicator.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { offlineService } from '../services/offlineService';\r\nimport { cacheService } from '../services/cacheService'; // 确保从正确的文件导入\r\nimport './OfflineIndicator.css';\r\n\r\nconst OfflineIndicator = () => {\r\n  const [isOnline, setIsOnline] = useState(true);\r\n  const [cacheStatus, setCacheStatus] = useState({});\r\n\r\n  useEffect(() => {\r\n    // 初始状态\r\n    setIsOnline(offlineService.isOnlineMode());\r\n    setCacheStatus(cacheService.getCacheStatus());\r\n\r\n    // 监听网络状态变化\r\n    const handleOnline = () => setIsOnline(true);\r\n    const handleOffline = () => setIsOnline(false);\r\n\r\n    offlineService.addEventListener('online', handleOnline);\r\n    offlineService.addEventListener('offline', handleOffline);\r\n\r\n    // 定期更新缓存状态\r\n    const interval = setInterval(() => {\r\n      setCacheStatus(cacheService.getCacheStatus());\r\n    }, 5000);\r\n\r\n    return () => {\r\n      offlineService.removeEventListener('online', handleOnline);\r\n      offlineService.removeEventListener('offline', handleOffline);\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  if (isOnline) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"offline-indicator\">\r\n      <div className=\"offline-content\">\r\n        <div className=\"offline-icon\">📶</div>\r\n        <div className=\"offline-text\">\r\n          <strong>离线模式</strong>\r\n          <span>使用缓存的题目数据</span>\r\n          {cacheStatus.hasCache && (\r\n            <span className=\"cache-info\">\r\n              已缓存 {cacheStatus.count} 道题目\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OfflineIndicator;","// components/CacheManagementTab.jsx\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { cacheService } from '../services/cacheService';\r\nimport { offlineService } from '../services/offlineService';\r\nimport './CacheManagementTab.css';\r\n\r\n// 防抖钩子\r\nconst useDebounce = (value, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  \r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    \r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n  \r\n  return debouncedValue;\r\n};\r\n\r\n// 节流钩子\r\nconst useThrottle = (value, limit) => {\r\n  const [throttledValue, setThrottledValue] = useState(value);\r\n  const lastRan = useRef(Date.now());\r\n  \r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      if (Date.now() - lastRan.current >= limit) {\r\n        setThrottledValue(value);\r\n        lastRan.current = Date.now();\r\n      }\r\n    }, limit - (Date.now() - lastRan.current));\r\n    \r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, limit]);\r\n  \r\n  return throttledValue;\r\n};\r\n\r\nconst CacheManagementTab = ({ \r\n  questions = [], \r\n  onCacheUpdate,\r\n  currentUser \r\n}) => {\r\n  const navigate = useNavigate();\r\n  \r\n  // 状态管理\r\n  const [cacheStatus, setCacheStatus] = useState({});\r\n  const [syncing, setSyncing] = useState(false);\r\n  const [isOnline, setIsOnline] = useState(true);\r\n  const [cacheSettings, setCacheSettings] = useState({\r\n    cacheLimit: 30,\r\n    autoCache: true,\r\n    cacheStrategy: 'recent'\r\n  });\r\n  const [tempCacheLimit, setTempCacheLimit] = useState(30);\r\n  const [showSettings, setShowSettings] = useState(false);\r\n\r\n  // 防抖和节流\r\n  const debouncedCacheLimit = useDebounce(tempCacheLimit, 300);\r\n  const throttledCacheLimit = useThrottle(tempCacheLimit, 100);\r\n\r\n  // 初始化\r\n  useEffect(() => {\r\n    const status = cacheService.getCacheStatus();\r\n    setCacheStatus(status);\r\n    setCacheSettings(prev => ({\r\n      ...prev,\r\n      cacheLimit: cacheService.getCacheLimit()\r\n    }));\r\n    setTempCacheLimit(cacheService.getCacheLimit());\r\n    \r\n    // 网络状态监听\r\n    setIsOnline(offlineService.isOnlineMode());\r\n    \r\n    const handleOnline = () => setIsOnline(true);\r\n    const handleOffline = () => setIsOnline(false);\r\n    \r\n    offlineService.addEventListener('online', handleOnline);\r\n    offlineService.addEventListener('offline', handleOffline);\r\n    \r\n    return () => {\r\n      offlineService.removeEventListener('online', handleOnline);\r\n      offlineService.removeEventListener('offline', handleOffline);\r\n    };\r\n  }, []);\r\n\r\n  // 防抖更新设置\r\n  useEffect(() => {\r\n    if (debouncedCacheLimit !== cacheSettings.cacheLimit) {\r\n      setCacheSettings(prev => ({\r\n        ...prev,\r\n        cacheLimit: debouncedCacheLimit\r\n      }));\r\n      cacheService.setCacheLimit(debouncedCacheLimit);\r\n    }\r\n  }, [debouncedCacheLimit, cacheSettings.cacheLimit]);\r\n\r\n  // 手动缓存题目\r\n  const handleManualCache = useCallback(async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    setSyncing(true);\r\n    try {\r\n      const success = await cacheService.cacheQuestions(questions);\r\n      if (success) {\r\n        const newStatus = cacheService.getCacheStatus();\r\n        setCacheStatus(newStatus);\r\n        onCacheUpdate?.(newStatus);\r\n        \r\n        // 显示成功消息\r\n        setTimeout(() => {\r\n          // 可以添加 Toast 通知\r\n        }, 100);\r\n      }\r\n    } catch (error) {\r\n      console.error('缓存失败:', error);\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  }, [currentUser, questions, onCacheUpdate]);\r\n\r\n  // 清理缓存\r\n  const handleClearCache = useCallback(() => {\r\n    cacheService.clearCache();\r\n    const newStatus = cacheService.getCacheStatus();\r\n    setCacheStatus(newStatus);\r\n    onCacheUpdate?.(newStatus);\r\n  }, [onCacheUpdate]);\r\n\r\n  // 滑块变化处理\r\n  const handleSliderChange = useCallback((value) => {\r\n    setTempCacheLimit(value);\r\n  }, []);\r\n\r\n  // 缓存设置模态框\r\n  const CacheSettingsModal = () => (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h3>⚙️ 缓存设置</h3>\r\n          <button\r\n            className=\"close-btn\"\r\n            onClick={() => setShowSettings(false)}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"cache-settings-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"cacheLimit\">\r\n              缓存题目数量: <span className=\"limit-value\">{throttledCacheLimit}</span> 题\r\n            </label>\r\n            \r\n            <div className=\"slider-container\">\r\n              <input\r\n                id=\"cacheLimit\"\r\n                type=\"range\"\r\n                min=\"10\"\r\n                max=\"100\"\r\n                step=\"10\"\r\n                value={tempCacheLimit}\r\n                onChange={(e) => {\r\n                  const value = parseInt(e.target.value);\r\n                  handleSliderChange(value);\r\n                }}\r\n                onInput={(e) => {\r\n                  const value = parseInt(e.target.value);\r\n                  const progress = ((value - 10) / 90) * 100;\r\n                  e.target.style.setProperty('--slider-progress', `${progress}%`);\r\n                }}\r\n                className=\"cache-limit-slider\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"slider-labels\">\r\n              <span>10</span>\r\n              <span>30</span>\r\n              <span>50</span>\r\n              <span>70</span>\r\n              <span>90</span>\r\n              <span>100</span>\r\n            </div>\r\n            \r\n            <div className=\"setting-feedback\">\r\n              {tempCacheLimit !== cacheSettings.cacheLimit ? (\r\n                <span>🔄 将更新为: {tempCacheLimit} 题</span>\r\n              ) : (\r\n                <span>✅ 当前设置: {cacheSettings.cacheLimit} 题</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-actions\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"cancel-btn\"\r\n              onClick={() => setShowSettings(false)}\r\n            >\r\n              取消\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"submit-btn\"\r\n              onClick={() => {\r\n                cacheService.setCacheLimit(tempCacheLimit);\r\n                setShowSettings(false);\r\n              }}\r\n            >\r\n              保存设置\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <section className=\"cache-management-section\">\r\n      <div className=\"container\">\r\n        {/* 缓存状态概览 */}\r\n        <div className=\"cache-overview\">\r\n          <div className=\"cache-header\">\r\n            <h2>💾 缓存管理</h2>\r\n            <p>管理离线缓存数据，确保在无网络环境下也能正常使用</p>\r\n          </div>\r\n          \r\n          <div className=\"cache-stats-cards\">\r\n            <div className=\"cache-stat-card\">\r\n              <div className=\"stat-icon\">📦</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">\r\n                  {cacheStatus.hasCache ? cacheStatus.count : 0}\r\n                </div>\r\n                <div className=\"stat-label\">已缓存题目</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"cache-stat-card\">\r\n              <div className=\"stat-icon\">⚡</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">\r\n                  {cacheSettings.cacheLimit}\r\n                </div>\r\n                <div className=\"stat-label\">缓存限制</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"cache-stat-card\">\r\n              <div className=\"stat-icon\">🕒</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">\r\n                  {cacheStatus.hasCache ? '7天' : '无'}\r\n                </div>\r\n                <div className=\"stat-label\">缓存有效期</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"cache-stat-card\">\r\n              <div className=\"stat-icon\">🌐</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">\r\n                  {isOnline ? '在线' : '离线'}\r\n                </div>\r\n                <div className=\"stat-label\">网络状态</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 缓存操作区域 */}\r\n        <div className=\"cache-actions-panel\">\r\n          <div className=\"cache-action-group\">\r\n            <h3>缓存操作</h3>\r\n            <div className=\"action-buttons\">\r\n              <button\r\n                onClick={handleManualCache}\r\n                disabled={syncing || !isOnline}\r\n                className={`cache-action-btn primary ${syncing ? 'loading' : ''}`}\r\n              >\r\n                {syncing ? (\r\n                  <>\r\n                    <div className=\"loading-spinner\"></div>\r\n                    缓存中...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <span className=\"btn-icon\">💾</span>\r\n                    立即缓存题目\r\n                  </>\r\n                )}\r\n              </button>\r\n              \r\n              <button\r\n                onClick={handleClearCache}\r\n                disabled={!cacheStatus.hasCache}\r\n                className=\"cache-action-btn secondary\"\r\n              >\r\n                <span className=\"btn-icon\">🗑️</span>\r\n                清理缓存\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => setShowSettings(true)}\r\n                className=\"cache-action-btn outline\"\r\n              >\r\n                <span className=\"btn-icon\">⚙️</span>\r\n                缓存设置\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 缓存预览 */}\r\n          {cacheStatus.hasCache && (\r\n            <div className=\"cache-preview\">\r\n              <h3>缓存预览</h3>\r\n              <div className=\"preview-content\">\r\n                <p>已缓存 {cacheStatus.count} 道题目，点击查看离线题目：</p>\r\n                <button \r\n                  onClick={() => navigate('/offline/questions')}\r\n                  className=\"view-offline-btn\"\r\n                >\r\n                  📚 查看离线题目 ({cacheStatus.count})\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* 缓存提示 */}\r\n          <div className=\"cache-tips\">\r\n            <h3>使用提示</h3>\r\n            <ul>\r\n              <li>💡 缓存题目后可在无网络环境下查看和复习</li>\r\n              <li>⏰ 缓存数据有效期为7天，过期后自动清理</li>\r\n              <li>📱 建议在网络良好时进行缓存操作</li>\r\n              <li>🔄 题目更新后建议重新缓存以获取最新内容</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 设置模态框 */}\r\n      {showSettings && <CacheSettingsModal />}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CacheManagementTab;","// components/ReviewReminderSection.jsx\r\nimport React, { useState } from 'react';\r\nimport AV from 'leancloud-storage';\r\nimport './ReviewReminderSection.css';\r\n\r\nconst ReviewReminderSection = ({\r\n  reviewQuestions,\r\n  setReviewQuestions,\r\n  reviewThreshold,\r\n  setReviewThreshold,\r\n  showReviewSettings,\r\n  setShowReviewSettings,\r\n  onQuestionClick, // 添加这个prop\r\n  onUpdateQuestionTime,\r\n  questions\r\n}) => {\r\n  const [selectedUrgency, setSelectedUrgency] = useState('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [updatingQuestions, setUpdatingQuestions] = useState(new Set());\r\n  \r\n  // 添加用户状态\r\n  const [currentUser, setCurrentUser] = useState(AV.User.current());\r\n\r\n  // 格式化时间显示\r\n  const formatTimeAgo = (date) => {\r\n    const now = new Date();\r\n    const diffMs = now - new Date(date);\r\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n    const diffWeeks = Math.floor(diffDays / 7);\r\n    const diffMonths = Math.floor(diffDays / 30);\r\n\r\n    if (diffDays === 0) return '今天';\r\n    if (diffDays === 1) return '昨天';\r\n    if (diffDays < 7) return `${diffDays}天前`;\r\n    if (diffWeeks < 4) return `${diffWeeks}周前`;\r\n    return `${diffMonths}月前`;\r\n  };\r\n\r\n  // 获取紧急程度 - 修改后的版本：1天=急需，3天=建议，5天=稍后\r\n  const getUrgencyLevel = (question) => {\r\n    // 使用 lastReviewedAt 字段，如果不存在则使用 createdAt\r\n    const lastReviewed = new Date(question.lastReviewedAt || question.createdAt);\r\n    const daysAgo = Math.floor((new Date() - lastReviewed) / (1000 * 60 * 60 * 24));\r\n    \r\n    if (daysAgo >= 5) return 'high';     // 5天及以上 = 急需复习\r\n    if (daysAgo >= 3) return 'medium';   // 3-4天 = 建议复习\r\n    return 'low';                        // 1-2天 = 可稍后复习\r\n  };\r\n\r\n  // 获取紧急程度颜色\r\n  const getUrgencyColor = (urgency) => {\r\n    switch (urgency) {\r\n      case 'high': return '#ff6b6b';\r\n      case 'medium': return '#ffa726';\r\n      case 'low': return '#4ecdc4';\r\n      default: return '#95a5a6';\r\n    }\r\n  };\r\n\r\n  // 获取紧急程度文本\r\n  const getUrgencyText = (urgency) => {\r\n    switch (urgency) {\r\n      case 'high': return '急需复习';\r\n      case 'medium': return '建议复习';\r\n      case 'low': return '可稍后复习';\r\n      default: return '未知';\r\n    }\r\n  };\r\n\r\n  // 获取紧急程度对应的天数描述\r\n  const getUrgencyDaysDescription = (urgency) => {\r\n    switch (urgency) {\r\n      case 'high': return '5天以上未复习';\r\n      case 'medium': return '3-4天未复习';\r\n      case 'low': return '1-2天未复习';\r\n      default: return '';\r\n    }\r\n  };\r\n\r\n  // 处理立即复习 - 修复版本\r\n  const handleReviewNow = async (questionId, e) => {\r\n    e.stopPropagation(); // 阻止事件冒泡，避免触发卡片点击\r\n    \r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    \r\n\r\n    // 验证题目是否存在\r\n    const question = questions.find(q => q.id === questionId);\r\n    if (!question) {\r\n      console.error('未找到题目:', questionId);\r\n      alert('题目不存在，请刷新页面重试');\r\n      return;\r\n    }\r\n\r\n\r\n    // 添加到更新中的集合\r\n    setUpdatingQuestions(prev => new Set(prev).add(questionId));\r\n    \r\n    try {\r\n      console.log('开始调用 onUpdateQuestionTime...');\r\n      \r\n      // 1. 首先更新题目的复习时间\r\n      await onUpdateQuestionTime(questionId);\r\n      \r\n      console.log('onUpdateQuestionTime 调用成功');\r\n      \r\n      // 2. 从复习列表中移除该题目\r\n      setReviewQuestions(prev => {\r\n        const newList = prev.filter(q => q.id !== questionId);\r\n        console.log('从复习列表移除后:', newList.length);\r\n        return newList;\r\n      });\r\n      \r\n      console.log('准备跳转到题目...');\r\n      \r\n      // 3. 找到题目信息并跳转到分类页面\r\n      if (question && question.category) {\r\n        console.log('跳转到分类:', question.category.id);\r\n        \r\n        // 调用父组件传递的跳转函数\r\n        if (onQuestionClick) {\r\n          onQuestionClick(questionId);\r\n        } else {\r\n          // 备用跳转逻辑\r\n          handleQuestionClick(question);\r\n        }\r\n      } else {\r\n        console.warn('无法找到题目对应的分类信息');\r\n        alert('复习时间已更新，但无法跳转到题目位置');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('更新复习时间失败:', error);\r\n      console.error('错误详情:', {\r\n        questionId,\r\n        currentUser: currentUser?.id,\r\n        errorMessage: error.message\r\n      });\r\n      \r\n      // 更详细的错误处理\r\n      let errorMessage = '更新失败，请重试';\r\n      \r\n      if (error.message.includes('permission')) {\r\n        errorMessage = '更新失败：没有权限修改此题目';\r\n      } else if (error.message.includes('Object not found')) {\r\n        errorMessage = '更新失败：题目不存在或已被删除';\r\n      } else if (error.message.includes('未找到对应的题目')) {\r\n        errorMessage = '更新失败：本地数据中未找到该题目';\r\n      } else if (error.message.includes('reserved')) {\r\n        errorMessage = '更新失败：数据字段冲突，请刷新页面重试';\r\n      }\r\n      \r\n      alert(errorMessage);\r\n    } finally {\r\n      // 从更新中的集合移除\r\n      setUpdatingQuestions(prev => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(questionId);\r\n        return newSet;\r\n      });\r\n    }\r\n  };\r\n\r\n  // 处理稍后提醒\r\n  const handlePostpone = (questionId, e) => {\r\n    e.stopPropagation();\r\n    // 这里可以添加更复杂的逻辑，比如推迟到明天等\r\n    alert('已推迟提醒，该题目将在明天再次出现在复习列表中');\r\n  };\r\n\r\n  // 处理题目点击 - 跳转到分类详情页\r\n  const handleQuestionClick = (question) => {\r\n    if (!question.category?.id) {\r\n      console.warn('题目没有分类信息，无法跳转');\r\n      alert('该题目没有分类信息，无法跳转');\r\n      return;\r\n    }\r\n\r\n    // 构建跳转URL\r\n    const categoryUrl = `/category/${question.category.id}`;\r\n    \r\n    // 使用 navigate 或 window.location 进行跳转\r\n    if (window.history.pushState) {\r\n      window.history.pushState(null, '', categoryUrl);\r\n      // 触发路由变化\r\n      window.dispatchEvent(new PopStateEvent('popstate'));\r\n    } else {\r\n      window.location.href = categoryUrl;\r\n    }\r\n    \r\n    // 可以添加一个滚动到特定题目的逻辑\r\n    // 这里需要在 CategoryDetailPage 中添加相应的处理\r\n    setTimeout(() => {\r\n      // 触发自定义事件，让 CategoryDetailPage 知道要滚动到哪个题目\r\n      window.dispatchEvent(new CustomEvent('scrollToQuestion', { \r\n        detail: { questionId: question.id } \r\n      }));\r\n    }, 100);\r\n  };\r\n\r\n  // 过滤题目\r\n  const filteredQuestions = reviewQuestions.filter(question => {\r\n    const matchesSearch = question.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         (question.category?.name || '').toLowerCase().includes(searchTerm.toLowerCase());\r\n    \r\n    if (selectedUrgency === 'all') return matchesSearch;\r\n    \r\n    const urgency = getUrgencyLevel(question);\r\n    return matchesSearch && urgency === selectedUrgency;\r\n  });\r\n\r\n  // 按紧急程度分组 - 使用新的天数标准\r\n  const questionsByUrgency = {\r\n    high: filteredQuestions.filter(q => getUrgencyLevel(q) === 'high'),    // 5天以上\r\n    medium: filteredQuestions.filter(q => getUrgencyLevel(q) === 'medium'), // 3-4天\r\n    low: filteredQuestions.filter(q => getUrgencyLevel(q) === 'low')        // 1-2天\r\n  };\r\n\r\n  // 获取进度百分比\r\n  const getProgressPercentage = () => {\r\n    const totalQuestions = questions.length;\r\n    const reviewedQuestions = totalQuestions - reviewQuestions.length;\r\n    return totalQuestions > 0 ? (reviewedQuestions / totalQuestions) * 100 : 0;\r\n  };\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <section className=\"review-reminder-section\">\r\n        <div className=\"container\">\r\n          <div className=\"auth-required-container\">\r\n            <div className=\"auth-required-icon\">🔐</div>\r\n            <h2>请先登录</h2>\r\n            <p>登录后即可查看复习提醒</p>\r\n            <div className=\"auth-required-actions\">\r\n              <button \r\n                onClick={() => window.dispatchEvent(new CustomEvent('showAuthModal'))}\r\n                className=\"login-btn\"\r\n              >\r\n                立即登录\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"review-reminder-section\">\r\n      <div className=\"container\">\r\n        {/* 用户欢迎信息 */}\r\n        <div className=\"user-welcome-banner\">\r\n          <h3>📚 复习提醒 - {currentUser.getUsername()}</h3>\r\n          <p>及时复习是巩固知识的关键，以下是需要您关注的题目</p>\r\n        </div>\r\n\r\n        {/* 头部统计信息 */}\r\n        <div className=\"review-header\">\r\n          <div className=\"review-stats\">\r\n            <div className=\"stat-card urgent\">\r\n              <div className=\"stat-icon\">🔥</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">{questionsByUrgency.high.length}</div>\r\n                <div className=\"stat-label\">急需复习</div>\r\n                <div className=\"stat-description\">5天以上</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stat-card medium\">\r\n              <div className=\"stat-icon\">⚠️</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">{questionsByUrgency.medium.length}</div>\r\n                <div className=\"stat-label\">建议复习</div>\r\n                <div className=\"stat-description\">3-4天</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stat-card low\">\r\n              <div className=\"stat-icon\">💡</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">{questionsByUrgency.low.length}</div>\r\n                <div className=\"stat-label\">可稍后复习</div>\r\n                <div className=\"stat-description\">1-2天</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stat-card total\">\r\n              <div className=\"stat-icon\">📚</div>\r\n              <div className=\"stat-content\">\r\n                <div className=\"stat-number\">{reviewQuestions.length}</div>\r\n                <div className=\"stat-label\">待复习题目</div>\r\n                <div className=\"stat-description\">总计</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 进度条 */}\r\n          <div className=\"review-progress\">\r\n            <div className=\"progress-header\">\r\n              <span>复习进度</span>\r\n              <span>{Math.round(getProgressPercentage())}%</span>\r\n            </div>\r\n            <div className=\"progress-bar\">\r\n              <div \r\n                className=\"progress-fill\"\r\n                style={{ width: `${getProgressPercentage()}%` }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"progress-stats\">\r\n              <span>{questions.length - reviewQuestions.length} / {questions.length} 题目已及时复习</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 控制面板 */}\r\n        <div className=\"review-controls\">\r\n          <div className=\"controls-left\">\r\n            <div className=\"search-box\">\r\n              <span className=\"search-icon\">🔍</span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"搜索题目或分类...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"search-input\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"urgency-filter\">\r\n              <button\r\n                className={`urgency-btn ${selectedUrgency === 'all' ? 'active' : ''}`}\r\n                onClick={() => setSelectedUrgency('all')}\r\n              >\r\n                全部\r\n              </button>\r\n              <button\r\n                className={`urgency-btn high ${selectedUrgency === 'high' ? 'active' : ''}`}\r\n                onClick={() => setSelectedUrgency('high')}\r\n              >\r\n                🔥 急需 (5天+)\r\n              </button>\r\n              <button\r\n                className={`urgency-btn medium ${selectedUrgency === 'medium' ? 'active' : ''}`}\r\n                onClick={() => setSelectedUrgency('medium')}\r\n              >\r\n                ⚠️ 建议 (3-4天)\r\n              </button>\r\n              <button\r\n                className={`urgency-btn low ${selectedUrgency === 'low' ? 'active' : ''}`}\r\n                onClick={() => setSelectedUrgency('low')}\r\n              >\r\n                💡 稍后 (1-2天)\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"controls-right\">\r\n            <button\r\n              className=\"settings-btn\"\r\n              onClick={() => setShowReviewSettings(true)}\r\n            >\r\n              ⚙️ 复习设置\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 复习设置弹窗 */}\r\n        {showReviewSettings && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h3>复习提醒设置</h3>\r\n                <button \r\n                  className=\"close-btn\"\r\n                  onClick={() => setShowReviewSettings(false)}\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"settings-content\">\r\n                <div className=\"setting-item\">\r\n                  <label htmlFor=\"reviewThreshold\">\r\n                    复习提醒阈值\r\n                    <span className=\"hint\">（超过这个天数的题目会出现在复习列表中）</span>\r\n                  </label>\r\n                  <div className=\"threshold-control\">\r\n                    <input\r\n                      id=\"reviewThreshold\"\r\n                      type=\"range\"\r\n                      min=\"1\"\r\n                      max=\"30\"\r\n                      step=\"1\"\r\n                      value={reviewThreshold}\r\n                      onChange={(e) => setReviewThreshold(parseInt(e.target.value))}\r\n                      className=\"threshold-slider\"\r\n                    />\r\n                    <span className=\"threshold-value\">{reviewThreshold} 天</span>\r\n                  </div>\r\n                  <div className=\"threshold-presets\">\r\n                    {[1, 3, 5, 7, 14, 30].map(days => (\r\n                      <button\r\n                        key={days}\r\n                        className={`preset-btn ${reviewThreshold === days ? 'active' : ''}`}\r\n                        onClick={() => setReviewThreshold(days)}\r\n                      >\r\n                        {days}天\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"urgency-explanation\">\r\n                  <h4>📋 紧急程度说明</h4>\r\n                  <div className=\"urgency-levels\">\r\n                    <div className=\"urgency-level high\">\r\n                      <span className=\"urgency-color\" style={{backgroundColor: '#ff6b6b'}}></span>\r\n                      <div className=\"urgency-info\">\r\n                        <strong>急需复习 (红色)</strong>\r\n                        <span>5天以上未复习的题目</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"urgency-level medium\">\r\n                      <span className=\"urgency-color\" style={{backgroundColor: '#ffa726'}}></span>\r\n                      <div className=\"urgency-info\">\r\n                        <strong>建议复习 (橙色)</strong>\r\n                        <span>3-4天未复习的题目</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"urgency-level low\">\r\n                      <span className=\"urgency-color\" style={{backgroundColor: '#4ecdc4'}}></span>\r\n                      <div className=\"urgency-info\">\r\n                        <strong>可稍后复习 (青色)</strong>\r\n                        <span>1-2天未复习的题目</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                \r\n              </div>\r\n              \r\n              <div className=\"modal-actions\">\r\n                <button\r\n                  className=\"cancel-btn\"\r\n                  onClick={() => setShowReviewSettings(false)}\r\n                >\r\n                  取消\r\n                </button>\r\n                <button\r\n                  className=\"confirm-btn\"\r\n                  onClick={() => setShowReviewSettings(false)}\r\n                >\r\n                  确认设置\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 题目列表 */}\r\n        <div className=\"review-questions\">\r\n          {filteredQuestions.length === 0 ? (\r\n            <div className=\"empty-review-state\">\r\n              <div className=\"empty-icon\">🎉</div>\r\n              <h3>太棒了！没有需要复习的题目</h3>\r\n              <p>继续保持良好的复习习惯，或者调整复习设置来查看更多题目</p>\r\n              <button\r\n                className=\"adjust-settings-btn\"\r\n                onClick={() => setShowReviewSettings(true)}\r\n              >\r\n                调整复习设置\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"questions-grid\">\r\n              {filteredQuestions.map((question, index) => {\r\n                const urgency = getUrgencyLevel(question);\r\n                const urgencyColor = getUrgencyColor(urgency);\r\n                // 使用 lastReviewedAt 字段\r\n                const lastReviewed = new Date(question.lastReviewedAt || question.createdAt);\r\n                const daysAgo = Math.floor((new Date() - lastReviewed) / (1000 * 60 * 60 * 24));\r\n                const isUpdating = updatingQuestions.has(question.id);\r\n                \r\n                return (\r\n                  <div\r\n                    key={question.id}\r\n                    className={`review-question-card ${isUpdating ? 'updating' : ''}`}\r\n                    onClick={() => handleQuestionClick(question)}\r\n                    style={{ '--urgency-color': urgencyColor }}\r\n                  >\r\n                    <div className=\"card-header\">\r\n                      <div className=\"urgency-indicator\" style={{ backgroundColor: urgencyColor }}></div>\r\n                      <div className=\"question-meta\">\r\n                        <span className=\"urgency-badge\" style={{ backgroundColor: urgencyColor }}>\r\n                          {getUrgencyText(urgency)}\r\n                        </span>\r\n                        <span className=\"category-tag\">\r\n                          {question.category?.name || '未分类'}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"time-info\">\r\n                        <span className=\"last-reviewed\">\r\n                          上次复习: {formatTimeAgo(question.lastReviewedAt || question.createdAt)}\r\n                        </span>\r\n                        <span className=\"days-ago\">({daysAgo}天前)</span>\r\n                        <span className=\"urgency-description\">\r\n                          {getUrgencyDaysDescription(urgency)}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"card-content\">\r\n                      <h4 className=\"question-title\">{question.title}</h4>\r\n                      \r\n                      {question.detailedAnswer && (\r\n                        <div className=\"answer-preview\">\r\n                          {question.detailedAnswer.substring(0, 100)}...\r\n                        </div>\r\n                      )}\r\n                      \r\n                      <div className=\"question-tags\">\r\n                        <span className={`difficulty-tag difficulty-${question.difficulty}`}>\r\n                          {question.difficulty === 'easy' ? '简单' : \r\n                           question.difficulty === 'medium' ? '中等' : '困难'}\r\n                        </span>\r\n                        {question.tags && question.tags.slice(0, 3).map((tag, tagIndex) => (\r\n                          <span key={tagIndex} className=\"tag\">\r\n                            #{tag}\r\n                          </span>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"card-footer\">\r\n                      <div className=\"review-actions\">\r\n                        <button \r\n                          className=\"review-now-btn\"\r\n                          onClick={(e) => handleReviewNow(question.id, e)}\r\n                          disabled={isUpdating}\r\n                        >\r\n                          {isUpdating ? '🔄 更新中...' : '🔍 立即复习'}\r\n                        </button>\r\n                        <button \r\n                          className=\"postpone-btn\"\r\n                          onClick={(e) => handlePostpone(question.id, e)}\r\n                          disabled={isUpdating}\r\n                        >\r\n                          ⏰ 稍后提醒\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {isUpdating && (\r\n                      <div className=\"updating-overlay\">\r\n                        <div className=\"updating-spinner\"></div>\r\n                        <span>更新中...</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ReviewReminderSection;","import React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport { useVirtualizer } from '@tanstack/react-virtual';\r\nimport { getQuestionsBatch } from '../services/questionService';\r\nimport './CalendarTooltip.css';\r\n\r\nconst CalendarTooltip = ({ \r\n  dayData, \r\n  position, \r\n  onClose,\r\n  isVisible \r\n}) => {\r\n  const tooltipRef = useRef(null);\r\n  const queryClient = useQueryClient();\r\n  const [cachedQuestions, setCachedQuestions] = useState([]);\r\n  const [itemHeights, setItemHeights] = useState(new Map());\r\n\r\n  // 批量获取问题数据的查询\r\n  const { data: questionsData, isLoading } = useQuery({\r\n    queryKey: ['day-questions-batch', dayData?.date?.toISOString(), dayData?.questions?.map(q => q.id).join(',')],\r\n    queryFn: async () => {\r\n      if (!dayData?.questions?.length) return [];\r\n      \r\n      // 检查缓存中已有的数据\r\n      const cachedQuestions = [];\r\n      const missingQuestionIds = [];\r\n      \r\n      dayData.questions.forEach(question => {\r\n        const cached = queryClient.getQueryData(['question', question.id]);\r\n        if (cached) {\r\n          cachedQuestions.push(cached);\r\n        } else {\r\n          missingQuestionIds.push(question.id);\r\n        }\r\n      });\r\n      \r\n      // 如果有缺失的数据，批量获取\r\n      if (missingQuestionIds.length > 0) {\r\n        try {\r\n          const batchResults = await getQuestionsBatch(missingQuestionIds);\r\n          // 将批量获取的数据存入缓存\r\n          batchResults.forEach(question => {\r\n            queryClient.setQueryData(['question', question.id], question);\r\n          });\r\n          return [...cachedQuestions, ...batchResults];\r\n        } catch (error) {\r\n          console.warn('批量获取题目失败，使用基础数据:', error);\r\n          // 失败时使用基础数据\r\n          const fallbackQuestions = dayData.questions.map(q => \r\n            queryClient.getQueryData(['question', q.id]) || q\r\n          );\r\n          return fallbackQuestions;\r\n        }\r\n      }\r\n      \r\n      return cachedQuestions;\r\n    },\r\n    enabled: isVisible && !!dayData?.questions?.length,\r\n    staleTime: 10 * 60 * 1000,\r\n    cacheTime: 30 * 60 * 1000,\r\n    retry: 1,\r\n    retryDelay: 1000,\r\n  });\r\n\r\n  // 缓存更新\r\n  useEffect(() => {\r\n    if (questionsData && questionsData.length > 0) {\r\n      setCachedQuestions(questionsData);\r\n    } else if (dayData?.questions) {\r\n      setCachedQuestions(dayData.questions);\r\n    }\r\n  }, [questionsData, dayData?.questions]);\r\n\r\n  // 虚拟化容器引用\r\n  const parentRef = useRef(null);\r\n\r\n  // 使用固定高度避免无限循环\r\n  const virtualizer = useVirtualizer({\r\n    count: cachedQuestions.length,\r\n    getScrollElement: () => parentRef.current,\r\n    estimateSize: () => 140, // 固定高度，避免动态测量导致的循环\r\n    overscan: 5,\r\n  });\r\n\r\n  // 点击外部关闭\r\n  const handleClickOutside = useCallback((event) => {\r\n    if (tooltipRef.current && !tooltipRef.current.contains(event.target)) {\r\n      onClose();\r\n    }\r\n  }, [onClose]);\r\n\r\n  useEffect(() => {\r\n    if (isVisible) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }\r\n  }, [isVisible, handleClickOutside]);\r\n\r\n  // ESC键关闭\r\n  const handleEscape = useCallback((event) => {\r\n    if (event.key === 'Escape') {\r\n      onClose();\r\n    }\r\n  }, [onClose]);\r\n\r\n  useEffect(() => {\r\n    if (isVisible) {\r\n      document.addEventListener('keydown', handleEscape);\r\n      return () => document.removeEventListener('keydown', handleEscape);\r\n    }\r\n  }, [isVisible, handleEscape]);\r\n\r\n  if (!isVisible || !dayData) return null;\r\n\r\n  const virtualQuestions = virtualizer.getVirtualItems();\r\n  const totalQuestions = dayData.questions?.length || 0;\r\n\r\n  return (\r\n    <div \r\n      ref={tooltipRef}\r\n      className=\"calendar-tooltip\"\r\n      style={{\r\n        left: `${Math.min(position.x, window.innerWidth - 500)}px`,\r\n        top: `${position.y}px`,\r\n        transform: 'translateX(-50%)'\r\n      }}\r\n    >\r\n      <div className=\"tooltip-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"date-display\">\r\n            <span className=\"date-day\">{dayData.date.getDate()}</span>\r\n            <div className=\"date-info\">\r\n              <span className=\"date-weekday\">\r\n                {dayData.date.toLocaleDateString('zh-CN', { weekday: 'long' })}\r\n              </span>\r\n              <span className=\"date-full\">\r\n                {dayData.date.toLocaleDateString('zh-CN', { \r\n                  year: 'numeric', \r\n                  month: 'long',\r\n                  day: 'numeric'\r\n                })}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"stats-badge\">\r\n            <span className=\"stat-icon\">📚</span>\r\n            <span className=\"stat-count\">{totalQuestions}</span>\r\n            <span className=\"stat-label\">道题目</span>\r\n          </div>\r\n        </div>\r\n        <button \r\n          className=\"tooltip-close-btn\"\r\n          onClick={onClose}\r\n          aria-label=\"关闭\"\r\n        >\r\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\r\n            <path d=\"M12.707 3.293a1 1 0 00-1.414 0L8 6.586 4.707 3.293a1 1 0 00-1.414 1.414L6.586 8l-3.293 3.293a1 1 0 101.414 1.414L8 9.414l3.293 3.293a1 1 0 001.414-1.414L9.414 8l3.293-3.293a1 1 0 000-1.414z\"/>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"tooltip-content\">\r\n        {isLoading ? (\r\n          <div className=\"loading-state\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <span className=\"loading-text\">加载题目中...</span>\r\n          </div>\r\n        ) : cachedQuestions.length > 0 ? (\r\n          <div \r\n            ref={parentRef}\r\n            className=\"questions-virtual-container\"\r\n            style={{\r\n              height: '500px',\r\n              overflow: 'auto'\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: `${virtualizer.getTotalSize()}px`,\r\n                width: '100%',\r\n                position: 'relative'\r\n              }}\r\n            >\r\n              {virtualQuestions.map((virtualRow) => {\r\n                const question = cachedQuestions[virtualRow.index];\r\n                \r\n                return (\r\n                  <div\r\n                    key={question.id}\r\n                    className=\"question-virtual-item\"\r\n                    style={{\r\n                      position: 'absolute',\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: '100%',\r\n                      height: `${virtualRow.size}px`,\r\n                      transform: `translateY(${virtualRow.start}px)`\r\n                    }}\r\n                  >\r\n                    <QuestionItem \r\n                      question={question} \r\n                      index={virtualRow.index}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"empty-state\">\r\n            <div className=\"empty-icon\">📝</div>\r\n            <h4 className=\"empty-title\">这一天没有学习记录</h4>\r\n            <p className=\"empty-description\">开始记录你的学习进度吧</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {cachedQuestions.length > 0 && (\r\n        <div className=\"tooltip-footer\">\r\n          <div className=\"footer-stats\">\r\n            <span className=\"virtual-info\">\r\n              显示 {virtualQuestions.length} / {totalQuestions} 道题目\r\n            </span>\r\n            <span className=\"scroll-hint\">滚动查看更多</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"tooltip-arrow\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 简化的单个题目项组件 - 移除动态高度测量\r\nconst QuestionItem = React.memo(({ question, index }) => {\r\n  const getDifficultyColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#10b981';\r\n      case 'medium': return '#f59e0b';\r\n      case 'hard': return '#ef4444';\r\n      default: return '#6b7280';\r\n    }\r\n  };\r\n\r\n  const getDifficultyText = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '简单';\r\n      case 'medium': return '中等';\r\n      case 'hard': return '困难';\r\n      default: return '未知';\r\n    }\r\n  };\r\n\r\n  const formatTime = (date) => {\r\n    return new Date(date).toLocaleTimeString('zh-CN', {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-item\">\r\n      <div className=\"question-main\">\r\n        <div className=\"question-header\">\r\n          <div className=\"question-meta\">\r\n            <span className=\"question-index\">#{index + 1}</span>\r\n            <span \r\n              className=\"difficulty-badge\"\r\n              style={{ \r\n                backgroundColor: getDifficultyColor(question.difficulty),\r\n                color: 'white'\r\n              }}\r\n            >\r\n              {getDifficultyText(question.difficulty)}\r\n            </span>\r\n            <span className=\"question-time\">\r\n              {formatTime(question.createdAt)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <h4 className=\"question-title\">{question.title}</h4>\r\n        \r\n        <div className=\"question-category\">\r\n          <span className=\"category-tag\">\r\n            {question.category?.name || '未分类'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nQuestionItem.displayName = 'QuestionItem';\r\n\r\nexport default CalendarTooltip;","// Documents.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Documents.css';\r\n\r\nconst Documents = () => {\r\n  const [selectedDoc, setSelectedDoc] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentQuoteIndex, setCurrentQuoteIndex] = useState(0);\r\n\r\n  // 技术名言数据\r\n  const techQuotes = [\r\n    {\r\n      text: \"任何足够先进的技术都与魔法无异。\",\r\n      author: \"亚瑟·C·克拉克\",\r\n      category: \"科技哲学\"\r\n    },\r\n    {\r\n      text: \"代码就像是幽默，当你需要解释它时，它就不再有趣了。\",\r\n      author: \"Cory House\",\r\n      category: \"编程\"\r\n    },\r\n    {\r\n      text: \"首先，解决问题。然后，编写代码。\",\r\n      author: \"John Johnson\",\r\n      category: \"开发方法\"\r\n    },\r\n    {\r\n      text: \"编程不是关于你知道什么，而是关于你能弄清楚什么。\",\r\n      author: \"Chris Pine\",\r\n      category: \"学习\"\r\n    },\r\n    {\r\n      text: \"简单性是可靠性的先决条件。\",\r\n      author: \"Edsger W. Dijkstra\",\r\n      category: \"软件工程\"\r\n    },\r\n    {\r\n      text: \"测试只能证明 bug 的存在，而不能证明它们的不存在。\",\r\n      author: \"Edsger W. Dijkstra\",\r\n      category: \"测试\"\r\n    },\r\n    {\r\n      text: \"最好的错误信息是根本不需要错误信息。\",\r\n      author: \"Jef Raskin\",\r\n      category: \"用户体验\"\r\n    },\r\n    {\r\n      text: \"过早优化是万恶之源。\",\r\n      author: \"Donald Knuth\",\r\n      category: \"性能优化\"\r\n    },\r\n    {\r\n      text: \"代码的阅读次数远多于编写次数。\",\r\n      author: \"Guido van Rossum\",\r\n      category: \"代码质量\"\r\n    },\r\n    {\r\n      text: \"完美不是在没有东西可加时达到的，而是在没有东西可拿走时达到的。\",\r\n      author: \"Antoine de Saint-Exupéry\",\r\n      category: \"设计\"\r\n    },\r\n    {\r\n      text: \"计算机科学的核心是解决问题。\",\r\n      author: \"Abelson and Sussman\",\r\n      category: \"计算机科学\"\r\n    },\r\n    {\r\n      text: \"未来已经到来，只是分布不均。\",\r\n      author: \"William Gibson\",\r\n      category: \"科技创新\"\r\n    },\r\n    {\r\n      text: \"最危险的代码是你看不到问题的代码。\",\r\n      author: \"Douglas Crockford\",\r\n      category: \"代码安全\"\r\n    },\r\n    {\r\n      text: \"编程是理解的艺术。\",\r\n      author: \"Kristen Nygaard\",\r\n      category: \"编程哲学\"\r\n    },\r\n    {\r\n      text: \"技术应该改善生活，而不是支配生活。\",\r\n      author: \"Tim Cook\",\r\n      category: \"科技伦理\"\r\n    }\r\n  ];\r\n\r\n  // 自动轮播名言\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentQuoteIndex((prevIndex) => \r\n        prevIndex === techQuotes.length - 1 ? 0 : prevIndex + 1\r\n      );\r\n    }, 5000); // 每5秒切换一次\r\n\r\n    return () => clearInterval(interval);\r\n  }, [techQuotes.length]);\r\n\r\n  // 手动切换名言\r\n  const nextQuote = () => {\r\n    setCurrentQuoteIndex((prevIndex) => \r\n      prevIndex === techQuotes.length - 1 ? 0 : prevIndex + 1\r\n    );\r\n  };\r\n\r\n  const prevQuote = () => {\r\n    setCurrentQuoteIndex((prevIndex) => \r\n      prevIndex === 0 ? techQuotes.length - 1 : prevIndex - 1\r\n    );\r\n  };\r\n\r\n  // 扩展的知名文档数据（专注于前端和后端）\r\n  const documents = [\r\n    // 前端框架\r\n    {\r\n      id: 1,\r\n      title: 'React 官方文档',\r\n      description: '用于构建用户界面的 JavaScript 库',\r\n      category: '前端框架',\r\n      url: 'https://react.dev',\r\n      icon: '⚛️'\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Vue.js 文档',\r\n      description: '渐进式 JavaScript 框架',\r\n      category: '前端框架',\r\n      url: 'https://vuejs.org',\r\n      icon: '🟢'\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Angular 文档',\r\n      description: 'Google 开发的前端框架',\r\n      category: '前端框架',\r\n      url: 'https://angular.io',\r\n      icon: '🅰️'\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Svelte 文档',\r\n      description: '编译时框架，无虚拟DOM',\r\n      category: '前端框架',\r\n      url: 'https://svelte.dev',\r\n      icon: '⚡'\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'SolidJS 文档',\r\n      description: '用于构建用户界面的声明式 JavaScript 库',\r\n      category: '前端框架',\r\n      url: 'https://solidjs.com',\r\n      icon: '🔷'\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Next.js 文档',\r\n      description: 'React 全栈框架',\r\n      category: '前端框架',\r\n      url: 'https://nextjs.org',\r\n      icon: '⏭️'\r\n    },\r\n    {\r\n      id: 7,\r\n      title: 'Nuxt.js 文档',\r\n      description: 'Vue.js 全栈框架',\r\n      category: '前端框架',\r\n      url: 'https://nuxtjs.org',\r\n      icon: '🔥'\r\n    },\r\n\r\n    // 前端状态管理\r\n    {\r\n      id: 8,\r\n      title: 'Redux 文档',\r\n      description: 'JavaScript 应用状态容器',\r\n      category: '前端状态管理',\r\n      url: 'https://redux.js.org',\r\n      icon: '📦'\r\n    },\r\n    {\r\n      id: 9,\r\n      title: 'Zustand 文档',\r\n      description: '小型、快速、可扩展的状态管理',\r\n      category: '前端状态管理',\r\n      url: 'https://github.com/pmndrs/zustand',\r\n      icon: '🐻'\r\n    },\r\n    {\r\n      id: 10,\r\n      title: 'MobX 文档',\r\n      description: '简单、可扩展的状态管理',\r\n      category: '前端状态管理',\r\n      url: 'https://mobx.js.org',\r\n      icon: '🔄'\r\n    },\r\n    {\r\n      id: 11,\r\n      title: 'Vuex 文档',\r\n      description: 'Vue.js 的状态管理库',\r\n      category: '前端状态管理',\r\n      url: 'https://vuex.vuejs.org',\r\n      icon: '🏪'\r\n    },\r\n\r\n    // CSS 框架和预处理器\r\n    {\r\n      id: 12,\r\n      title: 'Tailwind CSS 文档',\r\n      description: '实用优先的 CSS 框架',\r\n      category: 'CSS 框架',\r\n      url: 'https://tailwindcss.com',\r\n      icon: '🎨'\r\n    },\r\n    {\r\n      id: 13,\r\n      title: 'Bootstrap 文档',\r\n      description: '最流行的前端框架',\r\n      category: 'CSS 框架',\r\n      url: 'https://getbootstrap.com',\r\n      icon: '🎯'\r\n    },\r\n    {\r\n      id: 14,\r\n      title: 'Sass 文档',\r\n      description: '专业级 CSS 扩展语言',\r\n      category: 'CSS 框架',\r\n      url: 'https://sass-lang.com',\r\n      icon: '💎'\r\n    },\r\n    {\r\n      id: 15,\r\n      title: 'Less 文档',\r\n      description: 'CSS 预处理器',\r\n      category: 'CSS 框架',\r\n      url: 'http://lesscss.org',\r\n      icon: '➖'\r\n    },\r\n    {\r\n      id: 16,\r\n      title: 'Styled Components',\r\n      description: 'CSS-in-JS 样式库',\r\n      category: 'CSS 框架',\r\n      url: 'https://styled-components.com',\r\n      icon: '💅'\r\n    },\r\n\r\n    // 前端构建工具\r\n    {\r\n      id: 17,\r\n      title: 'Webpack 文档',\r\n      description: '模块打包工具',\r\n      category: '前端构建工具',\r\n      url: 'https://webpack.js.org',\r\n      icon: '📦'\r\n    },\r\n    {\r\n      id: 18,\r\n      title: 'Vite 文档',\r\n      description: '下一代前端构建工具',\r\n      category: '前端构建工具',\r\n      url: 'https://vitejs.dev',\r\n      icon: '⚡'\r\n    },\r\n    {\r\n      id: 19,\r\n      title: 'Parcel 文档',\r\n      description: '零配置构建工具',\r\n      category: '前端构建工具',\r\n      url: 'https://parceljs.org',\r\n      icon: '📮'\r\n    },\r\n    {\r\n      id: 20,\r\n      title: 'Rollup 文档',\r\n      description: 'JavaScript 模块打包器',\r\n      category: '前端构建工具',\r\n      url: 'https://rollupjs.org',\r\n      icon: '🔄'\r\n    },\r\n\r\n    // 前端测试\r\n    {\r\n      id: 21,\r\n      title: 'Jest 文档',\r\n      description: 'JavaScript 测试框架',\r\n      category: '前端测试',\r\n      url: 'https://jestjs.io',\r\n      icon: '🎭'\r\n    },\r\n    {\r\n      id: 22,\r\n      title: 'Cypress 文档',\r\n      description: '端到端测试框架',\r\n      category: '前端测试',\r\n      url: 'https://docs.cypress.io',\r\n      icon: '🎯'\r\n    },\r\n    {\r\n      id: 23,\r\n      title: 'Testing Library',\r\n      description: 'DOM 测试工具库',\r\n      category: '前端测试',\r\n      url: 'https://testing-library.com',\r\n      icon: '🧪'\r\n    },\r\n    {\r\n      id: 24,\r\n      title: 'Vitest 文档',\r\n      description: '基于 Vite 的测试框架',\r\n      category: '前端测试',\r\n      url: 'https://vitest.dev',\r\n      icon: '⚡'\r\n    },\r\n\r\n    // 后端框架 (Node.js)\r\n    {\r\n      id: 25,\r\n      title: 'Express.js 文档',\r\n      description: 'Node.js Web 应用框架',\r\n      category: '后端框架',\r\n      url: 'https://expressjs.com',\r\n      icon: '🚂'\r\n    },\r\n    {\r\n      id: 26,\r\n      title: 'Koa 文档',\r\n      description: '下一代 Node.js 框架',\r\n      category: '后端框架',\r\n      url: 'https://koajs.com',\r\n      icon: '🎋'\r\n    },\r\n    {\r\n      id: 27,\r\n      title: 'NestJS 文档',\r\n      description: '用于构建高效、可扩展的服务器端应用',\r\n      category: '后端框架',\r\n      url: 'https://nestjs.com',\r\n      icon: '🪺'\r\n    },\r\n    {\r\n      id: 28,\r\n      title: 'Fastify 文档',\r\n      description: '快速且低开销的 Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://fastify.io',\r\n      icon: '🚀'\r\n    },\r\n    {\r\n      id: 29,\r\n      title: 'Hapi 文档',\r\n      description: '丰富的框架用于构建应用和服务',\r\n      category: '后端框架',\r\n      url: 'https://hapi.dev',\r\n      icon: '🎯'\r\n    },\r\n\r\n    // 后端框架 (Python)\r\n    {\r\n      id: 30,\r\n      title: 'Django 文档',\r\n      description: 'Python Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://docs.djangoproject.com',\r\n      icon: '🎸'\r\n    },\r\n    {\r\n      id: 31,\r\n      title: 'Flask 文档',\r\n      description: 'Python 微框架',\r\n      category: '后端框架',\r\n      url: 'https://flask.palletsprojects.com',\r\n      icon: '🍶'\r\n    },\r\n    {\r\n      id: 32,\r\n      title: 'FastAPI 文档',\r\n      description: '现代、快速的 Python Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://fastapi.tiangolo.com',\r\n      icon: '⚡'\r\n    },\r\n\r\n    // 后端框架 (Java)\r\n    {\r\n      id: 33,\r\n      title: 'Spring 文档',\r\n      description: 'Java 应用框架',\r\n      category: '后端框架',\r\n      url: 'https://spring.io/docs',\r\n      icon: '🌱'\r\n    },\r\n    {\r\n      id: 34,\r\n      title: 'Spring Boot 文档',\r\n      description: '简化 Spring 应用开发',\r\n      category: '后端框架',\r\n      url: 'https://spring.io/projects/spring-boot',\r\n      icon: '👢'\r\n    },\r\n\r\n    // 后端框架 (其他语言)\r\n    {\r\n      id: 35,\r\n      title: 'Laravel 文档',\r\n      description: 'PHP Web 应用框架',\r\n      category: '后端框架',\r\n      url: 'https://laravel.com/docs',\r\n      icon: '🔨'\r\n    },\r\n    {\r\n      id: 36,\r\n      title: 'Ruby on Rails 文档',\r\n      description: 'Ruby Web 应用框架',\r\n      category: '后端框架',\r\n      url: 'https://rubyonrails.org',\r\n      icon: '💎'\r\n    },\r\n    {\r\n      id: 37,\r\n      title: 'ASP.NET Core 文档',\r\n      description: '.NET Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://docs.microsoft.com/aspnet/core',\r\n      icon: '🌐'\r\n    },\r\n    {\r\n      id: 38,\r\n      title: 'Gin 文档',\r\n      description: 'Go 语言 Web 框架',\r\n      category: '后端框架',\r\n      url: 'https://gin-gonic.com',\r\n      icon: '🍸'\r\n    },\r\n\r\n    // 数据库和 ORM\r\n    {\r\n      id: 39,\r\n      title: 'MySQL 文档',\r\n      description: 'MySQL 数据库官方文档',\r\n      category: '数据库',\r\n      url: 'https://dev.mysql.com/doc',\r\n      icon: '🐬'\r\n    },\r\n    {\r\n      id: 40,\r\n      title: 'PostgreSQL 文档',\r\n      description: 'PostgreSQL 数据库文档',\r\n      category: '数据库',\r\n      url: 'https://www.postgresql.org/docs',\r\n      icon: '🐘'\r\n    },\r\n    {\r\n      id: 41,\r\n      title: 'MongoDB 文档',\r\n      description: 'MongoDB NoSQL 数据库文档',\r\n      category: '数据库',\r\n      url: 'https://docs.mongodb.com',\r\n      icon: '🍃'\r\n    },\r\n    {\r\n      id: 42,\r\n      title: 'Redis 文档',\r\n      description: 'Redis 内存数据结构存储',\r\n      category: '数据库',\r\n      url: 'https://redis.io/documentation',\r\n      icon: '🔴'\r\n    },\r\n    {\r\n      id: 43,\r\n      title: 'Prisma 文档',\r\n      description: '下一代 Node.js TypeScript ORM',\r\n      category: '数据库',\r\n      url: 'https://www.prisma.io',\r\n      icon: '🛡️'\r\n    },\r\n    {\r\n      id: 44,\r\n      title: 'Sequelize 文档',\r\n      description: 'Node.js 的 ORM',\r\n      category: '数据库',\r\n      url: 'https://sequelize.org',\r\n      icon: '🗄️'\r\n    },\r\n    {\r\n      id: 45,\r\n      title: 'Mongoose 文档',\r\n      description: 'MongoDB 对象建模工具',\r\n      category: '数据库',\r\n      url: 'https://mongoosejs.com',\r\n      icon: '🐍'\r\n    },\r\n\r\n    // API 和微服务\r\n    {\r\n      id: 46,\r\n      title: 'GraphQL 文档',\r\n      description: 'API 查询语言',\r\n      category: 'API 和微服务',\r\n      url: 'https://graphql.org',\r\n      icon: '📈'\r\n    },\r\n    {\r\n      id: 47,\r\n      title: 'Apollo 文档',\r\n      description: 'GraphQL 平台',\r\n      category: 'API 和微服务',\r\n      url: 'https://www.apollographql.com',\r\n      icon: '🚀'\r\n    },\r\n    {\r\n      id: 48,\r\n      title: 'Swagger 文档',\r\n      description: 'API 设计和文档工具',\r\n      category: 'API 和微服务',\r\n      url: 'https://swagger.io',\r\n      icon: '📝'\r\n    },\r\n    {\r\n      id: 49,\r\n      title: 'gRPC 文档',\r\n      description: '高性能 RPC 框架',\r\n      category: 'API 和微服务',\r\n      url: 'https://grpc.io',\r\n      icon: '🔧'\r\n    },\r\n    {\r\n      id: 50,\r\n      title: 'RESTful API 指南',\r\n      description: 'REST API 最佳实践',\r\n      category: 'API 和微服务',\r\n      url: 'https://restfulapi.net',\r\n      icon: '🌐'\r\n    },\r\n\r\n    // 认证和授权\r\n    {\r\n      id: 51,\r\n      title: 'JWT 文档',\r\n      description: 'JSON Web Tokens 官方文档',\r\n      category: '认证和授权',\r\n      url: 'https://jwt.io',\r\n      icon: '🔐'\r\n    },\r\n    {\r\n      id: 52,\r\n      title: 'OAuth 2.0 指南',\r\n      description: 'OAuth 2.0 授权框架',\r\n      category: '认证和授权',\r\n      url: 'https://oauth.net/2',\r\n      icon: '🔑'\r\n    },\r\n    {\r\n      id: 53,\r\n      title: 'Passport.js 文档',\r\n      description: 'Node.js 认证中间件',\r\n      category: '认证和授权',\r\n      url: 'http://www.passportjs.org',\r\n      icon: '🛂'\r\n    },\r\n    {\r\n      id: 54,\r\n      title: 'Auth0 文档',\r\n      description: '身份验证和授权平台',\r\n      category: '认证和授权',\r\n      url: 'https://auth0.com/docs',\r\n      icon: '🔒'\r\n    },\r\n\r\n    // 部署和 DevOps\r\n    {\r\n      id: 55,\r\n      title: 'Docker 文档',\r\n      description: '容器化平台文档',\r\n      category: '部署和 DevOps',\r\n      url: 'https://docs.docker.com',\r\n      icon: '🐳'\r\n    },\r\n    {\r\n      id: 56,\r\n      title: 'Kubernetes 文档',\r\n      description: '容器编排系统文档',\r\n      category: '部署和 DevOps',\r\n      url: 'https://kubernetes.io/docs',\r\n      icon: '⚓'\r\n    },\r\n    {\r\n      id: 57,\r\n      title: 'PM2 文档',\r\n      description: 'Node.js 进程管理器',\r\n      category: '部署和 DevOps',\r\n      url: 'https://pm2.keymetrics.io',\r\n      icon: '🔄'\r\n    },\r\n    {\r\n      id: 58,\r\n      title: 'Nginx 文档',\r\n      description: 'Web 服务器和反向代理',\r\n      category: '部署和 DevOps',\r\n      url: 'https://nginx.org/en/docs',\r\n      icon: '🔧'\r\n    },\r\n\r\n    // 编程语言\r\n    {\r\n      id: 59,\r\n      title: 'TypeScript 文档',\r\n      description: 'TypeScript 语言文档',\r\n      category: '编程语言',\r\n      url: 'https://www.typescriptlang.org',\r\n      icon: '🔷'\r\n    },\r\n    {\r\n      id: 60,\r\n      title: 'JavaScript MDN',\r\n      description: 'JavaScript 语言参考文档',\r\n      category: '编程语言',\r\n      url: 'https://developer.mozilla.org/javascript',\r\n      icon: '📜'\r\n    },\r\n    {\r\n      id: 61,\r\n      title: 'Python 官方文档',\r\n      description: 'Python 编程语言官方文档',\r\n      category: '编程语言',\r\n      url: 'https://docs.python.org',\r\n      icon: '🐍'\r\n    },\r\n    {\r\n      id: 62,\r\n      title: 'Node.js 文档',\r\n      description: 'Node.js 运行时文档',\r\n      category: '编程语言',\r\n      url: 'https://nodejs.org',\r\n      icon: '📦'\r\n    },\r\n\r\n    // 工具和包管理\r\n    {\r\n      id: 63,\r\n      title: 'Git 文档',\r\n      description: '分布式版本控制系统',\r\n      category: '开发工具',\r\n      url: 'https://git-scm.com/doc',\r\n      icon: '📚'\r\n    },\r\n    {\r\n      id: 64,\r\n      title: 'NPM 文档',\r\n      description: 'Node 包管理器文档',\r\n      category: '开发工具',\r\n      url: 'https://docs.npmjs.com',\r\n      icon: '📦'\r\n    },\r\n    {\r\n      id: 65,\r\n      title: 'Yarn 文档',\r\n      description: '快速、可靠、安全的依赖管理',\r\n      category: '开发工具',\r\n      url: 'https://yarnpkg.com',\r\n      icon: '🧶'\r\n    },\r\n    {\r\n      id: 66,\r\n      title: 'VS Code 文档',\r\n      description: 'Visual Studio Code 编辑器文档',\r\n      category: '开发工具',\r\n      url: 'https://code.visualstudio.com/docs',\r\n      icon: '💻'\r\n    },\r\n\r\n    // 性能和优化\r\n    {\r\n      id: 67,\r\n      title: 'Lighthouse 文档',\r\n      description: '自动化网站质量评估工具',\r\n      category: '性能和优化',\r\n      url: 'https://developers.google.com/web/tools/lighthouse',\r\n      icon: '💡'\r\n    },\r\n    {\r\n      id: 68,\r\n      title: 'Web Vitals',\r\n      description: '网站用户体验质量指标',\r\n      category: '性能和优化',\r\n      url: 'https://web.dev/vitals',\r\n      icon: '📊'\r\n    },\r\n    {\r\n      id: 69,\r\n      title: 'Bundlephobia',\r\n      description: '检查 npm 包大小对性能的影响',\r\n      category: '性能和优化',\r\n      url: 'https://bundlephobia.com',\r\n      icon: '📦'\r\n    }\r\n  ];\r\n\r\n  // 按类别分组\r\n  const categories = [...new Set(documents.map(doc => doc.category))];\r\n\r\n  // 过滤文档\r\n  const filteredDocs = documents.filter(doc =>\r\n    doc.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    doc.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    doc.category.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleDocClick = (doc) => {\r\n    setSelectedDoc(doc);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedDoc(null);\r\n  };\r\n\r\n  const handleVisitSite = () => {\r\n    if (selectedDoc) {\r\n      window.open(selectedDoc.url, '_blank');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"documents-container\">\r\n      {/* 技术名言轮播屏 */}\r\n      <div className=\"quotes-carousel\">\r\n        <div className=\"carousel-container\">\r\n          <button className=\"carousel-btn prev-btn\" onClick={prevQuote}>\r\n            ‹\r\n          </button>\r\n          \r\n          <div className=\"quote-slide\">\r\n            <div className=\"quote-content\">\r\n              <div className=\"quote-icon\">💭</div>\r\n              <div className=\"quote-text\">\r\n                <p className=\"quote-main\">\"{techQuotes[currentQuoteIndex].text}\"</p>\r\n                <div className=\"quote-meta\">\r\n                  <span className=\"quote-author\">— {techQuotes[currentQuoteIndex].author}</span>\r\n                  <span className=\"quote-category\">{techQuotes[currentQuoteIndex].category}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <button className=\"carousel-btn next-btn\" onClick={nextQuote}>\r\n            ›\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"carousel-indicators\">\r\n          {techQuotes.map((_, index) => (\r\n            <button\r\n              key={index}\r\n              className={`indicator ${index === currentQuoteIndex ? 'active' : ''}`}\r\n              onClick={() => setCurrentQuoteIndex(index)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"documents-header\">\r\n        <h1>📚 开发文档库</h1>\r\n        <p>专注于前端和后端开发文档 - 共 {documents.length} 个资源</p>\r\n        \r\n        <div className=\"search-section\">\r\n          <div className=\"search-box\">\r\n            <span className=\"search-icon\">🔍</span>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"搜索文档名称、描述或类别...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"search-input\"\r\n            />\r\n            {searchTerm && (\r\n              <button \r\n                className=\"clear-search\"\r\n                onClick={() => setSearchTerm('')}\r\n              >\r\n                ✕\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"documents-content\">\r\n        {categories.map(category => {\r\n          const categoryDocs = filteredDocs.filter(doc => doc.category === category);\r\n          \r\n          if (categoryDocs.length === 0) return null;\r\n          \r\n          return (\r\n            <div key={category} className=\"category-section\">\r\n              <h2 className=\"category-title\">\r\n                {category} \r\n                <span className=\"category-count\">({categoryDocs.length})</span>\r\n              </h2>\r\n              <div className=\"documents-grid\">\r\n                {categoryDocs.map(doc => (\r\n                  <div\r\n                    key={doc.id}\r\n                    className=\"document-card\"\r\n                    onClick={() => handleDocClick(doc)}\r\n                  >\r\n                    <div className=\"doc-header\">\r\n                      <div className=\"doc-icon\">{doc.icon}</div>\r\n                      <div className=\"doc-info\">\r\n                        <h3 className=\"doc-title\">{doc.title}</h3>\r\n                        <p className=\"doc-description\">{doc.description}</p>\r\n                        <div className=\"doc-category\">{doc.category}</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"doc-footer\">\r\n                      <button className=\"visit-button\">\r\n                        访问网站 →\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        {filteredDocs.length === 0 && (\r\n          <div className=\"no-results\">\r\n            <div className=\"no-results-icon\">🔍</div>\r\n            <h3>未找到匹配的文档</h3>\r\n            <p>尝试调整搜索关键词</p>\r\n            <button \r\n              className=\"clear-search-btn\"\r\n              onClick={() => setSearchTerm('')}\r\n            >\r\n              清除搜索\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 文档详情模态框 */}\r\n      {selectedDoc && (\r\n        <div className=\"modal-overlay\" onClick={handleCloseModal}>\r\n          <div className=\"modal-content doc-modal\" onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"modal-header\">\r\n              <div className=\"modal-title-section\">\r\n                <span className=\"doc-modal-icon\">{selectedDoc.icon}</span>\r\n                <div>\r\n                  <h3>{selectedDoc.title}</h3>\r\n                  <span className=\"doc-category-badge\">{selectedDoc.category}</span>\r\n                </div>\r\n              </div>\r\n              <button className=\"close-btn\" onClick={handleCloseModal}>\r\n                ×\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"modal-body\">\r\n              <p className=\"doc-modal-description\">{selectedDoc.description}</p>\r\n              \r\n              <div className=\"doc-url-section\">\r\n                <label>网站地址:</label>\r\n                <div className=\"url-display\">\r\n                  <span className=\"url-text\">{selectedDoc.url}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"modal-actions\">\r\n              <button className=\"cancel-btn\" onClick={handleCloseModal}>\r\n                关闭\r\n              </button>\r\n              <button className=\"visit-site-btn\" onClick={handleVisitSite}>\r\n                🌐 访问网站\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Documents;","// services/communityService.js\r\nimport AV from 'leancloud-storage';\r\n\r\nexport class CommunityService {\r\n  // 获取帖子列表\r\n  static async getPosts(options = {}) {\r\n    const {\r\n      page = 1,\r\n      pageSize = 20,\r\n      sortBy = 'createdAt',\r\n      sortOrder = 'desc',\r\n      keyword = '',\r\n      tag = '',\r\n      authorId = ''\r\n    } = options;\r\n\r\n    const query = new AV.Query('Post');\r\n    query.equalTo('isPublic', true);\r\n    query.equalTo('status', 'published');\r\n    \r\n    // 关键词搜索\r\n    if (keyword) {\r\n      const titleQuery = new AV.Query('Post');\r\n      titleQuery.contains('title', keyword);\r\n      \r\n      const contentQuery = new AV.Query('Post');\r\n      contentQuery.contains('content', keyword);\r\n      \r\n      query = AV.Query.or(titleQuery, contentQuery);\r\n    }\r\n    \r\n    // 标签筛选\r\n    if (tag) {\r\n      query.equalTo('tags', tag);\r\n    }\r\n    \r\n    // 作者筛选\r\n    if (authorId) {\r\n      const author = AV.Object.createWithoutData('_User', authorId);\r\n      query.equalTo('author', author);\r\n    }\r\n    \r\n    query.include('author');\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    query.descending(sortBy);\r\n    \r\n    return query.find();\r\n  }\r\n\r\n  // 创建帖子\r\n  static async createPost(postData) {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) throw new Error('请先登录');\r\n    \r\n    const Post = AV.Object.extend('Post');\r\n    const post = new Post();\r\n    \r\n    post.set('title', postData.title);\r\n    post.set('content', postData.content);\r\n    post.set('author', currentUser);\r\n    post.set('tags', postData.tags || []);\r\n    post.set('isPublic', postData.isPublic !== false);\r\n    post.set('status', 'published');\r\n    post.set('likes', 0);\r\n    post.set('views', 0);\r\n    post.set('commentCount', 0);\r\n    \r\n    return post.save();\r\n  }\r\n\r\n  // 获取帖子详情\r\n  static async getPostById(id) {\r\n    const query = new AV.Query('Post');\r\n    query.include('author');\r\n    const post = await query.get(id);\r\n    \r\n    // 增加浏览数\r\n    post.increment('views', 1);\r\n    await post.save();\r\n    \r\n    return post;\r\n  }\r\n\r\n  // 获取评论\r\n  static async getComments(postId, options = {}) {\r\n    const { page = 1, pageSize = 50 } = options;\r\n    \r\n    const query = new AV.Query('Comment');\r\n    const post = AV.Object.createWithoutData('Post', postId);\r\n    query.equalTo('post', post);\r\n    query.include('author');\r\n    query.include('parent');\r\n    query.ascending('createdAt');\r\n    query.limit(pageSize);\r\n    query.skip((page - 1) * pageSize);\r\n    \r\n    return query.find();\r\n  }\r\n\r\n  // 添加评论\r\n  static async addComment(postId, content, parentId = null) {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) throw new Error('请先登录');\r\n    \r\n    const Comment = AV.Object.extend('Comment');\r\n    const comment = new Comment();\r\n    \r\n    const post = AV.Object.createWithoutData('Post', postId);\r\n    comment.set('post', post);\r\n    comment.set('author', currentUser);\r\n    comment.set('content', content);\r\n    comment.set('likes', 0);\r\n    \r\n    if (parentId) {\r\n      const parent = AV.Object.createWithoutData('Comment', parentId);\r\n      comment.set('parent', parent);\r\n    }\r\n    \r\n    // 更新帖子的评论数和最后评论时间\r\n    post.increment('commentCount', 1);\r\n    post.set('lastCommentedAt', new Date());\r\n    await post.save();\r\n    \r\n    return comment.save();\r\n  }\r\n\r\n  // 点赞/取消点赞\r\n  static async toggleLike(postId) {\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) throw new Error('请先登录');\r\n    \r\n    const Like = AV.Object.extend('Like');\r\n    const query = new AV.Query('Like');\r\n    const post = AV.Object.createWithoutData('Post', postId);\r\n    \r\n    query.equalTo('user', currentUser);\r\n    query.equalTo('post', post);\r\n    \r\n    const existingLike = await query.first();\r\n    \r\n    if (existingLike) {\r\n      // 取消点赞\r\n      await existingLike.destroy();\r\n      \r\n      const postObj = await new AV.Query('Post').get(postId);\r\n      postObj.increment('likes', -1);\r\n      await postObj.save();\r\n      \r\n      return { liked: false };\r\n    } else {\r\n      // 添加点赞\r\n      const like = new Like();\r\n      like.set('user', currentUser);\r\n      like.set('post', post);\r\n      await like.save();\r\n      \r\n      const postObj = await new AV.Query('Post').get(postId);\r\n      postObj.increment('likes', 1);\r\n      await postObj.save();\r\n      \r\n      return { liked: true };\r\n    }\r\n  }\r\n\r\n  // 获取热门标签\r\n  static async getPopularTags(limit = 10) {\r\n    // 这里可以使用 LeanCloud 的聚合查询\r\n    // 简化版本：从所有帖子中统计标签\r\n    const query = new AV.Query('Post');\r\n    query.equalTo('isPublic', true);\r\n    query.equalTo('status', 'published');\r\n    const posts = await query.find();\r\n    \r\n    const tagCount = {};\r\n    posts.forEach(post => {\r\n      const tags = post.get('tags') || [];\r\n      tags.forEach(tag => {\r\n        tagCount[tag] = (tagCount[tag] || 0) + 1;\r\n      });\r\n    });\r\n    \r\n    return Object.entries(tagCount)\r\n      .sort(([,a], [,b]) => b - a)\r\n      .slice(0, limit)\r\n      .map(([tag, count]) => ({ tag, count }));\r\n  }\r\n}","// components/community/CreatePostModal.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport AV from 'leancloud-storage';\r\nimport './CreatePostModal.css';\r\n\r\nconst CreatePostModal = ({ onClose, onSuccess }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    content: '',\r\n    tags: '',\r\n    isPublic: true\r\n  });\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [charCount, setCharCount] = useState({ title: 0, content: 0 });\r\n  const [suggestedTags, setSuggestedTags] = useState([]);\r\n  const textareaRef = useRef(null);\r\n\r\n  const maxLengths = {\r\n    title: 100,\r\n    content: 5000\r\n  };\r\n\r\n  // 热门标签建议\r\n  const popularTags = [\r\n    'JavaScript', 'React', '算法', 'LeetCode', '前端', \r\n    '面试', 'TypeScript', 'Vue', 'CSS', 'Node.js',\r\n    '数据库', '计算机网络', '操作系统', '数据结构'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // 自动调整文本域高度\r\n    if (textareaRef.current) {\r\n      textareaRef.current.style.height = 'auto';\r\n      textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px';\r\n    }\r\n  }, [formData.content]);\r\n\r\n  useEffect(() => {\r\n    // 根据标题内容推荐标签\r\n    if (formData.title.length > 5) {\r\n      const matchedTags = popularTags.filter(tag =>\r\n        formData.title.toLowerCase().includes(tag.toLowerCase())\r\n      );\r\n      setSuggestedTags(matchedTags.slice(0, 3));\r\n    } else {\r\n      setSuggestedTags([]);\r\n    }\r\n  }, [formData.title]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.title.trim()) {\r\n      newErrors.title = '请输入帖子标题';\r\n    } else if (formData.title.length < 5) {\r\n      newErrors.title = '标题至少需要5个字符';\r\n    } else if (formData.title.length > maxLengths.title) {\r\n      newErrors.title = `标题不能超过${maxLengths.title}个字符`;\r\n    }\r\n\r\n    if (!formData.content.trim()) {\r\n      newErrors.content = '请输入帖子内容';\r\n    } else if (formData.content.length < 10) {\r\n      newErrors.content = '内容至少需要10个字符';\r\n    } else if (formData.content.length > maxLengths.content) {\r\n      newErrors.content = `内容不能超过${maxLengths.content}个字符`;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    setCharCount(prev => ({ ...prev, [field]: value.length }));\r\n    \r\n    // 清除对应字段的错误\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const handleTagSuggestionClick = (tag) => {\r\n    const currentTags = formData.tags.split(',').map(t => t.trim()).filter(t => t);\r\n    if (!currentTags.includes(tag)) {\r\n      const newTags = [...currentTags, tag].join(', ');\r\n      handleInputChange('tags', newTags);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      const tagsArray = formData.tags\r\n        .split(',')\r\n        .map(tag => tag.trim())\r\n        .filter(tag => tag)\r\n        .slice(0, 5); // 最多5个标签\r\n\r\n      const postData = {\r\n        title: formData.title.trim(),\r\n        content: formData.content.trim(),\r\n        tags: tagsArray,\r\n        isPublic: formData.isPublic\r\n      };\r\n\r\n      const newPost = await CommunityService.createPost(postData);\r\n      \r\n      // 显示成功消息\r\n      setSubmitting(false);\r\n      onSuccess(newPost);\r\n      \r\n    } catch (error) {\r\n      console.error('发布失败:', error);\r\n      setErrors({ submit: error.message || '发布失败，请重试' });\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const getTitleCharCountColor = () => {\r\n    const ratio = charCount.title / maxLengths.title;\r\n    if (ratio > 0.9) return '#ff6b6b';\r\n    if (ratio > 0.7) return '#ffa726';\r\n    return '#4ecdc4';\r\n  };\r\n\r\n  const getContentCharCountColor = () => {\r\n    const ratio = charCount.content / maxLengths.content;\r\n    if (ratio > 0.9) return '#ff6b6b';\r\n    if (ratio > 0.7) return '#ffa726';\r\n    return '#4ecdc4';\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"create-post-modal\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <div className=\"header-content\">\r\n            <h3>✏️ 发布新帖子</h3>\r\n            <p>分享你的学习心得和经验</p>\r\n          </div>\r\n          <button className=\"close-btn\" onClick={onClose}>\r\n            ✕\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"post-form\">\r\n          {/* 标题输入 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"post-title\">\r\n              帖子标题 *\r\n              <span \r\n                className=\"char-count\"\r\n                style={{ color: getTitleCharCountColor() }}\r\n              >\r\n                {charCount.title}/{maxLengths.title}\r\n              </span>\r\n            </label>\r\n            <input\r\n              id=\"post-title\"\r\n              type=\"text\"\r\n              placeholder=\"请输入有吸引力的标题...\"\r\n              value={formData.title}\r\n              onChange={(e) => handleInputChange('title', e.target.value)}\r\n              className={errors.title ? 'error' : ''}\r\n              maxLength={maxLengths.title}\r\n            />\r\n            {errors.title && <span className=\"error-message\">{errors.title}</span>}\r\n          </div>\r\n\r\n          {/* 内容输入 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"post-content\">\r\n              帖子内容 *\r\n              <span \r\n                className=\"char-count\"\r\n                style={{ color: getContentCharCountColor() }}\r\n              >\r\n                {charCount.content}/{maxLengths.content}\r\n              </span>\r\n            </label>\r\n            <textarea\r\n              ref={textareaRef}\r\n              id=\"post-content\"\r\n              placeholder=\"详细描述你的问题或分享你的经验...（支持 Markdown 格式）\"\r\n              value={formData.content}\r\n              onChange={(e) => handleInputChange('content', e.target.value)}\r\n              className={errors.content ? 'error' : ''}\r\n              maxLength={maxLengths.content}\r\n              rows=\"6\"\r\n            />\r\n            {errors.content && <span className=\"error-message\">{errors.content}</span>}\r\n            \r\n            {/* 内容格式提示 */}\r\n            <div className=\"format-tips\">\r\n              <span className=\"tip-title\">格式提示：</span>\r\n              <span className=\"tip-item\">**粗体**</span>\r\n              <span className=\"tip-item\">*斜体*</span>\r\n              <span className=\"tip-item\">`代码`</span>\r\n              <span className=\"tip-item\">- 列表项</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 标签输入 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"post-tags\">\r\n              标签\r\n              <span className=\"optional\">（可选）</span>\r\n            </label>\r\n            <input\r\n              id=\"post-tags\"\r\n              type=\"text\"\r\n              placeholder=\"输入标签，用逗号分隔（例如：JavaScript,算法,LeetCode）\"\r\n              value={formData.tags}\r\n              onChange={(e) => handleInputChange('tags', e.target.value)}\r\n            />\r\n            \r\n            {/* 标签建议 */}\r\n            {suggestedTags.length > 0 && (\r\n              <div className=\"tag-suggestions\">\r\n                <span className=\"suggestions-label\">推荐标签：</span>\r\n                {suggestedTags.map(tag => (\r\n                  <button\r\n                    key={tag}\r\n                    type=\"button\"\r\n                    className=\"tag-suggestion\"\r\n                    onClick={() => handleTagSuggestionClick(tag)}\r\n                  >\r\n                    {tag}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"tags-hint\">\r\n              最多5个标签，用逗号分隔。合适的标签有助于更多人看到你的帖子。\r\n            </div>\r\n          </div>\r\n\r\n          {/* 发布设置 */}\r\n          <div className=\"form-group\">\r\n            <label className=\"checkbox-label\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={formData.isPublic}\r\n                onChange={(e) => handleInputChange('isPublic', e.target.checked)}\r\n              />\r\n              <span className=\"checkmark\"></span>\r\n              公开帖子（所有人可见）\r\n            </label>\r\n            <div className=\"privacy-hint\">\r\n              {formData.isPublic \r\n                ? '✅ 你的帖子将对所有用户可见'\r\n                : '🔒 只有你自己可以看到此帖子'\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n          {/* 提交错误 */}\r\n          {errors.submit && (\r\n            <div className=\"submit-error\">\r\n              <span className=\"error-icon\">⚠️</span>\r\n              {errors.submit}\r\n            </div>\r\n          )}\r\n\r\n          {/* 表单操作 */}\r\n          <div className=\"form-actions\">\r\n            <button \r\n              type=\"button\" \r\n              onClick={onClose}\r\n              className=\"cancel-btn\"\r\n              disabled={submitting}\r\n            >\r\n              取消\r\n            </button>\r\n            <button \r\n              type=\"submit\" \r\n              className=\"submit-btn\"\r\n              disabled={submitting}\r\n            >\r\n              {submitting ? (\r\n                <>\r\n                  <div className=\"submit-spinner\"></div>\r\n                  发布中...\r\n                </>\r\n              ) : (\r\n                '🚀 发布帖子'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePostModal;","// components/community/SearchBar.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst SearchBar = ({ onSearch, placeholder = \"搜索帖子标题或内容...\" }) => {\r\n  const [keyword, setKeyword] = useState('');\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const searchInputRef = useRef(null);\r\n\r\n  // 热门搜索建议\r\n  const popularSuggestions = [\r\n    'JavaScript',\r\n    'React',\r\n    '算法',\r\n    'LeetCode',\r\n    '前端',\r\n    '面试',\r\n    'TypeScript',\r\n    'Vue'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // 防抖搜索\r\n    const timeoutId = setTimeout(() => {\r\n      onSearch(keyword);\r\n    }, 300);\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [keyword, onSearch]);\r\n\r\n  const handleSearch = (value) => {\r\n    setKeyword(value);\r\n    setShowSuggestions(value.length > 0);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setKeyword('');\r\n    setShowSuggestions(false);\r\n    onSearch('');\r\n    searchInputRef.current?.focus();\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    setKeyword(suggestion);\r\n    setShowSuggestions(false);\r\n    onSearch(suggestion);\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    setIsFocused(true);\r\n    if (keyword.length > 0) {\r\n      setShowSuggestions(true);\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsFocused(false);\r\n    // 延迟隐藏建议列表，以便点击建议项\r\n    setTimeout(() => setShowSuggestions(false), 200);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Escape') {\r\n      setShowSuggestions(false);\r\n      searchInputRef.current?.blur();\r\n    } else if (e.key === 'Enter') {\r\n      setShowSuggestions(false);\r\n      onSearch(keyword);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <div className={`search-input-container ${isFocused ? 'focused' : ''}`}>\r\n        <div className=\"search-icon\">🔍</div>\r\n        \r\n        <input\r\n          ref={searchInputRef}\r\n          type=\"text\"\r\n          placeholder={placeholder}\r\n          value={keyword}\r\n          onChange={(e) => handleSearch(e.target.value)}\r\n          onFocus={handleFocus}\r\n          onBlur={handleBlur}\r\n          onKeyDown={handleKeyDown}\r\n          className=\"search-input\"\r\n        />\r\n\r\n        {keyword && (\r\n          <button \r\n            className=\"clear-search\"\r\n            onClick={handleClear}\r\n            type=\"button\"\r\n          >\r\n            ✕\r\n          </button>\r\n        )}\r\n\r\n        {/* 搜索建议下拉框 */}\r\n        {showSuggestions && (\r\n          <div className=\"search-suggestions\">\r\n            <div className=\"suggestions-header\">\r\n              <span className=\"suggestions-title\">搜索建议</span>\r\n              <button \r\n                className=\"close-suggestions\"\r\n                onClick={() => setShowSuggestions(false)}\r\n              >\r\n                ✕\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"suggestions-list\">\r\n              {/* 精确匹配建议 */}\r\n              {keyword.length > 0 && (\r\n                <div \r\n                  className=\"suggestion-item exact-match\"\r\n                  onClick={() => handleSuggestionClick(keyword)}\r\n                >\r\n                  <span className=\"suggestion-icon\">🔍</span>\r\n                  <span className=\"suggestion-text\">搜索: \"{keyword}\"</span>\r\n                </div>\r\n              )}\r\n\r\n              {/* 热门搜索建议 */}\r\n              <div className=\"suggestions-section\">\r\n                <div className=\"section-title\">热门搜索</div>\r\n                {popularSuggestions\r\n                  .filter(suggestion => \r\n                    suggestion.toLowerCase().includes(keyword.toLowerCase())\r\n                  )\r\n                  .map((suggestion, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"suggestion-item\"\r\n                      onClick={() => handleSuggestionClick(suggestion)}\r\n                    >\r\n                      <span className=\"suggestion-icon\">🔥</span>\r\n                      <span className=\"suggestion-text\">{suggestion}</span>\r\n                    </div>\r\n                  ))\r\n                }\r\n              </div>\r\n\r\n              {/* 搜索提示 */}\r\n              <div className=\"search-tips\">\r\n                <div className=\"tips-title\">搜索提示</div>\r\n                <div className=\"tips-list\">\r\n                  <div className=\"tip-item\">\r\n                    <span className=\"tip-icon\">💡</span>\r\n                    <span>支持搜索帖子标题、内容和标签</span>\r\n                  </div>\r\n                  <div className=\"tip-item\">\r\n                    <span className=\"tip-icon\">⏎</span>\r\n                    <span>按 Enter 键快速搜索</span>\r\n                  </div>\r\n                  <div className=\"tip-item\">\r\n                    <span className=\"tip-icon\">⎋</span>\r\n                    <span>按 ESC 键清除搜索</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 搜索统计信息 */}\r\n      {keyword && (\r\n        <div className=\"search-stats\">\r\n          <span className=\"stats-text\">\r\n            正在搜索: <strong>\"{keyword}\"</strong>\r\n          </span>\r\n          <button \r\n            className=\"advanced-search-btn\"\r\n            onClick={() => setShowSuggestions(true)}\r\n          >\r\n            高级搜索\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;","// components/community/TagCloud.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport './TagCloud.css';\r\n\r\nconst TagCloud = ({ onTagClick, maxTags = 20 }) => {\r\n  const [tags, setTags] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedTag, setSelectedTag] = useState('');\r\n\r\n  // 默认热门标签（作为回退）\r\n  const defaultTags = [\r\n    { tag: 'JavaScript', count: 25, color: '#f7df1e' },\r\n    { tag: 'React', count: 18, color: '#61dafb' },\r\n    { tag: '算法', count: 22, color: '#4ecdc4' },\r\n    { tag: 'LeetCode', count: 20, color: '#ff6b6b' },\r\n    { tag: '前端', count: 15, color: '#667eea' },\r\n    { tag: '面试', count: 12, color: '#f093fb' },\r\n    { tag: 'TypeScript', count: 10, color: '#3178c6' },\r\n    { tag: 'Vue', count: 8, color: '#41b883' },\r\n    { tag: 'CSS', count: 6, color: '#264de4' },\r\n    { tag: 'Node.js', count: 5, color: '#68a063' },\r\n    { tag: '数据库', count: 7, color: '#ffa726' },\r\n    { tag: '计算机网络', count: 4, color: '#26c6da' },\r\n    { tag: '操作系统', count: 3, color: '#ab47bc' },\r\n    { tag: '数据结构', count: 9, color: '#ec407a' },\r\n    { tag: 'Git', count: 5, color: '#f4511e' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    loadPopularTags();\r\n  }, []);\r\n\r\n  const loadPopularTags = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const popularTags = await CommunityService.getPopularTags(maxTags);\r\n      if (popularTags && popularTags.length > 0) {\r\n        // 为标签添加颜色\r\n        const tagsWithColors = popularTags.map((tagData, index) => ({\r\n          ...tagData,\r\n          color: getTagColor(index)\r\n        }));\r\n        setTags(tagsWithColors);\r\n      } else {\r\n        // 使用默认标签\r\n        setTags(defaultTags.slice(0, maxTags));\r\n      }\r\n    } catch (error) {\r\n      console.error('加载热门标签失败:', error);\r\n      // 使用默认标签作为回退\r\n      setTags(defaultTags.slice(0, maxTags));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 根据索引生成标签颜色\r\n  const getTagColor = (index) => {\r\n    const colors = [\r\n      '#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57',\r\n      '#ff9ff3', '#54a0ff', '#5f27cd', '#00d2d3', '#ff9f43',\r\n      '#f368e0', '#ff9f43', '#a55eea', '#fd79a8', '#e17055',\r\n      '#00b894', '#00cec9', '#0984e3', '#6c5ce7', '#b2bec3'\r\n    ];\r\n    return colors[index % colors.length];\r\n  };\r\n\r\n  // 根据标签数量计算字体大小\r\n  const getTagSize = (count, maxCount) => {\r\n    const sizes = ['xs', 'sm', 'md', 'lg', 'xl'];\r\n    const ratio = count / maxCount;\r\n    \r\n    if (ratio > 0.8) return sizes[4];      // xl\r\n    if (ratio > 0.6) return sizes[3];      // lg\r\n    if (ratio > 0.4) return sizes[2];      // md\r\n    if (ratio > 0.2) return sizes[1];      // sm\r\n    return sizes[0];                       // xs\r\n  };\r\n\r\n  const handleTagClick = (tag) => {\r\n    setSelectedTag(tag === selectedTag ? '' : tag);\r\n    onTagClick(tag === selectedTag ? '' : tag);\r\n  };\r\n\r\n  const handleClearFilter = () => {\r\n    setSelectedTag('');\r\n    onTagClick('');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"tag-cloud-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <span>加载标签中...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const maxCount = Math.max(...tags.map(t => t.count));\r\n  const totalPosts = tags.reduce((sum, tag) => sum + tag.count, 0);\r\n\r\n  return (\r\n    <div className=\"tag-cloud-container\">\r\n      {/* 标签云头部信息 */}\r\n      <div className=\"tag-cloud-header\">\r\n        <div className=\"tag-cloud-stats\">\r\n          <span className=\"stats-text\">\r\n            {tags.length} 个标签 • {totalPosts} 个帖子\r\n          </span>\r\n          {selectedTag && (\r\n            <button \r\n              className=\"clear-filter-btn\"\r\n              onClick={handleClearFilter}\r\n            >\r\n              清除筛选\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 标签云主体 */}\r\n      <div className=\"tag-cloud\">\r\n        {tags.map(({ tag, count, color }) => {\r\n          const size = getTagSize(count, maxCount);\r\n          const isSelected = tag === selectedTag;\r\n          \r\n          return (\r\n            <span\r\n              key={tag}\r\n              className={`tag ${size} ${isSelected ? 'selected' : ''}`}\r\n              style={{\r\n                '--tag-color': color,\r\n                '--tag-bg-color': isSelected ? color : `${color}20`,\r\n                '--tag-border-color': isSelected ? color : `${color}40`\r\n              }}\r\n              onClick={() => handleTagClick(tag)}\r\n              title={`${tag} - ${count} 个帖子`}\r\n            >\r\n              <span className=\"tag-text\">{tag}</span>\r\n              <span className=\"tag-count\">{count}</span>\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* 选中的标签提示 */}\r\n      {selectedTag && (\r\n        <div className=\"selected-tag-info\">\r\n          <span className=\"selected-tag-badge\">\r\n            <span className=\"selected-tag-text\">已选择: {selectedTag}</span>\r\n            <button \r\n              className=\"remove-selection\"\r\n              onClick={handleClearFilter}\r\n            >\r\n              ✕\r\n            </button>\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {/* 标签云说明 */}\r\n      <div className=\"tag-cloud-footer\">\r\n        <div className=\"tag-cloud-tips\">\r\n          <span className=\"tip-icon\">💡</span>\r\n          <span className=\"tip-text\">点击标签筛选相关帖子</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagCloud;","// components/community/CommunityStats.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport AV from 'leancloud-storage';\r\nimport './CommunityStats.css';\r\n\r\nconst CommunityStats = () => {\r\n  const [stats, setStats] = useState({\r\n    totalPosts: 0,\r\n    totalComments: 0,\r\n    totalLikes: 0,\r\n    activeUsers: 0,\r\n    todayPosts: 0,\r\n    trendingTags: []\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadStats();\r\n    // 每5分钟刷新一次数据\r\n    const interval = setInterval(loadStats, 5 * 60 * 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const loadStats = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // 获取帖子总数\r\n      const totalPosts = await new AV.Query('Post')\r\n        .equalTo('status', 'published')\r\n        .count()\r\n        .catch(() => 0);\r\n\r\n      // 获取评论总数\r\n      const totalComments = await new AV.Query('Comment').count().catch(() => 0);\r\n\r\n      // 获取点赞总数（需要从 Like 表统计）\r\n      const totalLikes = await new AV.Query('Like').count().catch(() => 0);\r\n\r\n      // 获取今日帖子数\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      const todayPosts = await new AV.Query('Post')\r\n        .greaterThanOrEqualTo('createdAt', today)\r\n        .count()\r\n        .catch(() => 0);\r\n\r\n      // 获取活跃用户数（最近7天有活动的用户）\r\n      const weekAgo = new Date();\r\n      weekAgo.setDate(weekAgo.getDate() - 7);\r\n      const activeUsers = await new AV.Query('Post')\r\n        .greaterThanOrEqualTo('createdAt', weekAgo)\r\n        .distinct('author')\r\n        .count()\r\n        .catch(() => 0);\r\n\r\n      // 获取热门标签\r\n      const postQuery = new AV.Query('Post');\r\n      const posts = await postQuery\r\n        .equalTo('status', 'published')\r\n        .limit(1000)\r\n        .find()\r\n        .catch(() => []);\r\n\r\n      const tagCount = {};\r\n      posts.forEach(post => {\r\n        const tags = post.get('tags') || [];\r\n        tags.forEach(tag => {\r\n          tagCount[tag] = (tagCount[tag] || 0) + 1;\r\n        });\r\n      });\r\n\r\n      const trendingTags = Object.entries(tagCount)\r\n        .sort(([,a], [,b]) => b - a)\r\n        .slice(0, 5)\r\n        .map(([tag, count]) => ({ tag, count }));\r\n\r\n      setStats({\r\n        totalPosts,\r\n        totalComments,\r\n        totalLikes,\r\n        activeUsers,\r\n        todayPosts,\r\n        trendingTags\r\n      });\r\n      setLastUpdated(new Date());\r\n    } catch (error) {\r\n      console.error('加载统计信息失败:', error);\r\n      // 使用默认数据\r\n      setStats({\r\n        totalPosts: 0,\r\n        totalComments: 0,\r\n        totalLikes: 0,\r\n        activeUsers: 0,\r\n        todayPosts: 0,\r\n        trendingTags: []\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatNumber = (num) => {\r\n    if (num >= 10000) {\r\n      return (num / 10000).toFixed(1) + '万';\r\n    }\r\n    if (num >= 1000) {\r\n      return (num / 1000).toFixed(1) + '千';\r\n    }\r\n    return num.toString();\r\n  };\r\n\r\n  const getGrowthRate = (current, previous) => {\r\n    if (previous === 0) return 100;\r\n    return ((current - previous) / previous * 100).toFixed(1);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"community-stats\">\r\n        <div className=\"stats-header\">\r\n          <h4>📊 社区统计</h4>\r\n          <button className=\"refresh-btn\" onClick={loadStats}>\r\n            🔄\r\n          </button>\r\n        </div>\r\n        <div className=\"stats-loading\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <span>加载统计中...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"community-stats\">\r\n      <div className=\"stats-header\">\r\n        <h4>📊 社区统计</h4>\r\n        <div className=\"header-actions\">\r\n          {lastUpdated && (\r\n            <span className=\"update-time\">\r\n              更新于 {lastUpdated.toLocaleTimeString('zh-CN', { \r\n                hour: '2-digit', \r\n                minute: '2-digit' \r\n              })}\r\n            </span>\r\n          )}\r\n          <button \r\n            className=\"refresh-btn\"\r\n            onClick={loadStats}\r\n            title=\"刷新数据\"\r\n          >\r\n            🔄\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"stats-grid\">\r\n        {/* 帖子统计 */}\r\n        <div className=\"stat-card primary\">\r\n          <div className=\"stat-icon\">📝</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-number\">{formatNumber(stats.totalPosts)}</div>\r\n            <div className=\"stat-label\">总帖子</div>\r\n            <div className=\"stat-subtext\">\r\n              +{stats.todayPosts} 今日\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 评论统计 */}\r\n        <div className=\"stat-card success\">\r\n          <div className=\"stat-icon\">💬</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-number\">{formatNumber(stats.totalComments)}</div>\r\n            <div className=\"stat-label\">总评论</div>\r\n            <div className=\"stat-subtext\">\r\n              互动活跃\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 点赞统计 */}\r\n        <div className=\"stat-card warning\">\r\n          <div className=\"stat-icon\">👍</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-number\">{formatNumber(stats.totalLikes)}</div>\r\n            <div className=\"stat-label\">总点赞</div>\r\n            <div className=\"stat-subtext\">\r\n              社区认可\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 活跃用户 */}\r\n        <div className=\"stat-card info\">\r\n          <div className=\"stat-icon\">👥</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-number\">{formatNumber(stats.activeUsers)}</div>\r\n            <div className=\"stat-label\">活跃用户</div>\r\n            <div className=\"stat-subtext\">\r\n              最近7天\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 热门标签 */}\r\n      {stats.trendingTags.length > 0 && (\r\n        <div className=\"trending-tags\">\r\n          <h5>🔥 热门标签</h5>\r\n          <div className=\"tags-list\">\r\n            {stats.trendingTags.map(({ tag, count }, index) => (\r\n              <div key={tag} className=\"trending-tag\">\r\n                <span className=\"tag-rank\">#{index + 1}</span>\r\n                <span className=\"tag-name\">{tag}</span>\r\n                <span className=\"tag-count\">{count}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 社区状态指示器 */}\r\n      <div className=\"community-health\">\r\n        <div className=\"health-indicator\">\r\n          <div className=\"health-label\">社区活跃度</div>\r\n          <div className=\"health-bar\">\r\n            <div \r\n              className=\"health-fill\"\r\n              style={{ \r\n                width: `${Math.min((stats.todayPosts / 10) * 100, 100)}%`,\r\n                backgroundColor: stats.todayPosts >= 5 ? '#4ecdc4' : \r\n                               stats.todayPosts >= 2 ? '#ffa726' : '#ff6b6b'\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"health-status\">\r\n            {stats.todayPosts >= 5 ? '🔥 非常活跃' :\r\n             stats.todayPosts >= 2 ? '💪 活跃' : '😴 安静'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommunityStats;","// components/community/CommentItem.jsx\r\nimport React, { useState } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport AV from 'leancloud-storage';\r\nimport './CommentItem.css';\r\n\r\n// 格式化时间函数\r\nconst formatTime = (date) => {\r\n  if (!date) return \"刚刚\";\r\n  const now = new Date();\r\n  const diffMs = now - new Date(date);\r\n  const diffMins = Math.floor(diffMs / 60000);\r\n  const diffHours = Math.floor(diffMs / 3600000);\r\n  const diffDays = Math.floor(diffMs / 86400000);\r\n\r\n  if (diffMins < 1) return \"刚刚\";\r\n  if (diffMins < 60) return `${diffMins}分钟前`;\r\n  if (diffHours < 24) return `${diffHours}小时前`;\r\n  if (diffDays < 7) return `${diffDays}天前`;\r\n  return new Date(date).toLocaleDateString('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric'\r\n  });\r\n};\r\n\r\nconst CommentItem = ({ comment, onReply, onUpdate }) => {\r\n  const [likes, setLikes] = useState(comment.get('likes') || 0);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [showActions, setShowActions] = useState(false);\r\n  const [editing, setEditing] = useState(false);\r\n  const [editContent, setEditContent] = useState(comment.get('content') || '');\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  // 获取用户信息\r\n  const getAvatarUrl = () => {\r\n    return comment.get('author')?.get('avatar') || '/default-avatar.png';\r\n  };\r\n\r\n  const getUsername = () => {\r\n    return comment.get('author')?.get('username') || '匿名用户';\r\n  };\r\n\r\n  // 检查当前用户是否是评论作者\r\n  const isAuthor = () => {\r\n    const currentUser = AV.User.current();\r\n    return currentUser && comment.get('author')?.id === currentUser.id;\r\n  };\r\n\r\n  // 处理点赞\r\n  const handleLike = async () => {\r\n    try {\r\n      const result = await CommunityService.toggleLike(comment.id, 'comment');\r\n      setLikes(result.liked ? likes + 1 : Math.max(0, likes - 1));\r\n      setIsLiked(result.liked);\r\n    } catch (error) {\r\n      console.error('点赞评论失败:', error);\r\n    }\r\n  };\r\n\r\n  // 处理回复\r\n  const handleReplyClick = () => {\r\n    onReply(comment);\r\n  };\r\n\r\n  // 处理编辑\r\n  const handleEdit = () => {\r\n    setEditing(true);\r\n    setEditContent(comment.get('content') || '');\r\n  };\r\n\r\n  // 保存编辑\r\n  const handleSaveEdit = async () => {\r\n    if (!editContent.trim()) return;\r\n\r\n    setSaving(true);\r\n    try {\r\n      // 这里需要实现更新评论的 API\r\n      // await CommunityService.updateComment(comment.id, { content: editContent });\r\n      setEditing(false);\r\n      onUpdate(); // 刷新评论列表\r\n    } catch (error) {\r\n      console.error('更新评论失败:', error);\r\n      alert('更新评论失败: ' + error.message);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  // 取消编辑\r\n  const handleCancelEdit = () => {\r\n    setEditing(false);\r\n    setEditContent(comment.get('content') || '');\r\n  };\r\n\r\n  // 处理删除\r\n  const handleDelete = async () => {\r\n    if (!window.confirm('确定要删除这条评论吗？此操作不可撤销。')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 这里需要实现删除评论的 API\r\n      // await CommunityService.deleteComment(comment.id);\r\n      onUpdate(); // 刷新评论列表\r\n    } catch (error) {\r\n      console.error('删除评论失败:', error);\r\n      alert('删除评论失败: ' + error.message);\r\n    }\r\n  };\r\n\r\n  // 渲染评论内容（支持简单的 Markdown）\r\n  const renderContent = () => {\r\n    const content = comment.get('content') || '';\r\n    \r\n    return content\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      .replace(/`(.*?)`/g, '<code>$1</code>')\r\n      .replace(/\\n/g, '<br>');\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"comment-item\"\r\n      onMouseEnter={() => setShowActions(true)}\r\n      onMouseLeave={() => setShowActions(false)}\r\n    >\r\n      {/* 评论头部 */}\r\n      <div className=\"comment-header\">\r\n        <div className=\"comment-author\">\r\n          <img \r\n            src={getAvatarUrl()} \r\n            alt=\"用户头像\"\r\n            className=\"comment-avatar\"\r\n          />\r\n          <div className=\"author-info\">\r\n            <span className=\"author-name\">{getUsername()}</span>\r\n            {isAuthor() && (\r\n              <span className=\"author-badge\">作者</span>\r\n            )}\r\n            <span className=\"comment-time\">\r\n              {formatTime(comment.get('createdAt'))}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 评论操作 */}\r\n        {showActions && (\r\n          <div className=\"comment-actions\">\r\n            <button \r\n              className=\"action-btn reply-btn\"\r\n              onClick={handleReplyClick}\r\n              title=\"回复\"\r\n            >\r\n              ↩️\r\n            </button>\r\n            \r\n            {isAuthor() && (\r\n              <>\r\n                <button \r\n                  className=\"action-btn edit-btn\"\r\n                  onClick={handleEdit}\r\n                  title=\"编辑\"\r\n                >\r\n                  ✏️\r\n                </button>\r\n                <button \r\n                  className=\"action-btn delete-btn\"\r\n                  onClick={handleDelete}\r\n                  title=\"删除\"\r\n                >\r\n                  🗑️\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 评论内容 */}\r\n      <div className=\"comment-content\">\r\n        {editing ? (\r\n          <div className=\"edit-comment\">\r\n            <textarea\r\n              value={editContent}\r\n              onChange={(e) => setEditContent(e.target.value)}\r\n              rows=\"3\"\r\n              className=\"edit-textarea\"\r\n              maxLength=\"1000\"\r\n            />\r\n            <div className=\"edit-actions\">\r\n              <button \r\n                onClick={handleCancelEdit}\r\n                className=\"cancel-edit-btn\"\r\n                disabled={saving}\r\n              >\r\n                取消\r\n              </button>\r\n              <button \r\n                onClick={handleSaveEdit}\r\n                className=\"save-edit-btn\"\r\n                disabled={!editContent.trim() || saving}\r\n              >\r\n                {saving ? '保存中...' : '保存'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div \r\n            className=\"comment-text\"\r\n            dangerouslySetInnerHTML={{ __html: renderContent() }}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {/* 评论底部 */}\r\n      <div className=\"comment-footer\">\r\n        <button \r\n          className={`like-btn ${isLiked ? 'liked' : ''}`}\r\n          onClick={handleLike}\r\n        >\r\n          <span className=\"like-icon\">👍</span>\r\n          <span className=\"like-count\">{likes}</span>\r\n        </button>\r\n\r\n        <button \r\n          className=\"reply-footer-btn\"\r\n          onClick={handleReplyClick}\r\n        >\r\n          回复\r\n        </button>\r\n      </div>\r\n\r\n      {/* 回复指示器 */}\r\n      {comment.get('parent') && (\r\n        <div className=\"reply-indicator\">\r\n          回复 <span className=\"reply-to\">@{comment.get('parent')?.get('author')?.get('username') || '用户'}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentItem;","// components/community/CommentSection.jsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport CommentItem from './CommentItem';\r\nimport AV from 'leancloud-storage';\r\nimport './CommentSection.css';\r\n\r\nconst CommentSection = ({ postId }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [sortBy, setSortBy] = useState('newest'); // newest, oldest, popular\r\n  const [replyingTo, setReplyingTo] = useState(null);\r\n  const textareaRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    loadComments();\r\n  }, [postId, sortBy]);\r\n\r\n  const loadComments = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const commentsData = await CommunityService.getComments(postId);\r\n      \r\n      // 排序评论\r\n      const sortedComments = [...commentsData].sort((a, b) => {\r\n        switch (sortBy) {\r\n          case 'oldest':\r\n            return new Date(a.get('createdAt')) - new Date(b.get('createdAt'));\r\n          case 'popular':\r\n            return (b.get('likes') || 0) - (a.get('likes') || 0);\r\n          case 'newest':\r\n          default:\r\n            return new Date(b.get('createdAt')) - new Date(a.get('createdAt'));\r\n        }\r\n      });\r\n\r\n      setComments(sortedComments);\r\n    } catch (error) {\r\n      console.error('加载评论失败:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmitComment = async () => {\r\n    if (!newComment.trim()) return;\r\n\r\n    const currentUser = AV.User.current();\r\n    if (!currentUser) {\r\n      alert('请先登录后再评论');\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      let parentId = null;\r\n      if (replyingTo) {\r\n        parentId = replyingTo.id;\r\n      }\r\n\r\n      await CommunityService.addComment(postId, newComment, parentId);\r\n      \r\n      // 清空输入框\r\n      setNewComment('');\r\n      setReplyingTo(null);\r\n      \r\n      // 重新加载评论\r\n      await loadComments();\r\n      \r\n      // 显示成功提示\r\n      showSuccessMessage('评论发布成功！');\r\n    } catch (error) {\r\n      console.error('发布评论失败:', error);\r\n      alert('发布评论失败: ' + error.message);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleReply = (comment) => {\r\n    setReplyingTo(comment);\r\n    setNewComment(`@${comment.get('author')?.get('username') || '用户'} `);\r\n    textareaRef.current?.focus();\r\n  };\r\n\r\n  const cancelReply = () => {\r\n    setReplyingTo(null);\r\n    setNewComment('');\r\n  };\r\n\r\n  const showSuccessMessage = (message) => {\r\n    // 可以在这里添加更美观的成功提示\r\n    console.log(message);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\r\n      handleSubmitComment();\r\n    }\r\n  };\r\n\r\n  const getCommentCountText = () => {\r\n    const count = comments.length;\r\n    if (count === 0) return '暂无评论';\r\n    if (count === 1) return '1 条评论';\r\n    return `${count} 条评论`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-section\">\r\n      {/* 评论头部 */}\r\n      <div className=\"comment-header\">\r\n        <h4 className=\"comment-title\">\r\n          💬 {getCommentCountText()}\r\n        </h4>\r\n        \r\n        <div className=\"comment-controls\">\r\n          <select \r\n            value={sortBy}\r\n            onChange={(e) => setSortBy(e.target.value)}\r\n            className=\"sort-select\"\r\n          >\r\n            <option value=\"newest\">最新</option>\r\n            <option value=\"oldest\">最早</option>\r\n            <option value=\"popular\">最热</option>\r\n          </select>\r\n          \r\n          <button \r\n            className=\"refresh-comments\"\r\n            onClick={loadComments}\r\n            disabled={loading}\r\n          >\r\n            {loading ? '🔄' : '🔄'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 评论输入框 */}\r\n      <div className=\"comment-input-section\">\r\n        {replyingTo && (\r\n          <div className=\"reply-indicator\">\r\n            <span>回复 @{replyingTo.get('author')?.get('username') || '用户'}</span>\r\n            <button onClick={cancelReply}>取消</button>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"comment-input-wrapper\">\r\n          <textarea\r\n            ref={textareaRef}\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder={replyingTo ? '写下你的回复...' : '写下你的评论...'}\r\n            rows=\"3\"\r\n            className=\"comment-textarea\"\r\n            maxLength=\"1000\"\r\n          />\r\n          \r\n          <div className=\"comment-input-footer\">\r\n            <div className=\"char-count\">\r\n              {newComment.length}/1000\r\n            </div>\r\n            \r\n            <button\r\n              onClick={handleSubmitComment}\r\n              disabled={!newComment.trim() || submitting}\r\n              className=\"submit-comment-btn\"\r\n            >\r\n              {submitting ? (\r\n                <>\r\n                  <div className=\"submit-spinner\"></div>\r\n                  发布中...\r\n                </>\r\n              ) : (\r\n                '发布评论'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"comment-tips\">\r\n          <span className=\"tip\">💡 支持 Markdown 语法</span>\r\n          <span className=\"tip\">⏎ + Ctrl 快速发布</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 评论列表 */}\r\n      <div className=\"comments-list\">\r\n        {loading ? (\r\n          <div className=\"comments-loading\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <span>加载评论中...</span>\r\n          </div>\r\n        ) : comments.length === 0 ? (\r\n          <div className=\"no-comments\">\r\n            <div className=\"no-comments-icon\">💬</div>\r\n            <h5>还没有评论</h5>\r\n            <p>成为第一个评论的人吧！</p>\r\n          </div>\r\n        ) : (\r\n          comments.map(comment => (\r\n            <CommentItem\r\n              key={comment.id}\r\n              comment={comment}\r\n              onReply={handleReply}\r\n              onUpdate={loadComments}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentSection;","// components/community/PostCard.jsx\r\nimport React, { useState } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport CommentSection from './CommentSection';\r\nimport './PostCard.css';\r\n\r\n// 格式化时间函数\r\nconst formatTime = (date) => {\r\n  if (!date) return \"刚刚\";\r\n  const now = new Date();\r\n  const diffMs = now - new Date(date);\r\n  const diffMins = Math.floor(diffMs / 60000);\r\n  const diffHours = Math.floor(diffMs / 3600000);\r\n  const diffDays = Math.floor(diffMs / 86400000);\r\n\r\n  if (diffMins < 1) return \"刚刚\";\r\n  if (diffMins < 60) return `${diffMins}分钟前`;\r\n  if (diffHours < 24) return `${diffHours}小时前`;\r\n  if (diffDays < 7) return `${diffDays}天前`;\r\n  return new Date(date).toLocaleDateString('zh-CN', {\r\n    month: 'short',\r\n    day: 'numeric'\r\n  });\r\n};\r\n\r\nconst PostCard = ({ post }) => {\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [likes, setLikes] = useState(post.get('likes') || 0);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [views, setViews] = useState(post.get('views') || 0);\r\n  \r\n  // 获取用户头像\r\n  const getAvatarUrl = () => {\r\n    return post.get('author')?.get('avatar') || '/default-avatar.png';\r\n  };\r\n\r\n  // 获取用户名\r\n  const getUsername = () => {\r\n    return post.get('author')?.get('username') || '匿名用户';\r\n  };\r\n\r\n  // 处理点赞\r\n  const handleLike = async () => {\r\n    try {\r\n      const result = await CommunityService.toggleLike(post.id);\r\n      setLikes(result.liked ? likes + 1 : Math.max(0, likes - 1));\r\n      setIsLiked(result.liked);\r\n    } catch (error) {\r\n      console.error('点赞失败:', error);\r\n    }\r\n  };\r\n\r\n  // 处理查看评论\r\n  const handleToggleComments = () => {\r\n    setShowComments(!showComments);\r\n    // 增加浏览数（只在第一次展开评论时）\r\n    if (!showComments) {\r\n      setViews(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  // 获取难度颜色\r\n  const getDifficultyColor = () => {\r\n    const difficulty = post.get('difficulty') || 'medium';\r\n    switch (difficulty) {\r\n      case 'easy': return '#52c41a';\r\n      case 'medium': return '#faad14';\r\n      case 'hard': return '#f5222d';\r\n      default: return '#666';\r\n    }\r\n  };\r\n\r\n  // 获取标签颜色\r\n  const getTagColor = (index) => {\r\n    const colors = [\r\n      '#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57',\r\n      '#ff9ff3', '#54a0ff', '#5f27cd', '#00d2d3', '#ff9f43'\r\n    ];\r\n    return colors[index % colors.length];\r\n  };\r\n\r\n  // 渲染内容（支持简单的 Markdown）\r\n  const renderContent = () => {\r\n    const content = post.get('content') || '';\r\n    \r\n    // 简单的 Markdown 处理\r\n    return content\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      .replace(/`(.*?)`/g, '<code>$1</code>')\r\n      .replace(/\\n/g, '<br>');\r\n  };\r\n\r\n  // 获取内容预览\r\n  const getContentPreview = () => {\r\n    const content = post.get('content') || '';\r\n    const plainText = content.replace(/[#*`]/g, '');\r\n    return plainText.length > 150 \r\n      ? plainText.substring(0, 150) + '...' \r\n      : plainText;\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-card\">\r\n      {/* 帖子头部 */}\r\n      <div className=\"post-header\">\r\n        <div className=\"author-section\">\r\n          <img \r\n            src={getAvatarUrl()} \r\n            alt=\"用户头像\"\r\n            className=\"author-avatar\"\r\n            style={{ width: '40px', height: '40px' }} // 内联样式作为备选\r\n\r\n          />\r\n          <div className=\"author-info\">\r\n            <div className=\"author-name\">{getUsername()}</div>\r\n            <div className=\"post-meta\">\r\n              <span className=\"post-time\">\r\n                {formatTime(post.get('createdAt'))}\r\n              </span>\r\n              {post.get('isPinned') && (\r\n                <span className=\"pinned-badge\">📌 置顶</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"post-status\">\r\n          {post.get('difficulty') && (\r\n            <span \r\n              className=\"difficulty-badge\"\r\n              style={{ backgroundColor: getDifficultyColor() }}\r\n            >\r\n              {post.get('difficulty') === 'easy' ? '简单' : \r\n               post.get('difficulty') === 'medium' ? '中等' : '困难'}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 帖子内容 */}\r\n      <div className=\"post-content\">\r\n        <h3 className=\"post-title\">{post.get('title')}</h3>\r\n        \r\n        <div \r\n          className=\"post-body\"\r\n          dangerouslySetInnerHTML={{ __html: renderContent() }}\r\n        />\r\n        \r\n        {/* 内容过长时的阅读更多 */}\r\n        {(post.get('content') || '').length > 150 && !showComments && (\r\n          <button \r\n            className=\"read-more-btn\"\r\n            onClick={() => setShowComments(true)}\r\n          >\r\n            阅读全文\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* 标签区域 */}\r\n      {post.get('tags') && post.get('tags').length > 0 && (\r\n        <div className=\"post-tags\">\r\n          {post.get('tags').map((tag, index) => (\r\n            <span\r\n              key={tag}\r\n              className=\"post-tag\"\r\n              style={{ \r\n                backgroundColor: getTagColor(index) + '20',\r\n                color: getTagColor(index),\r\n                borderColor: getTagColor(index) + '40'\r\n              }}\r\n            >\r\n              #{tag}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* 帖子统计和操作 */}\r\n      <div className=\"post-footer\">\r\n        <div className=\"post-stats\">\r\n          <button \r\n            className={`stat-btn like-btn ${isLiked ? 'liked' : ''}`}\r\n            onClick={handleLike}\r\n          >\r\n            <span className=\"stat-icon\">👍</span>\r\n            <span className=\"stat-count\">{likes}</span>\r\n          </button>\r\n          \r\n          <button \r\n            className={`stat-btn comment-btn ${showComments ? 'active' : ''}`}\r\n            onClick={handleToggleComments}\r\n          >\r\n            <span className=\"stat-icon\">💬</span>\r\n            <span className=\"stat-count\">{post.get('commentCount') || 0}</span>\r\n          </button>\r\n          \r\n          <div className=\"stat-btn view-btn\">\r\n            <span className=\"stat-icon\">👁️</span>\r\n            <span className=\"stat-count\">{views}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"post-actions\">\r\n          <button className=\"action-btn share-btn\">\r\n            🔗 分享\r\n          </button>\r\n          <button className=\"action-btn bookmark-btn\">\r\n            📌 收藏\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 评论区域 */}\r\n      {showComments && (\r\n        <CommentSection postId={post.id} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostCard;","// components/community/CommunityPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CommunityService } from '../../services/communityService';\r\nimport CreatePostModal from './CreatePostModal';\r\nimport SearchBar from './SearchBar';\r\nimport TagCloud from './TagCloud';\r\nimport CommunityStats from './CommunityStats';\r\nimport PostCard from './PostCard';\r\nimport './CommunityPage.css';\r\n\r\nconst CommunityPage = () => {\r\n  const [activeTab, setActiveTab] = useState('latest');\r\n  const [posts, setPosts] = useState([]);\r\n  const [allPosts, setAllPosts] = useState([]); // 保存所有帖子用于搜索过滤\r\n  const [loading, setLoading] = useState(false);\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    pageSize: 20,\r\n    hasMore: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadPosts(true);\r\n  }, [activeTab]);\r\n\r\n  // 根据搜索关键词过滤帖子\r\n  useEffect(() => {\r\n    if (searchKeyword.trim() === '') {\r\n      // 如果没有搜索关键词，显示所有帖子\r\n      setPosts(allPosts);\r\n    } else {\r\n      // 只显示标题包含搜索关键词的帖子\r\n      const filtered = allPosts.filter(post => \r\n        post.get('title')?.toLowerCase().includes(searchKeyword.toLowerCase())\r\n      );\r\n      setPosts(filtered);\r\n    }\r\n  }, [searchKeyword, allPosts]);\r\n\r\n  const loadPosts = async (reset = false) => {\r\n    if (loading) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const currentPage = reset ? 1 : pagination.page;\r\n      const options = {\r\n        page: currentPage,\r\n        pageSize: pagination.pageSize,\r\n        sortBy: activeTab === 'latest' ? 'createdAt' : 'likes',\r\n        sortOrder: 'desc'\r\n      };\r\n\r\n      const postsData = await CommunityService.getPosts(options);\r\n      \r\n      if (reset) {\r\n        setAllPosts(postsData);\r\n        setPosts(postsData);\r\n      } else {\r\n        const newAllPosts = [...allPosts, ...postsData];\r\n        setAllPosts(newAllPosts);\r\n        \r\n        // 应用当前搜索过滤\r\n        if (searchKeyword.trim() === '') {\r\n          setPosts(newAllPosts);\r\n        } else {\r\n          const filtered = newAllPosts.filter(post => \r\n            post.get('title')?.toLowerCase().includes(searchKeyword.toLowerCase())\r\n          );\r\n          setPosts(filtered);\r\n        }\r\n      }\r\n\r\n      setPagination(prev => ({\r\n        ...prev,\r\n        page: currentPage,\r\n        hasMore: postsData.length === pagination.pageSize\r\n      }));\r\n    } catch (error) {\r\n      console.error('加载帖子失败:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (keyword) => {\r\n    setSearchKeyword(keyword);\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    if (!loading && pagination.hasMore) {\r\n      loadPosts(false);\r\n    }\r\n  };\r\n\r\n  const handlePostCreated = (newPost) => {\r\n    // 添加到所有帖子列表\r\n    setAllPosts(prev => [newPost, ...prev]);\r\n    \r\n    // 根据当前搜索条件决定是否显示新帖子\r\n    if (searchKeyword.trim() === '' || \r\n        newPost.get('title')?.toLowerCase().includes(searchKeyword.toLowerCase())) {\r\n      setPosts(prev => [newPost, ...prev]);\r\n    }\r\n    \r\n    setShowCreateModal(false);\r\n  };\r\n\r\n  // 获取搜索结果统计\r\n  const getSearchStats = () => {\r\n    if (searchKeyword.trim() === '') {\r\n      return `共 ${allPosts.length} 个帖子`;\r\n    } else {\r\n      const matchCount = allPosts.filter(post => \r\n        post.get('title')?.toLowerCase().includes(searchKeyword.toLowerCase())\r\n      ).length;\r\n      return `找到 ${posts.length} 个匹配标题的帖子（共 ${matchCount} 个）`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"community-section\">\r\n      <div className=\"container\">\r\n        {/* 头部区域 */}\r\n        <div className=\"community-header\">\r\n          <div className=\"header-content\">\r\n            <div className=\"header-text\">\r\n              <h2>学习社区</h2>\r\n              <p>与大家一起交流学习心得，分享刷题经验</p>\r\n            </div>\r\n            <button \r\n              className=\"create-post-btn modern-btn primary\"\r\n              onClick={() => setShowCreateModal(true)}\r\n            >\r\n              <span className=\"btn-icon\">✏️</span>\r\n              发布帖子\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 搜索和统计区域 */}\r\n        <div className=\"community-toolbar\">\r\n          <div className=\"toolbar-left\">\r\n            <SearchBar \r\n              onSearch={handleSearch}\r\n              placeholder=\"搜索帖子标题...\"\r\n            />\r\n          </div>\r\n          <div className=\"toolbar-right\">\r\n            <CommunityStats />\r\n          </div>\r\n        </div>\r\n\r\n        {/* 搜索统计信息 */}\r\n        {searchKeyword && (\r\n          <div className=\"search-results-info\">\r\n            <div className=\"results-stats\">\r\n              {getSearchStats()}\r\n              {searchKeyword && (\r\n                <span className=\"search-keyword\">\r\n                  搜索关键词: <strong>\"{searchKeyword}\"</strong>\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"community-layout\">\r\n          {/* 侧边栏 */}\r\n          <aside className=\"community-sidebar\">\r\n            <div className=\"sidebar-section\">\r\n              <h3>热门标签</h3>\r\n              <TagCloud \r\n                onTagClick={(tag) => handleSearch(tag)}\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"sidebar-section\">\r\n              <h3>社区指南</h3>\r\n              <div className=\"community-guidelines\">\r\n                <p>💡 分享学习心得</p>\r\n                <p>🤝 互相帮助解答</p>\r\n                <p>🎯 保持内容相关</p>\r\n                <p>👍 尊重他人观点</p>\r\n              </div>\r\n            </div>\r\n          </aside>\r\n\r\n          {/* 主内容区 */}\r\n          <main className=\"community-main\">\r\n            {/* 标签导航 */}\r\n            <div className=\"community-tabs\">\r\n              <button \r\n                className={`modern-tab ${activeTab === 'latest' ? 'active' : ''}`}\r\n                onClick={() => setActiveTab('latest')}\r\n              >\r\n                <span className=\"tab-icon\">🆕</span>\r\n                <span className=\"tab-text\">最新帖子</span>\r\n              </button>\r\n              <button \r\n                className={`modern-tab ${activeTab === 'popular' ? 'active' : ''}`}\r\n                onClick={() => setActiveTab('popular')}\r\n              >\r\n                <span className=\"tab-icon\">🔥</span>\r\n                <span className=\"tab-text\">热门内容</span>\r\n              </button>\r\n            </div>\r\n            \r\n            {/* 帖子列表 */}\r\n            <div className=\"post-list\">\r\n              {loading && (\r\n                <div className=\"loading\">\r\n                  <div className=\"spinner\"></div>\r\n                  <span>加载中...</span>\r\n                </div>\r\n              )}\r\n              \r\n              {posts.map(post => (\r\n                <PostCard key={post.id} post={post} />\r\n              ))}\r\n              \r\n              {!loading && posts.length === 0 && (\r\n                <div className=\"empty-state\">\r\n                  <div className=\"empty-icon\">\r\n                    {searchKeyword ? '🔍' : '💬'}\r\n                  </div>\r\n                  <h3>\r\n                    {searchKeyword ? '没有找到匹配的帖子' : '暂无帖子'}\r\n                  </h3>\r\n                  <p>\r\n                    {searchKeyword \r\n                      ? `没有标题包含 \"${searchKeyword}\" 的帖子，尝试调整搜索关键词`\r\n                      : '成为第一个分享学习心得的人吧！'\r\n                    }\r\n                  </p>\r\n                  {searchKeyword && (\r\n                    <button \r\n                      onClick={() => handleSearch('')}\r\n                      className=\"clear-search-btn\"\r\n                    >\r\n                      显示所有帖子\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {pagination.hasMore && posts.length > 0 && searchKeyword === '' && (\r\n              <div className=\"load-more-section\">\r\n                <button \r\n                  onClick={handleLoadMore}\r\n                  disabled={loading}\r\n                  className=\"load-more-btn\"\r\n                >\r\n                  {loading ? '加载中...' : '加载更多'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </main>\r\n        </div>\r\n        \r\n        {/* 创建帖子模态框 */}\r\n        {showCreateModal && (\r\n          <CreatePostModal \r\n            onClose={() => setShowCreateModal(false)}\r\n            onSuccess={handlePostCreated}\r\n          />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CommunityPage;","// HomePage.jsx\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\r\nimport Chatbox from \"../components/Chatbox\";\r\nimport {\r\n  getCategories,\r\n  initAV,\r\n  QueryOptions,\r\n  createCategory,\r\n  deleteCategory,\r\n} from \"../services/categoryService\";\r\nimport { getAllQuestions, updateQuestion } from \"../services/questionService\";\r\nimport { cacheService } from \"../services/cacheService\"; // 从正确的文件导入\r\nimport { offlineService } from \"../services/offlineService\"; // 从正确的文件导入\r\nimport OfflineIndicator from \"../components/OfflineIndicator\";\r\nimport AV from \"leancloud-storage\";\r\nimport CacheManagementTab from '../components/CacheManagementTab';\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport ReviewReminderSection from \"../components/ReviewReminderSection\";\r\nimport CalendarTooltip from \"../components/CalendarTooltip\";\r\nimport \"./HomePage.css\";\r\nimport Documents from \"../components/Documents\";\r\nimport CommunityPage from \"../components/community/CommunityPage\";\r\n\r\n// 创建 React Query 客户端\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      staleTime: 5 * 60 * 1000, // 5分钟\r\n      cacheTime: 10 * 60 * 1000, // 10分钟\r\n      retry: 1,\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nconst HomePage = () => {\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [syncing, setSyncing] = useState(false);\r\n  const [syncMessage, setSyncMessage] = useState(\"\");\r\n  const [activeTab, setActiveTab] = useState(\"categories\");\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date());\r\n  const [showAddCategory, setShowAddCategory] = useState(false);\r\n  const [newCategoryName, setNewCategoryName] = useState(\"\");\r\n  const [newCategoryDescription, setNewCategoryDescription] = useState(\"\");\r\n  const [addingCategory, setAddingCategory] = useState(false);\r\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n  const [categoryToDelete, setCategoryToDelete] = useState(null);\r\n  const [deletingCategory, setDeletingCategory] = useState(false);\r\n\r\n  // 复习提醒相关状态\r\n  const [reviewThreshold, setReviewThreshold] = useState(7); // 默认7天\r\n  const [reviewQuestions, setReviewQuestions] = useState([]);\r\n  const [showReviewSettings, setShowReviewSettings] = useState(false);\r\n\r\n  // 用户状态\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  // 日历hover相关状态\r\n  const [hoveredDay, setHoveredDay] = useState(null);\r\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\r\n  const [tooltipVisible, setTooltipVisible] = useState(false);\r\n  const calendarRef = useRef(null);\r\n\r\n  // 新增离线相关状态\r\n  const [isOnline, setIsOnline] = useState(true);\r\n  const [cacheStatus, setCacheStatus] = useState({});\r\n  const [offlineQuestions, setOfflineQuestions] = useState([]);\r\n  const [showOfflineMode, setShowOfflineMode] = useState(false);\r\n  const [swStatus, setSwStatus] = useState({\r\n    supported: false,\r\n    activated: false,\r\n    error: null,\r\n  });\r\n\r\n  // 添加状态\r\n  const [cacheSettings, setCacheSettings] = useState({\r\n    cacheLimit: cacheService.getCacheLimit(), // 从服务获取当前限制\r\n    autoCache: true,\r\n  });\r\n\r\n\r\n\r\n  \r\n\r\n  // 新增：缓存管理函数\r\n  // 修改预缓存函数\r\n  const preCacheQuestions = useCallback(async () => {\r\n    if (!currentUser) return;\r\n\r\n    try {\r\n      console.log(\"🔄 通过 Service Worker 缓存题目...\");\r\n      setSyncing(true);\r\n\r\n      // 设置缓存限制\r\n      cacheService.setCacheLimit(cacheSettings.cacheLimit);\r\n\r\n      const success = await cacheService.cacheQuestions(questions);\r\n\r\n      if (success) {\r\n        // 更新缓存状态\r\n        const status = await cacheService.getCacheStatus();\r\n        setCacheStatus(status);\r\n        setTimeout(() => setSyncMessage(\"\"), 3000);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"预缓存失败:\", error);\r\n      setSyncMessage(\"缓存失败: \" + error.message);\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  }, [currentUser, questions, cacheSettings.cacheLimit]);\r\n\r\n  // 添加缓存设置对话框\r\n  const [showCacheSettings, setShowCacheSettings] = useState(false);\r\n\r\n  \r\n  // 缓存设置组件\r\n  const CacheSettingsModal = () => (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h3>📦 离线缓存设置</h3>\r\n          <button\r\n            className=\"close-btn\"\r\n            onClick={() => setShowCacheSettings(false)}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"cache-settings-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"cacheLimit\">\r\n              缓存题目数量: {cacheSettings.cacheLimit} 题\r\n            </label>\r\n            <input\r\n              id=\"cacheLimit\"\r\n              type=\"range\"\r\n              min=\"10\"\r\n              max=\"100\"\r\n              step=\"10\"\r\n              value={cacheSettings.cacheLimit}\r\n              onChange={(e) =>\r\n                setCacheSettings((prev) => ({\r\n                  ...prev,\r\n                  cacheLimit: parseInt(e.target.value),\r\n                }))\r\n              }\r\n              className=\"cache-limit-slider\"\r\n            />\r\n            <div className=\"range-labels\">\r\n              <span>10题</span>\r\n              <span>100题</span>\r\n            </div>\r\n            <div className=\"cache-hint\">\r\n              当前配置: 最多缓存 {cacheSettings.cacheLimit} 道题目供离线使用\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-actions\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"cancel-btn\"\r\n              onClick={() => setShowCacheSettings(false)}\r\n            >\r\n              取消\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"submit-btn\"\r\n              onClick={() => {\r\n                cacheService.setCacheLimit(cacheSettings.cacheLimit);\r\n                setShowCacheSettings(false);\r\n               \r\n                setTimeout(() => setSyncMessage(\"\"), 3000);\r\n              }}\r\n            >\r\n              保存设置\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // 新增：加载离线数据\r\n  const loadOfflineData = useCallback(async () => {\r\n    try {\r\n      const cacheData = await cacheService.getCachedQuestions();\r\n      setOfflineQuestions(cacheData.questions);\r\n      setShowOfflineMode(true);\r\n\r\n      console.log(\"📦 加载离线数据:\", cacheData.questions.length);\r\n    } catch (error) {\r\n      console.error(\"加载离线数据失败:\", error);\r\n    }\r\n  }, []);\r\n\r\n  // 新增：手动缓存功能\r\n  const handleManualCache = useCallback(async () => {\r\n    setSyncing(true);\r\n    setSyncMessage(\"正在缓存题目数据...\");\r\n\r\n    try {\r\n      await preCacheQuestions();\r\n      setCacheStatus(cacheService.getCacheStatus());\r\n    } catch (error) {\r\n      setSyncMessage(\"缓存失败: \" + error.message);\r\n    } finally {\r\n      setSyncing(false);\r\n    }\r\n  }, [preCacheQuestions]);\r\n\r\n  // 新增：网络状态监听\r\n  useEffect(() => {\r\n    const handleOnline = () => {\r\n      setIsOnline(true);\r\n      setShowOfflineMode(false);\r\n    };\r\n\r\n    const handleOffline = () => {\r\n      setIsOnline(false);\r\n      if (cacheService.getCacheStatus().hasCache) {\r\n        loadOfflineData();\r\n      }\r\n    };\r\n\r\n    offlineService.addEventListener(\"online\", handleOnline);\r\n    offlineService.addEventListener(\"offline\", handleOffline);\r\n\r\n    // 初始状态\r\n    setIsOnline(offlineService.isOnlineMode());\r\n    setCacheStatus(cacheService.getCacheStatus());\r\n\r\n    return () => {\r\n      offlineService.removeEventListener(\"online\", handleOnline);\r\n      offlineService.removeEventListener(\"offline\", handleOffline);\r\n    };\r\n  }, [loadOfflineData]);\r\n\r\n  // 在 HomePage.jsx 的 useEffect 中添加\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n\r\n    if (user) {\r\n      // 检查是否应该使用离线模式\r\n      if (offlineService.shouldUseOfflineData()) {\r\n        console.log(\"🚀 启动离线模式\");\r\n        setShowOfflineMode(true);\r\n        loadOfflineData();\r\n        setLoading(false);\r\n      } else {\r\n        initializeData();\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // 新增：Service Worker 事件监听\r\n  useEffect(() => {\r\n    if (!cacheService.isSupported) return;\r\n\r\n    const handleCacheUpdated = (event) => {\r\n      const { count, timestamp } = event.detail;\r\n      setSyncMessage(``);\r\n      setCacheStatus((prev) => ({ ...prev, hasCache: true, count }));\r\n    };\r\n\r\n    const handleSwActivated = (event) => {\r\n      setSwStatus((prev) => ({\r\n        ...prev,\r\n        activated: true,\r\n        version: event.detail.version,\r\n      }));\r\n      console.log(\"🚀 Service Worker 已激活:\", event.detail.version);\r\n    };\r\n\r\n    cacheService.addEventListener(\"cacheUpdated\", handleCacheUpdated);\r\n    cacheService.addEventListener(\"swActivated\", handleSwActivated);\r\n\r\n    // 初始 Service Worker 状态\r\n    setSwStatus((prev) => ({\r\n      ...prev,\r\n      supported: cacheService.isSupported,\r\n    }));\r\n\r\n    return () => {\r\n      cacheService.removeEventListener(\"cacheUpdated\", handleCacheUpdated);\r\n      cacheService.removeEventListener(\"swActivated\", handleSwActivated);\r\n    };\r\n  }, []);\r\n\r\n  // 新增：用户登录后自动缓存\r\n  useEffect(() => {\r\n    if (currentUser && questions.length > 0) {\r\n      // 延迟缓存，避免影响主要功能\r\n      const timer = setTimeout(() => {\r\n        preCacheQuestions();\r\n      }, 3000);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [currentUser, questions, preCacheQuestions]);\r\n\r\n  const handleManualRefresh = useCallback(async () => {\r\n    console.log(\"🔄 手动刷新数据...\");\r\n    setSyncMessage(\"刷新数据中...\");\r\n\r\n    try {\r\n      // 清除所有缓存\r\n      clearAllCache();\r\n      clearCategoryCache();\r\n\r\n      // 重新加载数据\r\n      await initializeData();\r\n\r\n      setSyncMessage(\"数据刷新成功！\");\r\n      setTimeout(() => setSyncMessage(\"\"), 3000);\r\n    } catch (error) {\r\n      console.error(\"刷新数据失败:\", error);\r\n      setSyncMessage(\"刷新失败: \" + error.message);\r\n      setTimeout(() => setSyncMessage(\"\"), 5000);\r\n    }\r\n  }, []);\r\n\r\n  // 添加题目后自动刷新数据\r\n  useEffect(() => {\r\n    const handleQuestionCreated = () => {\r\n      console.log(\"📝 检测到题目创建，自动刷新数据...\");\r\n      setTimeout(() => {\r\n        handleManualRefresh();\r\n      }, 1000);\r\n    };\r\n\r\n    // 监听题目创建事件\r\n    window.addEventListener(\"questionCreated\", handleQuestionCreated);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"questionCreated\", handleQuestionCreated);\r\n    };\r\n  }, [handleManualRefresh]);\r\n\r\n  // 检查用户登录状态\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n\r\n    if (user) {\r\n      initializeData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // 处理添加分类\r\n  const handleAddCategory = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!currentUser) {\r\n      alert(\"请先登录\");\r\n      return;\r\n    }\r\n\r\n    if (!newCategoryName.trim()) {\r\n      alert(\"请输入分类名称\");\r\n      return;\r\n    }\r\n\r\n    setAddingCategory(true);\r\n    try {\r\n      const newCategory = await createCategory({\r\n        name: newCategoryName.trim(),\r\n        description: newCategoryDescription.trim() || undefined,\r\n      });\r\n\r\n      // 添加新分类到列表\r\n      setCategories((prev) => [newCategory, ...prev]);\r\n\r\n      // 重置表单\r\n      setNewCategoryName(\"\");\r\n      setNewCategoryDescription(\"\");\r\n      setShowAddCategory(false);\r\n\r\n      // 显示成功消息\r\n      setSyncMessage(`分类 \"${newCategory.name}\" 创建成功！`);\r\n      setTimeout(() => setSyncMessage(\"\"), 3000);\r\n    } catch (error) {\r\n      console.error(\"创建分类失败:\", error);\r\n      setSyncMessage(\"创建分类失败: \" + (error.message || \"请检查网络连接\"));\r\n    } finally {\r\n      setAddingCategory(false);\r\n    }\r\n  };\r\n\r\n  // 处理删除分类确认\r\n  const handleDeleteClick = useCallback((category, e) => {\r\n    e.stopPropagation(); // 阻止事件冒泡，避免触发分类卡片点击\r\n    setCategoryToDelete(category);\r\n    setShowDeleteConfirm(true);\r\n  }, []);\r\n\r\n  // 确认删除分类\r\n  const handleConfirmDelete = async () => {\r\n    if (!categoryToDelete) return;\r\n\r\n    setDeletingCategory(true);\r\n    try {\r\n      await deleteCategory(categoryToDelete.id);\r\n\r\n      // 从列表中移除分类\r\n      setCategories((prev) =>\r\n        prev.filter((cat) => cat.id !== categoryToDelete.id)\r\n      );\r\n\r\n      // 关闭确认对话框\r\n      setShowDeleteConfirm(false);\r\n      setCategoryToDelete(null);\r\n\r\n      // 显示成功消息\r\n      setSyncMessage(`分类 \"${categoryToDelete.name}\" 删除成功！`);\r\n      setTimeout(() => setSyncMessage(\"\"), 3000);\r\n    } catch (error) {\r\n      console.error(\"删除分类失败:\", error);\r\n      setSyncMessage(\"删除分类失败: \" + (error.message || \"请检查网络连接\"));\r\n    } finally {\r\n      setDeletingCategory(false);\r\n    }\r\n  };\r\n\r\n  // 取消删除\r\n  const handleCancelDelete = useCallback(() => {\r\n    setShowDeleteConfirm(false);\r\n    setCategoryToDelete(null);\r\n  }, []);\r\n\r\n  const reloadData = async () => {\r\n    try {\r\n      const categoriesData = await getCategories({\r\n        page: 1,\r\n        pageSize: 50,\r\n        sortBy: QueryOptions.SORT_BY_UPDATED_AT,\r\n        sortOrder: \"desc\",\r\n      });\r\n      setCategories(categoriesData.data);\r\n\r\n      const questionsData = await getAllQuestions();\r\n      setQuestions(questionsData);\r\n    } catch (err) {\r\n      console.error(\"重新加载数据失败:\", err);\r\n    }\r\n  };\r\n\r\n  // 更新题目复习时间 - 修复版本\r\n  const handleUpdateQuestionTime = async (questionId) => {\r\n    try {\r\n      console.log(\"更新题目复习时间:\", questionId);\r\n\r\n      const question = questions.find((q) => q.id === questionId);\r\n      if (!question) {\r\n        throw new Error(\"未找到对应的题目\");\r\n      }\r\n\r\n      const currentTime = new Date();\r\n\r\n      // 只更新自定义字段，不要更新 reserved fields\r\n      await updateQuestion(questionId, {\r\n        lastReviewedAt: currentTime, // 只更新自定义的复习时间字段\r\n      });\r\n\r\n      console.log(\"LeanCloud 更新成功，开始更新本地状态\");\r\n\r\n      // 更新本地状态中的题目更新时间\r\n      setQuestions((prev) =>\r\n        prev.map((q) =>\r\n          q.id === questionId\r\n            ? {\r\n                ...q,\r\n                // updatedAt 由 LeanCloud 自动更新，我们只更新 lastReviewedAt\r\n                lastReviewedAt: currentTime.toISOString(),\r\n              }\r\n            : q\r\n        )\r\n      );\r\n\r\n      console.log(`题目 ${questionId} 复习时间已更新`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"更新题目时间失败:\", error);\r\n      console.error(\"错误详情:\", {\r\n        questionId,\r\n        errorMessage: error.message,\r\n        errorStack: error.stack,\r\n      });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleGlobalError = (event) => {\r\n      if (\r\n        event.error &&\r\n        (event.error.message.includes(\"network\") ||\r\n          event.error.message.includes(\"offline\") ||\r\n          event.error.message.includes(\"CORS\") ||\r\n          event.error.message.includes(\"LeanCloud\"))\r\n      ) {\r\n        console.log(\"🌐 捕获到网络错误，切换到离线模式\");\r\n        setShowOfflineMode(true);\r\n        event.preventDefault();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"error\", handleGlobalError);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"error\", handleGlobalError);\r\n    };\r\n  }, []);\r\n\r\n  // 计算需要复习的题目 - 修复版本\r\n  useEffect(() => {\r\n    const calculateReviewQuestions = () => {\r\n      const now = new Date();\r\n      const thresholdMs = reviewThreshold * 24 * 60 * 60 * 1000; // 转换为毫秒\r\n\r\n      const needReview = questions\r\n        .filter((question) => {\r\n          // 使用 lastReviewedAt 字段，如果不存在则使用 createdAt\r\n          const lastReviewed = new Date(\r\n            question.lastReviewedAt || question.createdAt\r\n          );\r\n          const timeDiff = now - lastReviewed;\r\n          return timeDiff >= thresholdMs;\r\n        })\r\n        .sort((a, b) => {\r\n          // 按复习时间正序排列，最久未复习的排在最前面\r\n          const timeA = new Date(a.lastReviewedAt || a.createdAt);\r\n          const timeB = new Date(b.lastReviewedAt || b.createdAt);\r\n          return timeA - timeB;\r\n        });\r\n\r\n      setReviewQuestions(needReview);\r\n    };\r\n\r\n    if (questions.length > 0) {\r\n      calculateReviewQuestions();\r\n    }\r\n  }, [questions, reviewThreshold]);\r\n\r\n  const handleChatboxNavigate = (target) => {\r\n    console.log(\"导航到:\", target);\r\n    switch (target) {\r\n      case \"categories\":\r\n        setActiveTab(\"categories\");\r\n        break;\r\n      case \"review\":\r\n        setActiveTab(\"review\");\r\n        break;\r\n      case \"stats\":\r\n        setActiveTab(\"stats\");\r\n        break;\r\n      case \"calendar\":\r\n        setActiveTab(\"calendar\");\r\n        break;\r\n      case \"community\":\r\n        setActiveTab(\"community\");\r\n        break;\r\n      case \"documents\":\r\n        setActiveTab(\"documents\");\r\n        break;\r\n      case \"createCategory\":\r\n        setShowAddCategory(true);\r\n        break;\r\n      case \"cacheQuestions\":\r\n        handleManualCache();\r\n        break;\r\n      case \"offlineMode\":\r\n        navigate(\"/offline/questions\");\r\n        break;\r\n      default:\r\n        setActiveTab(\"categories\");\r\n    }\r\n\r\n    // 滚动到顶部\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  // 优化后的 initializeData 函数\r\n  const initializeData = async () => {\r\n    try {\r\n      // 在离线模式下不初始化 LeanCloud\r\n      if (!offlineService.shouldUseOfflineData()) {\r\n        initAV();\r\n      }\r\n\r\n      console.log(\"🔄 开始加载数据...\");\r\n\r\n      // 根据网络状态决定是否使用缓存\r\n      const [categoriesData, questionsData] = await Promise.all([\r\n        getCategories({\r\n          page: 1,\r\n          pageSize: 50,\r\n          sortBy: QueryOptions.SORT_BY_UPDATED_AT,\r\n          sortOrder: \"desc\",\r\n        }),\r\n        getAllQuestions(false),\r\n      ]);\r\n\r\n      console.log(\"✅ 数据加载完成:\", {\r\n        分类数据: categoriesData.data.length,\r\n        题目数据: questionsData.length,\r\n        模式: offlineService.shouldUseOfflineData() ? \"离线\" : \"在线\",\r\n      });\r\n\r\n      setCategories(categoriesData.data);\r\n      setQuestions(questionsData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(\"❌ 初始化数据失败:\", err);\r\n\r\n      // 如果是网络错误，尝试使用完全离线模式\r\n      if (err.message.includes(\"offline\") || err.message.includes(\"network\")) {\r\n        console.log(\"🌐 网络错误，切换到完全离线模式\");\r\n        setShowOfflineMode(true);\r\n\r\n        // 尝试加载离线数据\r\n        try {\r\n          const cacheData = await cacheService.getCachedQuestions();\r\n          setOfflineQuestions(cacheData.questions);\r\n\r\n          // 设置空的分类和题目数据\r\n          setCategories([]);\r\n          setQuestions([]);\r\n          setLoading(false);\r\n          return;\r\n        } catch (cacheError) {\r\n          console.error(\"加载离线数据也失败:\", cacheError);\r\n        }\r\n      }\r\n\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 使用 useMemo 优化计算密集型操作\r\n  const filteredCategories = useMemo(() => {\r\n    return categories.filter((category) =>\r\n      category.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n  }, [categories, searchTerm]);\r\n\r\n  // 计算准确的分类题目数量统计 - 完全基于 questions 数据\r\n  const categoryStats = useMemo(() => {\r\n    if (!categories.length) {\r\n      return {\r\n        totalCategories: 0,\r\n        totalQuestions: 0,\r\n        categoriesWithQuestions: 0,\r\n      };\r\n    }\r\n\r\n    const totalQuestionsFromCategories = categories.reduce(\r\n      (sum, cat) => sum + (cat.questionCount || 0),\r\n      0\r\n    );\r\n    const categoriesWithQuestions = categories.filter(\r\n      (cat) => (cat.questionCount || 0) > 0\r\n    ).length;\r\n\r\n    // 详细的调试信息\r\n    console.log(\"🔍 详细统计信息:\", {\r\n      分类总数: categories.length,\r\n      基于分类的题目总数: totalQuestionsFromCategories,\r\n      基于所有题目的题目总数: questions.length,\r\n      差异: Math.abs(totalQuestionsFromCategories - questions.length),\r\n      有题目的分类数: categoriesWithQuestions,\r\n      对象: questions,\r\n      各分类详情: categories.map((cat) => ({\r\n        分类名称: cat.name,\r\n        服务层题目数: cat.questionCount,\r\n        前端计算题目数: questions.filter((q) => q.category?.id === cat.id)\r\n          .length,\r\n        是否匹配:\r\n          cat.questionCount ===\r\n          questions.filter((q) => q.category?.id === cat.id).length,\r\n      })),\r\n    });\r\n\r\n    return {\r\n      totalCategories: categories.length,\r\n      totalQuestions: totalQuestionsFromCategories,\r\n      categoriesWithQuestions: categoriesWithQuestions,\r\n    };\r\n  }, [categories, questions]);\r\n\r\n  // 获取某一天的题目详情\r\n  const getDayQuestions = useCallback(\r\n    (date) => {\r\n      const dateStr = date.toISOString().split(\"T\")[0];\r\n\r\n      const dayQuestions = questions.filter((question) => {\r\n        const questionDate = new Date(question.createdAt);\r\n        const questionDateStr = questionDate.toISOString().split(\"T\")[0];\r\n        return questionDateStr === dateStr;\r\n      });\r\n\r\n      // 按创建时间排序\r\n      return dayQuestions.sort(\r\n        (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\r\n      );\r\n    },\r\n    [questions]\r\n  );\r\n\r\n  // 获取固定颜色\r\n  const getDayColor = useCallback((count) => {\r\n    if (count === 0) return \"#f8f9fa\"; // 无题目 - 浅灰色\r\n    if (count <= 1) return \"#4CAF50\"; // 1题 - 深绿色\r\n    if (count <= 3) return \"#8BC34A\"; // 2-3题 - 浅绿色\r\n    if (count <= 5) return \"#FFC107\"; // 4-5题 - 黄色\r\n    if (count <= 8) return \"#FF9800\"; // 6-8题 - 橙色\r\n    return \"#F44336\"; // 9题以上 - 红色\r\n  }, []);\r\n\r\n  // 生成月度日历数据 - 使用 useMemo 优化\r\n  const getMonthlyCalendarData = useCallback(() => {\r\n    const monthStart = new Date(\r\n      selectedMonth.getFullYear(),\r\n      selectedMonth.getMonth(),\r\n      1\r\n    );\r\n    const monthEnd = new Date(\r\n      selectedMonth.getFullYear(),\r\n      selectedMonth.getMonth() + 1,\r\n      0\r\n    );\r\n\r\n    const dateCounts = {};\r\n    questions.forEach((question) => {\r\n      const questionDate = new Date(question.createdAt);\r\n      if (questionDate >= monthStart && questionDate <= monthEnd) {\r\n        const dateStr = questionDate.toISOString().split(\"T\")[0];\r\n        dateCounts[dateStr] = (dateCounts[dateStr] || 0) + 1;\r\n      }\r\n    });\r\n\r\n    const calendarData = [];\r\n    const currentDate = new Date(monthStart);\r\n\r\n    while (currentDate <= monthEnd) {\r\n      const dateStr = currentDate.toISOString().split(\"T\")[0];\r\n      const dayQuestions = getDayQuestions(currentDate);\r\n      const questionCount = dayQuestions.length;\r\n\r\n      calendarData.push({\r\n        date: new Date(currentDate),\r\n        count: questionCount,\r\n        day: currentDate.getDate(),\r\n        isToday: dateStr === new Date().toISOString().split(\"T\")[0],\r\n        questions: dayQuestions,\r\n        color: getDayColor(questionCount),\r\n      });\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    return calendarData;\r\n  }, [selectedMonth, questions, getDayQuestions, getDayColor]);\r\n\r\n  // 处理日历日期的鼠标悬停\r\n  const handleDayMouseEnter = useCallback((dayData, event) => {\r\n    setHoveredDay(dayData);\r\n    setTooltipVisible(true);\r\n\r\n    // 计算相对于日历容器的位置\r\n    if (calendarRef.current) {\r\n      const calendarRect = calendarRef.current.getBoundingClientRect();\r\n      const dayRect = event.currentTarget.getBoundingClientRect();\r\n\r\n      setTooltipPosition({\r\n        x: dayRect.left + dayRect.width / 2 - calendarRect.left,\r\n        y: dayRect.top - calendarRect.top - 10,\r\n      });\r\n    }\r\n\r\n    setTooltipVisible(true);\r\n  }, []);\r\n\r\n  const handleDayMouseLeave = useCallback(() => {\r\n    // 延迟隐藏，给用户时间移动到提示框\r\n    setTimeout(() => {\r\n      if (!document.querySelector(\".calendar-tooltip:hover\")) {\r\n        setTooltipVisible(false);\r\n      }\r\n    }, 100);\r\n  }, []);\r\n\r\n  const handleTooltipClose = useCallback(() => {\r\n    setTooltipVisible(false);\r\n    setHoveredDay(null);\r\n  }, []);\r\n\r\n  // 月份导航\r\n  const navigateMonth = useCallback(\r\n    (direction) => {\r\n      const newDate = new Date(selectedMonth);\r\n      if (direction === \"prev\") {\r\n        newDate.setMonth(newDate.getMonth() - 1);\r\n      } else {\r\n        newDate.setMonth(newDate.getMonth() + 1);\r\n      }\r\n      setSelectedMonth(newDate);\r\n    },\r\n    [selectedMonth]\r\n  );\r\n\r\n  // 获取月份统计 - 使用 useMemo 优化\r\n  const getMonthStats = useCallback(() => {\r\n    const monthData = getMonthlyCalendarData();\r\n    const daysWithQuestions = monthData.filter((day) => day.count > 0).length;\r\n    const totalQuestions = monthData.reduce((sum, day) => sum + day.count, 0);\r\n    const maxDaily = Math.max(...monthData.map((day) => day.count));\r\n\r\n    return { daysWithQuestions, totalQuestions, maxDaily };\r\n  }, [getMonthlyCalendarData]);\r\n\r\n  const getCategoryChartData = useCallback(() => {\r\n    const categoryMap = {};\r\n\r\n    questions.forEach((question) => {\r\n      const categoryName = question.category?.name || \"未分类\";\r\n      categoryMap[categoryName] = (categoryMap[categoryName] || 0) + 1;\r\n    });\r\n\r\n    return Object.entries(categoryMap)\r\n      .map(([name, count]) => ({\r\n        name: name.length > 8 ? name.substring(0, 8) + \"...\" : name,\r\n        fullName: name,\r\n        value: count,\r\n        percentage: ((count / questions.length) * 100).toFixed(1),\r\n      }))\r\n      .sort((a, b) => b.value - a.value);\r\n  }, [questions]);\r\n\r\n  const getDifficultyData = useCallback(() => {\r\n    const difficultyMap = {};\r\n\r\n    questions.forEach((question) => {\r\n      const difficulty = question.difficulty || \"unknown\";\r\n      difficultyMap[difficulty] = (difficultyMap[difficulty] || 0) + 1;\r\n    });\r\n\r\n    return Object.entries(difficultyMap).map(([name, count]) => ({\r\n      name: getDifficultyText(name),\r\n      value: count,\r\n      color: getDifficultyColor(name),\r\n    }));\r\n  }, [questions]);\r\n\r\n  const getDifficultyColor = useCallback((difficulty) => {\r\n    switch (difficulty) {\r\n      case \"easy\":\r\n        return \"#52c41a\";\r\n      case \"medium\":\r\n        return \"#faad14\";\r\n      case \"hard\":\r\n        return \"#f5222d\";\r\n      default:\r\n        return \"#666\";\r\n    }\r\n  }, []);\r\n\r\n  const getDifficultyText = useCallback((difficulty) => {\r\n    switch (difficulty) {\r\n      case \"easy\":\r\n        return \"简单\";\r\n      case \"medium\":\r\n        return \"中等\";\r\n      case \"hard\":\r\n        return \"困难\";\r\n      default:\r\n        return \"未知\";\r\n    }\r\n  }, []);\r\n\r\n  const getActiveDays = useCallback(() => {\r\n    const uniqueDays = new Set(\r\n      questions.map((q) => new Date(q.createdAt).toDateString())\r\n    );\r\n    return uniqueDays.size;\r\n  }, [questions]);\r\n\r\n  const handleCategoryClick = useCallback(\r\n    (categoryId) => {\r\n      // 在离线模式下，阻止跳转到分类页面\r\n      if (offlineService.shouldUseOfflineData()) {\r\n        alert(\"离线模式下无法查看分类详情，请连接网络后重试\");\r\n        return;\r\n      }\r\n      navigate(`/category/${categoryId}`);\r\n    },\r\n    [navigate]\r\n  );\r\n\r\n  const handleQuestionClick = useCallback(\r\n    (questionId) => {\r\n      // 找到题目对应的分类并跳转\r\n      const question = questions.find((q) => q.id === questionId);\r\n      if (question && question.category) {\r\n        navigate(`/category/${question.category.id}`);\r\n      }\r\n    },\r\n    [questions, navigate]\r\n  );\r\n\r\n  // 新增：跳转到离线分类\r\n  const navigateToOfflineCategory = useCallback((category) => {\r\n    // 在离线模式下，显示提示信息\r\n    alert(\r\n      `离线模式：查看 ${category.name} 分类的 ${category.questions.length} 道题目\\n\\n请连接网络后查看完整功能`\r\n    );\r\n  }, []);\r\n\r\n  const formatTime = useCallback((date) => {\r\n    if (!date) return \"暂无\";\r\n    const now = new Date();\r\n    const diffMs = now - new Date(date);\r\n    const diffMins = Math.floor(diffMs / 60000);\r\n    const diffHours = Math.floor(diffMs / 3600000);\r\n    const diffDays = Math.floor(diffMs / 86400000);\r\n\r\n    if (diffMins < 60) return `${diffMins}分钟前`;\r\n    if (diffHours < 24) return `${diffHours}小时前`;\r\n    if (diffDays < 30) return `${diffDays}天前`;\r\n    return new Date(date).toLocaleDateString();\r\n  }, []);\r\n\r\n  const getProgressWidth = useCallback(\r\n    (count) => {\r\n      if (!categories.length) return 0;\r\n      const maxCount = Math.max(...categories.map((c) => c.questionCount || 0));\r\n      return maxCount > 0 ? (count / maxCount) * 100 : 0;\r\n    },\r\n    [categories]\r\n  );\r\n\r\n  const defaultColors = [\r\n    \"#ff6b6b\",\r\n    \"#4ecdc4\",\r\n    \"#45b7d1\",\r\n    \"#96ceb4\",\r\n    \"#feca57\",\r\n    \"#ff9ff3\",\r\n    \"#54a0ff\",\r\n    \"#5f27cd\",\r\n    \"#00d2d3\",\r\n    \"#ff9f43\",\r\n  ];\r\n\r\n  // 使用 useMemo 缓存计算结果\r\n  const chartData = useMemo(\r\n    () => getCategoryChartData(),\r\n    [getCategoryChartData]\r\n  );\r\n  const difficultyData = useMemo(\r\n    () => getDifficultyData(),\r\n    [getDifficultyData]\r\n  );\r\n  const calendarData = useMemo(\r\n    () => getMonthlyCalendarData(),\r\n    [getMonthlyCalendarData]\r\n  );\r\n  const activeDays = useMemo(() => getActiveDays(), [getActiveDays]);\r\n  const monthStats = useMemo(() => getMonthStats(), [getMonthStats]);\r\n\r\n  const monthName = useMemo(\r\n    () =>\r\n      selectedMonth.toLocaleDateString(\"zh-CN\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n      }),\r\n    [selectedMonth]\r\n  );\r\n\r\n  // 新增：离线模式下的分类浏览\r\n  const renderOfflineCategories = useCallback(() => {\r\n    // 从离线题目中提取分类信息\r\n    const categoryMap = {};\r\n    offlineQuestions.forEach((question) => {\r\n      const categoryName = question.category?.name || \"未分类\";\r\n      if (!categoryMap[categoryName]) {\r\n        categoryMap[categoryName] = {\r\n          name: categoryName,\r\n          questions: [],\r\n          questionCount: 0,\r\n          id: `offline-${categoryName}`, // 生成离线分类ID\r\n        };\r\n      }\r\n      categoryMap[categoryName].questions.push(question);\r\n      categoryMap[categoryName].questionCount++;\r\n    });\r\n\r\n    const offlineCategories = Object.values(categoryMap);\r\n\r\n    return (\r\n      <section className=\"categories-section\">\r\n        <div className=\"container\">\r\n          <div className=\"offline-header\">\r\n            <h3 style={{ color: \"#666666\" }}>📦 离线模式</h3>\r\n            <p style={{ color: \"#666666\" }}>\r\n              当前处于离线状态，显示缓存的题目数据\r\n            </p>\r\n\r\n            <div className=\"cache-stats\" style={{ color: \"#666666\" }}>\r\n              已缓存 {offlineQuestions.length} 道题目，\r\n              {offlineCategories.length} 个分类\r\n            </div>\r\n\r\n            {/* 全局离线操作 */}\r\n            <div className=\"offline-global-actions\">\r\n              <button\r\n                onClick={() => navigate(\"/offline/questions\")}\r\n                className=\"view-all-offline-btn\"\r\n                style={{ color: \"#333333\" }}\r\n              >\r\n                📚 查看所有离线题目 ({offlineQuestions.length})\r\n              </button>\r\n              <button\r\n                onClick={() => window.location.reload()}\r\n                className=\"refresh-network-btn\"\r\n                style={{ color: \"#333333\" }}\r\n              >\r\n                🔄 检查网络连接\r\n              </button>\r\n            </div>\r\n\r\n            <div\r\n              className=\"cache-progress-fill\"\r\n              style={{\r\n                width: `${\r\n                  (offlineQuestions.length / cacheService.getCacheLimit()) * 100\r\n                }%`,\r\n              }}\r\n            ></div>\r\n          </div>\r\n\r\n          <div className=\"categories-grid\">\r\n            {offlineCategories.map((category, index) => {\r\n              const color = defaultColors[index % defaultColors.length];\r\n\r\n              return (\r\n                <div\r\n                  key={category.id}\r\n                  className=\"category-card offline-card\"\r\n                  onClick={() => navigateToOfflineCategory(category)}\r\n                  style={{ \"--accent-color\": color }}\r\n                >\r\n                  <div className=\"card-header\">\r\n                    <div\r\n                      className=\"category-icon\"\r\n                      style={{ backgroundColor: color }}\r\n                    >\r\n                      {category.name.charAt(0)}\r\n                    </div>\r\n                    <div className=\"category-info\">\r\n                      <h3 className=\"category-name\">{category.name}</h3>\r\n                      <span className=\"question-count\">\r\n                        {category.questionCount}题\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"offline-badge\">离线</div>\r\n                  </div>\r\n\r\n                  <div className=\"card-footer\">\r\n                    <div className=\"progress-info\">\r\n                      <div className=\"progress-stats\">\r\n                        <span>离线缓存数据</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <button className=\"explore-btn\">查看题目 →</button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }, [offlineQuestions, navigateToOfflineCategory, navigate]);\r\n\r\n  // 修改现有的渲染逻辑，在离线模式下显示缓存数据\r\n  const renderContent = () => {\r\n    if (showOfflineMode) {\r\n      return renderOfflineCategories();\r\n    }\r\n\r\n    // 原有的在线模式渲染逻辑\r\n    switch (activeTab) {\r\n      case \"categories\":\r\n        return renderCategoriesTab();\r\n      case \"review\":\r\n        return renderReviewTab();\r\n      case \"stats\":\r\n        return renderStatsTab();\r\n      case \"calendar\":\r\n        return renderCalendarTab();\r\n      case \"documents\":\r\n        return renderDocumentsTab();\r\n      case \"community\":\r\n        return renderCommunityTab();\r\n      case 'cache':\r\n        return (\r\n    <CacheManagementTab \r\n      questions={questions}\r\n      onCacheUpdate={setCacheStatus}\r\n      currentUser={currentUser}\r\n    />\r\n  );\r\n      default:\r\n        return renderCategoriesTab();\r\n    }\r\n  };\r\n\r\n  // 原有的标签页渲染函数\r\n  const renderCategoriesTab = () => (\r\n    <>\r\n      <section className=\"filters-section\">\r\n        <div className=\"container\">\r\n          <div className=\"filters\">\r\n            <div className=\"stats\">\r\n              找到 {filteredCategories.length} 个类别\r\n              {categories.length > 0 && ` • 总计 ${questions.length} 道题目`}\r\n            </div>\r\n            <button\r\n              className=\"add-category-btn\"\r\n              onClick={() => setShowAddCategory(true)}\r\n            >\r\n              <span className=\"btn-icon\">+</span>\r\n              新建分类\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* 添加分类弹窗 */}\r\n      {showAddCategory && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3>创建新分类</h3>\r\n              <button\r\n                className=\"close-btn\"\r\n                onClick={() => setShowAddCategory(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n\r\n            <form onSubmit={handleAddCategory} className=\"category-form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"categoryName\">分类名称 *</label>\r\n                <input\r\n                  id=\"categoryName\"\r\n                  type=\"text\"\r\n                  value={newCategoryName}\r\n                  onChange={(e) => setNewCategoryName(e.target.value)}\r\n                  placeholder=\"请输入分类名称\"\r\n                  maxLength={50}\r\n                  autoFocus\r\n                  style={{ color: \"black\" }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"categoryDescription\">分类描述</label>\r\n                <textarea\r\n                  id=\"categoryDescription\"\r\n                  value={newCategoryDescription}\r\n                  onChange={(e) => setNewCategoryDescription(e.target.value)}\r\n                  placeholder=\"请输入分类描述（可选）\"\r\n                  rows=\"3\"\r\n                  maxLength={200}\r\n                  style={{ color: \"black\" }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-actions\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"cancel-btn\"\r\n                  onClick={() => setShowAddCategory(false)}\r\n                >\r\n                  取消\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"submit-btn\"\r\n                  disabled={addingCategory || !newCategoryName.trim()}\r\n                >\r\n                  {addingCategory ? \"创建中...\" : \"创建分类\"}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 删除分类确认弹窗 */}\r\n      {showDeleteConfirm && categoryToDelete && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content delete-confirm-modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>确认删除</h3>\r\n              <button className=\"close-btn\" onClick={handleCancelDelete}>\r\n                ×\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"delete-content\">\r\n              <div className=\"delete-icon\">🗑️</div>\r\n              <div className=\"delete-message\">\r\n                <p>\r\n                  确定要删除分类 <strong>\"{categoryToDelete.name}\"</strong> 吗？\r\n                </p>\r\n                {categoryToDelete.questionCount > 0 && (\r\n                  <p className=\"warning-text\">\r\n                    ⚠️ 此分类包含 {categoryToDelete.questionCount}{\" \"}\r\n                    道题目，删除后这些题目将变为未分类状态！\r\n                  </p>\r\n                )}\r\n                <p className=\"delete-hint\">此操作不可撤销，请谨慎操作。</p>\r\n              </div>\r\n\r\n              <div className=\"delete-actions\">\r\n                <button\r\n                  className=\"cancel-delete-btn\"\r\n                  onClick={handleCancelDelete}\r\n                  disabled={deletingCategory}\r\n                >\r\n                  取消\r\n                </button>\r\n                <button\r\n                  className=\"confirm-delete-btn\"\r\n                  onClick={handleConfirmDelete}\r\n                  disabled={deletingCategory}\r\n                >\r\n                  {deletingCategory ? \"删除中...\" : \"确认删除\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <section className=\"categories-section\">\r\n        <div className=\"container\">\r\n          {filteredCategories.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              <div className=\"empty-icon\">📚</div>\r\n              <h3>暂无类别数据</h3>\r\n              <p>没有找到匹配的类别，尝试调整搜索条件或创建新分类</p>\r\n              <button\r\n                className=\"create-first-category-btn\"\r\n                onClick={() => setShowAddCategory(true)}\r\n              >\r\n                + 创建第一个分类\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"categories-grid\">\r\n              {filteredCategories.map((category, index) => {\r\n                const color = defaultColors[index % defaultColors.length];\r\n\r\n                // 基于 questions 计算该分类的实际题目数量\r\n                const actualQuestionCount = questions.filter(\r\n                  (q) => q.category?.id === category.id\r\n                ).length;\r\n\r\n                // 优先显示实际数量，如果没有则显示服务层数量\r\n                const displayCount =\r\n                  actualQuestionCount > 0\r\n                    ? actualQuestionCount\r\n                    : category.questionCount || 0;\r\n\r\n                return (\r\n                  <div\r\n                    key={category.id}\r\n                    className=\"category-card\"\r\n                    onClick={() => handleCategoryClick(category.id)}\r\n                    style={{ \"--accent-color\": color }}\r\n                  >\r\n                    <div className=\"card-header\">\r\n                      <div\r\n                        className=\"category-icon\"\r\n                        style={{ backgroundColor: color }}\r\n                      >\r\n                        {category.name.charAt(0)}\r\n                      </div>\r\n                      <div className=\"category-info\">\r\n                        <h3 className=\"category-name\">{category.name}</h3>\r\n                        {category.description && (\r\n                          <p className=\"category-description\">\r\n                            {category.description}\r\n                          </p>\r\n                        )}\r\n                        <span className=\"question-count\">{displayCount}题</span>\r\n                      </div>\r\n                      <button\r\n                        className=\"delete-category-btn\"\r\n                        onClick={(e) => handleDeleteClick(category, e)}\r\n                        title=\"删除分类\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"card-footer\">\r\n                      <div className=\"progress-info\">\r\n                        <div className=\"progress-stats\">\r\n                          <span>\r\n                            最近更新: {formatTime(category.updatedAt)}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"progress-bar\">\r\n                          <div\r\n                            className=\"progress-fill\"\r\n                            style={{\r\n                              width: `${getProgressWidth(\r\n                                category.questionCount\r\n                              )}%`,\r\n                              backgroundColor: color,\r\n                            }}\r\n                          ></div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <button className=\"explore-btn\">查看题目 →</button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n\r\n  const renderReviewTab = () => (\r\n    <ReviewReminderSection\r\n      reviewQuestions={reviewQuestions}\r\n      setReviewQuestions={setReviewQuestions}\r\n      reviewThreshold={reviewThreshold}\r\n      setReviewThreshold={setReviewThreshold}\r\n      showReviewSettings={showReviewSettings}\r\n      setShowReviewSettings={setShowReviewSettings}\r\n      onQuestionClick={handleQuestionClick}\r\n      onUpdateQuestionTime={handleUpdateQuestionTime}\r\n      questions={questions}\r\n    />\r\n  );\r\n\r\n  const renderStatsTab = () => (\r\n    <section className=\"stats-section\">\r\n      <div className=\"container\">\r\n        <div className=\"stats-overview\">\r\n          <div className=\"modern-stat-card primary\">\r\n            <div className=\"stat-icon\">📚</div>\r\n            <div className=\"stat-content\">\r\n              <div className=\"stat-number\">{categoryStats.totalCategories}</div>\r\n              <div className=\"stat-label\">总分类数</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modern-stat-card success\">\r\n            <div className=\"stat-icon\">❓</div>\r\n            <div className=\"stat-content\">\r\n              <div className=\"stat-number\">{questions.length}</div>\r\n              <div className=\"stat-label\">总题目数</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modern-stat-card warning\">\r\n            <div className=\"stat-icon\">📅</div>\r\n            <div className=\"stat-content\">\r\n              <div className=\"stat-number\">{activeDays}</div>\r\n              <div className=\"stat-label\">活跃天数</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modern-stat-card info\">\r\n            <div className=\"stat-icon\">⚡</div>\r\n            <div className=\"stat-content\">\r\n              <div className=\"stat-number\">\r\n                {categoryStats.totalQuestions > 0\r\n                  ? (categoryStats.totalQuestions / activeDays).toFixed(1)\r\n                  : 0}\r\n              </div>\r\n              <div className=\"stat-label\">日均题目</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"charts-grid\">\r\n          <div className=\"modern-chart-card\">\r\n            <div className=\"chart-header\">\r\n              <h3>📊 分类题目分布</h3>\r\n              <span className=\"chart-subtitle\">各分类题目数量占比</span>\r\n            </div>\r\n            <div className=\"chart-container\">\r\n              <ResponsiveContainer width=\"100%\" height={300}>\r\n                <PieChart>\r\n                  <Pie\r\n                    data={chartData}\r\n                    cx=\"50%\"\r\n                    cy=\"50%\"\r\n                    labelLine={false}\r\n                    label={({ name, percentage }) => `${name} ${percentage}%`}\r\n                    outerRadius={100}\r\n                    fill=\"#8884d8\"\r\n                    dataKey=\"value\"\r\n                  >\r\n                    {chartData.map((entry, index) => (\r\n                      <Cell\r\n                        key={`cell-${index}`}\r\n                        fill={defaultColors[index % defaultColors.length]}\r\n                      />\r\n                    ))}\r\n                  </Pie>\r\n                  <Tooltip formatter={(value, name) => [`${value} 题`, name]} />\r\n                  <Legend />\r\n                </PieChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"modern-chart-card\">\r\n            <div className=\"chart-header\">\r\n              <h3>🎯 难度分布</h3>\r\n              <span className=\"chart-subtitle\">题目难度等级统计</span>\r\n            </div>\r\n            <div className=\"chart-container\">\r\n              <ResponsiveContainer width=\"100%\" height={300}>\r\n                <BarChart data={difficultyData}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"name\" />\r\n                  <YAxis />\r\n                  <Tooltip formatter={(value) => [`${value} 题`, \"数量\"]} />\r\n                  <Bar dataKey=\"value\" name=\"题目数量\">\r\n                    {difficultyData.map((entry, index) => (\r\n                      <Cell key={`cell-${index}`} fill={entry.color} />\r\n                    ))}\r\n                  </Bar>\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n  const renderCalendarTab = () => (\r\n    <section className=\"modern-calendar-section\">\r\n      <div className=\"container\">\r\n        <div className=\"calendar-header\">\r\n          <h3>🗓️ 学习日历</h3>\r\n          <p>查看每月的学习活动分布</p>\r\n        </div>\r\n\r\n        <div className=\"modern-calendar-card\" ref={calendarRef}>\r\n          <div className=\"calendar-controls\">\r\n            <button\r\n              onClick={() => navigateMonth(\"prev\")}\r\n              className=\"month-nav-btn\"\r\n            >\r\n              ← 上个月\r\n            </button>\r\n            <h4 className=\"current-month\">{monthName}</h4>\r\n            <button\r\n              onClick={() => navigateMonth(\"next\")}\r\n              className=\"month-nav-btn\"\r\n            >\r\n              下个月 →\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"monthly-calendar\">\r\n            <div className=\"calendar-weekdays\">\r\n              {[\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"].map((day) => (\r\n                <div key={day} className=\"weekday\">\r\n                  {day}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"calendar-days\">\r\n              {calendarData.map((dayData, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`calendar-day ${\r\n                    dayData.count > 0 ? \"has-questions\" : \"\"\r\n                  } ${dayData.isToday ? \"today\" : \"\"}`}\r\n                  style={{ backgroundColor: dayData.color }}\r\n                  onMouseEnter={(e) => handleDayMouseEnter(dayData, e)}\r\n                  onMouseLeave={handleDayMouseLeave}\r\n                  data-count={dayData.count}\r\n                >\r\n                  <span className=\"day-number\">{dayData.day}</span>\r\n                  {dayData.count > 0 && (\r\n                    <div className=\"question-count-badge\">{dayData.count}</div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* 使用新的日历提示框组件 */}\r\n            <CalendarTooltip\r\n              dayData={hoveredDay}\r\n              position={tooltipPosition}\r\n              isVisible={tooltipVisible}\r\n              onClose={handleTooltipClose}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"calendar-stats\">\r\n            <div className=\"calendar-stat\">\r\n              <span className=\"stat-value\">{monthStats.totalQuestions}</span>\r\n              <span className=\"stat-label\">本月题目</span>\r\n            </div>\r\n            <div className=\"calendar-stat\">\r\n              <span className=\"stat-value\">{monthStats.daysWithQuestions}</span>\r\n              <span className=\"stat-label\">学习天数</span>\r\n            </div>\r\n            <div className=\"calendar-stat\">\r\n              <span className=\"stat-value\">{monthStats.maxDaily}</span>\r\n              <span className=\"stat-label\">单日最高</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"calendar-legend\">\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#f8f9fa\" }}\r\n              ></div>\r\n              <span>无题目</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#4CAF50\" }}\r\n              ></div>\r\n              <span>1题</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#8BC34A\" }}\r\n              ></div>\r\n              <span>2-3题</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#FFC107\" }}\r\n              ></div>\r\n              <span>4-5题</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#FF9800\" }}\r\n              ></div>\r\n              <span>6-8题</span>\r\n            </div>\r\n            <div className=\"legend-item\">\r\n              <div\r\n                className=\"legend-color\"\r\n                style={{ backgroundColor: \"#F44336\" }}\r\n              ></div>\r\n              <span>9题以上</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n  const renderDocumentsTab = () => (\r\n    <section className=\"documents-tab-section\">\r\n      <div className=\"container\">\r\n        <Documents />\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n  const renderCommunityTab = () => <CommunityPage />;\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <div className=\"auth-required-container\">\r\n          <div className=\"auth-required-icon\">🔐</div>\r\n          <h2>请先登录</h2>\r\n          <p>登录后即可查看和管理您的刷题数据</p>\r\n          <div className=\"auth-required-actions\">\r\n            <button\r\n              onClick={() => {\r\n                window.dispatchEvent(\r\n                  new CustomEvent(\"showAuthModal\", {\r\n                    detail: { tab: \"login\" },\r\n                  })\r\n                );\r\n              }}\r\n              className=\"login-btn primary\"\r\n            >\r\n              🚀 立即登录\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                window.dispatchEvent(\r\n                  new CustomEvent(\"showAuthModal\", {\r\n                    detail: { tab: \"register\" },\r\n                  })\r\n                );\r\n              }}\r\n              className=\"login-btn secondary\"\r\n            >\r\n              📝 注册账号\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"auth-features\">\r\n            <div className=\"feature-list\">\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">📚</span>\r\n                <span>管理您的刷题分类</span>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">📊</span>\r\n                <span>查看学习统计</span>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">🔄</span>\r\n                <span>使用复习提醒功能</span>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">🗓️</span>\r\n                <span>记录学习日历</span>\r\n              </div>\r\n              <div className=\"feature-item\">\r\n                <span className=\"feature-icon\">📦</span>\r\n                <span>离线缓存题目</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载知识库中...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <div className=\"error-container\">\r\n          <h2>加载失败</h2>\r\n          <p>{error}</p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            className=\"retry-btn\"\r\n          >\r\n            重试\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <div className=\"homepage\">\r\n        {/* 添加离线指示器 */}\r\n        <OfflineIndicator />\r\n\r\n        <header className=\"hero-section\">\r\n          <div className=\"hero-content\">\r\n            <div className=\"user-welcome\">\r\n              <h1 className=\"hero-title\">我的知识题库</h1>\r\n              <p className=\"hero-subtitle\">\r\n                欢迎回来, {currentUser.getUsername()}！\r\n                {!isOnline && (\r\n                  <span className=\"offline-status\"> • 离线模式</span>\r\n                )}\r\n              </p>\r\n              <div className=\"cache-actions\" >\r\n  \r\n  \r\n</div>\r\n\r\n            </div>\r\n\r\n            {/* 更新头部操作区域 */}\r\n            <div className=\"header-actions\">\r\n              <div className=\"search-container\">\r\n                \r\n              </div>\r\n             \r\n              {showCacheSettings && <CacheSettingsModal />}\r\n            </div>\r\n            \r\n          </div>\r\n        </header>\r\n\r\n        {/* 现代化标签导航 */}\r\n        <section className=\"modern-tabs-section\">\r\n          <div className=\"container\">\r\n            <div className=\"modern-tabs\">\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"categories\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"categories\")}\r\n              >\r\n                <span className=\"tab-icon\">📚</span>\r\n                <span className=\"tab-text\">分类浏览</span>\r\n                {activeTab === \"categories\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"review\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"review\")}\r\n              >\r\n                <span className=\"tab-icon\">🔄</span>\r\n                <span className=\"tab-text\">\r\n                  复习提醒\r\n                  {reviewQuestions.length > 0 && (\r\n                    <span className=\"tab-badge\">{reviewQuestions.length}</span>\r\n                  )}\r\n                </span>\r\n                {activeTab === \"review\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"stats\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"stats\")}\r\n              >\r\n                <span className=\"tab-icon\">📊</span>\r\n                <span className=\"tab-text\">数据统计</span>\r\n                {activeTab === \"stats\" && <div className=\"tab-indicator\"></div>}\r\n              </button>\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"calendar\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"calendar\")}\r\n              >\r\n                <span className=\"tab-icon\">🗓️</span>\r\n                <span className=\"tab-text\">学习日历</span>\r\n                {activeTab === \"calendar\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n              {/* 新增的 Documents 按钮 */}\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"documents\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"documents\")}\r\n              >\r\n                <span className=\"tab-icon\">📖</span>\r\n                <span className=\"tab-text\">开发文档</span>\r\n                {activeTab === \"documents\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n\r\n              <button\r\n                className={`modern-tab ${\r\n                  activeTab === \"community\" ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setActiveTab(\"community\")}\r\n              >\r\n                <span className=\"tab-icon\">👥</span>\r\n                <span className=\"tab-text\">学习社区</span>\r\n                {activeTab === \"community\" && (\r\n                  <div className=\"tab-indicator\"></div>\r\n                )}\r\n              </button>\r\n\r\n\r\n              {/* 缓存状态快速入口 */}\r\n<button\r\n  className={`modern-tab ${\r\n    activeTab === \"cache\" ? \"active\" : \"\"\r\n  }`}\r\n  onClick={() => setActiveTab(\"cache\")}\r\n>\r\n  <span className=\"tab-icon\">💾</span>\r\n  <span className=\"tab-text\">\r\n    缓存管理\r\n    {cacheStatus.hasCache && (\r\n      <span className=\"tab-badge\">{cacheStatus.count}</span>\r\n    )}\r\n  </span>\r\n  {activeTab === \"cache\" && (\r\n    <div className=\"tab-indicator\"></div>\r\n  )}\r\n</button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* 同步状态消息 */}\r\n        {syncMessage && <div className=\"sync-message\">{syncMessage}</div>}\r\n\r\n        {/* 主要内容区域 */}\r\n        {renderContent()}\r\n\r\n        {/* 修复底部统计 */}\r\n        <footer className=\"footer-section\">\r\n          <div className=\"container\">\r\n            <div className=\"footer-stats\">\r\n              <div className=\"stat-item\">\r\n                <div className=\"stat-number\">\r\n                  {categoryStats.totalCategories}\r\n                </div>\r\n                <div className=\"stat-label\">总类别数</div>\r\n              </div>\r\n              <div className=\"stat-item\">\r\n                <div className=\"stat-number\">{questions.length}</div>\r\n                <div className=\"stat-label\">总题目数</div>\r\n              </div>\r\n              <div className=\"stat-item\">\r\n                <div className=\"stat-number\">{cacheStatus.count || 0}</div>\r\n                <div className=\"stat-label\">缓存题目</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n\r\n        <Chatbox\r\n          onNavigate={handleChatboxNavigate}\r\n          categories={categories}\r\n          questions={questions}\r\n          currentUser={currentUser}\r\n          cacheStatus={cacheStatus}\r\n          isOnline={isOnline}\r\n        />\r\n      </div>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n\r\n// 清理缓存的函数（需要从其他文件导入）\r\nconst clearAllCache = () => {\r\n  // 实现缓存清理逻辑\r\n  console.log(\"清理所有缓存\");\r\n};\r\n\r\nconst clearCategoryCache = () => {\r\n  // 实现分类缓存清理逻辑\r\n  console.log(\"清理分类缓存\");\r\n};\r\n\r\nexport default HomePage;\r\n","// initClasses.js\r\nimport AV from 'leancloud-storage';\r\n\r\n\r\n\r\n// 初始化配置\r\nAV.init({\r\n  appId: process.env.REACT_APP_LC_APP_ID,\r\n  appKey: process.env.REACT_APP_LC_APP_KEY,\r\n  serverURL: process.env.REACT_APP_LC_SERVER_URL\r\n});\r\n\r\n// 难度选项\r\nconst DifficultyOptions = {\r\n  EASY: 'easy',\r\n  MEDIUM: 'medium',\r\n  HARD: 'hard'\r\n};\r\n\r\n// 掌握程度选项\r\nconst ProficiencyOptions = {\r\n  BEGINNER: 'beginner',\r\n  INTERMEDIATE: 'intermediate',\r\n  ADVANCED: 'advanced',\r\n  MASTER: 'master'\r\n};\r\n\r\n// 社区相关 Class 名称\r\nconst CommunityClasses = {\r\n  POST: 'Post',\r\n  COMMENT: 'Comment',\r\n  LIKE: 'Like',\r\n  FOLLOW: 'Follow'\r\n};\r\n\r\n// 帖子状态选项\r\nconst PostStatusOptions = {\r\n  PUBLISHED: 'published',\r\n  DRAFT: 'draft',\r\n  DELETED: 'deleted'\r\n};\r\n\r\n// 帖子排序选项\r\nconst PostSortOptions = {\r\n  CREATED_AT: 'createdAt',\r\n  UPDATED_AT: 'updatedAt',\r\n  LAST_COMMENTED_AT: 'lastCommentedAt',\r\n  LIKES: 'likes',\r\n  VIEWS: 'views',\r\n  COMMENT_COUNT: 'commentCount'\r\n};\r\n\r\n// Notion 数据库字段映射配置\r\nconst NotionFieldMapping = {\r\n  // 标题字段映射\r\n  TITLE: ['Title', '题目', 'Name', '名称'],\r\n  // 难度字段映射\r\n  DIFFICULTY: ['Difficulty', '难度'],\r\n  // 分类字段映射\r\n  CATEGORY: ['Category', '类别', '分类'],\r\n  // 标签字段映射\r\n  TAGS: ['Tags', '标签'],\r\n  // 答案内容字段映射\r\n  CONTENT: ['Content', '内容', 'Answer', '答案'],\r\n  // 完成时间字段映射\r\n  COMPLETION_TIME: ['CompletionTime', '完成时间', '时间']\r\n};\r\n\r\n// ==================== 社区功能相关函数 ====================\r\n\r\n/**\r\n * 创建社区相关的数据表（Post, Comment, Like, Follow）\r\n */\r\nexport const createCommunityClasses = async () => {\r\n  try {\r\n    \r\n    const results = {\r\n      Post: await createPostClass(),\r\n      Comment: await createCommentClass(),\r\n      Like: await createLikeClass(),\r\n      Follow: await createFollowClass()\r\n    };\r\n    \r\n    return results;\r\n  } catch (error) {\r\n    throw new Error(`创建社区数据表失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Post 类（帖子表）\r\n */\r\nconst createPostClass = async () => {\r\n  try {\r\n    // 检查是否已存在\r\n    const query = new AV.Query(CommunityClasses.POST);\r\n    const existing = await query.first().catch(() => null);\r\n    if (existing) {\r\n      return { exists: true, message: 'Post class already exists' };\r\n    }\r\n\r\n    // 创建 Post 类（实际上在 LeanCloud 中类会自动创建，这里我们创建示例数据来验证）\r\n    const Post = AV.Object.extend(CommunityClasses.POST);\r\n    const testPost = new Post();\r\n    \r\n    // 设置字段\r\n    testPost.set('title', '测试帖子标题');\r\n    testPost.set('content', '这是一个测试帖子的内容，用于验证 Post 类的创建。');\r\n    testPost.set('author', AV.User.current());\r\n    testPost.set('tags', ['测试', '示例']);\r\n    testPost.set('likes', 0);\r\n    testPost.set('views', 0);\r\n    testPost.set('commentCount', 0);\r\n    testPost.set('isPublic', true);\r\n    testPost.set('isPinned', false);\r\n    testPost.set('status', PostStatusOptions.PUBLISHED);\r\n    \r\n    // 设置 ACL（权限控制）\r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);    // 所有人可读\r\n    acl.setPublicWriteAccess(false);  // 只有作者可写\r\n    if (AV.User.current()) {\r\n      acl.setWriteAccess(AV.User.current(), true);\r\n    }\r\n    testPost.setACL(acl);\r\n    \r\n    await testPost.save();\r\n    console.log('✅ Post 类创建成功并添加测试数据');\r\n    \r\n    // 删除测试数据\r\n    await testPost.destroy();\r\n    console.log('🧹 已清理测试数据');\r\n    \r\n    return { \r\n      success: true, \r\n      message: 'Post class created successfully' \r\n    };\r\n  } catch (error) {\r\n    console.error('创建 Post 类失败:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Comment 类（评论表）\r\n */\r\nconst createCommentClass = async () => {\r\n  try {\r\n    // 检查是否已存在\r\n    const query = new AV.Query(CommunityClasses.COMMENT);\r\n    const existing = await query.first().catch(() => null);\r\n    if (existing) {\r\n      console.log('📝 Comment 类已存在，跳过创建');\r\n      return { exists: true, message: 'Comment class already exists' };\r\n    }\r\n\r\n    // 创建 Comment 类\r\n    const Comment = AV.Object.extend(CommunityClasses.COMMENT);\r\n    const testComment = new Comment();\r\n    \r\n    // 设置字段\r\n    testComment.set('content', '这是一个测试评论内容。');\r\n    testComment.set('author', AV.User.current());\r\n    testComment.set('likes', 0);\r\n    \r\n    // 设置 ACL\r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    if (AV.User.current()) {\r\n      acl.setWriteAccess(AV.User.current(), true);\r\n    }\r\n    testComment.setACL(acl);\r\n    \r\n    await testComment.save();\r\n    console.log('✅ Comment 类创建成功并添加测试数据');\r\n    \r\n    // 删除测试数据\r\n    await testComment.destroy();\r\n    console.log('🧹 已清理测试数据');\r\n    \r\n    return { \r\n      success: true, \r\n      message: 'Comment class created successfully' \r\n    };\r\n  } catch (error) {\r\n    console.error('创建 Comment 类失败:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Like 类（点赞关系表）\r\n */\r\nconst createLikeClass = async () => {\r\n  try {\r\n    // 检查是否已存在\r\n    const query = new AV.Query(CommunityClasses.LIKE);\r\n    const existing = await query.first().catch(() => null);\r\n    if (existing) {\r\n      console.log('📝 Like 类已存在，跳过创建');\r\n      return { exists: true, message: 'Like class already exists' };\r\n    }\r\n\r\n    // 创建 Like 类\r\n    const Like = AV.Object.extend(CommunityClasses.LIKE);\r\n    const testLike = new Like();\r\n    \r\n    // 设置字段\r\n    testLike.set('user', AV.User.current());\r\n    \r\n    // 设置 ACL\r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    if (AV.User.current()) {\r\n      acl.setWriteAccess(AV.User.current(), true);\r\n    }\r\n    testLike.setACL(acl);\r\n    \r\n    await testLike.save();\r\n    console.log('✅ Like 类创建成功并添加测试数据');\r\n    \r\n    // 删除测试数据\r\n    await testLike.destroy();\r\n    console.log('🧹 已清理测试数据');\r\n    \r\n    return { \r\n      success: true, \r\n      message: 'Like class created successfully' \r\n    };\r\n  } catch (error) {\r\n    console.error('创建 Like 类失败:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Follow 类（关注关系表）\r\n */\r\nconst createFollowClass = async () => {\r\n  try {\r\n    // 检查是否已存在\r\n    const query = new AV.Query(CommunityClasses.FOLLOW);\r\n    const existing = await query.first().catch(() => null);\r\n    if (existing) {\r\n      console.log('📝 Follow 类已存在，跳过创建');\r\n      return { exists: true, message: 'Follow class already exists' };\r\n    }\r\n\r\n    // 创建 Follow 类\r\n    const Follow = AV.Object.extend(CommunityClasses.FOLLOW);\r\n    const testFollow = new Follow();\r\n    \r\n    // 设置字段\r\n    testFollow.set('follower', AV.User.current());\r\n    \r\n    // 设置 ACL\r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    if (AV.User.current()) {\r\n      acl.setWriteAccess(AV.User.current(), true);\r\n    }\r\n    testFollow.setACL(acl);\r\n    \r\n    await testFollow.save();\r\n    console.log('✅ Follow 类创建成功并添加测试数据');\r\n    \r\n    // 删除测试数据\r\n    await testFollow.destroy();\r\n    console.log('🧹 已清理测试数据');\r\n    \r\n    return { \r\n      success: true, \r\n      message: 'Follow class created successfully' \r\n    };\r\n  } catch (error) {\r\n    console.error('创建 Follow 类失败:', error);\r\n    return { success: false, error: error.message };\r\n  }\r\n};\r\n\r\n/**\r\n * 生成社区示例数据\r\n */\r\nexport const generateCommunitySampleData = async () => {\r\n  try {\r\n    console.log('🚀 开始生成社区示例数据...');\r\n    \r\n    // 首先确保数据表已创建\r\n    await createCommunityClasses();\r\n    \r\n    const results = {\r\n      posts: await createSamplePosts(),\r\n      comments: await createSampleComments(),\r\n      likes: await createSampleLikes()\r\n    };\r\n    \r\n    console.log('✅ 社区示例数据生成完成:', results);\r\n    return {\r\n      success: true,\r\n      ...results,\r\n      message: `成功生成 ${results.posts.length} 个帖子, ${results.comments.length} 条评论, ${results.likes.length} 个点赞`\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ 生成社区示例数据失败:', error);\r\n    throw new Error(`生成社区示例数据失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建示例帖子\r\n */\r\nconst createSamplePosts = async () => {\r\n  const currentUser = AV.User.current();\r\n  if (!currentUser) {\r\n    console.log('⚠️ 用户未登录，跳过创建示例帖子');\r\n    return [];\r\n  }\r\n\r\n  const Post = AV.Object.extend(CommunityClasses.POST);\r\n  const samplePosts = [\r\n    {\r\n      title: '欢迎来到学习社区！',\r\n      content: `大家好！欢迎来到我们的学习社区。这里是一个分享编程学习心得、交流刷题经验的地方。\r\n\r\n## 社区规则：\r\n1. 友善交流，互相帮助\r\n2. 分享有价值的内容\r\n3. 尊重他人观点\r\n4. 保持内容相关性\r\n\r\n希望大家都能在这里有所收获！🎉`,\r\n      tags: ['欢迎', '公告', '社区'],\r\n      isPublic: true,\r\n      isPinned: true\r\n    },\r\n    {\r\n      title: 'JavaScript 闭包的理解与实践',\r\n      content: `今天来分享一下我对 JavaScript 闭包的理解...\r\n\r\n## 什么是闭包？\r\n闭包是指那些能够访问自由变量的函数。\r\n\r\n## 实际应用场景：\r\n1. 模块化开发\r\n2. 私有变量\r\n3. 函数柯里化\r\n\r\n大家有什么补充的吗？`,\r\n      tags: ['JavaScript', '闭包', '前端'],\r\n      isPublic: true,\r\n      isPinned: false\r\n    },\r\n    {\r\n      title: 'React Hooks 使用心得',\r\n      content: `使用 React Hooks 有一段时间了，分享一些实践经验：\r\n\r\n- useState: 状态管理\r\n- useEffect: 副作用处理\r\n- useContext: 上下文传递\r\n- useMemo: 性能优化\r\n\r\n你们觉得哪个 Hook 最实用？`,\r\n      tags: ['React', 'Hooks', '前端'],\r\n      isPublic: true,\r\n      isPinned: false\r\n    }\r\n  ];\r\n\r\n  const posts = [];\r\n  for (const data of samplePosts) {\r\n    const post = new Post();\r\n    post.set('title', data.title);\r\n    post.set('content', data.content);\r\n    post.set('author', currentUser);\r\n    post.set('tags', data.tags);\r\n    post.set('likes', Math.floor(Math.random() * 10));\r\n    post.set('views', Math.floor(Math.random() * 50));\r\n    post.set('commentCount', Math.floor(Math.random() * 5));\r\n    post.set('isPublic', data.isPublic);\r\n    post.set('isPinned', data.isPinned);\r\n    post.set('status', PostStatusOptions.PUBLISHED);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    acl.setWriteAccess(currentUser, true);\r\n    post.setACL(acl);\r\n    \r\n    const saved = await post.save();\r\n    posts.push(saved);\r\n    console.log(`✅ 创建帖子: \"${data.title}\"`);\r\n  }\r\n  \r\n  return posts;\r\n};\r\n\r\n/**\r\n * 创建示例评论\r\n */\r\nconst createSampleComments = async () => {\r\n  const currentUser = AV.User.current();\r\n  if (!currentUser) {\r\n    console.log('⚠️ 用户未登录，跳过创建示例评论');\r\n    return [];\r\n  }\r\n\r\n  // 获取刚创建的帖子\r\n  const postQuery = new AV.Query(CommunityClasses.POST);\r\n  const posts = await postQuery.find();\r\n  \r\n  if (posts.length === 0) {\r\n    console.log('⚠️ 没有找到帖子，跳过创建评论');\r\n    return [];\r\n  }\r\n\r\n  const Comment = AV.Object.extend(CommunityClasses.COMMENT);\r\n  const sampleComments = [\r\n    { content: '欢迎欢迎！期待更多精彩内容！🎊' },\r\n    { content: '闭包的讲解很清晰，感谢分享！' },\r\n    { content: '我觉得 useEffect 最实用，能处理各种副作用。' },\r\n    { content: '新人报道，请多指教！' },\r\n    { content: 'Hooks 确实让 React 开发更简洁了。' }\r\n  ];\r\n\r\n  const comments = [];\r\n  for (let i = 0; i < sampleComments.length; i++) {\r\n    const comment = new Comment();\r\n    comment.set('content', sampleComments[i].content);\r\n    comment.set('author', currentUser);\r\n    comment.set('post', posts[i % posts.length]); // 轮流分配到不同帖子\r\n    comment.set('likes', Math.floor(Math.random() * 5));\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(false);\r\n    acl.setWriteAccess(currentUser, true);\r\n    comment.setACL(acl);\r\n    \r\n    const saved = await comment.save();\r\n    comments.push(saved);\r\n    console.log(`✅ 创建评论: \"${sampleComments[i].content.substring(0, 20)}...\"`);\r\n  }\r\n  \r\n  return comments;\r\n};\r\n\r\n/**\r\n * 创建示例点赞\r\n */\r\nconst createSampleLikes = async () => {\r\n  const currentUser = AV.User.current();\r\n  if (!currentUser) {\r\n    console.log('⚠️ 用户未登录，跳过创建示例点赞');\r\n    return [];\r\n  }\r\n\r\n  // 获取刚创建的帖子和评论\r\n  const postQuery = new AV.Query(CommunityClasses.POST);\r\n  const posts = await postQuery.find();\r\n  \r\n  const commentQuery = new AV.Query(CommunityClasses.COMMENT);\r\n  const comments = await commentQuery.find();\r\n\r\n  const Like = AV.Object.extend(CommunityClasses.LIKE);\r\n  const likes = [];\r\n\r\n  // 为第一个帖子点赞\r\n  if (posts.length > 0) {\r\n    const like = new Like();\r\n    like.set('user', currentUser);\r\n    like.set('post', posts[0]);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setWriteAccess(currentUser, true);\r\n    like.setACL(acl);\r\n    \r\n    const saved = await like.save();\r\n    likes.push(saved);\r\n    console.log('✅ 创建帖子点赞');\r\n  }\r\n\r\n  // 为第一个评论点赞\r\n  if (comments.length > 0) {\r\n    const like = new Like();\r\n    like.set('user', currentUser);\r\n    like.set('comment', comments[0]);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setWriteAccess(currentUser, true);\r\n    like.setACL(acl);\r\n    \r\n    const saved = await like.save();\r\n    likes.push(saved);\r\n    console.log('✅ 创建评论点赞');\r\n  }\r\n  \r\n  return likes;\r\n};\r\n\r\n/**\r\n * 清除社区数据\r\n */\r\nexport const clearCommunityData = async () => {\r\n  try {\r\n    \r\n    let deletedCount = {\r\n      posts: 0,\r\n      comments: 0,\r\n      likes: 0,\r\n      follows: 0\r\n    };\r\n    \r\n    // 清除点赞数据\r\n    try {\r\n      const likeQuery = new AV.Query(CommunityClasses.LIKE);\r\n      const likes = await likeQuery.find();\r\n      if (likes.length > 0) {\r\n        await AV.Object.destroyAll(likes);\r\n        deletedCount.likes = likes.length;\r\n      }\r\n    } catch (error) {\r\n    }\r\n    \r\n    // 清除评论数据\r\n    try {\r\n      const commentQuery = new AV.Query(CommunityClasses.COMMENT);\r\n      const comments = await commentQuery.find();\r\n      if (comments.length > 0) {\r\n        await AV.Object.destroyAll(comments);\r\n        deletedCount.comments = comments.length;\r\n      }\r\n    } catch (error) {\r\n    }\r\n    \r\n    // 清除帖子数据\r\n    try {\r\n      const postQuery = new AV.Query(CommunityClasses.POST);\r\n      const posts = await postQuery.find();\r\n      if (posts.length > 0) {\r\n        await AV.Object.destroyAll(posts);\r\n        deletedCount.posts = posts.length;\r\n      }\r\n    } catch (error) {\r\n    }\r\n    \r\n    // 清除关注数据\r\n    try {\r\n      const followQuery = new AV.Query(CommunityClasses.FOLLOW);\r\n      const follows = await followQuery.find();\r\n      if (follows.length > 0) {\r\n        await AV.Object.destroyAll(follows);\r\n        deletedCount.follows = follows.length;\r\n      }\r\n    } catch (error) {\r\n    }\r\n    \r\n    const message = `社区数据清除完成: ${deletedCount.posts} 帖子, ${deletedCount.comments} 评论, ${deletedCount.likes} 点赞, ${deletedCount.follows} 关注`;\r\n    \r\n    return {\r\n      success: true,\r\n      ...deletedCount,\r\n      message\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ 清除社区数据失败:', error);\r\n    throw new Error(`清除社区数据失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n// ==================== 原有函数（保持不变） ====================\r\n\r\n/**\r\n * Notion 同步云函数\r\n */\r\nexport const syncProblemsFromNotion = async () => {\r\n  try {\r\n    \r\n    // 检查环境变量是否配置\r\n    if (!process.env.REACT_APP_NOTION_TOKEN || !process.env.REACT_APP_NOTION_DATABASE_ID) {\r\n      throw new Error('Notion 环境变量未配置，请检查 REACT_APP_NOTION_TOKEN 和 REACT_APP_NOTION_DATABASE_ID');\r\n    }\r\n\r\n    // 调用云函数（如果部署了云引擎版本）\r\n    try {\r\n      const result = await AV.Cloud.run('syncProblemsFromNotion');\r\n      return result;\r\n    } catch (cloudError) {\r\n      // 回退到客户端版本同步\r\n      return await syncWithClientVersion();\r\n    }\r\n  } catch (error) {\r\n    console.error('❌ Notion 同步失败:', error);\r\n    throw new Error(`同步失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 客户端版本同步（云函数不可用时的回退方案）\r\n */\r\nconst syncWithClientVersion = async () => {\r\n  try {\r\n    // 这里可以添加直接从前端调用 Notion API 的逻辑\r\n    // 但由于安全原因，建议使用云函数方式\r\n    console.log('📝 使用客户端同步模式（需要配置云函数）');\r\n    \r\n    // 模拟同步过程\r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    \r\n    return {\r\n      success: true,\r\n      message: '同步功能需要部署云函数。请参考以下步骤：\\n1. 在 LeanCloud 云引擎部署 syncProblemsFromNotion 云函数\\n2. 配置 NOTION_INTEGRATION_TOKEN 和 NOTION_DATABASE_ID 环境变量',\r\n      data: {\r\n        synced: 0,\r\n        mode: 'client_fallback'\r\n      }\r\n    };\r\n  } catch (error) {\r\n    throw new Error(`客户端同步失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Notion 同步相关的云函数定义（用于云引擎部署）\r\n */\r\nexport const defineNotionCloudFunctions = () => {\r\n  // 这些函数需要在云引擎中定义\r\n  if (typeof AV.Cloud !== 'undefined') {\r\n    // 同步题目云函数\r\n    AV.Cloud.define('syncProblemsFromNotion', async (request) => {\r\n      const { Client } = require('@notionhq/client');\r\n      \r\n      // 初始化 Notion 客户端\r\n      const notion = new Client({\r\n        auth: process.env.NOTION_INTEGRATION_TOKEN,\r\n      });\r\n\r\n      try {\r\n        console.log('开始从 Notion 数据库同步数据...');\r\n        \r\n        // 查询 Notion 数据库\r\n        const response = await notion.databases.query({\r\n          database_id: process.env.NOTION_DATABASE_ID,\r\n          sorts: [{ timestamp: 'last_edited_time', direction: 'descending' }],\r\n        });\r\n\r\n        console.log(`从 Notion 获取到 ${response.results.length} 条记录`);\r\n\r\n        const problems = [];\r\n        let syncedCount = 0;\r\n        \r\n        // 处理每条记录\r\n        for (const page of response.results) {\r\n          const problemData = parseNotionPage(page);\r\n          if (problemData) {\r\n            problems.push(problemData);\r\n          }\r\n        }\r\n\r\n        // 保存到 LeanCloud\r\n        syncedCount = await saveNotionProblemsToLeanCloud(problems);\r\n        \r\n        return {\r\n          success: true,\r\n          message: `同步完成！处理 ${response.results.length} 条记录，成功保存 ${syncedCount} 道题目`,\r\n          data: {\r\n            fetched: response.results.length,\r\n            saved: syncedCount,\r\n            problems: problems.slice(0, 5) // 返回前5条作为示例\r\n          }\r\n        };\r\n\r\n      } catch (error) {\r\n        console.error('Notion 同步错误:', error);\r\n        throw new AV.Cloud.Error(`同步失败: ${error.message}`);\r\n      }\r\n    });\r\n\r\n    // 检查 Notion 连接状态\r\n    AV.Cloud.define('checkNotionConnection', async (request) => {\r\n      const { Client } = require('@notionhq/client');\r\n      \r\n      try {\r\n        const notion = new Client({\r\n          auth: process.env.NOTION_INTEGRATION_TOKEN,\r\n        });\r\n\r\n        // 尝试查询数据库信息\r\n        const database = await notion.databases.retrieve({\r\n          database_id: process.env.NOTION_DATABASE_ID,\r\n        });\r\n\r\n        return {\r\n          success: true,\r\n          connected: true,\r\n          database: {\r\n            title: database.title[0]?.plain_text || '未命名',\r\n            properties: Object.keys(database.properties),\r\n            url: database.url\r\n          }\r\n        };\r\n      } catch (error) {\r\n        return {\r\n          success: false,\r\n          connected: false,\r\n          error: error.message\r\n        };\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * 解析 Notion 页面数据\r\n */\r\nconst parseNotionPage = (page) => {\r\n  try {\r\n    const properties = page.properties;\r\n    \r\n    // 获取标题\r\n    const title = getNotionPropertyValue(properties, NotionFieldMapping.TITLE, 'title');\r\n    if (!title) {\r\n      console.warn('跳过无标题的记录:', page.id);\r\n      return null;\r\n    }\r\n\r\n    // 获取其他字段\r\n    const difficulty = getNotionPropertyValue(properties, NotionFieldMapping.DIFFICULTY, 'select');\r\n    const categoryName = getNotionPropertyValue(properties, NotionFieldMapping.CATEGORY, 'select');\r\n    const tags = getNotionPropertyValue(properties, NotionFieldMapping.TAGS, 'multi_select') || [];\r\n    const content = getNotionPropertyValue(properties, NotionFieldMapping.CONTENT, 'rich_text');\r\n    const completionTime = getNotionPropertyValue(properties, NotionFieldMapping.COMPLETION_TIME, 'number');\r\n\r\n    return {\r\n      title: title,\r\n      difficulty: difficulty || DifficultyOptions.MEDIUM,\r\n      category: categoryName || '未分类',\r\n      tags: Array.isArray(tags) ? tags : [tags],\r\n      content: content || '',\r\n      completionTime: completionTime || 15,\r\n      notionPageId: page.id,\r\n      notionUrl: page.url,\r\n      lastEditedTime: new Date(page.last_edited_time),\r\n      isActive: true\r\n    };\r\n  } catch (error) {\r\n    console.error('解析 Notion 页面失败:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * 通用获取 Notion 属性值的方法\r\n */\r\nconst getNotionPropertyValue = (properties, fieldNames, expectedType) => {\r\n  for (const fieldName of fieldNames) {\r\n    const property = properties[fieldName];\r\n    if (property && property.type === expectedType) {\r\n      switch (expectedType) {\r\n        case 'title':\r\n          return property.title[0]?.text?.content;\r\n        case 'rich_text':\r\n          return property.rich_text[0]?.text?.content;\r\n        case 'select':\r\n          return property.select?.name;\r\n        case 'multi_select':\r\n          return property.multi_select?.map(item => item.name);\r\n        case 'number':\r\n          return property.number;\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * 保存 Notion 数据到 LeanCloud\r\n */\r\nconst saveNotionProblemsToLeanCloud = async (problems) => {\r\n  const Question = AV.Object.extend('Question');\r\n  let savedCount = 0;\r\n\r\n  for (const problemData of problems) {\r\n    try {\r\n      // 查找或创建分类\r\n      const category = await findOrCreateCategory(problemData.category);\r\n      \r\n      // 检查是否已存在相同 Notion Page ID 的题目\r\n      const query = new AV.Query('Question');\r\n      query.equalTo('notionPageId', problemData.notionPageId);\r\n      const existing = await query.first();\r\n      \r\n      const question = existing || new Question();\r\n      \r\n      // 设置题目属性\r\n      question.set('title', problemData.title);\r\n      question.set('content', problemData.content);\r\n      question.set('difficulty', problemData.difficulty);\r\n      question.set('tags', problemData.tags);\r\n      question.set('completionTime', problemData.completionTime);\r\n      question.set('category', category);\r\n      question.set('notionPageId', problemData.notionPageId);\r\n      question.set('notionUrl', problemData.notionUrl);\r\n      question.set('isActive', true);\r\n      \r\n      // 设置 ACL\r\n      const acl = new AV.ACL();\r\n      acl.setPublicReadAccess(true);\r\n      acl.setPublicWriteAccess(true);\r\n      question.setACL(acl);\r\n      \r\n      await question.save();\r\n      savedCount++;\r\n      \r\n      console.log(`✅ 保存题目: \"${problemData.title}\" → 分类 \"${problemData.category}\"`);\r\n    } catch (error) {\r\n      console.error(`保存题目失败: ${problemData.title}`, error);\r\n    }\r\n  }\r\n  \r\n  // 更新分类计数\r\n  await updateAllCategoryCounts();\r\n  \r\n  return savedCount;\r\n};\r\n\r\n/**\r\n * 查找或创建分类\r\n */\r\nconst findOrCreateCategory = async (categoryName) => {\r\n  const Category = AV.Object.extend('Category');\r\n  \r\n  // 查找现有分类\r\n  const query = new AV.Query('Category');\r\n  query.equalTo('name', categoryName);\r\n  let category = await query.first();\r\n  \r\n  // 如果不存在则创建\r\n  if (!category) {\r\n    category = new Category();\r\n    category.set('name', categoryName);\r\n    category.set('questionCount', 0);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(true);\r\n    category.setACL(acl);\r\n    \r\n    await category.save();\r\n  }\r\n  \r\n  return category;\r\n};\r\n\r\n/**\r\n * 检查 Notion 连接状态\r\n */\r\nexport const checkNotionConnection = async () => {\r\n  try {\r\n    const result = await AV.Cloud.run('checkNotionConnection');\r\n    return result;\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      connected: false,\r\n      error: error.message,\r\n      message: '请确保已部署云函数并配置环境变量'\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 生成正确格式的 Category 和 Question Class（包含示例数据）\r\n */\r\nexport const generateSampleData = async () => {\r\n  try {\r\n    console.log('开始生成示例数据...');\r\n    await clearAllData();\r\n    const categories = await createCategories();\r\n    const questions = await createQuestions(categories);\r\n    await updateCategoryCounts(categories);\r\n    \r\n    console.log('🎉 示例数据生成完成！');\r\n    return {\r\n      success: true,\r\n      categoriesCount: categories.length,\r\n      questionsCount: questions.length,\r\n      message: `成功生成 ${categories.length} 个分类和 ${questions.length} 个题目`\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ 生成示例数据失败:', error);\r\n    throw new Error(`生成失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 创建 Category 数据\r\n */\r\nconst createCategories = async () => {\r\n  const Category = AV.Object.extend('Category');\r\n  const categoriesData = [\r\n    { name: 'JavaScript 核心概念' }, { name: 'React 框架原理' }, { name: '算法与数据结构' },\r\n    { name: '计算机网络' }, { name: '数据库系统' }, { name: '操作系统' },\r\n    { name: '前端工程化' }, { name: 'TypeScript 进阶' }\r\n  ];\r\n\r\n  const categories = [];\r\n  for (const data of categoriesData) {\r\n    const category = new Category();\r\n    category.set('name', data.name);\r\n    category.set('questionCount', 0);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(true);\r\n    category.setACL(acl);\r\n    \r\n    const saved = await category.save();\r\n    categories.push(saved);\r\n    console.log(`✅ 创建分类: ${data.name}`);\r\n  }\r\n  \r\n  return categories;\r\n};\r\n\r\n/**\r\n * 创建 Question 数据（关联到 Category）\r\n */\r\nconst createQuestions = async (categories) => {\r\n  const Question = AV.Object.extend('Question');\r\n  const questionsData = [\r\n    // 你原有的题目数据...\r\n  ];\r\n\r\n  const questions = [];\r\n  for (const data of questionsData) {\r\n    const question = new Question();\r\n    question.set('title', data.title);\r\n    question.set('answer', data.answer);\r\n    question.set('tags', data.tags);\r\n    question.set('difficulty', data.difficulty);\r\n    question.set('completionTime', data.completionTime);\r\n    question.set('proficiency', data.proficiency);\r\n    question.set('category', categories[data.categoryIndex]);\r\n    question.set('isActive', true);\r\n    \r\n    const acl = new AV.ACL();\r\n    acl.setPublicReadAccess(true);\r\n    acl.setPublicWriteAccess(true);\r\n    question.setACL(acl);\r\n    \r\n    const saved = await question.save();\r\n    questions.push(saved);\r\n    console.log(`✅ 创建题目: \"${data.title}\" → 属于 \"${categories[data.categoryIndex].get('name')}\"`);\r\n  }\r\n  \r\n  return questions;\r\n};\r\n\r\n/**\r\n * 更新 Category 的题目计数\r\n */\r\nconst updateCategoryCounts = async (categories) => {\r\n  for (const category of categories) {\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    const count = await questionQuery.count();\r\n    category.set('questionCount', count);\r\n    await category.save();\r\n    console.log(`📊 分类 \"${category.get('name')}\" 有 ${count} 个题目`);\r\n  }\r\n};\r\n\r\n/**\r\n * 更新所有分类的题目计数\r\n */\r\nconst updateAllCategoryCounts = async () => {\r\n  const categoryQuery = new AV.Query('Category');\r\n  const categories = await categoryQuery.find();\r\n  \r\n  for (const category of categories) {\r\n    const questionQuery = new AV.Query('Question');\r\n    questionQuery.equalTo('category', category);\r\n    const count = await questionQuery.count();\r\n    category.set('questionCount', count);\r\n    await category.save();\r\n  }\r\n  \r\n  console.log(`📊 更新了 ${categories.length} 个分类的题目计数`);\r\n};\r\n\r\n/**\r\n * 清除所有数据\r\n */\r\nexport const clearAllData = async () => {\r\n  try {\r\n    console.log('开始清除所有数据...');\r\n    let deletedQuestions = 0;\r\n    let deletedCategories = 0;\r\n    \r\n    try {\r\n      const questionQuery = new AV.Query('Question');\r\n      const questions = await questionQuery.find();\r\n      if (questions.length > 0) {\r\n        await AV.Object.destroyAll(questions);\r\n        deletedQuestions = questions.length;\r\n        console.log(`🗑️ 删除了 ${deletedQuestions} 个题目`);\r\n      }\r\n    } catch (error) {\r\n      console.log('没有题目需要删除或删除失败:', error.message);\r\n    }\r\n    \r\n    try {\r\n      const categoryQuery = new AV.Query('Category');\r\n      const categories = await categoryQuery.find();\r\n      if (categories.length > 0) {\r\n        await AV.Object.destroyAll(categories);\r\n        deletedCategories = categories.length;\r\n        console.log(`🗑️ 删除了 ${deletedCategories} 个分类`);\r\n      }\r\n    } catch (error) {\r\n      console.log('没有分类需要删除或删除失败:', error.message);\r\n    }\r\n    \r\n    const message = `清除完成: ${deletedCategories} 个分类, ${deletedQuestions} 个题目`;\r\n    console.log('✅ ' + message);\r\n    \r\n    return {\r\n      success: true,\r\n      deletedCategories,\r\n      deletedQuestions,\r\n      message\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ 清除数据失败:', error);\r\n    throw new Error(`清除失败: ${error.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * 检查数据状态\r\n */\r\nexport const checkDataStatus = async () => {\r\n  try {\r\n    let categoryCount = 0;\r\n    let questionCount = 0;\r\n    \r\n    try {\r\n      const categoryQuery = new AV.Query('Category');\r\n      categoryCount = await categoryQuery.count();\r\n    } catch (error) {\r\n      categoryCount = 0;\r\n    }\r\n    \r\n    try {\r\n      const questionQuery = new AV.Query('Question');\r\n      questionCount = await questionQuery.count();\r\n    } catch (error) {\r\n      questionCount = 0;\r\n    }\r\n    \r\n    const status = {\r\n      categoryCount,\r\n      questionCount,\r\n      hasData: categoryCount > 0 || questionCount > 0\r\n    };\r\n    \r\n    console.log('📊 数据状态:', status);\r\n    return status;\r\n  } catch (error) {\r\n    console.error('检查数据状态失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 导出所有常量和函数\r\nexport { \r\n  DifficultyOptions, \r\n  ProficiencyOptions, \r\n  NotionFieldMapping,\r\n  CommunityClasses,\r\n  PostStatusOptions,\r\n  PostSortOptions\r\n};\r\n\r\n// 全局可用\r\nif (typeof window !== 'undefined') {\r\n  // 原有函数\r\n  window.generateSampleData = generateSampleData;\r\n  window.clearAllData = clearAllData;\r\n  window.checkDataStatus = checkDataStatus;\r\n  window.syncProblemsFromNotion = syncProblemsFromNotion;\r\n  window.checkNotionConnection = checkNotionConnection;\r\n  window.defineNotionCloudFunctions = defineNotionCloudFunctions;\r\n  \r\n  // 新增社区函数\r\n  window.createCommunityClasses = createCommunityClasses;\r\n  window.generateCommunitySampleData = generateCommunitySampleData;\r\n  window.clearCommunityData = clearCommunityData;\r\n  \r\n  console.log(`\r\n🎯 数据库管理工具已加载！\r\n\r\n📚 数据管理:\r\n1. generateSampleData()          - 生成示例数据\r\n2. clearAllData()                - 清除所有数据\r\n3. checkDataStatus()             - 检查数据状态\r\n\r\n🔄 Notion 同步:\r\n4. syncProblemsFromNotion()      - 从 Notion 导入题目\r\n5. checkNotionConnection()       - 检查 Notion 连接状态\r\n6. defineNotionCloudFunctions()  - 定义云函数（用于云引擎）\r\n\r\n👥 社区功能:\r\n7. createCommunityClasses()      - 创建社区数据表\r\n8. generateCommunitySampleData() - 生成社区示例数据\r\n9. clearCommunityData()          - 清除社区数据\r\n\r\n💡 使用提示:\r\n- 首次使用请运行 generateSampleData() 创建示例数据\r\n- 使用社区功能前运行 createCommunityClasses() 创建数据表\r\n- 配置 Notion 环境变量后使用 syncProblemsFromNotion() 同步\r\n- 云函数需要在 LeanCloud 云引擎部署\r\n  `);\r\n}","// InitPage.jsx\r\nimport React, { useState } from 'react';\r\nimport { \r\n  generateSampleData, \r\n  clearAllData, \r\n  checkDataStatus, \r\n  syncProblemsFromNotion, \r\n  checkNotionConnection,\r\n  createCommunityClasses,\r\n  generateCommunitySampleData,\r\n  clearCommunityData\r\n} from '../services/initClasses';\r\nimport './InitPage.css';\r\n\r\nconst InitPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [dataStatus, setDataStatus] = useState(null);\r\n  const [notionStatus, setNotionStatus] = useState(null);\r\n  const [syncResult, setSyncResult] = useState(null);\r\n  const [communityStatus, setCommunityStatus] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('notion'); // 'notion', 'data', 'community'\r\n\r\n  // 检查数据状态\r\n  const handleCheckStatus = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const status = await checkDataStatus();\r\n      setDataStatus(status);\r\n      setMessage(`📊 当前数据: ${status.categoryCount} 个分类, ${status.questionCount} 个题目`);\r\n    } catch (error) {\r\n      setMessage(`❌ 检查失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 检查社区数据状态\r\n  const handleCheckCommunityStatus = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const status = {\r\n        postCount: 0,\r\n        commentCount: 0,\r\n        likeCount: 0,\r\n        followCount: 0,\r\n        hasData: false\r\n      };\r\n      \r\n      try {\r\n        // 使用 checkDataStatus 的逻辑来检查社区数据\r\n        // 这里简化处理，实际使用时可以调用专门的社区状态检查函数\r\n        status.postCount = 0;\r\n        status.commentCount = 0;\r\n        status.likeCount = 0;\r\n        status.followCount = 0;\r\n        status.hasData = false;\r\n        \r\n        setMessage(`📊 社区数据状态已检查，请先创建社区数据表`);\r\n      } catch (error) {\r\n        setMessage(`📊 社区数据表尚未创建，请先点击\"创建社区数据表\"`);\r\n      }\r\n      \r\n      setCommunityStatus(status);\r\n    } catch (error) {\r\n      setMessage(`❌ 检查社区状态失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 检查 Notion 连接状态\r\n  const handleCheckNotionConnection = async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    setNotionStatus(null);\r\n    \r\n    try {\r\n      const result = await checkNotionConnection();\r\n      setNotionStatus(result);\r\n      \r\n      if (result.success && result.connected) {\r\n        setMessage(`✅ Notion 连接正常！数据库: ${result.database.title}`);\r\n      } else {\r\n        setMessage(`⚠️ Notion 连接异常: ${result.error || '请检查配置'}`);\r\n      }\r\n    } catch (error) {\r\n      setMessage(`❌ 检查 Notion 连接失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 从 Notion 同步数据\r\n  const handleSyncFromNotion = async () => {\r\n    if (!window.confirm('确定要从 Notion 导入数据吗？这会添加新题目到现有数据中。')) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setMessage('');\r\n    setSyncResult(null);\r\n    \r\n    try {\r\n      const result = await syncProblemsFromNotion();\r\n      setSyncResult(result);\r\n      \r\n      if (result.success) {\r\n        setMessage(`✅ ${result.message}`);\r\n        // 同步成功后更新状态\r\n        await handleCheckStatus();\r\n      } else {\r\n        setMessage(`⚠️ ${result.message}`);\r\n      }\r\n    } catch (error) {\r\n      setMessage(`❌ 同步失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 生成示例数据\r\n  const handleGenerateData = async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await generateSampleData();\r\n      setMessage(`✅ ${result.message}`);\r\n      // 更新状态\r\n      await handleCheckStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 创建社区数据表\r\n  const handleCreateCommunityClasses = async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await createCommunityClasses();\r\n      if (result.Post.success && result.Comment.success && result.Like.success && result.Follow.success) {\r\n        setMessage(`✅ 社区数据表创建成功！所有表都已就绪`);\r\n      } else {\r\n        // 检查哪些表创建失败\r\n        const failedTables = [];\r\n        if (!result.Post.success) failedTables.push('Post');\r\n        if (!result.Comment.success) failedTables.push('Comment');\r\n        if (!result.Like.success) failedTables.push('Like');\r\n        if (!result.Follow.success) failedTables.push('Follow');\r\n        \r\n        if (failedTables.length > 0) {\r\n          setMessage(`⚠️ 部分表创建失败: ${failedTables.join(', ')}。可能表已存在或权限不足`);\r\n        } else {\r\n          setMessage(`✅ 社区数据表创建完成`);\r\n        }\r\n      }\r\n      // 更新社区状态\r\n      await handleCheckCommunityStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ 创建社区数据表失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 生成社区示例数据\r\n  const handleGenerateCommunityData = async () => {\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await generateCommunitySampleData();\r\n      setMessage(`✅ ${result.message}`);\r\n      // 更新社区状态\r\n      await handleCheckCommunityStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ 生成社区示例数据失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 清除所有数据\r\n  const handleClearData = async () => {\r\n    if (!window.confirm('确定要清除所有数据吗？此操作不可撤销！')) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await clearAllData();\r\n      setMessage(`✅ ${result.message}`);\r\n      // 更新状态\r\n      await handleCheckStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 清除社区数据\r\n  const handleClearCommunityData = async () => {\r\n    if (!window.confirm('确定要清除所有社区数据吗？此操作不可撤销！')) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await clearCommunityData();\r\n      setMessage(`✅ ${result.message}`);\r\n      // 更新社区状态\r\n      await handleCheckCommunityStatus();\r\n    } catch (error) {\r\n      setMessage(`❌ 清除社区数据失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"init-page\">\r\n      <header className=\"page-header\">\r\n        <h1>🎯 数据库管理工具</h1>\r\n        <p>管理 Category、Question 和社区数据，支持 Notion 同步</p>\r\n      </header>\r\n\r\n      {/* 标签导航 */}\r\n      <section className=\"tab-navigation\">\r\n        <div className=\"tabs\">\r\n          <button \r\n            className={`tab ${activeTab === 'notion' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('notion')}\r\n          >\r\n            🔄 Notion 同步\r\n          </button>\r\n          <button \r\n            className={`tab ${activeTab === 'data' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('data')}\r\n          >\r\n            📊 题目数据管理\r\n          </button>\r\n          <button \r\n            className={`tab ${activeTab === 'community' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('community')}\r\n          >\r\n            👥 社区数据管理\r\n          </button>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Notion 同步功能区 */}\r\n    \r\n      {activeTab === 'notion' && (\r\n        <section className=\"notion-section\">\r\n          <h2>🔄 Notion 数据同步</h2>\r\n          <div className=\"action-buttons\">\r\n            <button \r\n              onClick={handleCheckNotionConnection}\r\n              disabled={loading}\r\n              className=\"btn btn-notion\"\r\n            >\r\n              🔗 检查 Notion 连接\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleSyncFromNotion}\r\n              disabled={loading}\r\n              className=\"btn btn-sync\"\r\n            >\r\n              📥 从 Notion 导入\r\n            </button>\r\n          </div>\r\n\r\n          {notionStatus && (\r\n            <div className=\"notion-status\">\r\n              <h4>Notion 连接状态</h4>\r\n              <div className={`status-card ${notionStatus.connected ? 'connected' : 'disconnected'}`}>\r\n                <div className=\"status-header\">\r\n                  <span className=\"status-indicator\">\r\n                    {notionStatus.connected ? '🟢' : '🔴'}\r\n                  </span>\r\n                  <strong>\r\n                    {notionStatus.connected ? '连接正常' : '连接异常'}\r\n                  </strong>\r\n                </div>\r\n                \r\n                {notionStatus.connected && notionStatus.database && (\r\n                  <div className=\"database-info\">\r\n                    <p><strong>数据库:</strong> {notionStatus.database.title}</p>\r\n                    <p><strong>属性字段:</strong> {notionStatus.database.properties.length} 个</p>\r\n                    <p><strong>URL:</strong> \r\n                      <a href={notionStatus.database.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        查看数据库\r\n                      </a>\r\n                    </p>\r\n                  </div>\r\n                )}\r\n                \r\n                {!notionStatus.connected && (\r\n                  <div className=\"error-info\">\r\n                    <p><strong>错误信息:</strong> {notionStatus.error}</p>\r\n                    <p className=\"help-text\">\r\n                      💡 请确保已部署云函数并配置环境变量\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {syncResult && (\r\n            <div className=\"sync-result\">\r\n              <h4>同步结果</h4>\r\n              <div className=\"result-card\">\r\n                <div className=\"result-stats\">\r\n                  <div className=\"stat\">\r\n                    <span className=\"stat-label\">获取记录:</span>\r\n                    <span className=\"stat-value\">{syncResult.data?.fetched || 0}</span>\r\n                  </div>\r\n                  <div className=\"stat\">\r\n                    <span className=\"stat-label\">成功保存:</span>\r\n                    <span className=\"stat-value\">{syncResult.data?.saved || 0}</span>\r\n                  </div>\r\n                  <div className=\"stat\">\r\n                    <span className=\"stat-label\">同步模式:</span>\r\n                    <span className=\"stat-value\">{syncResult.data?.mode || 'cloud'}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                {syncResult.data?.problems && syncResult.data.problems.length > 0 && (\r\n                  <div className=\"synced-problems\">\r\n                    <h5>最近同步的题目:</h5>\r\n                    <ul>\r\n                      {syncResult.data.problems.slice(0, 3).map((problem, index) => (\r\n                        <li key={index}>\r\n                          <span className=\"problem-title\">{problem.title}</span>\r\n                          <span className=\"problem-category\">{problem.category}</span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </section>\r\n      )}\r\n\r\n      {/* 题目数据管理功能区 */}\r\n      {activeTab === 'data' && (\r\n        <section className=\"data-management-section\">\r\n          <h2>📊 题目数据管理</h2>\r\n          <div className=\"action-buttons\">\r\n            <button \r\n              onClick={handleCheckStatus}\r\n              disabled={loading}\r\n              className=\"btn btn-info\"\r\n            >\r\n              🔍 检查状态\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleGenerateData}\r\n              disabled={loading}\r\n              className=\"btn btn-success\"\r\n            >\r\n              🚀 生成示例数据\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleClearData}\r\n              disabled={loading}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              🗑️ 清除所有数据\r\n            </button>\r\n          </div>\r\n\r\n          {dataStatus && (\r\n            <div className=\"status-info\">\r\n              <h4>📈 数据状态</h4>\r\n              <div className=\"status-grid\">\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">分类数量:</span>\r\n                  <span className=\"value\">{dataStatus.categoryCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">题目数量:</span>\r\n                  <span className=\"value\">{dataStatus.questionCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">数据状态:</span>\r\n                  <span className={`value ${dataStatus.hasData ? 'has-data' : 'no-data'}`}>\r\n                    {dataStatus.hasData ? '有数据' : '无数据'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </section>\r\n      )}\r\n\r\n      {/* 社区数据管理功能区 */}\r\n      {activeTab === 'community' && (\r\n        <section className=\"community-management-section\">\r\n          <h2>👥 社区数据管理</h2>\r\n          <p className=\"section-description\">\r\n            管理学习社区的帖子、评论、点赞等社交功能数据\r\n          </p>\r\n          \r\n          <div className=\"action-buttons\">\r\n            <button \r\n              onClick={handleCheckCommunityStatus}\r\n              disabled={loading}\r\n              className=\"btn btn-info\"\r\n            >\r\n              🔍 检查社区状态\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleCreateCommunityClasses}\r\n              disabled={loading}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              🏗️ 创建社区数据表\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleGenerateCommunityData}\r\n              disabled={loading}\r\n              className=\"btn btn-success\"\r\n            >\r\n              🚀 生成社区示例数据\r\n            </button>\r\n            \r\n            <button \r\n              onClick={handleClearCommunityData}\r\n              disabled={loading}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              🗑️ 清除社区数据\r\n            </button>\r\n          </div>\r\n\r\n          {communityStatus && (\r\n            <div className=\"status-info\">\r\n              <h4>📈 社区数据状态</h4>\r\n              <div className=\"status-grid\">\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">帖子数量:</span>\r\n                  <span className=\"value\">{communityStatus.postCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">评论数量:</span>\r\n                  <span className=\"value\">{communityStatus.commentCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">点赞数量:</span>\r\n                  <span className=\"value\">{communityStatus.likeCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">关注数量:</span>\r\n                  <span className=\"value\">{communityStatus.followCount}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"label\">数据状态:</span>\r\n                  <span className={`value ${communityStatus.hasData ? 'has-data' : 'no-data'}`}>\r\n                    {communityStatus.hasData ? '有数据' : '无数据'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"community-classes-info\">\r\n            <h4>🏗️ 社区数据表结构</h4>\r\n            <div className=\"classes-grid\">\r\n              <div className=\"class-card\">\r\n                <h5>📝 Post (帖子)</h5>\r\n                <ul>\r\n                  <li>title - 帖子标题</li>\r\n                  <li>content - 帖子内容</li>\r\n                  <li>author - 作者</li>\r\n                  <li>tags - 标签数组</li>\r\n                  <li>likes - 点赞数</li>\r\n                  <li>views - 浏览数</li>\r\n                  <li>commentCount - 评论数</li>\r\n                  <li>isPublic - 是否公开</li>\r\n                  <li>status - 帖子状态</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <div className=\"class-card\">\r\n                <h5>💬 Comment (评论)</h5>\r\n                <ul>\r\n                  <li>content - 评论内容</li>\r\n                  <li>author - 评论作者</li>\r\n                  <li>post - 所属帖子</li>\r\n                  <li>parent - 父评论</li>\r\n                  <li>likes - 点赞数</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <div className=\"class-card\">\r\n                <h5>👍 Like (点赞)</h5>\r\n                <ul>\r\n                  <li>user - 点赞用户</li>\r\n                  <li>post - 被点赞帖子</li>\r\n                  <li>comment - 被点赞评论</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <div className=\"class-card\">\r\n                <h5>👥 Follow (关注)</h5>\r\n                <ul>\r\n                  <li>follower - 关注者</li>\r\n                  <li>following - 被关注者</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n\r\n      {/* 通用状态显示 */}\r\n      {loading && (\r\n        <div className=\"loading-state\">\r\n          <div className=\"spinner\"></div>\r\n          <span>执行中...</span>\r\n        </div>\r\n      )}\r\n\r\n      {message && (\r\n        <div className={`message ${message.includes('❌') ? 'error' : message.includes('⚠️') ? 'warning' : 'success'}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      {/* 使用说明 */}\r\n      <div className=\"instructions\">\r\n        <h3>📖 使用说明</h3>\r\n        \r\n        {activeTab === 'notion' && (\r\n          <div className=\"instruction-item\">\r\n            <h4>🔄 Notion 同步</h4>\r\n            <ul>\r\n              <li><strong>检查连接:</strong> 验证 Notion API 连接状态</li>\r\n              <li><strong>从 Notion 导入:</strong> 将 Notion 数据库中的题目同步到本地</li>\r\n              <li><strong>智能匹配:</strong> 自动识别分类、难度、标签等字段</li>\r\n              <li><strong>去重机制:</strong> 基于 Notion Page ID 避免重复导入</li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'data' && (\r\n          <div className=\"instruction-item\">\r\n            <h4>📊 题目数据管理</h4>\r\n            <ul>\r\n              <li><strong>生成示例数据:</strong> 创建分类和题目示例数据</li>\r\n              <li><strong>检查状态:</strong> 查看当前数据统计</li>\r\n              <li><strong>清除数据:</strong> 删除所有题目和分类数据</li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'community' && (\r\n          <div className=\"instruction-item\">\r\n            <h4>👥 社区数据管理</h4>\r\n            <ul>\r\n              <li><strong>创建数据表:</strong> 初始化社区功能所需的数据表（Post、Comment、Like、Follow）</li>\r\n              <li><strong>生成示例数据:</strong> 创建示例帖子、评论和点赞数据</li>\r\n              <li><strong>检查状态:</strong> 查看社区数据统计</li>\r\n              <li><strong>清除数据:</strong> 删除所有社区相关数据</li>\r\n            </ul>\r\n            \r\n            <div className=\"community-features\">\r\n              <h5>社区功能特性:</h5>\r\n              <ul>\r\n                <li>📝 发帖和内容管理</li>\r\n                <li>💬 评论和回复系统</li>\r\n                <li>👍 点赞互动功能</li>\r\n                <li>👥 用户关注系统</li>\r\n                <li>🔐 完善的权限控制</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"instruction-item\">\r\n          <h4>🔧 环境配置要求</h4>\r\n          <div className=\"config-requirements\">\r\n            <div className=\"config-item\">\r\n              <strong>Notion 集成:</strong>\r\n              <span>需要配置 NOTION_INTEGRATION_TOKEN 和 NOTION_DATABASE_ID</span>\r\n            </div>\r\n            <div className=\"config-item\">\r\n              <strong>云函数部署:</strong>\r\n              <span>需要在 LeanCloud 云引擎部署同步函数</span>\r\n            </div>\r\n            <div className=\"config-item\">\r\n              <strong>数据库权限:</strong>\r\n              <span>Notion 数据库需要分享给集成</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InitPage;","// components/QuestionForm.jsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { createQuestion, updateQuestion, DifficultyOptions, ProficiencyOptions } from '../services/questionService';\r\nimport { getAllCategories } from '../services/categoryService';\r\nimport AV from 'leancloud-storage';\r\nimport './QuestionForm.css';\r\n\r\nconst QuestionForm = ({ question, onSave, onCancel, defaultCategoryId, onCategoryChange }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    detailedAnswer: '',\r\n    oralAnswer: '',\r\n    code: '',\r\n    url: '',\r\n    tags: [],\r\n    difficulty: DifficultyOptions.MEDIUM,\r\n    proficiency: ProficiencyOptions.BEGINNER,\r\n    appearanceLevel: 50,\r\n    categoryId: '',\r\n    images: [] // 新增：存储上传的图片信息\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [newTag, setNewTag] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingCategories, setLoadingCategories] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [activeAnswerTab, setActiveAnswerTab] = useState('detailed');\r\n  const [uploadingImages, setUploadingImages] = useState([]); // 新增：上传中的图片\r\n  \r\n  // 添加用户状态\r\n  const currentUser = AV.User.current();\r\n  \r\n  // 创建 ref 用于文件输入\r\n  const fileInputRef = useRef(null);\r\n  const detailedAnswerRef = useRef(null);\r\n  const oralAnswerRef = useRef(null);\r\n\r\n  const isEditing = !!question;\r\n\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    \r\n    if (user) {\r\n      loadCategories();\r\n      if (question) {\r\n        setFormData({\r\n          title: question.title || '',\r\n          detailedAnswer: question.detailedAnswer || '',\r\n          oralAnswer: question.oralAnswer || '',\r\n          code: question.code || '',\r\n          url: question.url || '',\r\n          tags: question.tags || [],\r\n          difficulty: question.difficulty || DifficultyOptions.MEDIUM,\r\n          proficiency: question.proficiency || ProficiencyOptions.BEGINNER,\r\n          appearanceLevel: question.appearanceLevel || 50,\r\n          categoryId: question.category?.id || '',\r\n          images: question.images || [] // 加载已有的图片\r\n        });\r\n      } else if (defaultCategoryId) {\r\n        setFormData(prev => ({ ...prev, categoryId: defaultCategoryId }));\r\n      }\r\n    }\r\n  }, [question, defaultCategoryId]);\r\n\r\n  const loadCategories = async () => {\r\n    if (!currentUser) {\r\n      return\r\n    };\r\n    \r\n    setLoadingCategories(true);\r\n    try {\r\n      const categoriesData = await getAllCategories();\r\n      \r\n      // 确保只显示当前用户的分类\r\n      const userCategories = categoriesData.filter(category => {\r\n        // 检查分类是否属于当前用户\r\n        const createdBy = category.createdBy;\r\n        return createdBy && createdBy.id === currentUser.id;\r\n      });\r\n      \r\n      setCategories(userCategories);\r\n      \r\n      console.log('加载到的分类:', {\r\n        总数: categoriesData.length,\r\n        用户分类: userCategories.length,\r\n        当前用户: currentUser.id,\r\n        分类详情: userCategories.map(cat => ({ id: cat.id, name: cat.name, createdBy: cat.createdBy?.id }))\r\n      });\r\n      \r\n      // 如果没有传入类别ID且没有默认类别ID，默认选择第一个类别\r\n      if (!isEditing && !defaultCategoryId && userCategories.length > 0 && !formData.categoryId) {\r\n        setFormData(prev => ({ ...prev, categoryId: userCategories[0].id }));\r\n        console.log('自动选择第一个分类:', userCategories[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error('加载类别失败:', error);\r\n      setErrors({ categories: '加载类别失败: ' + error.message });\r\n    } finally {\r\n      setLoadingCategories(false);\r\n    }\r\n  };\r\n\r\n  // 新增：处理拖拽事件\r\n  const handleDragOver = (e, answerType) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const textarea = answerType === 'detailed' ? detailedAnswerRef.current : oralAnswerRef.current;\r\n    if (textarea) {\r\n      textarea.classList.add('drag-over');\r\n    }\r\n  };\r\n\r\n  const handleDragLeave = (e, answerType) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const textarea = answerType === 'detailed' ? detailedAnswerRef.current : oralAnswerRef.current;\r\n    if (textarea) {\r\n      textarea.classList.remove('drag-over');\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e, answerType) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    const textarea = answerType === 'detailed' ? detailedAnswerRef.current : oralAnswerRef.current;\r\n    if (textarea) {\r\n      textarea.classList.remove('drag-over');\r\n    }\r\n\r\n    const files = Array.from(e.dataTransfer.files);\r\n    handleFiles(files, answerType);\r\n  };\r\n\r\n  // 新增：处理文件选择\r\n  const handleFileSelect = (e, answerType) => {\r\n    const files = Array.from(e.target.files);\r\n    handleFiles(files, answerType);\r\n    // 重置文件输入\r\n    e.target.value = '';\r\n  };\r\n\r\n  // 新增：处理文件上传\r\n  const handleFiles = async (files, answerType) => {\r\n    const imageFiles = files.filter(file => \r\n      file.type === 'image/jpeg' || \r\n      file.type === 'image/png' || \r\n      file.type === 'image/jpg'\r\n    );\r\n\r\n    if (imageFiles.length === 0) {\r\n      alert('请选择 JPG 或 PNG 格式的图片文件');\r\n      return;\r\n    }\r\n\r\n    for (const file of imageFiles) {\r\n      await uploadImage(file, answerType);\r\n    }\r\n  };\r\n\r\n  // 新增：上传图片到 LeanCloud\r\n  const uploadImage = async (file, answerType) => {\r\n    const uploadingId = Date.now().toString();\r\n    \r\n    try {\r\n      // 添加到上传中列表\r\n      setUploadingImages(prev => [...prev, uploadingId]);\r\n      \r\n      // 创建 LeanCloud 文件对象\r\n      const avFile = new AV.File(file.name, file);\r\n      \r\n      // 上传文件\r\n      const savedFile = await avFile.save();\r\n      \r\n      // 创建图片信息对象\r\n      const imageInfo = {\r\n        id: uploadingId,\r\n        objectId: savedFile.id,\r\n        url: savedFile.url(),\r\n        name: file.name,\r\n        size: file.size,\r\n        type: file.type,\r\n        answerType: answerType // 标记图片属于哪个答案类型\r\n      };\r\n      \r\n      // 添加到表单数据\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        images: [...prev.images, imageInfo]\r\n      }));\r\n      \r\n      // 插入图片标记到文本区域\r\n      insertImageMarkdown(imageInfo, answerType);\r\n      \r\n    } catch (error) {\r\n      console.error('图片上传失败:', error);\r\n      alert(`图片上传失败: ${error.message}`);\r\n    } finally {\r\n      // 从上传中列表移除\r\n      setUploadingImages(prev => prev.filter(id => id !== uploadingId));\r\n    }\r\n  };\r\n\r\n  // 新增：插入图片 Markdown 到文本区域\r\n  const insertImageMarkdown = (imageInfo, answerType) => {\r\n    const markdown = `![${imageInfo.name}](${imageInfo.url})`;\r\n    const field = answerType === 'detailed' ? 'detailedAnswer' : 'oralAnswer';\r\n    \r\n    setFormData(prev => {\r\n      const currentText = prev[field];\r\n      const newText = currentText ? `${currentText}\\n${markdown}` : markdown;\r\n      return { ...prev, [field]: newText };\r\n    });\r\n  };\r\n\r\n  // 新增：手动触发文件选择\r\n  const triggerFileInput = (answerType) => {\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.setAttribute('data-answer-type', answerType);\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  // 新增：删除图片\r\n  const removeImage = (imageId) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      images: prev.images.filter(img => img.id !== imageId)\r\n    }));\r\n  };\r\n\r\n  // 新增：获取指定答案类型的图片\r\n  const getImagesByAnswerType = (answerType) => {\r\n    return formData.images.filter(img => img.answerType === answerType);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.title.trim()) {\r\n      newErrors.title = '问题标题不能为空';\r\n    } else if (formData.title.trim().length < 2) {\r\n      newErrors.title = '问题标题至少需要2个字符';\r\n    }\r\n    \r\n    if (!formData.detailedAnswer.trim() && !formData.oralAnswer.trim()) {\r\n      newErrors.answer = '至少需要填写一个答案版本（详细版本或口述版本）';\r\n    }\r\n    \r\n    if (!formData.categoryId) {\r\n      newErrors.categoryId = '请选择类别';\r\n    }\r\n    \r\n    if (formData.tags.length > 10) {\r\n      newErrors.tags = '标签数量不能超过10个';\r\n    }\r\n\r\n    if (formData.url && !isValidUrl(formData.url)) {\r\n      newErrors.url = '请输入有效的URL链接';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const isValidUrl = (string) => {\r\n    try {\r\n      new URL(string);\r\n      return true;\r\n    } catch (_) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData(prev => ({ \r\n      ...prev, \r\n      [field]: value \r\n    }));\r\n    \r\n    // 清除该字段的错误信息\r\n    if (errors[field]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleAddTag = () => {\r\n    const tag = newTag.trim();\r\n    if (tag && !formData.tags.includes(tag)) {\r\n      if (formData.tags.length >= 10) {\r\n        setErrors({ tags: '标签数量不能超过10个' });\r\n        return;\r\n      }\r\n      \r\n      setFormData(prev => ({\r\n        ...prev,\r\n        tags: [...prev.tags, tag]\r\n      }));\r\n      setNewTag('');\r\n      \r\n      // 清除标签错误\r\n      if (errors.tags) {\r\n        setErrors(prev => ({\r\n          ...prev,\r\n          tags: ''\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRemoveTag = (tagToRemove) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      tags: prev.tags.filter(tag => tag !== tagToRemove)\r\n    }));\r\n  };\r\n\r\n  const handleTagKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleAddTag();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      if (isEditing) {\r\n        // 检查类别是否发生了变化\r\n        const oldCategory = question.category; // 原来的 category 对象\r\n        const newCategory = categories.find(cat => cat.id === formData.categoryId); // 新的 category 对象\r\n        const categoryChanged = oldCategory?.id !== newCategory?.id;\r\n        \r\n        await updateQuestion(question.id, formData);\r\n        \r\n        // 如果类别发生了变化，调用回调函数通知父组件\r\n        if (categoryChanged && onCategoryChange) {\r\n          onCategoryChange({\r\n            questionId: question.id,\r\n            oldCategoryId: oldCategory?.id,\r\n            newCategoryId: newCategory?.id,\r\n            question: { ...question, ...formData, category: newCategory }\r\n          });\r\n        }\r\n      } else {\r\n        // 创建题目时只需要传递 categoryId，questionService 会处理 Pointer 转换\r\n        await createQuestion(formData);\r\n      }\r\n      onSave();\r\n      window.dispatchEvent(new CustomEvent('questionCreated', {\r\n        detail: { question: result }\r\n      }));\r\n    } catch (error) {\r\n      console.error('保存题目失败:', error);\r\n      setErrors({ submit: error.message });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 新增：渲染答案标签页内容\r\n  const renderAnswerTab = (type, placeholder, hint) => {\r\n    const images = getImagesByAnswerType(type);\r\n    const isUploading = uploadingImages.length > 0;\r\n    const field = type === 'detailed' ? 'detailedAnswer' : 'oralAnswer';\r\n    const textareaRef = type === 'detailed' ? detailedAnswerRef : oralAnswerRef;\r\n    \r\n    return (\r\n      <div className=\"tab-panel\">\r\n        <div \r\n          className=\"answer-textarea-container\"\r\n          onDragOver={(e) => handleDragOver(e, type)}\r\n          onDragLeave={(e) => handleDragLeave(e, type)}\r\n          onDrop={(e) => handleDrop(e, type)}\r\n        >\r\n          <textarea\r\n            ref={textareaRef}\r\n            value={formData[field]}\r\n            onChange={(e) => handleInputChange(field, e.target.value)}\r\n            placeholder={placeholder}\r\n            rows={type === 'detailed' ? '6' : '4'}\r\n            disabled={loading}\r\n            className={errors.answer && !formData[field].trim() ? 'error' : ''}\r\n          />\r\n          \r\n          {/* 图片上传提示 */}\r\n          <div className=\"upload-hint\">\r\n            <div className=\"upload-hint-text\">\r\n              💡 支持拖拽 JPG/PNG 图片到此区域，或 \r\n              <button \r\n                type=\"button\" \r\n                className=\"upload-trigger-btn\"\r\n                onClick={() => triggerFileInput(type)}\r\n                disabled={loading || isUploading}\r\n              >\r\n                点击上传\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 已上传图片预览 */}\r\n        {images.length > 0 && (\r\n          <div className=\"uploaded-images\">\r\n            <div className=\"images-title\">已上传图片 ({images.length}):</div>\r\n            <div className=\"images-grid\">\r\n              {images.map((image) => (\r\n                <div key={image.id} className=\"image-item\">\r\n                  <img src={image.url} alt={image.name} />\r\n                  <div className=\"image-info\">\r\n                    <span className=\"image-name\">{image.name}</span>\r\n                    <button \r\n                      type=\"button\"\r\n                      className=\"remove-image-btn\"\r\n                      onClick={() => removeImage(image.id)}\r\n                      disabled={loading}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"tab-hint\">\r\n          {hint}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"question-form-overlay\">\r\n        <div className=\"question-form-dialog\">\r\n          <div className=\"question-form-header\">\r\n            <h3>请先登录</h3>\r\n            <button \r\n              type=\"button\" \r\n              className=\"close-button\"\r\n              onClick={onCancel}\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n          <div className=\"auth-required-container\">\r\n            <div className=\"auth-required-icon\">🔐</div>\r\n            <p>登录后即可添加或编辑题目</p>\r\n            <div className=\"auth-required-actions\">\r\n              <button \r\n                onClick={() => window.dispatchEvent(new CustomEvent('showAuthModal'))}\r\n                className=\"login-btn\"\r\n              >\r\n                立即登录\r\n              </button>\r\n              <button \r\n                onClick={onCancel}\r\n                className=\"btn-secondary\"\r\n              >\r\n                取消\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"question-form-overlay\">\r\n      <div className=\"question-form-dialog\">\r\n        <div className=\"question-form-header\">\r\n          <h3>{isEditing ? '编辑题目' : '添加新题目'}</h3>\r\n          <div className=\"user-info\">\r\n            <span className=\"user-badge\">👤 {currentUser.getUsername()}</span>\r\n          </div>\r\n          <button \r\n            type=\"button\" \r\n            className=\"close-button\"\r\n            onClick={onCancel}\r\n            disabled={loading}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"question-form\">\r\n          {/* 问题标题 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">问题标题 *</label>\r\n            <input\r\n              id=\"title\"\r\n              type=\"text\"\r\n              value={formData.title}\r\n              onChange={(e) => handleInputChange('title', e.target.value)}\r\n              placeholder=\"请输入问题标题\"\r\n              disabled={loading}\r\n              className={errors.title ? 'error' : ''}\r\n            />\r\n            {errors.title && <span className=\"error-message\">{errors.title}</span>}\r\n          </div>\r\n\r\n          {/* 答案版本标签页 */}\r\n          <div className=\"form-group\">\r\n            <label>问题答案 *</label>\r\n            <div className=\"answer-tabs-container\">\r\n              <div className=\"answer-tab-buttons\">\r\n                <button \r\n                  type=\"button\"\r\n                  className={`answer-tab-button ${activeAnswerTab === 'detailed' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('detailed')}\r\n                >\r\n                  详细版本\r\n                </button>\r\n                <button \r\n                  type=\"button\"\r\n                  className={`answer-tab-button ${activeAnswerTab === 'oral' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('oral')}\r\n                >\r\n                  口述版本\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"answer-tab-content\">\r\n                {activeAnswerTab === 'detailed' && \r\n                  renderAnswerTab(\r\n                    'detailed', \r\n                    '请输入详细的答案解释，包含技术细节、原理分析等', \r\n                    '适合记录完整的技术解析和详细说明'\r\n                  )\r\n                }\r\n\r\n                {activeAnswerTab === 'oral' && \r\n                  renderAnswerTab(\r\n                    'oral', \r\n                    '请输入简洁的口述版本答案，适合面试场景表达', \r\n                    '适合记录简洁的口头表达版本，便于面试时快速回忆'\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n            {errors.answer && <span className=\"error-message\">{errors.answer}</span>}\r\n          </div>\r\n\r\n          {/* 代码展示部分 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"code\">相关代码（可选）</label>\r\n            <textarea\r\n              id=\"code\"\r\n              value={formData.code}\r\n              onChange={(e) => handleInputChange('code', e.target.value)}\r\n              placeholder=\"请输入与该题目相关的代码片段，将保持原格式显示\"\r\n              rows=\"8\"\r\n              disabled={loading}\r\n              className=\"code-textarea\"\r\n            />\r\n            <div className=\"field-hint\">\r\n              代码将保持原格式显示，适合展示算法实现、组件代码等\r\n            </div>\r\n          </div>\r\n\r\n          {/* URL链接 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"url\">相关链接（可选）</label>\r\n            <input\r\n              id=\"url\"\r\n              type=\"url\"\r\n              value={formData.url}\r\n              onChange={(e) => handleInputChange('url', e.target.value)}\r\n              placeholder=\"https://example.com\"\r\n              disabled={loading}\r\n              className={errors.url ? 'error' : ''}\r\n            />\r\n            {errors.url && <span className=\"error-message\">{errors.url}</span>}\r\n            <div className=\"field-hint\">\r\n              可添加相关的文档、文章或参考链接\r\n            </div>\r\n          </div>\r\n\r\n          {/* 标签管理 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"tags\">标签（可选）</label>\r\n            <div className=\"tags-input-container\">\r\n              <input\r\n                id=\"tags\"\r\n                type=\"text\"\r\n                value={newTag}\r\n                onChange={(e) => setNewTag(e.target.value)}\r\n                onKeyPress={handleTagKeyPress}\r\n                placeholder=\"输入标签后按回车或点击添加\"\r\n                disabled={loading}\r\n                maxLength={20}\r\n              />\r\n              <button \r\n                type=\"button\" \r\n                onClick={handleAddTag}\r\n                disabled={loading || !newTag.trim()}\r\n                className=\"add-tag-button\"\r\n              >\r\n                添加\r\n              </button>\r\n            </div>\r\n            {errors.tags && <span className=\"error-message\">{errors.tags}</span>}\r\n            \r\n            {/* 标签列表 */}\r\n            {formData.tags.length > 0 && (\r\n              <div className=\"tags-list\">\r\n                <div className=\"tags-header\">\r\n                  <span>已添加标签 ({formData.tags.length}/10):</span>\r\n                </div>\r\n                <div className=\"tags-container\">\r\n                  {formData.tags.map((tag, index) => (\r\n                    <span key={index} className=\"tag\">\r\n                      {tag}\r\n                      <button \r\n                        type=\"button\" \r\n                        onClick={() => handleRemoveTag(tag)}\r\n                        disabled={loading}\r\n                        className=\"remove-tag-button\"\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* 难度和掌握程度 */}\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"difficulty\">难度</label>\r\n              <select\r\n                id=\"difficulty\"\r\n                value={formData.difficulty}\r\n                onChange={(e) => handleInputChange('difficulty', e.target.value)}\r\n                disabled={loading}\r\n              >\r\n                <option value={DifficultyOptions.EASY}>简单</option>\r\n                <option value={DifficultyOptions.MEDIUM}>中等</option>\r\n                <option value={DifficultyOptions.HARD}>困难</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"proficiency\">掌握程度</label>\r\n              <select\r\n                id=\"proficiency\"\r\n                value={formData.proficiency}\r\n                onChange={(e) => handleInputChange('proficiency', e.target.value)}\r\n                disabled={loading}\r\n              >\r\n                <option value={ProficiencyOptions.BEGINNER}>初级</option>\r\n                <option value={ProficiencyOptions.INTERMEDIATE}>中级</option>\r\n                <option value={ProficiencyOptions.ADVANCED}>高级</option>\r\n                <option value={ProficiencyOptions.MASTER}>精通</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n            \r\n          {/* 出现频率 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"appearanceLevel\">\r\n              出现频率: {formData.appearanceLevel}%\r\n              <span className=\"field-hint\">（数值越高，在复习时出现的概率越大）</span>\r\n            </label>\r\n            <input\r\n              id=\"appearanceLevel\"\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              value={formData.appearanceLevel}\r\n              onChange={(e) => handleInputChange('appearanceLevel', parseInt(e.target.value))}\r\n              disabled={loading}\r\n              className=\"appearance-slider\"\r\n            />\r\n            <div className=\"slider-labels\">\r\n              <span>低频</span>\r\n              <span>中频</span>\r\n              <span>高频</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 类别选择 */}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"category\">类别 *</label>\r\n            {loadingCategories ? (\r\n              <div className=\"loading-categories\">加载类别中...</div>\r\n            ) : categories.length === 0 ? (\r\n              <div className=\"no-categories\">\r\n                <div className=\"no-categories-icon\">📁</div>\r\n                <p>暂无类别，请先创建类别</p>\r\n                <button \r\n                  type=\"button\"\r\n                  className=\"create-category-btn\"\r\n                  onClick={() => {\r\n                    onCancel(); // 关闭题目表单\r\n                    // 触发创建分类的事件或跳转到分类管理页面\r\n                    window.dispatchEvent(new CustomEvent('showCategoryManagement'));\r\n                  }}\r\n                >\r\n                  🚀 去创建分类\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <select\r\n                id=\"category\"\r\n                value={formData.categoryId}\r\n                onChange={(e) => handleInputChange('categoryId', e.target.value)}\r\n                disabled={loading}\r\n                className={errors.categoryId ? 'error' : ''}\r\n              >\r\n                <option value=\"\">请选择类别</option>\r\n                {categories.map(category => (\r\n                  <option key={category.id} value={category.id}>\r\n                    {category.name} ({category.questionCount || 0}题)\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            )}\r\n            {errors.categoryId && <span className=\"error-message\">{errors.categoryId}</span>}\r\n          </div>\r\n\r\n          {/* 提交错误 */}\r\n          {errors.submit && (\r\n            <div className=\"submit-error\">\r\n              {errors.submit}\r\n            </div>\r\n          )}\r\n\r\n          {/* 表单操作 */}\r\n          <div className=\"form-actions\">\r\n            <button \r\n              type=\"button\" \r\n              onClick={onCancel}\r\n              disabled={loading}\r\n              className=\"btn-secondary\"\r\n            >\r\n              取消\r\n            </button>\r\n            <button \r\n              type=\"submit\" \r\n              disabled={loading}\r\n              className=\"btn-primary\"\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <span className=\"loading-spinner\"></span>\r\n                  {isEditing ? '更新中...' : '添加中...'}\r\n                </>\r\n              ) : (\r\n                isEditing ? '更新题目' : '添加题目'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        {/* 隐藏的文件输入 */}\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          style={{ display: 'none' }}\r\n          accept=\".jpg,.jpeg,.png\"\r\n          multiple\r\n          onChange={(e) => {\r\n            const answerType = e.target.getAttribute('data-answer-type');\r\n            handleFileSelect(e, answerType);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionForm;","// components/QuestionDetailCard.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport QuestionForm from './QuestionForm';\r\nimport AV from 'leancloud-storage';\r\nimport './QuestionDetailCard.css';\r\n\r\nconst QuestionDetailCard = ({ \r\n  question, \r\n  onDelete, \r\n  isExpandedView = false, \r\n  onUpdateField,\r\n  onEdit, // 新增：接收编辑回调函数\r\n  showQuestionForm, // 新增：控制表单显示\r\n  setShowQuestionForm, // 新增：控制表单显示状态\r\n  editingQuestion, // 新增：正在编辑的题目\r\n  setEditingQuestion // 新增：设置编辑题目\r\n}) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [showFullAnswer, setShowFullAnswer] = useState(isExpandedView);\r\n  const [deleteLoading, setDeleteLoading] = useState(false);\r\n  const [editLoading, setEditLoading] = useState(false);\r\n  const [activeAnswerTab, setActiveAnswerTab] = useState('oral');\r\n  const [localAppearanceLevel, setLocalAppearanceLevel] = useState(question?.appearanceLevel || 50);\r\n  const [updatingAppearance, setUpdatingAppearance] = useState(false);\r\n  \r\n  // 添加确认复习相关状态\r\n  const [showReviewConfirm, setShowReviewConfirm] = useState(false);\r\n  const [reviewDays, setReviewDays] = useState(7); // 默认7天\r\n  const [confirmingReview, setConfirmingReview] = useState(false);\r\n  \r\n  // 添加移除复习相关状态\r\n  const [showRemoveReview, setShowRemoveReview] = useState(false);\r\n  const [removeDays, setRemoveDays] = useState(7); // 默认7天\r\n  const [removingReview, setRemovingReview] = useState(false);\r\n  \r\n  // 添加用户状态\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n  }, []);\r\n\r\n  // 当question的appearanceLevel变化时更新本地状态\r\n  useEffect(() => {\r\n    console.log('question.appearanceLevel 变化:', question?.appearanceLevel);\r\n    setLocalAppearanceLevel(question?.appearanceLevel);\r\n  }, [question?.appearanceLevel]);\r\n\r\n  // 监控状态变化用于调试\r\n  useEffect(() => {\r\n    console.log('localAppearanceLevel 状态变化:', localAppearanceLevel);\r\n  }, [localAppearanceLevel]);\r\n\r\n  // 增强的 Markdown 解析函数 - 支持图片预览\r\n  const parseMarkdown = (text) => {\r\n    if (!text || text.trim() === '') {\r\n      return <span className=\"no-content\">暂无内容</span>;\r\n    }\r\n\r\n    // 分割文本为行\r\n    const lines = text.split('\\n');\r\n    const elements = [];\r\n    let inCodeBlock = false;\r\n    let codeBlockContent = [];\r\n    let codeLanguage = '';\r\n\r\n    lines.forEach((line, index) => {\r\n      // 检查代码块开始 (```language)\r\n      if (line.trim().startsWith('```')) {\r\n        if (!inCodeBlock) {\r\n          inCodeBlock = true;\r\n          codeLanguage = line.trim().substring(3).trim() || 'text';\r\n          codeBlockContent = [];\r\n          return;\r\n        } else {\r\n          inCodeBlock = false;\r\n          elements.push(\r\n            <pre key={`code-${index}`} className=\"code-block\">\r\n              <code className={`language-${codeLanguage}`}>{codeBlockContent.join('\\n')}</code>\r\n            </pre>\r\n          );\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (inCodeBlock) {\r\n        codeBlockContent.push(line);\r\n        return;\r\n      }\r\n\r\n      if (line.trim() === '') {\r\n        elements.push(<br key={`br-${index}`} />);\r\n        return;\r\n      }\r\n\r\n      // 处理图片标记 - 新增：直接渲染为小预览图\r\n      const imageMatch = line.match(/!\\[(.*?)\\]\\((.*?)\\)/);\r\n      if (imageMatch) {\r\n        const altText = imageMatch[1];\r\n        const imageUrl = imageMatch[2];\r\n        elements.push(\r\n          <div key={`img-${index}`} className=\"markdown-image-container\">\r\n            <img \r\n              src={imageUrl} \r\n              alt={altText} \r\n              className=\"markdown-image-preview\"\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                // 点击预览图可以查看大图\r\n                window.open(imageUrl, '_blank');\r\n              }}\r\n            />\r\n            {altText && altText !== '' && (\r\n              <div className=\"image-alt-text\">{altText}</div>\r\n            )}\r\n          </div>\r\n        );\r\n        return;\r\n      }\r\n\r\n      let processedLine = line;\r\n\r\n      // 处理标题\r\n      if (line.startsWith('### ')) {\r\n        elements.push(<h3 key={`h3-${index}`} className=\"md-h3\">{line.substring(4)}</h3>);\r\n        return;\r\n      } else if (line.startsWith('## ')) {\r\n        elements.push(<h2 key={`h2-${index}`} className=\"md-h2\">{line.substring(3)}</h2>);\r\n        return;\r\n      } else if (line.startsWith('# ')) {\r\n        elements.push(<h1 key={`h1-${index}`} className=\"md-h1\">{line.substring(2)}</h1>);\r\n        return;\r\n      }\r\n\r\n      // 处理粗体\r\n      processedLine = processedLine.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\r\n      processedLine = processedLine.replace(/__(.*?)__/g, '<strong>$1</strong>');\r\n\r\n      // 处理斜体\r\n      processedLine = processedLine.replace(/\\*(.*?)\\*/g, '<em>$1</em>');\r\n      processedLine = processedLine.replace(/_(.*?)_/g, '<em>$1</em>');\r\n\r\n      // 处理代码片段\r\n      processedLine = processedLine.replace(/`(.*?)`/g, '<code class=\"inline-code\">$1</code>');\r\n\r\n      // 处理链接\r\n      processedLine = processedLine.replace(/\\[(.*?)\\]\\((.*?)\\)/g, '<a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"md-link\">$1</a>');\r\n\r\n      // 处理无序列表\r\n      if (line.trim().startsWith('- ') || line.trim().startsWith('* ')) {\r\n        const listItem = line.trim().substring(2);\r\n        elements.push(\r\n          <div key={`li-${index}`} className=\"md-list-item\">\r\n            • {listItem}\r\n          </div>\r\n        );\r\n        return;\r\n      }\r\n\r\n      // 处理有序列表\r\n      const orderedListMatch = line.trim().match(/^(\\d+)\\.\\s+(.*)$/);\r\n      if (orderedListMatch) {\r\n        elements.push(\r\n          <div key={`oli-${index}`} className=\"md-list-item\">\r\n            {orderedListMatch[1]}. {orderedListMatch[2]}\r\n          </div>\r\n        );\r\n        return;\r\n      }\r\n\r\n      // 处理引用块\r\n      if (line.trim().startsWith('> ')) {\r\n        elements.push(\r\n          <blockquote key={`blockquote-${index}`} className=\"md-blockquote\">\r\n            {line.substring(2)}\r\n          </blockquote>\r\n        );\r\n        return;\r\n      }\r\n\r\n      // 普通段落\r\n      elements.push(\r\n        <div \r\n          key={`p-${index}`} \r\n          className=\"md-paragraph\"\r\n          dangerouslySetInnerHTML={{ __html: processedLine }}\r\n        />\r\n      );\r\n    });\r\n\r\n    if (inCodeBlock && codeBlockContent.length > 0) {\r\n      elements.push(\r\n        <pre key=\"code-final\" className=\"code-block\">\r\n          <code className={`language-${codeLanguage}`}>{codeBlockContent.join('\\n')}</code>\r\n        </pre>\r\n      );\r\n    }\r\n\r\n    return <div className=\"markdown-content\">{elements}</div>;\r\n  };\r\n\r\n  const getDifficultyColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#52c41a';\r\n      case 'medium': return '#faad14';\r\n      case 'hard': return '#f5222d';\r\n      default: return '#666';\r\n    }\r\n  };\r\n\r\n  const getDifficultyText = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '简单';\r\n      case 'medium': return '中等';\r\n      case 'hard': return '困难';\r\n      default: return difficulty;\r\n    }\r\n  };\r\n\r\n  const getProficiencyText = (proficiency) => {\r\n    switch (proficiency) {\r\n      case 'beginner': return '初级';\r\n      case 'intermediate': return '中级';\r\n      case 'advanced': return '高级';\r\n      case 'master': return '精通';\r\n      default: return proficiency;\r\n    }\r\n  };\r\n\r\n  const getAppearanceLevelColor = (level) => {\r\n    if (level >= 80) return '#ff6b6b';\r\n    if (level >= 60) return '#ffa726';\r\n    if (level >= 40) return '#4ecdc4';\r\n    return '#95a5a6';\r\n  };\r\n\r\n  const formatText = (text) => {\r\n    return parseMarkdown(text);\r\n  };\r\n\r\n  const formatCode = (code) => {\r\n    if (!code || code.trim() === '') {\r\n      return null;\r\n    }\r\n    return (\r\n      <pre className=\"code-block\">\r\n        <code>{code}</code>\r\n      </pre>\r\n    );\r\n  };\r\n\r\n  // 修改后的编辑处理函数 - 调用父组件的 onEdit\r\n  const handleEdit = () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    \r\n    if (onEdit) {\r\n      // 调用父组件的编辑函数\r\n      onEdit(question);\r\n    } else {\r\n      // 如果没有提供 onEdit，使用原来的内部状态管理\r\n      setIsEditing(true);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    if (deleteLoading) return;\r\n    \r\n    if (!window.confirm(`确定要删除题目 \"${question.title}\" 吗？此操作不可撤销！`)) {\r\n      return;\r\n    }\r\n\r\n    setDeleteLoading(true);\r\n    try {\r\n      await onDelete(question.id);\r\n    } catch (error) {\r\n      console.error('删除题目失败:', error);\r\n    } finally {\r\n      setDeleteLoading(false);\r\n    }\r\n  };\r\n\r\n  // 内部编辑状态的处理函数（如果使用内部状态）\r\n  const handleSave = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const toggleAnswer = () => {\r\n    setShowFullAnswer(!showFullAnswer);\r\n  };\r\n\r\n  // 处理出现频率更改 - 优化版本\r\n  const handleAppearanceLevelChange = async (newLevel) => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    console.log('开始更新出现频率:', {\r\n      新值: newLevel,\r\n      当前prop值: question?.appearanceLevel,\r\n      当前本地状态值: localAppearanceLevel\r\n    });\r\n    \r\n    // 立即更新本地状态（乐观更新）\r\n    setLocalAppearanceLevel(newLevel);\r\n    \r\n    if (onUpdateField && question?.id) {\r\n      setUpdatingAppearance(true);\r\n      try {\r\n        await onUpdateField(question.id, 'appearanceLevel', newLevel);\r\n        console.log('出现频率更新成功，等待父组件数据更新');\r\n        \r\n        // 注意：这里不直接更新本地状态，等待父组件传递新的 question prop\r\n        // 父组件应该在 onUpdateField 成功后更新数据并重新传递 question prop\r\n        \r\n      } catch (error) {\r\n        console.error('更新出现频率失败:', error);\r\n        // 出错时回滚到原来的值\r\n        setLocalAppearanceLevel(question?.appearanceLevel || 50);\r\n      } finally {\r\n        setUpdatingAppearance(false);\r\n      }\r\n    } else {\r\n      console.warn('缺少 onUpdateField 或 question.id');\r\n    }\r\n  };\r\n\r\n  // 防抖的滑块处理函数\r\n  const handleSliderChange = (e) => {\r\n    const newLevel = parseInt(e.target.value);\r\n    handleAppearanceLevelChange(newLevel);\r\n  };\r\n\r\n  // 处理确认复习\r\n  const handleConfirmReview = async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    if (confirmingReview) return;\r\n\r\n    setConfirmingReview(true);\r\n    try {\r\n      // 计算下次提醒时间\r\n      const nextReviewDate = new Date();\r\n      nextReviewDate.setDate(nextReviewDate.getDate() + reviewDays);\r\n      \r\n      // 更新题目的下次复习时间\r\n      if (onUpdateField && question?.id) {\r\n        await onUpdateField(question.id, 'nextReviewDate', nextReviewDate.toISOString());\r\n        console.log(`题目将在 ${reviewDays} 天后再次提醒复习`);\r\n        \r\n        // 显示成功消息\r\n        alert(`已确认复习！该题目将在 ${reviewDays} 天后再次出现在复习列表中`);\r\n        \r\n        // 关闭确认对话框\r\n        setShowReviewConfirm(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('确认复习失败:', error);\r\n      alert('确认复习失败，请重试');\r\n    } finally {\r\n      setConfirmingReview(false);\r\n    }\r\n  };\r\n\r\n  // 处理移除复习\r\n  const handleRemoveFromReview = async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    if (removingReview) return;\r\n\r\n    setRemovingReview(true);\r\n    try {\r\n      // 计算下次提醒时间\r\n      const nextReviewDate = new Date();\r\n      nextReviewDate.setDate(nextReviewDate.getDate() + removeDays);\r\n      \r\n      // 更新题目的下次复习时间\r\n      if (onUpdateField && question?.id) {\r\n        await onUpdateField(question.id, 'nextReviewDate', nextReviewDate.toISOString());\r\n        console.log(`题目将在 ${removeDays} 天后再次提醒复习`);\r\n        \r\n        // 显示成功消息\r\n        alert(`已暂停复习！该题目将在 ${removeDays} 天后再次出现在复习列表中`);\r\n        \r\n        // 关闭确认对话框\r\n        setShowRemoveReview(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('移除复习失败:', error);\r\n      alert('操作失败，请重试');\r\n    } finally {\r\n      setRemovingReview(false);\r\n    }\r\n  };\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className={`question-detail-card ${isExpandedView ? 'expanded-view' : ''}`}>\r\n        <div className=\"auth-required-container\">\r\n          <div className=\"auth-required-icon\">🔐</div>\r\n          <h3>请先登录</h3>\r\n          <p>登录后即可查看题目详情</p>\r\n          <div className=\"auth-required-actions\">\r\n            <button \r\n              onClick={() => window.dispatchEvent(new CustomEvent('showAuthModal'))}\r\n              className=\"login-btn\"\r\n            >\r\n              立即登录\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 如果使用内部编辑状态并且正在编辑\r\n  if (isEditing && !onEdit) {\r\n    return (\r\n      <div className={`question-edit-container ${isExpandedView ? 'expanded-view' : ''}`}>\r\n        <QuestionForm\r\n          question={question}\r\n          onSave={handleSave}\r\n          onCancel={handleCancel}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 安全地获取数据\r\n  const detailedAnswer = question?.detailedAnswer || '';\r\n  const oralAnswer = question?.oralAnswer || '';\r\n  const code = question?.code || '';\r\n  const url = question?.url || '';\r\n  // 使用本地状态而不是直接使用 question.appearanceLevel\r\n  const appearanceLevel = localAppearanceLevel;\r\n\r\n  return (\r\n    <div className={`question-detail-card ${isExpandedView ? 'expanded-view' : ''}`}>\r\n     \r\n      {/* 头部信息 */}\r\n      {!isExpandedView && (\r\n        <div className=\"question-header\">\r\n          <div className=\"question-title-section\">\r\n            <h3 className=\"question-title\">{question?.title || '无标题'}</h3>\r\n            <div className=\"question-meta-badges\">\r\n              <span \r\n                className=\"difficulty-badge\"\r\n                style={{ backgroundColor: getDifficultyColor(question?.difficulty) }}\r\n              >\r\n                {getDifficultyText(question?.difficulty)}\r\n              </span>\r\n              <span className=\"proficiency-badge\">\r\n                {getProficiencyText(question?.proficiency)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"question-actions\">\r\n            <button \r\n              onClick={handleEdit}\r\n              className=\"btn-edit\"\r\n              title=\"编辑题目\"\r\n              disabled={deleteLoading}\r\n            >\r\n              {editLoading ? '编辑中...' : '✏️ 编辑'}\r\n            </button>\r\n\r\n            <button \r\n              onClick={() => setShowRemoveReview(true)}\r\n              className=\"btn-remove-review\"\r\n              title=\"暂时移除复习\"\r\n            >\r\n              ⏸️ 暂停复习\r\n            </button>\r\n            <button \r\n              onClick={handleDelete}\r\n              className=\"btn-delete\"\r\n              title=\"删除题目\"\r\n              disabled={deleteLoading}\r\n            >\r\n              {deleteLoading ? '删除中...' : '🗑️ 删除'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 出现频率显示 - 可编辑 */}\r\n      <div className=\"appearance-level-display\">\r\n        <div className=\"appearance-header\">\r\n          <span className=\"appearance-label\">出现频率</span>\r\n          <span className={`appearance-value ${updatingAppearance ? 'updating' : ''}`}>\r\n            {updatingAppearance ? '保存中...' : `${appearanceLevel}%`}\r\n          </span>\r\n        </div>\r\n        <div className=\"appearance-slider-container\">\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={appearanceLevel}\r\n            onChange={handleSliderChange}\r\n            className=\"appearance-slider-editable\"\r\n            disabled={updatingAppearance}\r\n            style={{\r\n              background: `linear-gradient(90deg, \r\n                ${getAppearanceLevelColor(0)} 0%, \r\n                ${getAppearanceLevelColor(50)} 50%, \r\n                ${getAppearanceLevelColor(100)} 100%)`\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"appearance-labels\">\r\n          <span className=\"appearance-label-low\">低频</span>\r\n          <span className=\"appearance-label-high\">高频</span>\r\n        </div>\r\n        <div className=\"appearance-hint\">\r\n          拖动滑块调整出现频率，数值越高在复习时出现的概率越大\r\n          {updatingAppearance && <span className=\"saving-indicator\"> • 保存中...</span>}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 答案内容区域 */}\r\n      <div className=\"answer-section\">\r\n        {!isExpandedView && (\r\n          <div className=\"answer-header\">\r\n            <h4>答案</h4>\r\n            <div className=\"answer-controls\">\r\n              <div className=\"answer-tabs\">\r\n                <button \r\n                  className={`tab-button ${activeAnswerTab === 'detailed' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('detailed')}\r\n                >\r\n                  详细版本\r\n                </button>\r\n                <button \r\n                  className={`tab-button ${activeAnswerTab === 'oral' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('oral')}\r\n                >\r\n                  口述版本\r\n                </button>\r\n              </div>\r\n              <button \r\n                onClick={toggleAnswer}\r\n                className=\"toggle-answer-btn\"\r\n              >\r\n                {showFullAnswer ? '收起' : '展开'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 答案内容 */}\r\n        <div className={`answer-content ${showFullAnswer || isExpandedView ? 'expanded' : 'collapsed'}`}>\r\n          {isExpandedView ? (\r\n            <div className=\"expanded-answer-tabs\">\r\n              <div className=\"expanded-tab-buttons\">\r\n                <button \r\n                  className={`expanded-tab-button ${activeAnswerTab === 'detailed' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('detailed')}\r\n                >\r\n                  详细版本\r\n                </button>\r\n                <button \r\n                  className={`expanded-tab-button ${activeAnswerTab === 'oral' ? 'active' : ''}`}\r\n                  onClick={() => setActiveAnswerTab('oral')}\r\n                >\r\n                  口述版本\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"expanded-tab-content\">\r\n                {activeAnswerTab === 'detailed' ? (\r\n                  <div className=\"detailed-answer\">\r\n                    <h5>详细答案</h5>\r\n                    <div className=\"answer-text markdown-enabled\">\r\n                      {formatText(detailedAnswer)}\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"oral-answer\">\r\n                    <h5>口述答案</h5>\r\n                    <div className=\"answer-text markdown-enabled\">\r\n                      {formatText(oralAnswer)}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"answer-text markdown-enabled\">\r\n              {activeAnswerTab === 'detailed' ? formatText(detailedAnswer) : formatText(oralAnswer)}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* 代码部分 */}\r\n        {code && code.trim() && (\r\n          <div className=\"code-section\">\r\n            <h5>相关代码</h5>\r\n            {formatCode(code)}\r\n          </div>\r\n        )}\r\n\r\n        {/* 链接部分 */}\r\n        {url && url.trim() && (\r\n          <div className=\"url-section\">\r\n            <h5>相关链接</h5>\r\n            <a \r\n              href={url} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\"\r\n              className=\"question-link\"\r\n            >\r\n              🔗 {url}\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 确认复习按钮 */}\r\n      <div className=\"review-confirm-section\">\r\n        <button \r\n          className=\"confirm-review-btn\"\r\n          onClick={() => setShowReviewConfirm(true)}\r\n        >\r\n          ✅ 确认已复习\r\n        </button>\r\n        <p className=\"review-hint\">\r\n          点击确认后，该题目将在一段时间内不会出现在复习列表中\r\n        </p>\r\n      </div>\r\n\r\n      {/* 确认复习对话框 */}\r\n      {showReviewConfirm && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content review-confirm-modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>确认复习完成</h3>\r\n              <button \r\n                className=\"close-btn\"\r\n                onClick={() => setShowReviewConfirm(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"modal-body\">\r\n              <p>请选择在多少天内不再提醒复习这道题目：</p>\r\n              \r\n              <div className=\"review-days-selector\">\r\n                <div className=\"days-presets\">\r\n                  {[1, 3, 7, 14, 30].map(days => (\r\n                    <button\r\n                      key={days}\r\n                      className={`days-preset-btn ${reviewDays === days ? 'active' : ''}`}\r\n                      onClick={() => setReviewDays(days)}\r\n                    >\r\n                      {days}天\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                \r\n                <div className=\"custom-days-input\">\r\n                  <label htmlFor=\"customDays\">自定义天数：</label>\r\n                  <input\r\n                    id=\"customDays\"\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"365\"\r\n                    value={reviewDays}\r\n                    onChange={(e) => setReviewDays(parseInt(e.target.value) || 1)}\r\n                    className=\"days-input\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"review-info\">\r\n                <p><strong>题目：</strong>{question?.title}</p>\r\n                <p><strong>下次提醒时间：</strong>\r\n                  {new Date(Date.now() + reviewDays * 24 * 60 * 60 * 1000).toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"modal-actions\">\r\n              <button\r\n                className=\"cancel-btn\"\r\n                onClick={() => setShowReviewConfirm(false)}\r\n                disabled={confirmingReview}\r\n              >\r\n                取消\r\n              </button>\r\n              <button\r\n                className=\"confirm-btn\"\r\n                onClick={handleConfirmReview}\r\n                disabled={confirmingReview}\r\n              >\r\n                {confirmingReview ? '确认中...' : '确认复习'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 移除复习对话框 */}\r\n      {showRemoveReview && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content remove-review-modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>暂停复习提醒</h3>\r\n              <button \r\n                className=\"close-btn\"\r\n                onClick={() => setShowRemoveReview(false)}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"modal-body\">\r\n              <p>选择在多少天内不再提醒复习这道题目：</p>\r\n              \r\n              <div className=\"remove-days-selector\">\r\n                <div className=\"days-presets\">\r\n                  {[1, 3, 7, 14, 30, 90].map(days => (\r\n                    <button\r\n                      key={days}\r\n                      className={`days-preset-btn ${removeDays === days ? 'active' : ''}`}\r\n                      onClick={() => setRemoveDays(days)}\r\n                    >\r\n                      {days}天\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                \r\n                <div className=\"custom-days-input\">\r\n                  <label htmlFor=\"customRemoveDays\">自定义天数：</label>\r\n                  <input\r\n                    id=\"customRemoveDays\"\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"365\"\r\n                    value={removeDays}\r\n                    onChange={(e) => setRemoveDays(parseInt(e.target.value) || 1)}\r\n                    className=\"days-input\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"remove-review-info\">\r\n                <p><strong>题目：</strong>{question?.title}</p>\r\n                <p><strong>下次提醒时间：</strong>\r\n                  {new Date(Date.now() + removeDays * 24 * 60 * 60 * 1000).toLocaleDateString()}\r\n                </p>\r\n                <p className=\"info-text\">\r\n                  💡 在此期间，该题目不会出现在复习列表中\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"modal-actions\">\r\n              <button\r\n                className=\"cancel-btn\"\r\n                onClick={() => setShowRemoveReview(false)}\r\n                disabled={removingReview}\r\n              >\r\n                取消\r\n              </button>\r\n              <button\r\n                className=\"confirm-btn\"\r\n                onClick={handleRemoveFromReview}\r\n                disabled={removingReview}\r\n              >\r\n                {removingReview ? '处理中...' : '确认暂停'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 详细信息 */}\r\n      <div className=\"card-details\">\r\n        {!isExpandedView && (\r\n          <div className=\"category-info\">\r\n            <span className=\"category-label\">所属分类:</span>\r\n            <span className=\"category-name\">{question?.category?.name || '未分类'}</span>\r\n          </div>\r\n        )}\r\n\r\n        {question?.tags && question.tags.length > 0 && (\r\n          <div className=\"tags-section\">\r\n            <h4>标签</h4>\r\n            <div className=\"tags-container\">\r\n              {question.tags.map((tag, index) => (\r\n                <span key={index} className=\"tag\">\r\n                  #{tag}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"time-info\">\r\n          <span className=\"create-time\">\r\n            创建: {question?.createdAt ? new Date(question.createdAt).toLocaleDateString() : '未知'}\r\n          </span>\r\n          <span className=\"update-time\">\r\n            更新: {question?.updatedAt ? new Date(question.updatedAt).toLocaleDateString() : '未知'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 展开视图下的操作按钮 */}\r\n      {isExpandedView && (\r\n        <div className=\"expanded-actions\">\r\n          <button \r\n            onClick={handleEdit}\r\n            className=\"btn-edit primary\"\r\n            disabled={deleteLoading}\r\n          >\r\n            ✏️ 编辑题目\r\n          </button>\r\n          <button \r\n            onClick={() => setShowRemoveReview(true)}\r\n            className=\"btn-remove-review secondary\"\r\n          >\r\n            ⏸️ 暂停复习\r\n          </button>\r\n          <button \r\n            onClick={handleDelete}\r\n            className=\"btn-delete secondary\"\r\n            disabled={deleteLoading}\r\n          >\r\n            🗑️ 删除题目\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* 在虚拟化容器之外渲染编辑表单 - 新增 */}\r\n      {showQuestionForm && editingQuestion && editingQuestion.id === question.id && (\r\n        <div \r\n          className=\"form-modal-overlay\"\r\n          style={{\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            zIndex: 9999,\r\n            padding: '20px'\r\n          }}\r\n        >\r\n          <QuestionForm\r\n            question={editingQuestion}\r\n            onSave={() => {\r\n              setShowQuestionForm(false);\r\n              setEditingQuestion(null);\r\n            }}\r\n            onCancel={() => {\r\n              setShowQuestionForm(false);\r\n              setEditingQuestion(null);\r\n            }}\r\n            defaultCategoryId={question?.category?.id}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionDetailCard;","// pages/CategoryDetailPage.jsx\r\nimport React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useInfiniteQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { useVirtualizer } from '@tanstack/react-virtual';\r\nimport { initAV, getCategoryWithQuestions, getAllCategories, getQuestionsByCategory } from '../services/categoryService';\r\nimport { deleteQuestion, updateQuestion } from '../services/questionService';\r\nimport QuestionDetailCard from '../components/QuestionDetailCard';\r\nimport QuestionForm from '../components/QuestionForm';\r\nimport AV from 'leancloud-storage';\r\nimport './CategoryDetailPage.css';\r\n\r\n// 分页配置\r\nconst PAGE_SIZE = 20; // 每页加载的题目数量\r\n\r\n// 防抖函数\r\nconst debounce = (func, wait) => {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n};\r\n\r\nconst CategoryDetailPage = () => {\r\n  const { categoryId } = useParams();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  \r\n  const [category, setCategory] = useState(null);\r\n  const [allCategories, setAllCategories] = useState([]);\r\n  const [showQuestionForm, setShowQuestionForm] = useState(false);\r\n  const [editingQuestion, setEditingQuestion] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortBy, setSortBy] = useState('createdAt');\r\n  const [expandedQuestions, setExpandedQuestions] = useState(new Set());\r\n  const [viewMode, setViewMode] = useState('accordion');\r\n  const [draggingQuestion, setDraggingQuestion] = useState(null);\r\n  const [dragOverQuestion, setDragOverQuestion] = useState(null);\r\n  const [syncMessage, setSyncMessage] = useState('');\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  const loadMoreTriggerRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n\r\n  // 初始化用户和基础数据\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n    \r\n    if (user) {\r\n      initializeData();\r\n    }\r\n  }, [categoryId]);\r\n\r\n  // 滚动到指定题目的事件监听\r\n  useEffect(() => {\r\n    const handleScrollToQuestion = (event) => {\r\n      const { questionId } = event.detail;\r\n      \r\n      const questionElement = document.querySelector(`[data-question-id=\"${questionId}\"]`);\r\n      if (questionElement) {\r\n        questionElement.scrollIntoView({ \r\n          behavior: 'smooth', \r\n          block: 'center' \r\n        });\r\n        \r\n        questionElement.style.boxShadow = '0 0 0 3px #667eea';\r\n        setTimeout(() => {\r\n          questionElement.style.boxShadow = '';\r\n        }, 2000);\r\n        \r\n        if (!expandedQuestions.has(questionId)) {\r\n          toggleQuestion(questionId);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scrollToQuestion', handleScrollToQuestion);\r\n    \r\n    return () => {\r\n      window.removeEventListener('scrollToQuestion', handleScrollToQuestion);\r\n    };\r\n  }, [expandedQuestions]);\r\n\r\n  // 初始化基础数据\r\n  const initializeData = async () => {\r\n    try {\r\n      initAV();\r\n      \r\n      // 串行执行，避免并发请求\r\n      await loadCategoryInfo();\r\n      await new Promise(resolve => setTimeout(resolve, 300)); // 添加延迟\r\n      await loadAllCategories();\r\n    } catch (error) {\r\n      console.error('初始化失败:', error);\r\n      // 如果是429错误，显示友好提示\r\n      if (error.code === 429 || error.message.includes('Too many requests')) {\r\n        setSyncMessage('请求过于频繁，请稍后重试');\r\n        setTimeout(() => setSyncMessage(''), 5000);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 加载分类信息\r\n  const loadCategoryInfo = async () => {\r\n    try {\r\n      const data = await getCategoryWithQuestions(categoryId);\r\n      setCategory(data.category);\r\n    } catch (error) {\r\n      console.error('加载分类信息失败:', error);\r\n    }\r\n  };\r\n\r\n  // 加载所有分类\r\n  const loadAllCategories = async () => {\r\n    try {\r\n      const categoriesData = await getAllCategories();\r\n      const userCategories = categoriesData.filter(cat => {\r\n        const createdBy = cat.createdBy;\r\n        return createdBy && createdBy.id === currentUser?.id;\r\n      });\r\n      setAllCategories(userCategories);\r\n    } catch (error) {\r\n      console.error('加载所有分类失败:', error);\r\n      // 处理429错误\r\n      if (error.code === 429 || error.message.includes('Too many requests')) {\r\n        setSyncMessage('服务器繁忙，请稍后重试');\r\n        setTimeout(() => setSyncMessage(''), 5000);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // 修复无限滚动查询\r\n  const {\r\n    data,\r\n    fetchNextPage,\r\n    hasNextPage,\r\n    isFetchingNextPage,\r\n    isLoading,\r\n    error,\r\n    refetch\r\n  } = useInfiniteQuery({\r\n    queryKey: ['questions', categoryId, sortBy],\r\n    queryFn: async ({ pageParam = 0 }) => {\r\n      console.log('正在获取第', pageParam + 1, '页数据');\r\n      \r\n      const result = await getQuestionsByCategory(categoryId, {\r\n        page: pageParam,\r\n        pageSize: PAGE_SIZE,\r\n        sortBy,\r\n        sortOrder: 'desc'\r\n      });\r\n      \r\n      console.log('第', pageParam + 1, '页返回数据:', {\r\n        dataLength: result.data?.length,\r\n        hasMore: result.data?.length === PAGE_SIZE,\r\n        total: result.total\r\n      });\r\n      \r\n      return {\r\n        questions: result.data || [],\r\n        total: result.total,\r\n        nextPage: result.data?.length === PAGE_SIZE ? pageParam + 1 : undefined\r\n      };\r\n    },\r\n    getNextPageParam: (lastPage, allPages) => {\r\n      const nextPage = lastPage.nextPage;\r\n      \r\n      return nextPage;\r\n    },\r\n    enabled: !!categoryId && !!currentUser,\r\n    staleTime: 1000 * 60 * 5,\r\n    initialPageParam: 0,\r\n  });\r\n\r\n// 在扁平化所有页面的题目时添加去重\r\nconst allQuestions = useMemo(() => {\r\n  const questions = data?.pages.flatMap(page => page.questions) || [];\r\n  \r\n  // 去重逻辑：基于 question.id\r\n  const uniqueQuestions = questions.reduce((acc, current) => {\r\n    const existing = acc.find(item => item.id === current.id);\r\n    if (!existing) {\r\n      acc.push(current);\r\n    } else {\r\n      console.warn('发现重复题目:', current.id, current.title);\r\n    }\r\n    return acc;\r\n  }, []);\r\n  \r\n  return uniqueQuestions;\r\n}, [data]);\r\n\r\n// 在搜索过滤后的题目中也确保去重\r\nconst filteredQuestions = useMemo(() => {\r\n  if (!searchTerm) return allQuestions;\r\n  \r\n  const filtered = allQuestions.filter(question =>\r\n    question.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    (question.detailedAnswer && question.detailedAnswer.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n    (question.oralAnswer && question.oralAnswer.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n    (question.code && question.code.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n    (question.tags && question.tags.some(tag => \r\n      tag.toLowerCase().includes(searchTerm.toLowerCase())\r\n    ))\r\n  );\r\n  \r\n  // 再次去重确保安全\r\n  const uniqueFiltered = Array.from(new Map(filtered.map(item => [item.id, item])).values());\r\n  \r\n  return uniqueFiltered;\r\n}, [allQuestions, searchTerm]);\r\n\r\n// 在排序后的题目中也确保去重\r\nconst sortedQuestions = useMemo(() => {\r\n  const sorted = [...filteredQuestions].sort((a, b) => {\r\n    switch (sortBy) {\r\n      case 'title':\r\n        return a.title.localeCompare(b.title);\r\n      case 'difficulty':\r\n        const difficultyOrder = { 'easy': 1, 'medium': 2, 'hard': 3 };\r\n        return difficultyOrder[a.difficulty] - difficultyOrder[b.difficulty];\r\n      case 'appearanceLevel':\r\n        return (b.appearanceLevel || 50) - (a.appearanceLevel || 50);\r\n      case 'createdAt':\r\n        return new Date(b.createdAt) - new Date(a.createdAt);\r\n      case 'updatedAt':\r\n        return new Date(b.updatedAt) - new Date(a.createdAt);\r\n      default:\r\n        return (b.appearanceLevel || 50) - (a.appearanceLevel || 50);\r\n    }\r\n  });\r\n  \r\n  // 最终去重检查\r\n  const finalUnique = Array.from(new Map(sorted.map(item => [item.id, item])).values());\r\n  \r\n  return finalUnique;\r\n}, [filteredQuestions, sortBy]);\r\n  // React Virtual 虚拟化配置\r\n  const virtualizer = useVirtualizer({\r\n    count: sortedQuestions.length,\r\n    getScrollElement: () => containerRef.current,\r\n    estimateSize: () => viewMode === 'grid' ? 200 : 120,\r\n    overscan: 10,\r\n  });\r\n\r\n  // 修复：改进的滚动加载逻辑\r\n  const handleScroll = useCallback(() => {\r\n    const container = containerRef.current;\r\n    if (!container || !hasNextPage || isFetchingNextPage) {\r\n      return;\r\n    }\r\n\r\n    const { scrollTop, scrollHeight, clientHeight } = container;\r\n    const scrollThreshold = 100;\r\n    const distanceFromBottom = scrollHeight - scrollTop - clientHeight;\r\n    \r\n    console.log('滚动检查:', {\r\n      distanceFromBottom,\r\n      shouldLoad: distanceFromBottom < scrollThreshold,\r\n      hasNextPage,\r\n      isFetchingNextPage\r\n    });\r\n    \r\n    if (distanceFromBottom < scrollThreshold) {\r\n      console.log('🎯 触发加载更多！当前页数:', data?.pages?.length || 0);\r\n      fetchNextPage();\r\n    }\r\n  }, [hasNextPage, isFetchingNextPage, fetchNextPage, data]);\r\n\r\n  // 修复：确保滚动监听正确绑定\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n    if (!container) {\r\n      console.log('❌ 未找到滚动容器');\r\n      return;\r\n    }\r\n\r\n    console.log('✅ 绑定滚动监听器');\r\n    const debouncedScroll = debounce(handleScroll, 50);\r\n    \r\n    container.addEventListener('scroll', debouncedScroll);\r\n    \r\n    return () => {\r\n      container.removeEventListener('scroll', debouncedScroll);\r\n    };\r\n  }, [handleScroll]);\r\n\r\n  // 修复：改进的 Intersection Observer\r\n  useEffect(() => {\r\n    if (!loadMoreTriggerRef.current || !hasNextPage || isFetchingNextPage) {\r\n      return;\r\n    }\r\n\r\n    console.log('🔍 设置 Intersection Observer');\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          console.log('🎯 Intersection Observer 触发加载更多！');\r\n          fetchNextPage();\r\n        }\r\n      },\r\n      { \r\n        threshold: 0.1,\r\n        root: containerRef.current,\r\n        rootMargin: '100px'\r\n      }\r\n    );\r\n\r\n    observer.observe(loadMoreTriggerRef.current);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [hasNextPage, isFetchingNextPage, fetchNextPage, sortedQuestions.length]);\r\n\r\n  // 修复：手动测试加载更多的函数\r\n  const handleManualLoadMore = () => {\r\n    console.log('🔄 手动触发加载更多');\r\n    fetchNextPage();\r\n  };\r\n\r\n  // 删除题目 mutation\r\n  const deleteQuestionMutation = useMutation({\r\n    mutationFn: deleteQuestion,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['questions', categoryId]);\r\n      setSyncMessage('题目删除成功');\r\n      setTimeout(() => setSyncMessage(''), 3000);\r\n    },\r\n    onError: (error) => {\r\n      console.error('删除题目失败:', error);\r\n      alert('删除失败: ' + error.message);\r\n    }\r\n  });\r\n\r\n  // 更新题目 mutation\r\n  const updateQuestionMutation = useMutation({\r\n    mutationFn: ({ questionId, data }) => updateQuestion(questionId, data),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['questions', categoryId]);\r\n    },\r\n    onError: (error) => {\r\n      console.error('更新题目失败:', error);\r\n      throw new Error('更新失败: ' + error.message);\r\n    }\r\n  });\r\n\r\n  // 处理题目类别变化\r\n  const handleQuestionCategoryChange = ({ questionId, oldCategoryId, newCategoryId, question }) => {\r\n    const currentCategory = category;\r\n    \r\n    if (oldCategoryId === currentCategory.id) {\r\n      queryClient.invalidateQueries(['questions', categoryId]);\r\n      \r\n      setExpandedQuestions(prev => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(questionId);\r\n        return newSet;\r\n      });\r\n      \r\n      const newCategory = allCategories.find(cat => cat.id === newCategoryId);\r\n      setSyncMessage(`题目已移动到分类: ${newCategory?.name || '其他分类'}`);\r\n      setTimeout(() => setSyncMessage(''), 3000);\r\n    }\r\n  };\r\n\r\n  const toggleQuestion = (questionId) => {\r\n    setExpandedQuestions(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(questionId)) {\r\n        newSet.delete(questionId);\r\n      } else {\r\n        newSet.add(questionId);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const expandAllQuestions = () => {\r\n    const allQuestionIds = new Set(sortedQuestions.map(q => q.id));\r\n    setExpandedQuestions(allQuestionIds);\r\n  };\r\n\r\n  const collapseAllQuestions = () => {\r\n    setExpandedQuestions(new Set());\r\n  };\r\n\r\n  const handleAddQuestion = () => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    setEditingQuestion(null);\r\n    setShowQuestionForm(true);\r\n  };\r\n\r\n  const handleEditQuestion = (question) => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n    setEditingQuestion(question);\r\n    setShowQuestionForm(true);\r\n  };\r\n\r\n  const handleDeleteQuestion = async (questionId) => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    const questionToDelete = sortedQuestions.find(q => q.id === questionId);\r\n    if (!questionToDelete) {\r\n      throw new Error('未找到要删除的题目');\r\n    }\r\n\r\n    const confirmMessage = `确定要删除题目 \"${questionToDelete.title}\" 吗？此操作不可撤销！`;\r\n    if (!window.confirm(confirmMessage)) {\r\n      return;\r\n    }\r\n\r\n    deleteQuestionMutation.mutate(questionId);\r\n    \r\n    setExpandedQuestions(prev => {\r\n      const newSet = new Set(prev);\r\n      newSet.delete(questionId);\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const handleUpdateQuestionField = async (questionId, field, value) => {\r\n    if (!currentUser) {\r\n      alert('请先登录');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await updateQuestionMutation.mutateAsync({\r\n        questionId,\r\n        data: { [field]: value }\r\n      });\r\n    } catch (error) {\r\n      console.error('更新题目字段失败:', error);\r\n      throw new Error('更新失败: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    refetch();\r\n  };\r\n\r\n  // 拖拽相关函数\r\n  const handleDragStart = (e, questionId) => {\r\n    if (expandedQuestions.size > 0) return;\r\n    \r\n    setDraggingQuestion(questionId);\r\n    e.dataTransfer.effectAllowed = 'move';\r\n    e.dataTransfer.setData('text/plain', questionId);\r\n    \r\n    e.currentTarget.style.opacity = '0.4';\r\n  };\r\n\r\n  const handleDragOver = (e, questionId) => {\r\n    if (expandedQuestions.size > 0 || !draggingQuestion) return;\r\n    \r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = 'move';\r\n    setDragOverQuestion(questionId);\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    setDragOverQuestion(null);\r\n  };\r\n\r\n  const handleDrop = async (e, targetQuestionId) => {\r\n    if (expandedQuestions.size > 0 || !draggingQuestion) return;\r\n    \r\n    e.preventDefault();\r\n    \r\n    if (draggingQuestion !== targetQuestionId) {\r\n      const fromIndex = sortedQuestions.findIndex(q => q.id === draggingQuestion);\r\n      const toIndex = sortedQuestions.findIndex(q => q.id === targetQuestionId);\r\n      \r\n      const newQuestions = [...sortedQuestions];\r\n      const [movedQuestion] = newQuestions.splice(fromIndex, 1);\r\n      newQuestions.splice(toIndex, 0, movedQuestion);\r\n      \r\n      try {\r\n        await updateQuestionMutation.mutateAsync({\r\n          questionId: movedQuestion.id,\r\n          data: { appearanceLevel: movedQuestion.appearanceLevel }\r\n        });\r\n        console.log('排序保存成功');\r\n      } catch (error) {\r\n        console.error('保存排序失败:', error);\r\n        refetch();\r\n      }\r\n    }\r\n    \r\n    setDraggingQuestion(null);\r\n    setDragOverQuestion(null);\r\n  };\r\n\r\n  const handleDragEnd = (e) => {\r\n    setDraggingQuestion(null);\r\n    setDragOverQuestion(null);\r\n    e.currentTarget.style.opacity = '1';\r\n  };\r\n\r\n  // 调试信息\r\n  useEffect(() => {\r\n    console.log('分页状态:', {\r\n      hasNextPage,\r\n      isFetchingNextPage,\r\n      totalQuestions: allQuestions.length,\r\n      pages: data?.pages?.length || 0\r\n    });\r\n  }, [hasNextPage, isFetchingNextPage, allQuestions.length, data]);\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"category-detail-page\">\r\n        <div className=\"auth-required-container\">\r\n          <div className=\"auth-required-icon\">🔐</div>\r\n          <h2>请先登录</h2>\r\n          <p>登录后即可查看和管理题目</p>\r\n          <div className=\"auth-required-actions\">\r\n            <button \r\n              onClick={() => window.dispatchEvent(new CustomEvent('showAuthModal'))}\r\n              className=\"login-btn\"\r\n            >\r\n              立即登录\r\n            </button>\r\n            <button onClick={handleBack} className=\"btn-back\">\r\n              返回首页\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading && !category) {\r\n    return (\r\n      <div className=\"category-detail-page\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载题目中...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  if (error && !category) {\r\n    return (\r\n      <div className=\"category-detail-page\">\r\n        <div className=\"error-container\">\r\n          <div className=\"error-icon\">⚠️</div>\r\n          <h2>加载失败</h2>\r\n          <p>{error.message}</p>\r\n          <div className=\"error-actions\">\r\n            <button onClick={handleRetry} className=\"btn-retry\">\r\n              重新加载\r\n            </button>\r\n            <button onClick={handleBack} className=\"btn-back\">\r\n              返回首页\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!category) {\r\n    return (\r\n      <div className=\"category-detail-page\">\r\n        <div className=\"error-container\">\r\n          <div className=\"error-icon\">📁</div>\r\n          <h2>分类不存在</h2>\r\n          <p>未找到指定的分类，可能已被删除</p>\r\n          <button onClick={handleBack} className=\"btn-back\">\r\n            返回首页\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"category-detail-page\">\r\n      {/* 现代化头部 */}\r\n      <header className=\"modern-header\">\r\n        <div className=\"container\">\r\n          <div className=\"header-content\">\r\n          <button \r\n  onClick={handleBack} \r\n  className=\"back-button\"\r\n  style={{\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    gap: '8px',\r\n    padding: '10px 20px',\r\n    backgroundColor: 'transparent',\r\n    color: '#667eea',\r\n    border: '2px solid #667eea',\r\n    borderRadius: '8px',\r\n    fontSize: '16px',\r\n    fontWeight: '500',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.3s ease',\r\n    textDecoration: 'none',\r\n    fontFamily: 'inherit'\r\n  }}\r\n  onMouseEnter={(e) => {\r\n    e.target.style.backgroundColor = '#667eea';\r\n    e.target.style.color = 'white';\r\n    e.target.style.transform = 'translateY(-2px)';\r\n    e.target.style.boxShadow = '0 4px 12px rgba(102, 126, 234, 0.3)';\r\n  }}\r\n  onMouseLeave={(e) => {\r\n    e.target.style.backgroundColor = 'transparent';\r\n    e.target.style.color = '#667eea';\r\n    e.target.style.transform = 'translateY(0)';\r\n    e.target.style.boxShadow = 'none';\r\n  }}\r\n>\r\n  <span \r\n    className=\"back-icon\"\r\n    style={{\r\n      fontSize: '18px',\r\n      fontWeight: 'bold',\r\n      transition: 'transform 0.3s ease'\r\n    }}\r\n  >\r\n    ←\r\n  </span>\r\n  返回知识库\r\n</button>\r\n            <div className=\"category-hero\">\r\n              <div className=\"category-badge\">\r\n                <span className=\"category-emoji\">📚</span>\r\n                <span className=\"category-name\">{category.name}</span>\r\n              </div>\r\n              <div className=\"user-welcome\">\r\n                <span className=\"welcome-text\">欢迎, {currentUser.getUsername()}!</span>\r\n              </div>\r\n              <div className=\"hero-stats\">\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-number\">{category.questionCount}</span>\r\n                  <span className=\"stat-label\">总题目</span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-number\">{allQuestions.length}</span>\r\n                  <span className=\"stat-label\">已加载</span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-number\">{expandedQuestions.size}</span>\r\n                  <span className=\"stat-label\">已展开</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* 同步消息提示 */}\r\n      {syncMessage && (\r\n        <div className=\"sync-message\">\r\n          {syncMessage}\r\n        </div>\r\n      )}\r\n\r\n      {/* 控制面板 */}\r\n      <section className=\"control-panel\">\r\n        <div className=\"container\">\r\n          <div className=\"panel-grid\">\r\n            {/* 搜索区域 */}\r\n            <div className=\"search-panel\">\r\n              <div className=\"search-wrapper\">\r\n                <div className=\"search-icon\">🔍</div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"搜索题目、答案或标签...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"modern-search\"\r\n                  style={{ color: '#333', backgroundColor: '#fff' }}\r\n                />\r\n                {searchTerm && (\r\n                  <button \r\n                    onClick={() => setSearchTerm('')}\r\n                    className=\"clear-search\"\r\n                  >\r\n                    ✕\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* 控制区域 */}\r\n            <div className=\"controls-panel\">\r\n              <div className=\"controls-group\">\r\n                <label>排序方式</label>\r\n                <select \r\n                  value={sortBy}\r\n                  onChange={(e) => setSortBy(e.target.value)}\r\n                  className=\"modern-select\"\r\n                  style={{ color: '#333', backgroundColor: '#fff' }}\r\n                >\r\n                  <option value=\"appearanceLevel\">出现频率</option>\r\n                  <option value=\"updatedAt\">最近更新</option>\r\n                  <option value=\"createdAt\">创建时间</option>\r\n                  <option value=\"title\">标题顺序</option>\r\n                  <option value=\"difficulty\">难度等级</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"controls-group\">\r\n                <label>批量操作</label>\r\n                <div className=\"batch-actions\">\r\n                  <button \r\n                    onClick={expandAllQuestions}\r\n                    className=\"action-btn expand-btn\"\r\n                    disabled={sortedQuestions.length === 0}\r\n                  >\r\n                    📖 展开全部\r\n                  </button>\r\n                  <button \r\n                    onClick={collapseAllQuestions}\r\n                    className=\"action-btn collapse-btn\"\r\n                    disabled={expandedQuestions.size === 0}\r\n                  >\r\n                    📕 折叠全部\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <button \r\n                className=\"add-question-btn primary\"\r\n                onClick={handleAddQuestion}\r\n              >\r\n                <span className=\"btn-icon\">+</span>\r\n                添加题目\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 调试控制面板 */}\r\n          <div className=\"debug-controls\" style={{ marginTop: '10px', padding: '10px', background: '#f0f0f0', borderRadius: '4px' }}>\r\n            <button \r\n              onClick={handleManualLoadMore}\r\n              disabled={!hasNextPage || isFetchingNextPage}\r\n              style={{ \r\n                padding: '5px 10px', \r\n                fontSize: '12px',\r\n                background: hasNextPage ? '#1890ff' : '#ccc',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '3px'\r\n              }}\r\n            >\r\n              {isFetchingNextPage ? '加载中...' : hasNextPage ? '手动加载更多' : '已无更多'}\r\n            </button>\r\n            <span style={{ marginLeft: '10px', fontSize: '12px', color: '#666' }}>\r\n              状态: {hasNextPage ? `有更多 (${allQuestions.length}/?)` : '已加载全部'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* 内容区域 */}\r\n      <section className=\"content-section\">\r\n        <div className=\"container\">\r\n          {sortedQuestions.length === 0 ? (\r\n            <div className=\"modern-empty\">\r\n              <div className=\"empty-illustration\">\r\n                {searchTerm ? '🔍' : '📝'}\r\n              </div>\r\n              <h3>{searchTerm ? '没有找到匹配的题目' : '此分类下暂无题目'}</h3>\r\n              <p>\r\n                {searchTerm \r\n                  ? `尝试调整搜索条件或清除搜索框来查看所有题目`\r\n                  : '点击\"添加题目\"按钮创建第一个题目，开始你的学习之旅'\r\n                }\r\n              </p>\r\n              {searchTerm ? (\r\n                <button \r\n                  onClick={() => setSearchTerm('')}\r\n                  className=\"clear-search-btn\"\r\n                >\r\n                  清除搜索条件\r\n                </button>\r\n              ) : (\r\n                <button \r\n                  onClick={handleAddQuestion}\r\n                  className=\"add-first-btn\"\r\n                >\r\n                  🚀 创建第一个题目\r\n                </button>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* 统计信息 */}\r\n              <div className=\"results-stats\">\r\n                <span className=\"results-count\">\r\n                  找到 {sortedQuestions.length} 个题目\r\n                  {searchTerm && <span>（搜索关键词: \"{searchTerm}\"）</span>}\r\n                  {hasNextPage && <span> - 滚动加载更多</span>}\r\n                </span>\r\n                <span className=\"expand-count\">\r\n                  {expandedQuestions.size} / {sortedQuestions.length} 已展开\r\n                </span>\r\n                {expandedQuestions.size === 0 && (\r\n                  <span className=\"drag-hint\">\r\n                    🎯 提示: 可以拖拽题目调整顺序\r\n                  </span>\r\n                )}\r\n              </div>\r\n\r\n              {/* 调试信息 */}\r\n              <div className=\"debug-info\" style={{ fontSize: '12px', color: '#666', padding: '8px', background: '#f5f5f5', borderRadius: '4px', marginBottom: '10px' }}>\r\n                分页状态: 已加载 {allQuestions.length} 题, 还有更多: {hasNextPage ? '是' : '否'}, 正在加载: {isFetchingNextPage ? '是' : '否'}\r\n              </div>\r\n\r\n              {/* 虚拟化题目列表 */}\r\n              <div \r\n                ref={containerRef}\r\n                className={`questions-container ${viewMode}`}\r\n                style={{ \r\n                  height: 'calc(100vh - 400px)',\r\n                  overflow: 'auto',\r\n                  position: 'relative',\r\n                  border: '1px solid #e1e5e9',\r\n                  borderRadius: '8px'\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    height: `${virtualizer.getTotalSize()}px`,\r\n                    width: '100%',\r\n                    position: 'relative',\r\n                  }}\r\n                >\r\n                  {virtualizer.getVirtualItems().map((virtualItem) => {\r\n                    const question = sortedQuestions[virtualItem.index];\r\n                    \r\n                    return (\r\n                      <div\r\n                        key={question.id}\r\n                        data-index={virtualItem.index}\r\n                        ref={virtualizer.measureElement}\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          top: 0,\r\n                          left: 0,\r\n                          width: \"100%\",\r\n                          transform: `translateY(${virtualItem.start}px)`,\r\n                        }}\r\n                      >\r\n                        <QuestionAccordion\r\n                          question={question}\r\n                          index={virtualItem.index}\r\n                          isExpanded={expandedQuestions.has(question.id)}\r\n                          onToggle={() => toggleQuestion(question.id)}\r\n                          onDelete={handleDeleteQuestion}\r\n                          onEdit={handleEditQuestion}\r\n                          onUpdateField={handleUpdateQuestionField}\r\n                          viewMode={viewMode}\r\n                          isDragging={draggingQuestion === question.id}\r\n                          isDragOver={dragOverQuestion === question.id}\r\n                          onDragStart={(e) => handleDragStart(e, question.id)}\r\n                          onDragOver={(e) => handleDragOver(e, question.id)}\r\n                          onDragLeave={handleDragLeave}\r\n                          onDrop={(e) => handleDrop(e, question.id)}\r\n                          onDragEnd={handleDragEnd}\r\n                          canDrag={expandedQuestions.size === 0}\r\n                          showQuestionForm={showQuestionForm}\r\n                          setShowQuestionForm={setShowQuestionForm}\r\n                          editingQuestion={editingQuestion}\r\n                          setEditingQuestion={setEditingQuestion}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n\r\n                {/* 加载更多触发元素 */}\r\n                {hasNextPage && (\r\n                  <div\r\n                    ref={loadMoreTriggerRef}\r\n                    style={{\r\n                      height: '60px',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      position: 'relative',\r\n                      background: 'transparent'\r\n                    }}\r\n                  >\r\n                    {isFetchingNextPage ? (\r\n                      <div className=\"loading-more\">\r\n                        <div className=\"modern-spinner small\"></div>\r\n                        <span>加载更多题目...</span>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"load-more-trigger\" style={{ padding: '10px', color: '#666' }}>\r\n                        <span>↓ 继续滚动加载更多</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                {!hasNextPage && allQuestions.length > 0 && (\r\n                  <div style={{ \r\n                    textAlign: 'center', \r\n                    padding: '20px', \r\n                    color: '#999',\r\n                    fontStyle: 'italic'\r\n                  }}>\r\n                    已加载全部 {allQuestions.length} 个题目\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </section>\r\n\r\n      {/* 在虚拟化容器之外渲染编辑表单 */}\r\n      {showQuestionForm && (\r\n        <div \r\n          className=\"form-modal-overlay\"\r\n          style={{\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            zIndex: 9999,\r\n            padding: '20px'\r\n          }}\r\n        >\r\n          <QuestionForm\r\n            question={editingQuestion}\r\n            onSave={() => {\r\n              setShowQuestionForm(false);\r\n              setEditingQuestion(null);\r\n              queryClient.invalidateQueries(['questions', categoryId]);\r\n            }}\r\n            onCancel={() => {\r\n              setShowQuestionForm(false);\r\n              setEditingQuestion(null);\r\n            }}\r\n            defaultCategoryId={categoryId}\r\n            onCategoryChange={handleQuestionCategoryChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// QuestionAccordion 组件保持不变\r\nconst QuestionAccordion = ({ \r\n  question, \r\n  index, \r\n  isExpanded, \r\n  onToggle, \r\n  onDelete,\r\n  onEdit,\r\n  onUpdateField,\r\n  viewMode,\r\n  isDragging,\r\n  isDragOver,\r\n  onDragStart,\r\n  onDragOver,\r\n  onDragLeave,\r\n  onDrop,\r\n  onDragEnd,\r\n  canDrag,\r\n  showQuestionForm,\r\n  setShowQuestionForm,\r\n  editingQuestion,\r\n  setEditingQuestion\r\n}) => {\r\n  const getDifficultyColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#52c41a';\r\n      case 'medium': return '#faad14';\r\n      case 'hard': return '#f5222d';\r\n      default: return '#666';\r\n    }\r\n  };\r\n\r\n  const getDifficultyBorderColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#b7eb8f';\r\n      case 'medium': return '#ffe58f';\r\n      case 'hard': return '#ffa39e';\r\n      default: return '#d9d9d9';\r\n    }\r\n  };\r\n\r\n  const getDifficultyBackgroundColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '#f6ffed';\r\n      case 'medium': return '#fffbe6';\r\n      case 'hard': return '#fff2f0';\r\n      default: return '#fafafa';\r\n    }\r\n  };\r\n\r\n  const getDifficultyText = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy': return '简单';\r\n      case 'medium': return '中等';\r\n      case 'hard': return '困难';\r\n      default: return difficulty;\r\n    }\r\n  };\r\n\r\n  const getProficiencyColor = (proficiency) => {\r\n    switch (proficiency) {\r\n      case 'beginner': return '#ff6b6b';\r\n      case 'intermediate': return '#4ecdc4';\r\n      case 'advanced': return '#45b7d1';\r\n      case 'master': return '#96ceb4';\r\n      default: return '#95a5a6';\r\n    }\r\n  };\r\n\r\n  const getProficiencyIcon = (proficiency) => {\r\n    switch (proficiency) {\r\n      case 'beginner': return '🎀';\r\n      case 'intermediate': return '🎗️';\r\n      case 'advanced': return '🏅';\r\n      case 'master': return '👑';\r\n      default: return '🎯';\r\n    }\r\n  };\r\n\r\n  const getProficiencyText = (proficiency) => {\r\n    switch (proficiency) {\r\n      case 'beginner': return '初级';\r\n      case 'intermediate': return '中级';\r\n      case 'advanced': return '高级';\r\n      case 'master': return '精通';\r\n      default: return proficiency;\r\n    }\r\n  };\r\n\r\n  const getAppearanceLevelColor = (level) => {\r\n    if (level >= 80) return '#ff6b6b';\r\n    if (level >= 60) return '#ffa726';\r\n    if (level >= 40) return '#4ecdc4';\r\n    return '#95a5a6';\r\n  };\r\n\r\n  const formatTime = (date) => {\r\n    return new Date(date).toLocaleDateString('zh-CN', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  // 获取答案预览文本\r\n  const getAnswerPreview = () => {\r\n    const answerText = question.oralAnswer || question.detailedAnswer;\r\n    if (!answerText) {\r\n      return '暂无答案内容';\r\n    }\r\n    return answerText.substring(0, 150) + (answerText.length > 150 ? '...' : '');\r\n  };\r\n\r\n  // 如果已经展开，显示扩展视图\r\n  if (isExpanded) {\r\n    return (\r\n      <div className=\"expanded-question-view\" data-question-id={question.id}>\r\n        <div className=\"expanded-header\">\r\n          <button onClick={onToggle} className=\"back-to-list-btn\">\r\n            <span className=\"back-icon\">←</span>\r\n            返回列表\r\n          </button>\r\n          <div className=\"expanded-title\">\r\n            <span className=\"question-index\">#{index + 1}</span>\r\n            <h3>{question.title}</h3>\r\n          </div>\r\n          <div className=\"expanded-actions\">\r\n            <button \r\n              onClick={() => onEdit(question)}\r\n              className=\"btn-edit\"\r\n            >\r\n              ✏️ 编辑\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"expanded-content\">\r\n          <QuestionDetailCard\r\n            question={question}\r\n            onDelete={onDelete}\r\n            onUpdateField={onUpdateField}\r\n            isExpandedView={true}\r\n            onEdit={onEdit}\r\n            showQuestionForm={showQuestionForm}\r\n            setShowQuestionForm={setShowQuestionForm}\r\n            editingQuestion={editingQuestion}\r\n            setEditingQuestion={setEditingQuestion}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 折叠状态下的显示\r\n  if (viewMode === 'grid') {\r\n    return (\r\n      <div \r\n        className={`question-grid-card ${isDragging ? 'dragging' : ''} ${isDragOver ? 'drag-over' : ''}`}\r\n        onClick={onToggle}\r\n        draggable={canDrag}\r\n        onDragStart={onDragStart}\r\n        onDragOver={onDragOver}\r\n        onDragLeave={onDragLeave}\r\n        onDrop={onDrop}\r\n        onDragEnd={onDragEnd}\r\n        data-question-id={question.id}\r\n        style={{\r\n          borderLeft: `4px solid ${getDifficultyColor(question.difficulty)}`,\r\n          backgroundColor: getDifficultyBackgroundColor(question.difficulty),\r\n          border: `1px solid ${getDifficultyBorderColor(question.difficulty)}`\r\n        }}\r\n      >\r\n        {/* 掌握程度蝴蝶结标识 */}\r\n        <div \r\n          className=\"proficiency-ribbon\"\r\n          style={{ backgroundColor: getProficiencyColor(question.proficiency) }}\r\n        >\r\n          <span className=\"ribbon-icon\">{getProficiencyIcon(question.proficiency)}</span>\r\n          <span className=\"ribbon-text\">{getProficiencyText(question.proficiency)}</span>\r\n        </div>\r\n\r\n        <div className=\"grid-header\">\r\n          <span className=\"question-index\">#{index + 1}</span>\r\n          <span \r\n            className=\"difficulty-tag\"\r\n            style={{ backgroundColor: getDifficultyColor(question.difficulty) }}\r\n          >\r\n            {getDifficultyText(question.difficulty)}\r\n          </span>\r\n        </div>\r\n        <h4 className=\"grid-title\">{question.title}</h4>\r\n        \r\n        {/* 出现频率指示器 */}\r\n        <div className=\"appearance-level-indicator\">\r\n          <div \r\n            className=\"appearance-bar\"\r\n            style={{ \r\n              width: `${question.appearanceLevel || 50}%`,\r\n              backgroundColor: getAppearanceLevelColor(question.appearanceLevel || 50)\r\n            }}\r\n          ></div>\r\n          <span className=\"appearance-text\">{question.appearanceLevel || 50}%</span>\r\n        </div>\r\n\r\n        <div className=\"grid-meta\">\r\n          <span className=\"update-time\">更新: {formatTime(question.updatedAt)}</span>\r\n        </div>\r\n        <div className=\"grid-preview\">\r\n          <div className=\"preview-content\">\r\n            {getAnswerPreview()}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 拖拽手柄 */}\r\n        {canDrag && <div className=\"drag-handle\">⋮⋮</div>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 列表视图下的折叠状态\r\n  return (\r\n    <div \r\n      className={`modern-accordion ${isExpanded ? 'expanded' : ''} ${isDragging ? 'dragging' : ''} ${isDragOver ? 'drag-over' : ''}`}\r\n      draggable={canDrag}\r\n      onDragStart={onDragStart}\r\n      onDragOver={onDragOver}\r\n      onDragLeave={onDragLeave}\r\n      onDrop={onDrop}\r\n      onDragEnd={onDragEnd}\r\n      data-question-id={question.id}\r\n      style={{\r\n        borderLeft: `4px solid ${getDifficultyColor(question.difficulty)}`,\r\n        backgroundColor: getDifficultyBackgroundColor(question.difficulty),\r\n        border: `1px solid ${getDifficultyBorderColor(question.difficulty)}`\r\n      }}\r\n    >\r\n      {/* 掌握程度蝴蝶结标识 */}\r\n      <div \r\n        className=\"proficiency-ribbon\"\r\n        style={{ backgroundColor: getProficiencyColor(question.proficiency) }}\r\n      >\r\n        <span className=\"ribbon-icon\">{getProficiencyIcon(question.proficiency)}</span>\r\n        <span className=\"ribbon-text\">{getProficiencyText(question.proficiency)}</span>\r\n      </div>\r\n\r\n      <div className=\"accordion-header\" onClick={onToggle}>\r\n        <div className=\"header-main\">\r\n          <div className=\"question-meta\">\r\n            <span className=\"question-index\">#{index + 1}</span>\r\n            <span \r\n              className=\"difficulty-badge\"\r\n              style={{ backgroundColor: getDifficultyColor(question.difficulty) }}\r\n            >\r\n              {getDifficultyText(question.difficulty)}\r\n            </span>\r\n            <span className=\"appearance-badge\">\r\n              📊 {question.appearanceLevel || 50}%\r\n            </span>\r\n            <span className=\"time-badge\">\r\n              ⏱️ {formatTime(question.updatedAt)}\r\n            </span>\r\n          </div>\r\n          <h3 className=\"question-title\">{question.title}</h3>\r\n          <div className=\"question-preview\">\r\n            {getAnswerPreview()}\r\n          </div>\r\n        </div>\r\n        <div className=\"header-actions\">\r\n          {/* 拖拽手柄 */}\r\n          {canDrag && (\r\n            <div \r\n              className=\"drag-handle\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              ⋮⋮\r\n            </div>\r\n          )}\r\n          <span className=\"accordion-icon\">\r\n            {isExpanded ? '▼' : '►'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryDetailPage;","// services/userService.js\r\nimport AV from 'leancloud-storage';\r\n\r\nexport const UserService = {\r\n  /**\r\n   * 用户注册\r\n   */\r\n  register: async (username, password, email) => {\r\n    try {\r\n      const user = new AV.User();\r\n      user.setUsername(username);\r\n      user.setPassword(password);\r\n      user.setEmail(email);\r\n      \r\n      const result = await user.signUp();\r\n      console.log('注册成功:', result);\r\n      return result;\r\n    } catch (error) {\r\n      console.error('注册失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 用户登录\r\n   */\r\n  login: async (username, password) => {\r\n    try {\r\n      const result = await AV.User.logIn(username, password);\r\n      console.log('登录成功:', result);\r\n      return result;\r\n    } catch (error) {\r\n      console.error('登录失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 用户退出\r\n   */\r\n  logout: async () => {\r\n    try {\r\n      await AV.User.logOut();\r\n      console.log('退出成功');\r\n    } catch (error) {\r\n      console.error('退出失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 获取当前用户\r\n   */\r\n  getCurrentUser: () => {\r\n    return AV.User.current();\r\n  },\r\n\r\n  /**\r\n   * 检查登录状态\r\n   */\r\n  isLoggedIn: () => {\r\n    return !!AV.User.current();\r\n  },\r\n\r\n  /**\r\n   * 更新用户信息\r\n   */\r\n  updateProfile: async (updates) => {\r\n    try {\r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n\r\n      Object.keys(updates).forEach(key => {\r\n        currentUser.set(key, updates[key]);\r\n      });\r\n\r\n      await currentUser.save();\r\n      return currentUser;\r\n    } catch (error) {\r\n      console.error('更新用户信息失败:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};","// components/UserTestPanel.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { UserService } from '../services/userService';\r\nimport { createCategory } from '../services/categoryService';\r\nimport { createQuestion } from '../services/questionService';\r\nimport './UserTestPanel.css';\r\n\r\nconst UserTestPanel = () => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [testData, setTestData] = useState({\r\n    register: { username: '', password: '', email: '', nickname: '' },\r\n    login: { username: '', password: '' },\r\n    category: { name: '', description: '' },\r\n    question: { title: '', detailedAnswer: '', categoryId: '' }\r\n  });\r\n\r\n  // 检查当前登录状态\r\n  useEffect(() => {\r\n    checkCurrentUser();\r\n  }, []);\r\n\r\n  const checkCurrentUser = () => {\r\n    const user = UserService.getCurrentUser();\r\n    setCurrentUser(user);\r\n    console.log('当前用户:', user);\r\n  };\r\n\r\n  // 用户注册\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await UserService.register(testData.register);\r\n      setMessage(`✅ 注册成功！用户ID: ${result.id}`);\r\n      setCurrentUser(result);\r\n      \r\n      // 清空表单\r\n      setTestData(prev => ({\r\n        ...prev,\r\n        register: { username: '', password: '', email: '', nickname: '' }\r\n      }));\r\n    } catch (error) {\r\n      setMessage(`❌ 注册失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 用户登录\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      const result = await UserService.login(testData.login.username, testData.login.password);\r\n      setMessage(`✅ 登录成功！欢迎 ${result.username}`);\r\n      setCurrentUser(result);\r\n      \r\n      // 清空表单\r\n      setTestData(prev => ({\r\n        ...prev,\r\n        login: { username: '', password: '' }\r\n      }));\r\n    } catch (error) {\r\n      setMessage(`❌ 登录失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 用户登出\r\n  const handleLogout = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await UserService.logout();\r\n      setMessage('✅ 已退出登录');\r\n      setCurrentUser(null);\r\n    } catch (error) {\r\n      setMessage(`❌ 登出失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 创建测试分类\r\n  const handleCreateCategory = async (e) => {\r\n    e.preventDefault();\r\n    if (!currentUser) {\r\n      setMessage('❌ 请先登录');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const result = await createCategory(testData.category);\r\n      setMessage(`✅ 分类创建成功！ID: ${result.id}`);\r\n      \r\n      // 保存分类ID用于创建题目\r\n      setTestData(prev => ({\r\n        ...prev,\r\n        question: { ...prev.question, categoryId: result.id },\r\n        category: { name: '', description: '' }\r\n      }));\r\n    } catch (error) {\r\n      setMessage(`❌ 创建分类失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 创建测试题目\r\n  const handleCreateQuestion = async (e) => {\r\n    e.preventDefault();\r\n    if (!currentUser) {\r\n      setMessage('❌ 请先登录');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const result = await createQuestion({\r\n        ...testData.question,\r\n        categoryId: testData.question.categoryId,\r\n        oralAnswer: '这是口述版本的答案',\r\n        tags: ['测试', '示例'],\r\n        difficulty: 'medium',\r\n        proficiency: 'intermediate'\r\n      });\r\n      setMessage(`✅ 题目创建成功！ID: ${result.id}`);\r\n      \r\n      setTestData(prev => ({\r\n        ...prev,\r\n        question: { title: '', detailedAnswer: '', categoryId: prev.question.categoryId }\r\n      }));\r\n    } catch (error) {\r\n      setMessage(`❌ 创建题目失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateTestData = (section, field, value) => {\r\n    setTestData(prev => ({\r\n      ...prev,\r\n      [section]: {\r\n        ...prev[section],\r\n        [field]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-test-panel\">\r\n      <h2>🧪 用户系统测试面板</h2>\r\n      \r\n      {/* 当前用户状态 */}\r\n      <div className=\"user-status\">\r\n        <h3>当前状态</h3>\r\n        {currentUser ? (\r\n          <div className=\"user-info\">\r\n            <p>✅ 已登录</p>\r\n            <p>用户名: {currentUser.username}</p>\r\n            <p>邮箱: {currentUser.email}</p>\r\n            <p>用户ID: {currentUser.id}</p>\r\n            <button onClick={handleLogout} disabled={loading}>\r\n              退出登录\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <p>❌ 未登录</p>\r\n        )}\r\n      </div>\r\n\r\n      {message && (\r\n        <div className={`test-message ${message.includes('✅') ? 'success' : 'error'}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"test-sections\">\r\n        {/* 注册测试 */}\r\n        <div className=\"test-section\">\r\n          <h3>1. 用户注册测试</h3>\r\n          <form onSubmit={handleRegister}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"用户名\"\r\n              value={testData.register.username}\r\n              onChange={(e) => updateTestData('register', 'username', e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n              value={testData.register.password}\r\n              onChange={(e) => updateTestData('register', 'password', e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"邮箱\"\r\n              value={testData.register.email}\r\n              onChange={(e) => updateTestData('register', 'email', e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"昵称 (可选)\"\r\n              value={testData.register.nickname}\r\n              onChange={(e) => updateTestData('register', 'nickname', e.target.value)}\r\n            />\r\n            <button type=\"submit\" disabled={loading}>\r\n              {loading ? '注册中...' : '注册'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* 登录测试 */}\r\n        <div className=\"test-section\">\r\n          <h3>2. 用户登录测试</h3>\r\n          <form onSubmit={handleLogin}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"用户名\"\r\n              value={testData.login.username}\r\n              onChange={(e) => updateTestData('login', 'username', e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n              value={testData.login.password}\r\n              onChange={(e) => updateTestData('login', 'password', e.target.value)}\r\n              required\r\n            />\r\n            <button type=\"submit\" disabled={loading}>\r\n              {loading ? '登录中...' : '登录'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* 创建分类测试 */}\r\n        {currentUser && (\r\n          <div className=\"test-section\">\r\n            <h3>3. 创建测试分类</h3>\r\n            <form onSubmit={handleCreateCategory}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"分类名称\"\r\n                value={testData.category.name}\r\n                onChange={(e) => updateTestData('category', 'name', e.target.value)}\r\n                required\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"分类描述 (可选)\"\r\n                value={testData.category.description}\r\n                onChange={(e) => updateTestData('category', 'description', e.target.value)}\r\n              />\r\n              <button type=\"submit\" disabled={loading}>\r\n                {loading ? '创建中...' : '创建分类'}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {/* 创建题目测试 */}\r\n        {currentUser && testData.question.categoryId && (\r\n          <div className=\"test-section\">\r\n            <h3>4. 创建测试题目</h3>\r\n            <p>分类ID: {testData.question.categoryId}</p>\r\n            <form onSubmit={handleCreateQuestion}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"题目标题\"\r\n                value={testData.question.title}\r\n                onChange={(e) => updateTestData('question', 'title', e.target.value)}\r\n                required\r\n              />\r\n              <textarea\r\n                placeholder=\"详细答案\"\r\n                value={testData.question.detailedAnswer}\r\n                onChange={(e) => updateTestData('question', 'detailedAnswer', e.target.value)}\r\n                required\r\n              />\r\n              <button type=\"submit\" disabled={loading}>\r\n                {loading ? '创建中...' : '创建题目'}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 快速测试按钮 */}\r\n      <div className=\"quick-test\">\r\n        <h3>🚀 快速测试</h3>\r\n        <button \r\n          onClick={() => {\r\n            setTestData({\r\n              register: {\r\n                username: `testuser_${Date.now()}`,\r\n                password: '123456',\r\n                email: `test_${Date.now()}@example.com`,\r\n                nickname: '测试用户'\r\n              },\r\n              login: { username: '', password: '' },\r\n              category: { name: '测试分类', description: '这是一个测试分类' },\r\n              question: { title: '', detailedAnswer: '', categoryId: '' }\r\n            });\r\n          }}\r\n        >\r\n          填充测试数据\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTestPanel;","\r\n// services/dataMigrationService.js\r\nimport AV from 'leancloud-storage';\r\nimport { UserService } from './userService';\r\n\r\n/**\r\n * 数据迁移服务 - 将现有数据关联到管理员账户\r\n */\r\nexport const DataMigrationService = {\r\n  /**\r\n   * 创建管理员账户（使用当前登录用户作为管理员）\r\n   */\r\n  setupAdminUser: async () => {\r\n    try {\r\n      console.log('设置当前用户为管理员...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('请先登录一个账户作为管理员');\r\n      }\r\n      \r\n      console.log('使用当前用户作为管理员:', currentUser.id);\r\n      return {\r\n        id: currentUser.id,\r\n        username: currentUser.getUsername(),\r\n        email: currentUser.getEmail(),\r\n        nickname: currentUser.get('nickname')\r\n      };\r\n    } catch (error) {\r\n      console.error('设置管理员失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 迁移现有分类到当前用户\r\n   */\r\n  migrateCategoriesToCurrentUser: async () => {\r\n    try {\r\n      console.log('开始迁移分类数据...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n      \r\n      const query = new AV.Query('Category');\r\n      \r\n      // 获取所有没有 createdBy 字段的分类\r\n      query.doesNotExist('createdBy');\r\n      const categories = await query.find();\r\n      \r\n      console.log(`找到 ${categories.length} 个需要迁移的分类`);\r\n      \r\n      let migratedCount = 0;\r\n      for (const category of categories) {\r\n        try {\r\n          category.set('createdBy', currentUser);\r\n          \r\n          // 更新 ACL 权限\r\n          const acl = new AV.ACL();\r\n          acl.setReadAccess(currentUser, true);\r\n          acl.setWriteAccess(currentUser, true);\r\n          acl.setPublicReadAccess(true); // 保持公开可读\r\n          category.setACL(acl);\r\n          \r\n          await category.save();\r\n          migratedCount++;\r\n          console.log(`✅ 迁移分类: ${category.get('name')}`);\r\n        } catch (error) {\r\n          console.error(`迁移分类失败 ${category.id}:`, error);\r\n        }\r\n      }\r\n      \r\n      console.log(`分类迁移完成: ${migratedCount}/${categories.length}`);\r\n      return { migrated: migratedCount, total: categories.length };\r\n    } catch (error) {\r\n      console.error('迁移分类数据失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 迁移现有题目到当前用户\r\n   */\r\n  migrateQuestionsToCurrentUser: async () => {\r\n    try {\r\n      console.log('开始迁移题目数据...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n      \r\n      const query = new AV.Query('Question');\r\n      \r\n      // 获取所有没有 createdBy 字段的题目\r\n      query.doesNotExist('createdBy');\r\n      const questions = await query.find();\r\n      \r\n      console.log(`找到 ${questions.length} 个需要迁移的题目`);\r\n      \r\n      let migratedCount = 0;\r\n      for (const question of questions) {\r\n        try {\r\n          question.set('createdBy', currentUser);\r\n          \r\n          // 更新 ACL 权限\r\n          const acl = new AV.ACL();\r\n          acl.setReadAccess(currentUser, true);\r\n          acl.setWriteAccess(currentUser, true);\r\n          acl.setPublicReadAccess(true); // 保持公开可读\r\n          question.setACL(acl);\r\n          \r\n          await question.save();\r\n          migratedCount++;\r\n          console.log(`✅ 迁移题目: ${question.get('title')}`);\r\n        } catch (error) {\r\n          console.error(`迁移题目失败 ${question.id}:`, error);\r\n        }\r\n      }\r\n      \r\n      console.log(`题目迁移完成: ${migratedCount}/${questions.length}`);\r\n      return { migrated: migratedCount, total: questions.length };\r\n    } catch (error) {\r\n      console.error('迁移题目数据失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 执行完整的数据迁移（使用当前登录用户）\r\n   */\r\n  performFullMigration: async () => {\r\n    try {\r\n      console.log('🚀 开始完整数据迁移...');\r\n      \r\n      // 1. 使用当前用户作为管理员\r\n      const adminUser = await DataMigrationService.setupAdminUser();\r\n      \r\n      // 2. 迁移分类数据\r\n      const categoryResult = await DataMigrationService.migrateCategoriesToCurrentUser();\r\n      \r\n      // 3. 迁移题目数据\r\n      const questionResult = await DataMigrationService.migrateQuestionsToCurrentUser();\r\n      \r\n      console.log('🎉 数据迁移完成！');\r\n      \r\n      return {\r\n        success: true,\r\n        adminUser,\r\n        categories: categoryResult,\r\n        questions: questionResult,\r\n        message: `迁移完成: ${categoryResult.migrated}个分类, ${questionResult.migrated}个题目`\r\n      };\r\n    } catch (error) {\r\n      console.error('数据迁移失败:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message\r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 检查数据迁移状态\r\n   */\r\n  checkMigrationStatus: async () => {\r\n    try {\r\n      // 检查没有 createdBy 的分类数量\r\n      const categoryQuery = new AV.Query('Category');\r\n      categoryQuery.doesNotExist('createdBy');\r\n      const orphanCategories = await categoryQuery.count();\r\n      \r\n      // 检查没有 createdBy 的题目数量\r\n      const questionQuery = new AV.Query('Question');\r\n      questionQuery.doesNotExist('createdBy');\r\n      const orphanQuestions = await questionQuery.count();\r\n      \r\n      // 检查总数据量\r\n      const totalCategories = await new AV.Query('Category').count();\r\n      const totalQuestions = await new AV.Query('Question').count();\r\n      \r\n      return {\r\n        orphanCategories,\r\n        orphanQuestions,\r\n        totalCategories,\r\n        totalQuestions,\r\n        migrationNeeded: orphanCategories > 0 || orphanQuestions > 0\r\n      };\r\n    } catch (error) {\r\n      console.error('检查迁移状态失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  migrateQuestionCreatedBy: async () => {\r\n    try {\r\n      console.log('开始专门迁移 Question 的 createdBy 属性...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('用户未登录');\r\n      }\r\n      \r\n      const query = new AV.Query('Question');\r\n      \r\n      // 获取所有没有 createdBy 字段的题目\r\n      query.doesNotExist('createdBy');\r\n      const questions = await query.find();\r\n      \r\n      console.log(`找到 ${questions.length} 个需要添加 createdBy 的题目`);\r\n      \r\n      let migratedCount = 0;\r\n      for (const question of questions) {\r\n        try {\r\n          question.set('createdBy', currentUser);\r\n          \r\n          // 更新 ACL 权限\r\n          const acl = new AV.ACL();\r\n          acl.setReadAccess(currentUser, true);\r\n          acl.setWriteAccess(currentUser, true);\r\n          acl.setPublicReadAccess(false);\r\n          question.setACL(acl);\r\n          \r\n          await question.save();\r\n          migratedCount++;\r\n          console.log(`✅ 为题目添加 createdBy: ${question.get('title')}`);\r\n        } catch (error) {\r\n          console.error(`迁移题目失败 ${question.id}:`, error);\r\n        }\r\n      }\r\n      \r\n      console.log(`Question createdBy 迁移完成: ${migratedCount}/${questions.length}`);\r\n      return { migrated: migratedCount, total: questions.length };\r\n    } catch (error) {\r\n      console.error('迁移 Question createdBy 失败:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * 只迁移 Question 的完整流程\r\n   */\r\n  performQuestionMigrationOnly: async () => {\r\n    try {\r\n      console.log('🚀 开始专门迁移 Question 数据...');\r\n      \r\n      const currentUser = AV.User.current();\r\n      if (!currentUser) {\r\n        throw new Error('请先登录');\r\n      }\r\n      \r\n      // 只迁移 Question\r\n      const questionResult = await DataMigrationService.migrateQuestionCreatedBy();\r\n      \r\n      console.log('🎉 Question 迁移完成！');\r\n      \r\n      return {\r\n        success: true,\r\n        questions: questionResult,\r\n        message: `Question 迁移完成: ${questionResult.migrated}个题目`\r\n      };\r\n    } catch (error) {\r\n      console.error('Question 迁移失败:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n};","// components/DataMigrationPanel.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DataMigrationService } from '../services/dataMigrationService';\r\nimport { UserService } from '../services/userService';\r\nimport './DataMigrationPanel.css';\r\n\r\nconst DataMigrationPanel = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [migrationStatus, setMigrationStatus] = useState(null);\r\n  const [migrationResult, setMigrationResult] = useState(null);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  // 检查当前用户状态和迁移状态\r\n  useEffect(() => {\r\n    checkCurrentUser();\r\n    checkMigrationStatus();\r\n  }, []);\r\n\r\n  const checkCurrentUser = () => {\r\n    const user = UserService.getCurrentUser();\r\n    setCurrentUser(user);\r\n  };\r\n\r\n  const checkMigrationStatus = async () => {\r\n    try {\r\n      const status = await DataMigrationService.checkMigrationStatus();\r\n      setMigrationStatus(status);\r\n    } catch (error) {\r\n      console.error('检查迁移状态失败:', error);\r\n    }\r\n  };\r\n\r\n  const handleMigration = async () => {\r\n    if (!currentUser) {\r\n      alert('请先登录一个账户作为管理员');\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(`确定要将所有现有数据关联到当前用户 \"${currentUser.username}\" 吗？`)) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMigrationResult(null);\r\n    \r\n    try {\r\n      const result = await DataMigrationService.performFullMigration();\r\n      setMigrationResult(result);\r\n      \r\n      // 重新检查状态\r\n      await checkMigrationStatus();\r\n    } catch (error) {\r\n      setMigrationResult({\r\n        success: false,\r\n        error: error.message\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-migration-panel\">\r\n      <h2>🔄 数据迁移工具</h2>\r\n      <p>将现有分类和题目数据关联到当前登录用户</p>\r\n\r\n      {/* 当前用户状态 */}\r\n      <div className=\"user-status-section\">\r\n        <h3>当前用户状态</h3>\r\n        {currentUser ? (\r\n          <div className=\"user-info\">\r\n            <p>✅ 已登录: <strong>{currentUser.username}</strong></p>\r\n            <p>邮箱: {currentUser.email}</p>\r\n            <p>用户ID: {currentUser.id}</p>\r\n            <p className=\"admin-note\">此用户将被设置为所有现有数据的管理员</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"user-info not-logged-in\">\r\n            <p>❌ 未登录</p>\r\n            <p className=\"login-required\">请先登录一个账户作为管理员</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 迁移状态 */}\r\n      {migrationStatus && (\r\n        <div className=\"migration-status\">\r\n          <h3>当前数据状态</h3>\r\n          <div className=\"status-grid\">\r\n            <div className=\"status-item\">\r\n              <span className=\"label\">总分类数:</span>\r\n              <span className=\"value\">{migrationStatus.totalCategories}</span>\r\n            </div>\r\n            <div className=\"status-item\">\r\n              <span className=\"label\">总题目数:</span>\r\n              <span className=\"value\">{migrationStatus.totalQuestions}</span>\r\n            </div>\r\n            <div className=\"status-item warning\">\r\n              <span className=\"label\">未关联分类:</span>\r\n              <span className=\"value\">{migrationStatus.orphanCategories}</span>\r\n            </div>\r\n            <div className=\"status-item warning\">\r\n              <span className=\"label\">未关联题目:</span>\r\n              <span className=\"value\">{migrationStatus.orphanQuestions}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          {migrationStatus.migrationNeeded ? (\r\n            <div className=\"migration-needed\">\r\n              ⚠️ 检测到未关联的数据，需要执行迁移\r\n            </div>\r\n          ) : (\r\n            <div className=\"migration-complete\">\r\n              ✅ 所有数据都已关联到用户\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* 迁移操作 */}\r\n      <div className=\"migration-actions\">\r\n        <button\r\n          onClick={handleMigration}\r\n          disabled={loading || !currentUser || !migrationStatus?.migrationNeeded}\r\n          className=\"migrate-btn\"\r\n        >\r\n          {loading ? '迁移中...' : '执行数据迁移'}\r\n        </button>\r\n        \r\n        <button\r\n          onClick={checkMigrationStatus}\r\n          disabled={loading}\r\n          className=\"refresh-btn\"\r\n        >\r\n          刷新状态\r\n        </button>\r\n      </div>\r\n\r\n      {/* 迁移结果 */}\r\n      {migrationResult && (\r\n        <div className={`migration-result ${migrationResult.success ? 'success' : 'error'}`}>\r\n          <h4>{migrationResult.success ? '✅ 迁移成功' : '❌ 迁移失败'}</h4>\r\n          {migrationResult.success ? (\r\n            <div>\r\n              <p>{migrationResult.message}</p>\r\n              {migrationResult.adminUser && (\r\n                <div className=\"admin-info\">\r\n                  <p><strong>管理员账户:</strong> {migrationResult.adminUser.username}</p>\r\n                  <p><strong>用户ID:</strong> {migrationResult.adminUser.id}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <p>错误: {migrationResult.error}</p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* 使用说明 */}\r\n      <div className=\"migration-instructions\">\r\n        <h3>📖 使用说明</h3>\r\n        <ol>\r\n          <li><strong>首先登录一个账户</strong>（可以是新注册的或现有的）</li>\r\n          <li>确认上方显示有未关联的数据</li>\r\n          <li>点击\"执行数据迁移\"按钮</li>\r\n          <li>迁移完成后，所有现有数据将关联到当前登录用户</li>\r\n          <li>之后可以使用此账户登录系统管理所有数据</li>\r\n        </ol>\r\n        \r\n        <div className=\"important-notes\">\r\n          <h4>⚠️ 重要提示</h4>\r\n          <ul>\r\n            <li>迁移过程不会删除或修改现有数据内容</li>\r\n            <li>只会添加 createdBy 字段和更新权限</li>\r\n            <li>迁移后，只有当前用户可以看到所有现有数据</li>\r\n            <li>新注册的用户只能看到自己创建的数据</li>\r\n            <li><strong>建议使用一个专门的账户作为管理员</strong></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataMigrationPanel;","// pages/TestPage.jsx\r\nimport React from 'react';\r\nimport UserTestPanel from '../components/UserTestPanel';\r\nimport DataMigrationPanel from '../components/DataMigrationPanel';\r\n\r\nconst TestPage = () => {\r\n  return (\r\n    <div className=\"test-page\">\r\n      <div className=\"container\">\r\n        <h1>用户系统测试与数据迁移</h1>\r\n        \r\n        <div className=\"test-sections\">\r\n          <section className=\"test-section\">\r\n            <h2>🔄 数据迁移</h2>\r\n            <DataMigrationPanel />\r\n          </section>\r\n          \r\n          <section className=\"test-section\">\r\n            <h2>🧪 用户功能测试</h2>\r\n            <UserTestPanel />\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestPage;","// components/Navigation.jsx\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AV from 'leancloud-storage';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ onShowAuthModal }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [showUserMenu, setShowUserMenu] = useState(false);\r\n  const userMenuRef = useRef(null);\r\n\r\n  // 检查用户登录状态\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n  }, []);\r\n\r\n  // 点击外部关闭用户菜单\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (userMenuRef.current && !userMenuRef.current.contains(event.target)) {\r\n        setShowUserMenu(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  // 添加头像更新事件监听\r\n  useEffect(() => {\r\n    const handleAvatarUpdate = async () => {\r\n      console.log('收到头像更新事件，重新加载用户数据');\r\n      const user = AV.User.current();\r\n      if (user) {\r\n        try {\r\n          const freshUser = await user.fetch();\r\n          setCurrentUser(freshUser);\r\n        } catch (error) {\r\n          console.error('重新加载用户数据失败:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('userAvatarUpdated', handleAvatarUpdate);\r\n    \r\n    return () => {\r\n      window.removeEventListener('userAvatarUpdated', handleAvatarUpdate);\r\n    };\r\n  }, []);\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await AV.User.logOut();\r\n      setCurrentUser(null);\r\n      setShowUserMenu(false);\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error('退出失败:', error);\r\n      alert('退出失败，请重试');\r\n    }\r\n  };\r\n\r\n  const handleUserMenuToggle = () => {\r\n    setShowUserMenu(!showUserMenu);\r\n  };\r\n\r\n  // 检查是否为特定邮箱用户\r\n  const isAuthorizedEmail = () => {\r\n    if (!currentUser) return false;\r\n    const userEmail = currentUser.getEmail();\r\n    return userEmail === 'wu1149823510@outlook.com';\r\n  };\r\n\r\n  // 优化的头像组件 - 支持缓存清除和完全覆盖\r\n  const UserAvatar = ({ user, size = 'normal' }) => {\r\n    const avatar = user.get('avatar');\r\n    const fallbackText = user.getUsername()?.charAt(0).toUpperCase();\r\n    \r\n    // 添加时间戳避免缓存\r\n    const getAvatarUrl = () => {\r\n      if (!avatar) return null;\r\n      \r\n      if (typeof avatar === 'string') {\r\n        const timestamp = new Date().getTime();\r\n        return `${avatar}?t=${timestamp}`;\r\n      } else if (typeof avatar.get === 'function') {\r\n        return avatar.get('url');\r\n      }\r\n      return null;\r\n    };\r\n    \r\n    const avatarUrl = getAvatarUrl();\r\n    \r\n    return (\r\n      <div className={`user-avatar ${size === 'large' ? 'user-avatar-large' : ''}`}>\r\n        {avatarUrl ? (\r\n          <>\r\n            <img \r\n              src={avatarUrl} \r\n              alt=\"用户头像\"\r\n              onLoad={() => console.log('✅ Navigation 头像加载成功')}\r\n              onError={(e) => {\r\n                console.error('❌ Navigation 头像加载失败:', avatarUrl);\r\n                e.target.style.display = 'none';\r\n                // 显示占位符\r\n                const fallback = e.target.nextSibling;\r\n                if (fallback) fallback.style.display = 'flex';\r\n              }}\r\n              style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                objectFit: 'cover',\r\n                objectPosition: 'center'\r\n              }}\r\n            />\r\n            <div \r\n              className={`avatar-fallback ${size === 'large' ? 'avatar-fallback-large' : ''}`}\r\n              style={{ display: 'none' }}\r\n            >\r\n              {fallbackText}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className={`avatar-fallback ${size === 'large' ? 'avatar-fallback-large' : ''}`}>\r\n            {fallbackText}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <nav className=\"modern-nav\">\r\n      <div className=\"nav-container\">\r\n        {/* 左侧导航链接 */}\r\n        <div className=\"nav-left\">\r\n          <Link to=\"/\" className=\"nav-brand\">\r\n            <span className=\"brand-icon\">📚</span>\r\n            <span className=\"brand-text\">知识题库</span>\r\n          </Link>\r\n          \r\n          <div className=\"nav-links\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              <span className=\"link-icon\">🏠</span>\r\n              首页\r\n            </Link>\r\n            {/* 只有特定邮箱用户才能看到初始化数据库选项 */}\r\n            {currentUser && isAuthorizedEmail() && (\r\n              <Link to=\"/init\" className=\"nav-link\">\r\n                <span className=\"link-icon\">⚙️</span>\r\n                初始化数据库\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* 右侧用户区域 */}\r\n        <div className=\"nav-right\">\r\n          {currentUser ? (\r\n            <div className=\"user-section\" ref={userMenuRef}>\r\n              <button \r\n                className=\"user-menu-trigger\"\r\n                onClick={handleUserMenuToggle}\r\n              >\r\n                <UserAvatar user={currentUser} />\r\n                <span className=\"user-name\">{currentUser.getUsername()}</span>\r\n                {isAuthorizedEmail() && (\r\n                  <span className=\"admin-badge\" title=\"管理员\">⚡</span>\r\n                )}\r\n                <span className={`dropdown-arrow ${showUserMenu ? 'open' : ''}`}>\r\n                  ▼\r\n                </span>\r\n              </button>\r\n\r\n              {/* 用户下拉菜单 */}\r\n              {showUserMenu && (\r\n                <div className=\"user-dropdown-menu\">\r\n                  <div className=\"dropdown-header\">\r\n                    <div className=\"user-info-card\">\r\n                      <UserAvatar user={currentUser} size=\"large\" />\r\n                      <div className=\"user-details\">\r\n                        <div className=\"user-display-name\">\r\n                          {currentUser.get('nickname') || currentUser.getUsername()}\r\n                          {isAuthorizedEmail() && (\r\n                            <span className=\"admin-tag\">管理员</span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"user-email\">\r\n                          {currentUser.getEmail() || '未设置邮箱'}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"dropdown-divider\"></div>\r\n\r\n                  <div className=\"dropdown-items\">\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.dispatchEvent(new CustomEvent('showUserSettings'));\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">👤</span>\r\n                      <span className=\"item-text\">账户设置</span>\r\n                    </button>\r\n\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.dispatchEvent(new CustomEvent('showUserSettings', { \r\n                          detail: { tab: 'stats' } \r\n                        }));\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">📊</span>\r\n                      <span className=\"item-text\">学习统计</span>\r\n                    </button>\r\n\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.dispatchEvent(new CustomEvent('showUserSettings', { \r\n                          detail: { tab: 'preferences' } \r\n                        }));\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">🔔</span>\r\n                      <span className=\"item-text\">通知设置</span>\r\n                    </button>\r\n                  </div>\r\n\r\n                  {/* 管理员专属功能区域 */}\r\n                  {isAuthorizedEmail() && (\r\n                    <>\r\n                      <div className=\"dropdown-divider\"></div>\r\n                      <div className=\"dropdown-section\">\r\n                        <div className=\"section-label\">管理员功能</div>\r\n                        <div className=\"dropdown-items\">\r\n                          <Link \r\n                            to=\"/init\" \r\n                            className=\"dropdown-item\"\r\n                            onClick={() => setShowUserMenu(false)}\r\n                          >\r\n                            <span className=\"item-icon\">⚙️</span>\r\n                            <span className=\"item-text\">初始化数据库</span>\r\n                          </Link>\r\n                          <button \r\n                            className=\"dropdown-item\"\r\n                            onClick={() => {\r\n                              setShowUserMenu(false);\r\n                              console.log('管理员功能');\r\n                            }}\r\n                          >\r\n                            <span className=\"item-icon\">🔧</span>\r\n                            <span className=\"item-text\">系统管理</span>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  <div className=\"dropdown-divider\"></div>\r\n\r\n                  <div className=\"dropdown-items\">\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.open('/help', '_blank');\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">❓</span>\r\n                      <span className=\"item-text\">帮助文档</span>\r\n                    </button>\r\n\r\n                    <button \r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setShowUserMenu(false);\r\n                        window.open('mailto:support@example.com', '_blank');\r\n                      }}\r\n                    >\r\n                      <span className=\"item-icon\">💬</span>\r\n                      <span className=\"item-text\">意见反馈</span>\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"dropdown-divider\"></div>\r\n\r\n                  <div className=\"dropdown-items\">\r\n                    <button \r\n                      className=\"dropdown-item logout-item\"\r\n                      onClick={handleLogout}\r\n                    >\r\n                      <span className=\"item-icon\">🚪</span>\r\n                      <span className=\"item-text\">退出登录</span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"auth-buttons\">\r\n              <button \r\n                className=\"auth-btn login-btn\"\r\n                onClick={() => onShowAuthModal('login')}\r\n              >\r\n                登录\r\n              </button>\r\n              <button \r\n                className=\"auth-btn login-btn\"\r\n                onClick={() => onShowAuthModal('register')}\r\n              >\r\n                注册\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;","// components/AuthModal.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { UserService } from '../services/userService';\r\nimport { WechatAuthService } from '../services/wechatAuthService';\r\nimport './AuthModal.css';\r\n\r\nconst AuthModal = ({ isOpen, onClose, defaultTab = 'login', onAuthSuccess }) => {\r\n  const [activeTab, setActiveTab] = useState(defaultTab);\r\n  const [formData, setFormData] = useState({\r\n    loginUsername: '',\r\n    loginPassword: '',\r\n    registerUsername: '',\r\n    registerEmail: '',\r\n    registerPassword: '',\r\n    registerConfirmPassword: ''\r\n  });\r\n  const [isWechatLoading, setIsWechatLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setActiveTab(defaultTab);\r\n      setFormData({\r\n        loginUsername: '',\r\n        loginPassword: '',\r\n        registerUsername: '',\r\n        registerEmail: '',\r\n        registerPassword: '',\r\n        registerConfirmPassword: ''\r\n      });\r\n    }\r\n  }, [isOpen, defaultTab]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await UserService.login(formData.loginUsername, formData.loginPassword);\r\n      if (onAuthSuccess) onAuthSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      alert(`登录失败: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.registerPassword !== formData.registerConfirmPassword) {\r\n      alert('两次输入的密码不一致');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await UserService.register(\r\n        formData.registerUsername,\r\n        formData.registerPassword,\r\n        formData.registerEmail\r\n      );\r\n      if (onAuthSuccess) onAuthSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      alert(`注册失败: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleWechatLogin = async () => {\r\n    setIsWechatLoading(true);\r\n    try {\r\n      await WechatAuthService.wechatLogin();\r\n      if (onAuthSuccess) onAuthSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      alert(`微信登录失败: ${error.message}`);\r\n    } finally {\r\n      setIsWechatLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleWechatQRLogin = async () => {\r\n    setIsWechatLoading(true);\r\n    try {\r\n      await WechatAuthService.wechatQRLogin();\r\n      if (onAuthSuccess) onAuthSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      alert(`微信扫码登录失败: ${error.message}`);\r\n    } finally {\r\n      setIsWechatLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"auth-modal\" onClick={onClose}>\r\n      <div className=\"auth-content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"auth-header\">\r\n          <h3>{activeTab === 'login' ? '用户登录' : '用户注册'}</h3>\r\n          <button className=\"close-btn\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <div className=\"auth-tabs\">\r\n          <button \r\n            className={`auth-tab ${activeTab === 'login' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('login')}\r\n          >\r\n            登录\r\n          </button>\r\n          <button \r\n            className={`auth-tab ${activeTab === 'register' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('register')}\r\n          >\r\n            注册\r\n          </button>\r\n        </div>\r\n\r\n        {/* 第三方登录选项 \r\n        <div className=\"social-auth-section\">\r\n          <div className=\"social-auth-buttons\">\r\n            <button \r\n              className=\"social-auth-btn wechat-btn\"\r\n              onClick={handleWechatLogin}\r\n              disabled={isWechatLoading}\r\n            >\r\n              <span className=\"social-icon\">💬</span>\r\n              <span className=\"social-text\">\r\n                {isWechatLoading ? '登录中...' : '微信登录'}\r\n              </span>\r\n            </button>\r\n            \r\n            <button \r\n              className=\"social-auth-btn wechat-qr-btn\"\r\n              onClick={handleWechatQRLogin}\r\n              disabled={isWechatLoading}\r\n            >\r\n              <span className=\"social-icon\">📱</span>\r\n              <span className=\"social-text\">\r\n                {isWechatLoading ? '加载中...' : '微信扫码登录'}\r\n              </span>\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"divider\">\r\n            <span>或</span>\r\n          </div>\r\n        </div>\r\n*/}\r\n        {/* 登录表单 */}\r\n        <form \r\n          className={`auth-form ${activeTab === 'login' ? 'active' : ''}`}\r\n          onSubmit={handleLogin}\r\n        >\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"loginUsername\">用户名</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"loginUsername\" \r\n              value={formData.loginUsername}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"loginPassword\">密码</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"loginPassword\" \r\n              value={formData.loginPassword}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"auth-btn primary\">登录</button>\r\n        </form>\r\n\r\n        {/* 注册表单 */}\r\n        <form \r\n          className={`auth-form ${activeTab === 'register' ? 'active' : ''}`}\r\n          onSubmit={handleRegister}\r\n        >\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerUsername\">用户名</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"registerUsername\" \r\n              value={formData.registerUsername}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerEmail\">邮箱</label>\r\n            <input \r\n              type=\"email\" \r\n              id=\"registerEmail\" \r\n              value={formData.registerEmail}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerPassword\">密码</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"registerPassword\" \r\n              value={formData.registerPassword}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"registerConfirmPassword\">确认密码</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"registerConfirmPassword\" \r\n              value={formData.registerConfirmPassword}\r\n              onChange={handleInputChange}\r\n              required \r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"auth-btn secondary\">注册</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthModal;","// components/UserSettingsModal.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport AV from 'leancloud-storage';\r\nimport './UserSettingsModal.css';\r\n\r\nconst UserSettingsModal = ({ isOpen, onClose }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('profile');\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [message, setMessage] = useState({ type: '', text: '' });\r\n  const [avatarFile, setAvatarFile] = useState(null);\r\n  const [avatarPreview, setAvatarPreview] = useState('');\r\n\r\n  // 学习统计数据状态\r\n  const [studyStats, setStudyStats] = useState({\r\n    totalCategories: 0,\r\n    totalQuestions: 0,\r\n    reviewQuestions: 0,\r\n    todayReviewed: 0\r\n  });\r\n\r\n  // 表单状态\r\n  const [profileForm, setProfileForm] = useState({\r\n    username: '',\r\n    email: '',\r\n    nickname: '',\r\n    bio: ''\r\n  });\r\n\r\n  const [passwordForm, setPasswordForm] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const [preferencesForm, setPreferencesForm] = useState({\r\n    theme: 'light',\r\n    language: 'zh-CN',\r\n    notifications: true,\r\n    emailUpdates: false\r\n  });\r\n\r\n  const [securityForm, setSecurityForm] = useState({\r\n    emailVerified: false\r\n  });\r\n\r\n  // 调试用户信息\r\n  const debugUserInfo = (user) => {\r\n    if (!user) return;\r\n   \r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      const user = AV.User.current();\r\n      setCurrentUser(user);\r\n      if (user) {\r\n        debugUserInfo(user);\r\n        loadUserData(user);\r\n        loadStudyStats(user);\r\n      }\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const loadUserData = async (user) => {\r\n    try {\r\n      // 确保获取最新的用户数据\r\n      const freshUser = await user.fetch();\r\n      \r\n    \r\n\r\n      setProfileForm({\r\n        username: freshUser.getUsername() || '',\r\n        email: freshUser.getEmail() || '',\r\n        nickname: freshUser.get('nickname') || '',\r\n        bio: freshUser.get('bio') || ''\r\n      });\r\n\r\n      setPreferencesForm({\r\n        theme: freshUser.get('theme') || 'light',\r\n        language: freshUser.get('language') || 'zh-CN',\r\n        notifications: freshUser.get('notifications') !== false,\r\n        emailUpdates: freshUser.get('emailUpdates') || false\r\n      });\r\n\r\n      setSecurityForm({\r\n        emailVerified: freshUser.get('emailVerified') || false\r\n      });\r\n\r\n      // 加载用户头像 - 添加时间戳避免缓存\r\n      const avatar = freshUser.get('avatar');\r\n      if (avatar && typeof avatar === 'string') {\r\n        const timestamp = new Date().getTime();\r\n        const avatarUrlWithCacheBust = `${avatar}?t=${timestamp}`;\r\n        setAvatarPreview(avatarUrlWithCacheBust);\r\n      } else {\r\n        setAvatarPreview('');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('加载用户数据失败:', error);\r\n    }\r\n  };\r\n\r\n  const loadStudyStats = async (user) => {\r\n    try {\r\n      // 获取分类数量\r\n      const categoriesQuery = new AV.Query('Category');\r\n      categoriesQuery.equalTo('createdBy', user);\r\n      const categories = await categoriesQuery.find();\r\n\r\n      // 获取题目数量\r\n      const questionsQuery = new AV.Query('Question');\r\n      questionsQuery.equalTo('createdBy', user);\r\n      const questions = await questionsQuery.find();\r\n\r\n      // 计算待复习题目\r\n      const now = new Date();\r\n      const reviewThreshold = 1;\r\n      const reviewQuestions = questions.filter(question => {\r\n        const lastReviewed = new Date(question.get('lastReviewedAt') || question.get('createdAt'));\r\n        const daysSinceReview = Math.floor((now - lastReviewed) / (1000 * 60 * 60 * 24));\r\n        return daysSinceReview >= reviewThreshold;\r\n      });\r\n\r\n      // 计算今日复习题目\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      const todayReviewed = questions.filter(question => {\r\n        const lastReviewed = new Date(question.get('lastReviewedAt'));\r\n        return lastReviewed >= today;\r\n      }).length;\r\n\r\n      setStudyStats({\r\n        totalCategories: categories.length,\r\n        totalQuestions: questions.length,\r\n        reviewQuestions: reviewQuestions.length,\r\n        todayReviewed: todayReviewed\r\n      });\r\n    } catch (error) {\r\n      console.error('加载学习统计失败:', error);\r\n      setStudyStats({\r\n        totalCategories: 0,\r\n        totalQuestions: 0,\r\n        reviewQuestions: 0,\r\n        todayReviewed: 0\r\n      });\r\n    }\r\n  };\r\n\r\n  const showMessage = (type, text, duration = 3000) => {\r\n    setMessage({ type, text });\r\n    setTimeout(() => setMessage({ type: '', text: '' }), duration);\r\n  };\r\n\r\n  // 头像上传处理\r\n  const handleAvatarUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    // 检查文件类型\r\n    if (!file.type.startsWith('image/')) {\r\n      showMessage('error', '请选择图片文件（JPG、PNG、GIF）');\r\n      return;\r\n    }\r\n\r\n    // 检查文件大小\r\n    if (file.size > 2 * 1024 * 1024) {\r\n      showMessage('error', '图片大小不能超过 2MB');\r\n      return;\r\n    }\r\n\r\n    setAvatarFile(file);\r\n    \r\n    // 创建预览\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      setAvatarPreview(e.target.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleAvatarSave = async () => {\r\n    if (!avatarFile || !currentUser) {\r\n      showMessage('error', '请先选择图片');\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    try {\r\n\r\n      // 首先清除旧的头像预览\r\n      setAvatarPreview('');\r\n      \r\n      // 将文件转换为 base64\r\n      const fileData = await new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          const base64Data = e.target.result.split(',')[1];\r\n          resolve(base64Data);\r\n        };\r\n        reader.onerror = () => reject(new Error('文件读取失败'));\r\n        reader.readAsDataURL(avatarFile);\r\n      });\r\n\r\n      // 调用云函数\r\n      const result = await AV.Cloud.run('updateUserAvatar', {\r\n        fileData: fileData,\r\n        fileName: avatarFile.name,\r\n        mimeType: avatarFile.type\r\n      });\r\n\r\n      if (result.success) {\r\n        showMessage('success', '头像上传成功！');\r\n        \r\n        // 使用时间戳避免浏览器缓存\r\n        const timestamp = new Date().getTime();\r\n        const avatarUrlWithCacheBust = `${result.avatarUrl}?t=${timestamp}`;\r\n        \r\n        console.log('设置带时间戳的头像URL:', avatarUrlWithCacheBust);\r\n        \r\n        // 更新本地预览\r\n        setAvatarPreview(avatarUrlWithCacheBust);\r\n        \r\n        // 清除文件选择状态\r\n        setAvatarFile(null);\r\n        \r\n        // 重新获取用户数据\r\n        setTimeout(async () => {\r\n          try {\r\n            const updatedUser = await AV.User.current().fetch();\r\n            setCurrentUser(updatedUser);\r\n            console.log('用户数据已更新');\r\n            \r\n            // 强制重新渲染 Navigation 组件\r\n            window.dispatchEvent(new CustomEvent('userAvatarUpdated'));\r\n          } catch (fetchError) {\r\n            console.error('获取更新后的用户数据失败:', fetchError);\r\n          }\r\n        }, 1000);\r\n        \r\n      } else {\r\n        throw new Error(result.message || '头像上传失败');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('❌ 头像上传失败:', error);\r\n      showMessage('error', `上传失败: ${error.message}`);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleProfileUpdate = async (e) => {\r\n    e.preventDefault();\r\n    if (!currentUser) return;\r\n\r\n    setSaving(true);\r\n    try {\r\n      console.log('开始更新个人信息...', {\r\n        nickname: profileForm.nickname,\r\n        bio: profileForm.bio\r\n      });\r\n\r\n      // 使用云函数更新个人信息\r\n      const result = await AV.Cloud.run('updateUserProfile', {\r\n        nickname: profileForm.nickname,\r\n        bio: profileForm.bio\r\n      });\r\n\r\n      if (result.success) {\r\n        showMessage('success', '个人信息更新成功！');\r\n        \r\n        // 重新获取用户数据\r\n        setTimeout(async () => {\r\n          try {\r\n            const updatedUser = await AV.User.current().fetch();\r\n            setCurrentUser(updatedUser);\r\n            console.log('用户数据已更新');\r\n          } catch (fetchError) {\r\n            console.error('获取更新后的用户数据失败:', fetchError);\r\n          }\r\n        }, 500);\r\n      } else {\r\n        throw new Error(result.message || '更新失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('更新个人信息失败:', error);\r\n      \r\n      let errorMessage = '更新失败，请重试';\r\n      if (error.code === 401) {\r\n        errorMessage = '请先登录';\r\n      } else if (error.message.includes('network')) {\r\n        errorMessage = '网络连接失败，请检查网络';\r\n      } else {\r\n        errorMessage = `更新失败: ${error.message}`;\r\n      }\r\n      \r\n      showMessage('error', errorMessage);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (passwordForm.newPassword !== passwordForm.confirmPassword) {\r\n      showMessage('error', '新密码和确认密码不一致');\r\n      return;\r\n    }\r\n\r\n    if (passwordForm.newPassword.length < 6) {\r\n      showMessage('error', '新密码至少需要6位字符');\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    try {\r\n      await currentUser.updatePassword(\r\n        passwordForm.currentPassword,\r\n        passwordForm.newPassword\r\n      );\r\n      \r\n      showMessage('success', '密码修改成功！');\r\n      setPasswordForm({\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      });\r\n    } catch (error) {\r\n      console.error('修改密码失败:', error);\r\n      showMessage('error', `密码修改失败: ${error.message}`);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handlePreferencesUpdate = async (e) => {\r\n    e.preventDefault();\r\n    if (!currentUser) return;\r\n\r\n    setSaving(true);\r\n    try {\r\n      console.log('开始更新偏好设置...', preferencesForm);\r\n\r\n      // 使用云函数更新偏好设置\r\n      const result = await AV.Cloud.run('updateUserPreferences', {\r\n        theme: preferencesForm.theme,\r\n        language: preferencesForm.language,\r\n        notifications: preferencesForm.notifications,\r\n        emailUpdates: preferencesForm.emailUpdates\r\n      });\r\n\r\n      if (result.success) {\r\n        showMessage('success', '偏好设置更新成功！');\r\n        \r\n        // 重新获取用户数据\r\n        setTimeout(async () => {\r\n          try {\r\n            const updatedUser = await AV.User.current().fetch();\r\n            setCurrentUser(updatedUser);\r\n          } catch (fetchError) {\r\n            console.error('获取更新后的用户数据失败:', fetchError);\r\n          }\r\n        }, 500);\r\n      } else {\r\n        throw new Error(result.message || '更新失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('更新偏好设置失败:', error);\r\n      showMessage('error', `更新失败: ${error.message}`);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  // 邮箱验证\r\n  const handleEmailVerification = async () => {\r\n    if (!currentUser || !currentUser.getEmail()) {\r\n      showMessage('error', '请先设置邮箱地址');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await AV.User.requestEmailVerify(currentUser.getEmail());\r\n      showMessage('success', '验证邮件已发送，请检查您的邮箱');\r\n    } catch (error) {\r\n      console.error('发送验证邮件失败:', error);\r\n      showMessage('error', `发送验证邮件失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 密码重置\r\n  const handlePasswordReset = async () => {\r\n    if (!currentUser || !currentUser.getEmail()) {\r\n      showMessage('error', '请先设置邮箱地址');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await AV.User.requestPasswordReset(currentUser.getEmail());\r\n      showMessage('success', '密码重置邮件已发送，请检查您的邮箱');\r\n    } catch (error) {\r\n      console.error('发送重置邮件失败:', error);\r\n      showMessage('error', `发送重置邮件失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 数据导出\r\n  const handleDataExport = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [categories, questions] = await Promise.all([\r\n        new AV.Query('Category')\r\n          .equalTo('createdBy', currentUser)\r\n          .find(),\r\n        new AV.Query('Question')\r\n          .equalTo('createdBy', currentUser)\r\n          .include('category')\r\n          .find()\r\n      ]);\r\n\r\n      const exportData = {\r\n        exportTime: new Date().toISOString(),\r\n        user: {\r\n          username: currentUser.getUsername(),\r\n          email: currentUser.getEmail(),\r\n          nickname: currentUser.get('nickname')\r\n        },\r\n        categories: categories.map(cat => ({\r\n          id: cat.id,\r\n          name: cat.get('name'),\r\n          description: cat.get('description'),\r\n          questionCount: cat.get('questionCount') || 0,\r\n          createdAt: cat.get('createdAt'),\r\n          updatedAt: cat.get('updatedAt')\r\n        })),\r\n        questions: questions.map(q => ({\r\n          id: q.id,\r\n          title: q.get('title'),\r\n          detailedAnswer: q.get('detailedAnswer'),\r\n          oralAnswer: q.get('oralAnswer'),\r\n          code: q.get('code'),\r\n          difficulty: q.get('difficulty'),\r\n          proficiency: q.get('proficiency'),\r\n          appearanceLevel: q.get('appearanceLevel'),\r\n          tags: q.get('tags') || [],\r\n          category: q.get('category') ? {\r\n            id: q.get('category').id,\r\n            name: q.get('category').get('name')\r\n          } : null,\r\n          createdAt: q.get('createdAt'),\r\n          updatedAt: q.get('updatedAt')\r\n        }))\r\n      };\r\n\r\n      const dataStr = JSON.stringify(exportData, null, 2);\r\n      const dataBlob = new Blob([dataStr], { type: 'application/json' });\r\n      const url = URL.createObjectURL(dataBlob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `knowledge-base-export-${new Date().toISOString().split('T')[0]}.json`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      URL.revokeObjectURL(url);\r\n\r\n      showMessage('success', '数据导出成功！');\r\n    } catch (error) {\r\n      console.error('数据导出失败:', error);\r\n      showMessage('error', `数据导出失败: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (formType, field, value) => {\r\n    switch (formType) {\r\n      case 'profile':\r\n        setProfileForm(prev => ({ ...prev, [field]: value }));\r\n        break;\r\n      case 'password':\r\n        setPasswordForm(prev => ({ ...prev, [field]: value }));\r\n        break;\r\n      case 'preferences':\r\n        setPreferencesForm(prev => ({ ...prev, [field]: value }));\r\n        break;\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"user-settings-overlay\">\r\n      <div className=\"user-settings-modal\">\r\n        {/* 头部 */}\r\n        <div className=\"settings-header\">\r\n          <div className=\"header-content\">\r\n            <h2>账户设置</h2>\r\n            <p>管理您的账户信息和偏好设置</p>\r\n          </div>\r\n          <button \r\n            className=\"close-button\"\r\n            onClick={onClose}\r\n            disabled={saving}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        {/* 消息提示 */}\r\n        {message.text && (\r\n          <div className={`message ${message.type}`}>\r\n            {message.text}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"settings-content\">\r\n          {/* 侧边栏导航 */}\r\n          <div className=\"settings-sidebar\">\r\n            <button \r\n              className={`sidebar-item ${activeTab === 'profile' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('profile')}\r\n            >\r\n              <span className=\"item-icon\">👤</span>\r\n              <span className=\"item-text\">个人信息</span>\r\n            </button>\r\n            \r\n            <button \r\n              className={`sidebar-item ${activeTab === 'security' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('security')}\r\n            >\r\n              <span className=\"item-icon\">🔒</span>\r\n              <span className=\"item-text\">安全设置</span>\r\n            </button>\r\n            \r\n            <button \r\n              className={`sidebar-item ${activeTab === 'preferences' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('preferences')}\r\n            >\r\n              <span className=\"item-icon\">⚙️</span>\r\n              <span className=\"item-text\">偏好设置</span>\r\n            </button>\r\n            \r\n            <button \r\n              className={`sidebar-item ${activeTab === 'data' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('data')}\r\n            >\r\n              <span className=\"item-icon\">📊</span>\r\n              <span className=\"item-text\">学习统计</span>\r\n            </button>\r\n          </div>\r\n\r\n          {/* 主要内容区域 */}\r\n          <div className=\"settings-main\">\r\n            {activeTab === 'profile' && (\r\n              <div className=\"tab-content\">\r\n                <h3>个人信息</h3>\r\n                \r\n                {/* 头像上传区域 */}\r\n                <div className=\"avatar-section\">\r\n                  <div className=\"avatar-upload\">\r\n                    <div className=\"avatar-preview\">\r\n                      {avatarPreview ? (\r\n                        <img \r\n                          src={avatarPreview} \r\n                          alt=\"头像预览\"\r\n                          style={{\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            objectFit: 'cover',\r\n                            objectPosition: 'center'\r\n                          }}\r\n                          onLoad={() => console.log('✅ 头像预览加载成功')}\r\n                          onError={(e) => {\r\n                            console.error('❌ 头像预览加载失败:', avatarPreview);\r\n                            e.target.style.display = 'none';\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <div className=\"avatar-placeholder\">\r\n                          {profileForm.username?.charAt(0).toUpperCase()}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"avatar-controls\">\r\n                      <input\r\n                        type=\"file\"\r\n                        id=\"avatar-upload\"\r\n                        accept=\"image/*\"\r\n                        onChange={handleAvatarUpload}\r\n                        className=\"avatar-input\"\r\n                      />\r\n                      <label htmlFor=\"avatar-upload\" className=\"avatar-upload-btn\">\r\n                        选择图片\r\n                      </label>\r\n                      {avatarFile && (\r\n                        <button \r\n                          className=\"avatar-save-btn\"\r\n                          onClick={handleAvatarSave}\r\n                          disabled={saving}\r\n                        >\r\n                          {saving ? '上传中...' : '保存头像'}\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"avatar-hint\">\r\n                    支持 JPG、PNG 格式，大小不超过 2MB\r\n                  </div>\r\n                </div>\r\n\r\n                <form onSubmit={handleProfileUpdate} className=\"settings-form\">\r\n                  <div className=\"form-group\">\r\n                    <label>用户名</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={profileForm.username}\r\n                      disabled\r\n                      className=\"disabled-input\"\r\n                    />\r\n                    <div className=\"field-hint\">用户名创建后不可修改</div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>邮箱地址</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      value={profileForm.email}\r\n                      disabled\r\n                      className=\"disabled-input\"\r\n                    />\r\n                    <div className=\"field-hint\">\r\n                      {profileForm.email ? '邮箱已验证' : '未设置邮箱'}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>昵称</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={profileForm.nickname}\r\n                      onChange={(e) => handleInputChange('profile', 'nickname', e.target.value)}\r\n                      placeholder=\"请输入您的昵称\"\r\n                      maxLength={20}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>个人简介</label>\r\n                    <textarea\r\n                      value={profileForm.bio}\r\n                      onChange={(e) => handleInputChange('profile', 'bio', e.target.value)}\r\n                      placeholder=\"介绍一下您自己...\"\r\n                      rows=\"3\"\r\n                      maxLength={200}\r\n                    />\r\n                    <div className=\"char-count\">\r\n                      {profileForm.bio.length}/200\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-actions\">\r\n                    <button \r\n                      type=\"submit\" \r\n                      className=\"save-button\"\r\n                      disabled={saving}\r\n                    >\r\n                      {saving ? '保存中...' : '保存更改'}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'security' && (\r\n              <div className=\"tab-content\">\r\n                <h3>安全设置</h3>\r\n                \r\n                {/* 邮箱验证 */}\r\n                <div className=\"security-section\">\r\n                  <h4>邮箱验证</h4>\r\n                  <div className=\"security-item\">\r\n                    <div className=\"security-info\">\r\n                      <span className=\"security-label\">邮箱状态</span>\r\n                      <span className={`security-status ${securityForm.emailVerified ? 'verified' : 'unverified'}`}>\r\n                        {securityForm.emailVerified ? '已验证' : '未验证'}\r\n                      </span>\r\n                    </div>\r\n                    {!securityForm.emailVerified && (\r\n                      <button \r\n                        className=\"security-action-btn\"\r\n                        onClick={handleEmailVerification}\r\n                        disabled={loading || !profileForm.email}\r\n                      >\r\n                        {loading ? '发送中...' : '发送验证邮件'}\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 密码修改 */}\r\n                <div className=\"security-section\">\r\n                  <h4>修改密码</h4>\r\n                  <form onSubmit={handlePasswordChange} className=\"settings-form\">\r\n                    <div className=\"form-group\">\r\n                      <label>当前密码</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        value={passwordForm.currentPassword}\r\n                        onChange={(e) => handleInputChange('password', 'currentPassword', e.target.value)}\r\n                        placeholder=\"请输入当前密码\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>新密码</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        value={passwordForm.newPassword}\r\n                        onChange={(e) => handleInputChange('password', 'newPassword', e.target.value)}\r\n                        placeholder=\"请输入新密码（至少6位）\"\r\n                        minLength={6}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>确认新密码</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        value={passwordForm.confirmPassword}\r\n                        onChange={(e) => handleInputChange('password', 'confirmPassword', e.target.value)}\r\n                        placeholder=\"请再次输入新密码\"\r\n                        minLength={6}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"password-strength\">\r\n                      <div className=\"strength-bar\">\r\n                        <div \r\n                          className={`strength-fill ${\r\n                            passwordForm.newPassword.length >= 6 ? 'strong' : 'weak'\r\n                          }`}\r\n                          style={{ \r\n                            width: `${Math.min((passwordForm.newPassword.length / 6) * 100, 100)}%` \r\n                          }}\r\n                        ></div>\r\n                      </div>\r\n                      <div className=\"strength-text\">\r\n                        {passwordForm.newPassword.length >= 6 ? '密码强度足够' : '密码至少需要6位'}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-actions\">\r\n                      <button \r\n                        type=\"submit\" \r\n                        className=\"save-button\"\r\n                        disabled={saving}\r\n                      >\r\n                        {saving ? '更新中...' : '修改密码'}\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n\r\n                {/* 密码重置 */}\r\n                <div className=\"security-section\">\r\n                  <h4>密码重置</h4>\r\n                  <div className=\"security-item\">\r\n                    <div className=\"security-info\">\r\n                      <span className=\"security-label\">忘记密码？</span>\r\n                      <span className=\"security-description\">\r\n                        通过邮箱重置您的密码\r\n                      </span>\r\n                    </div>\r\n                    <button \r\n                      className=\"security-action-btn secondary\"\r\n                      onClick={handlePasswordReset}\r\n                      disabled={loading || !profileForm.email}\r\n                    >\r\n                      {loading ? '发送中...' : '发送重置邮件'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'preferences' && (\r\n              <div className=\"tab-content\">\r\n                <h3>偏好设置</h3>\r\n                <form onSubmit={handlePreferencesUpdate} className=\"settings-form\">\r\n                  <div className=\"form-group\">\r\n                    <label>主题模式</label>\r\n                    <div className=\"radio-group\">\r\n                      <label className=\"radio-option\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          name=\"theme\"\r\n                          value=\"light\"\r\n                          checked={preferencesForm.theme === 'light'}\r\n                          onChange={(e) => handleInputChange('preferences', 'theme', e.target.value)}\r\n                        />\r\n                        <span className=\"radio-label\">\r\n                          <span className=\"radio-icon\">🌞</span>\r\n                          浅色模式\r\n                        </span>\r\n                      </label>\r\n                      <label className=\"radio-option\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          name=\"theme\"\r\n                          value=\"dark\"\r\n                          checked={preferencesForm.theme === 'dark'}\r\n                          onChange={(e) => handleInputChange('preferences', 'theme', e.target.value)}\r\n                        />\r\n                        <span className=\"radio-label\">\r\n                          <span className=\"radio-icon\">🌙</span>\r\n                          深色模式\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>语言</label>\r\n                    <select\r\n                      value={preferencesForm.language}\r\n                      onChange={(e) => handleInputChange('preferences', 'language', e.target.value)}\r\n                    >\r\n                      <option value=\"zh-CN\">简体中文</option>\r\n                      <option value=\"en-US\">English</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>通知设置</label>\r\n                    <div className=\"switch-group\">\r\n                      <label className=\"switch\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={preferencesForm.notifications}\r\n                          onChange={(e) => handleInputChange('preferences', 'notifications', e.target.checked)}\r\n                        />\r\n                        <span className=\"slider\"></span>\r\n                      </label>\r\n                      <span className=\"switch-label\">\r\n                        启用浏览器通知\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>邮件更新</label>\r\n                    <div className=\"switch-group\">\r\n                      <label className=\"switch\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={preferencesForm.emailUpdates}\r\n                          onChange={(e) => handleInputChange('preferences', 'emailUpdates', e.target.checked)}\r\n                        />\r\n                        <span className=\"slider\"></span>\r\n                      </label>\r\n                      <span className=\"switch-label\">\r\n                        接收产品更新邮件\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-actions\">\r\n                    <button \r\n                      type=\"submit\" \r\n                      className=\"save-button\"\r\n                      disabled={saving}\r\n                    >\r\n                      {saving ? '保存中...' : '保存设置'}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'data' && (\r\n              <div className=\"tab-content\">\r\n                <h3>学习统计</h3>\r\n                \r\n                {/* 使用与 HomePage 相同的统计样式 */}\r\n                <div className=\"stats-overview\">\r\n                  <div className=\"stats-grid\">\r\n                    <div className=\"stat-card\">\r\n                      <div className=\"stat-icon\">📚</div>\r\n                      <div className=\"stat-content\">\r\n                        <div className=\"stat-number\">{studyStats.totalCategories}</div>\r\n                        <div className=\"stat-label\">知识分类</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"stat-card\">\r\n                      <div className=\"stat-icon\">❓</div>\r\n                      <div className=\"stat-content\">\r\n                        <div className=\"stat-number\">{studyStats.totalQuestions}</div>\r\n                        <div className=\"stat-label\">题目总数</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"stat-card\">\r\n                      <div className=\"stat-icon\">📖</div>\r\n                      <div className=\"stat-content\">\r\n                        <div className=\"stat-number\">{studyStats.reviewQuestions}</div>\r\n                        <div className=\"stat-label\">待复习</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"stat-card\">\r\n                      <div className=\"stat-icon\">⚡</div>\r\n                      <div className=\"stat-content\">\r\n                        <div className=\"stat-number\">{studyStats.todayReviewed}</div>\r\n                        <div className=\"stat-label\">今日复习</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 进度统计 */}\r\n                <div className=\"progress-section\">\r\n                  <div className=\"progress-item\">\r\n                    <div className=\"progress-header\">\r\n                      <span className=\"progress-label\">复习进度</span>\r\n                      <span className=\"progress-percent\">\r\n                        {studyStats.totalQuestions > 0 \r\n                          ? Math.round(((studyStats.totalQuestions - studyStats.reviewQuestions) / studyStats.totalQuestions) * 100)\r\n                          : 0\r\n                        }%\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"progress-bar\">\r\n                      <div \r\n                        className=\"progress-fill\"\r\n                        style={{ \r\n                          width: `${studyStats.totalQuestions > 0 \r\n                            ? ((studyStats.totalQuestions - studyStats.reviewQuestions) / studyStats.totalQuestions) * 100 \r\n                            : 0\r\n                          }%` \r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"progress-text\">\r\n                      已复习 {studyStats.totalQuestions - studyStats.reviewQuestions} / {studyStats.totalQuestions} 题目\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 数据导出 */}\r\n                <div className=\"data-section\">\r\n                  <h4>数据导出</h4>\r\n                  <div className=\"data-item\">\r\n                    <div className=\"data-info\">\r\n                      <span className=\"data-label\">导出学习数据</span>\r\n                      <span className=\"data-description\">\r\n                        导出您的所有分类和题目数据为 JSON 格式\r\n                      </span>\r\n                    </div>\r\n                    <button \r\n                      className=\"data-action-btn\"\r\n                      onClick={handleDataExport}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? '导出中...' : '导出数据'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 数据清理 */}\r\n                <div className=\"data-section\">\r\n                  <h4>数据清理</h4>\r\n                  <div className=\"data-item danger\">\r\n                    <div className=\"data-info\">\r\n                      <span className=\"data-label\">删除账户数据</span>\r\n                      <span className=\"data-description\">\r\n                        永久删除您的所有学习数据，此操作不可撤销\r\n                      </span>\r\n                    </div>\r\n                    <button \r\n                      className=\"data-action-btn danger\"\r\n                      disabled\r\n                    >\r\n                      即将开放\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSettingsModal;","// src/pages/ReviewPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport { getAllQuestions, updateQuestion } from '../services/questionService';\r\nimport AV from 'leancloud-storage';\r\nimport ReviewReminderSection from '../components/ReviewReminderSection';\r\nimport './ReviewPage.css';\r\n\r\n// 创建 React Query 客户端\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      staleTime: 5 * 60 * 1000,\r\n      cacheTime: 10 * 60 * 1000,\r\n      retry: 1,\r\n    },\r\n  },\r\n});\r\n\r\nconst ReviewPage = () => {\r\n  const navigate = useNavigate();\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // 复习提醒相关状态\r\n  const [reviewThreshold, setReviewThreshold] = useState(7);\r\n  const [reviewQuestions, setReviewQuestions] = useState([]);\r\n  const [showReviewSettings, setShowReviewSettings] = useState(false);\r\n\r\n  // 用户状态\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  // 检查用户登录状态\r\n  useEffect(() => {\r\n    const user = AV.User.current();\r\n    setCurrentUser(user);\r\n    \r\n    if (user) {\r\n      initializeData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const initializeData = async () => {\r\n    try {\r\n      const questionsData = await getAllQuestions();\r\n      setQuestions(questionsData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 计算需要复习的题目\r\n  useEffect(() => {\r\n    const calculateReviewQuestions = () => {\r\n      const now = new Date();\r\n      const thresholdMs = reviewThreshold * 24 * 60 * 60 * 1000;\r\n      \r\n      const needReview = questions.filter(question => {\r\n        const lastReviewed = new Date(question.updatedAt || question.createdAt);\r\n        const timeDiff = now - lastReviewed;\r\n        return timeDiff >= thresholdMs;\r\n      }).sort((a, b) => {\r\n        return new Date(a.updatedAt || a.createdAt) - new Date(b.updatedAt || b.createdAt);\r\n      });\r\n      \r\n      setReviewQuestions(needReview);\r\n    };\r\n\r\n    if (questions.length > 0) {\r\n      calculateReviewQuestions();\r\n    }\r\n  }, [questions, reviewThreshold]);\r\n\r\n  // 更新题目复习时间\r\n  const handleUpdateQuestionTime = async (questionId) => {\r\n    try {\r\n      console.log('更新题目复习时间:', questionId);\r\n      \r\n      const currentTime = new Date().toISOString();\r\n      \r\n      await updateQuestion(questionId, {\r\n        updatedAt: currentTime\r\n      });\r\n      \r\n      setQuestions(prev => prev.map(q => \r\n        q.id === questionId \r\n          ? { ...q, updatedAt: currentTime }\r\n          : q\r\n      ));\r\n      \r\n      console.log(`题目 ${questionId} 复习时间已更新`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('更新题目时间失败:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleQuestionClick = (questionId) => {\r\n    const question = questions.find(q => q.id === questionId);\r\n    if (question && question.category) {\r\n      navigate(`/category/${question.category.id}`);\r\n    }\r\n  };\r\n\r\n  // 用户未登录时的显示\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"review-page\">\r\n        <div className=\"auth-required-container\">\r\n          <div className=\"auth-required-icon\">🔐</div>\r\n          <h2>请先登录</h2>\r\n          <p>登录后即可使用复习提醒功能</p>\r\n          <div className=\"auth-required-actions\">\r\n            <button \r\n              onClick={() => {\r\n                window.dispatchEvent(new CustomEvent('showAuthModal', { \r\n                  detail: { tab: 'login' } \r\n                }));\r\n              }}\r\n              className=\"login-btn primary\"\r\n            >\r\n              🚀 立即登录\r\n            </button>\r\n            <button \r\n              onClick={() => {\r\n                window.dispatchEvent(new CustomEvent('showAuthModal', { \r\n                  detail: { tab: 'register' } \r\n                }));\r\n              }}\r\n              className=\"login-btn secondary\"\r\n            >\r\n              📝 注册账号\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"review-page\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载复习数据中...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"review-page\">\r\n        <div className=\"error-container\">\r\n          <h2>加载失败</h2>\r\n          <p>{error}</p>\r\n          <button onClick={() => window.location.reload()} className=\"retry-btn\">\r\n            重试\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <div className=\"review-page\">\r\n        <header className=\"review-hero-section\">\r\n          <div className=\"hero-content\">\r\n            <div className=\"user-welcome\">\r\n              <h1 className=\"hero-title\">📚 复习提醒</h1>\r\n              <p className=\"hero-subtitle\">\r\n                智能管理您的学习进度，{reviewQuestions.length > 0 ? \r\n                  `有 ${reviewQuestions.length} 道题目需要复习` : \r\n                  '所有题目都已及时复习'\r\n                }\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"review-stats-overview\">\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-number\">{questions.length}</div>\r\n                <div className=\"stat-label\">总题目数</div>\r\n              </div>\r\n              <div className=\"stat-card warning\">\r\n                <div className=\"stat-number\">{reviewQuestions.length}</div>\r\n                <div className=\"stat-label\">待复习</div>\r\n              </div>\r\n              <div className=\"stat-card success\">\r\n                <div className=\"stat-number\">{questions.length - reviewQuestions.length}</div>\r\n                <div className=\"stat-label\">已复习</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <ReviewReminderSection\r\n          reviewQuestions={reviewQuestions}\r\n          setReviewQuestions={setReviewQuestions}\r\n          reviewThreshold={reviewThreshold}\r\n          setReviewThreshold={setReviewThreshold}\r\n          showReviewSettings={showReviewSettings}\r\n          setShowReviewSettings={setShowReviewSettings}\r\n          onQuestionClick={handleQuestionClick}\r\n          onUpdateQuestionTime={handleUpdateQuestionTime}\r\n          questions={questions}\r\n        />\r\n\r\n        <footer className=\"review-footer\">\r\n          <div className=\"footer-actions\">\r\n            <button \r\n              onClick={() => navigate('/')}\r\n              className=\"back-to-home-btn\"\r\n            >\r\n              ← 返回首页\r\n            </button>\r\n            <div className=\"footer-info\">\r\n              基于间隔重复原理，帮助您高效记忆\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n\r\nexport default ReviewPage;","// src/components/PWAInstallPrompt.jsx\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst PWAInstallPrompt = () => {\r\n  const [deferredPrompt, setDeferredPrompt] = useState(null);\r\n  const [showPrompt, setShowPrompt] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleBeforeInstallPrompt = (e) => {\r\n      // 阻止默认的安装提示\r\n      e.preventDefault();\r\n      // 保存事件以便后续使用\r\n      setDeferredPrompt(e);\r\n      setShowPrompt(true);\r\n    };\r\n\r\n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\r\n    };\r\n  }, []);\r\n\r\n  const handleInstallClick = async () => {\r\n    if (!deferredPrompt) return;\r\n\r\n    // 显示安装提示\r\n    deferredPrompt.prompt();\r\n    \r\n    // 等待用户选择\r\n    const { outcome } = await deferredPrompt.userChoice;\r\n    \r\n    if (outcome === 'accepted') {\r\n      console.log('用户接受了安装');\r\n    } else {\r\n      console.log('用户拒绝了安装');\r\n    }\r\n    \r\n    setDeferredPrompt(null);\r\n    setShowPrompt(false);\r\n  };\r\n\r\n  const handleDismiss = () => {\r\n    setDeferredPrompt(null);\r\n    setShowPrompt(false);\r\n  };\r\n\r\n  if (!showPrompt) return null;\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      bottom: '20px',\r\n      right: '20px',\r\n      background: 'white',\r\n      padding: '16px',\r\n      borderRadius: '8px',\r\n      boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\r\n      zIndex: 1000,\r\n      maxWidth: '300px'\r\n    }}>\r\n      <h4>安装应用</h4>\r\n      <p>将此应用安装到您的设备上以获得更好的体验</p>\r\n      <div style={{ display: 'flex', gap: '8px', marginTop: '12px' }}>\r\n        <button \r\n          onClick={handleInstallClick}\r\n          style={{\r\n            background: '#007bff',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '8px 16px',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          安装\r\n        </button>\r\n        <button \r\n          onClick={handleDismiss}\r\n          style={{\r\n            background: 'transparent',\r\n            border: '1px solid #ccc',\r\n            padding: '8px 16px',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          稍后\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PWAInstallPrompt;","// pages/OfflineQuestionsPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { cacheService } from '../services/cacheService';\r\nimport './OfflineQuestionsPage.css';\r\n\r\n// 临时内联组件，避免依赖问题\r\nconst OfflineQuestionDetailCard = ({ \r\n  questionId, \r\n  onBack,\r\n  onNavigateToQuestion \r\n}) => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [offlineQuestions, setOfflineQuestions] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    loadOfflineQuestions();\r\n  }, [questionId]);\r\n\r\n  const loadOfflineQuestions = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const cacheData = await cacheService.getCachedQuestions();\r\n      const questions = cacheData.questions || [];\r\n      \r\n      setOfflineQuestions(questions);\r\n      \r\n      // 查找当前题目\r\n      let targetQuestion = null;\r\n      let targetIndex = 0;\r\n      \r\n      if (questionId) {\r\n        // 通过 ID 查找\r\n        targetQuestion = questions.find(q => q.id === questionId);\r\n        targetIndex = questions.findIndex(q => q.id === questionId);\r\n      } else {\r\n        // 没有指定 ID，显示第一题\r\n        targetQuestion = questions[0] || null;\r\n        targetIndex = 0;\r\n      }\r\n      \r\n      if (targetQuestion) {\r\n        setCurrentQuestion(targetQuestion);\r\n        setCurrentIndex(targetIndex);\r\n      } else {\r\n        setError('未找到该题目或题目不在缓存中');\r\n      }\r\n    } catch (error) {\r\n      console.error('加载离线题目失败:', error);\r\n      setError('加载离线题目失败: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 导航到上一题\r\n  const goToPrevious = () => {\r\n    if (currentIndex > 0) {\r\n      const newIndex = currentIndex - 1;\r\n      setCurrentIndex(newIndex);\r\n      setCurrentQuestion(offlineQuestions[newIndex]);\r\n      \r\n      // 通知父组件 URL 变化\r\n      if (onNavigateToQuestion) {\r\n        onNavigateToQuestion(offlineQuestions[newIndex].id);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 导航到下一题\r\n  const goToNext = () => {\r\n    if (currentIndex < offlineQuestions.length - 1) {\r\n      const newIndex = currentIndex + 1;\r\n      setCurrentIndex(newIndex);\r\n      setCurrentQuestion(offlineQuestions[newIndex]);\r\n      \r\n      // 通知父组件 URL 变化\r\n      if (onNavigateToQuestion) {\r\n        onNavigateToQuestion(offlineQuestions[newIndex].id);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"offline-detail-container\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载离线题目...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"offline-detail-container\">\r\n        <div className=\"error-container\">\r\n          <div className=\"error-icon\">❌</div>\r\n          <h3>加载失败</h3>\r\n          <p>{error}</p>\r\n          <button onClick={onBack} className=\"back-btn\">\r\n            返回列表\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!currentQuestion) {\r\n    return (\r\n      <div className=\"offline-detail-container\">\r\n        <div className=\"empty-state\">\r\n          <div className=\"empty-icon\">📭</div>\r\n          <h3>题目不存在</h3>\r\n          <p>该题目可能已被删除或不在缓存中</p>\r\n          <button onClick={onBack} className=\"back-btn\">\r\n            返回列表\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"offline-detail-container\">\r\n      {/* 离线模式头部 */}\r\n      <div className=\"offline-detail-header\">\r\n        <div className=\"header-left\">\r\n          <button onClick={onBack} className=\"back-button\">\r\n            ← 返回\r\n          </button>\r\n          <div className=\"offline-badge\">离线模式</div>\r\n        </div>\r\n        \r\n        <div className=\"header-center\">\r\n          <h3>题目详情</h3>\r\n          <span className=\"question-counter\">\r\n            {currentIndex + 1} / {offlineQuestions.length}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"header-right\">\r\n          <button \r\n            onClick={goToPrevious}\r\n            disabled={currentIndex === 0}\r\n            className=\"nav-button\"\r\n          >\r\n            ← 上一题\r\n          </button>\r\n          <button \r\n            onClick={goToNext}\r\n            disabled={currentIndex === offlineQuestions.length - 1}\r\n            className=\"nav-button\"\r\n          >\r\n            下一题 →\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 离线模式提示 */}\r\n      <div className=\"offline-notice\">\r\n        <div className=\"notice-icon\">📶</div>\r\n        <div className=\"notice-content\">\r\n          <strong>离线模式</strong>\r\n          <span>当前处于离线状态，部分功能受限</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 简化版题目详情显示 */}\r\n      <div className=\"question-card-wrapper\">\r\n        <div className=\"offline-question-card\">\r\n          <div className=\"question-header\">\r\n            <h2 className=\"question-title\">{currentQuestion.title}</h2>\r\n            <div className=\"question-meta\">\r\n              <span \r\n                className=\"difficulty-badge\"\r\n                style={{ backgroundColor: getDifficultyColor(currentQuestion.difficulty) }}\r\n              >\r\n                {getDifficultyText(currentQuestion.difficulty)}\r\n              </span>\r\n              <span className=\"category-tag\">\r\n                {currentQuestion.category?.name || '未分类'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"question-content\">\r\n            <div className=\"answer-section\">\r\n              <h4>详细答案</h4>\r\n              <div className=\"answer-text\">\r\n                {currentQuestion.detailedAnswer || currentQuestion.oralAnswer || '暂无答案'}\r\n              </div>\r\n            </div>\r\n\r\n            {currentQuestion.code && (\r\n              <div className=\"code-section\">\r\n                <h4>代码</h4>\r\n                <pre className=\"code-block\">\r\n                  <code>{currentQuestion.code}</code>\r\n                </pre>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 底部导航 */}\r\n      <div className=\"offline-detail-footer\">\r\n        <button \r\n          onClick={goToPrevious}\r\n          disabled={currentIndex === 0}\r\n          className=\"footer-nav-button\"\r\n        >\r\n          ← 上一题\r\n        </button>\r\n        \r\n        <div className=\"progress-info\">\r\n          <div className=\"progress-bar\">\r\n            <div \r\n              className=\"progress-fill\"\r\n              style={{\r\n                width: `${((currentIndex + 1) / offlineQuestions.length) * 100}%`\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <span>进度: {currentIndex + 1} / {offlineQuestions.length}</span>\r\n        </div>\r\n        \r\n        <button \r\n          onClick={goToNext}\r\n          disabled={currentIndex === offlineQuestions.length - 1}\r\n          className=\"footer-nav-button\"\r\n        >\r\n          下一题 →\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 工具函数\r\nconst getDifficultyColor = (difficulty) => {\r\n  switch (difficulty) {\r\n    case 'easy': return '#52c41a';\r\n    case 'medium': return '#faad14';\r\n    case 'hard': return '#f5222d';\r\n    default: return '#666';\r\n  }\r\n};\r\n\r\nconst getDifficultyText = (difficulty) => {\r\n  switch (difficulty) {\r\n    case 'easy': return '简单';\r\n    case 'medium': return '中等';\r\n    case 'hard': return '困难';\r\n    default: return difficulty;\r\n  }\r\n};\r\n\r\nconst OfflineQuestionsPage = () => {\r\n  const { categoryName, questionId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [offlineQuestions, setOfflineQuestions] = useState([]);\r\n  const [filteredQuestions, setFilteredQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [viewMode, setViewMode] = useState('list'); // 'list' 或 'detail'\r\n\r\n  useEffect(() => {\r\n    loadOfflineData();\r\n  }, [categoryName, questionId]);\r\n\r\n  const loadOfflineData = async () => {\r\n    try {\r\n      const cacheData = await cacheService.getCachedQuestions();\r\n      const questions = cacheData.questions || [];\r\n      \r\n      setOfflineQuestions(questions);\r\n      \r\n      // 根据分类过滤题目\r\n      if (categoryName && categoryName !== 'all') {\r\n        const filtered = questions.filter(q => \r\n          q.category?.name === categoryName || '未分类' === categoryName\r\n        );\r\n        setFilteredQuestions(filtered);\r\n      } else {\r\n        setFilteredQuestions(questions);\r\n      }\r\n\r\n      // 检查是否直接进入详情模式\r\n      if (questionId) {\r\n        setViewMode('detail');\r\n      }\r\n    } catch (error) {\r\n      console.error('加载离线题目失败:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleQuestionClick = (question) => {\r\n    setViewMode('detail');\r\n    navigate(`/offline/questions/${question.id}`);\r\n  };\r\n\r\n  const handleBackToList = () => {\r\n    setViewMode('list');\r\n    navigate('/offline/questions');\r\n  };\r\n\r\n  const handleNavigateToQuestion = (newQuestionId) => {\r\n    navigate(`/offline/questions/${newQuestionId}`);\r\n  };\r\n\r\n  // 详情视图\r\n  if (viewMode === 'detail') {\r\n    return (\r\n      <OfflineQuestionDetailCard \r\n        questionId={questionId}\r\n        onBack={handleBackToList}\r\n        onNavigateToQuestion={handleNavigateToQuestion}\r\n      />\r\n    );\r\n  }\r\n\r\n  // 列表视图\r\n  if (loading) {\r\n    return (\r\n      <div className=\"offline-page\">\r\n        <div className=\"loading-container\">\r\n          <div className=\"modern-spinner\"></div>\r\n          <p>加载离线数据...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (filteredQuestions.length === 0) {\r\n    return (\r\n      <div className=\"offline-page\">\r\n        <div className=\"empty-state\">\r\n          <div className=\"empty-icon\">📦</div>\r\n          <h3>暂无离线题目</h3>\r\n          <p>当前没有缓存的题目数据，请连接网络后缓存题目</p>\r\n          <button \r\n            onClick={() => window.history.back()}\r\n            className=\"back-btn\"\r\n          >\r\n            返回\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"offline-page\">\r\n      <div className=\"offline-header\">\r\n        <button \r\n          onClick={() => window.history.back()}\r\n          className=\"back-button\"\r\n        >\r\n          ← 返回主页\r\n        </button>\r\n        <h2>📦 离线题目</h2>\r\n        {categoryName && categoryName !== 'all' && (\r\n          <p>分类: {categoryName}</p>\r\n        )}\r\n        <div className=\"offline-stats\">\r\n          共 {filteredQuestions.length} 道题目 • 离线模式\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"offline-actions\">\r\n        <div className=\"view-options\">\r\n          <span>排序方式:</span>\r\n          <select className=\"sort-select\">\r\n            <option value=\"default\">默认顺序</option>\r\n            <option value=\"difficulty\">按难度</option>\r\n            <option value=\"title\">按标题</option>\r\n          </select>\r\n        </div>\r\n        \r\n        <div className=\"cache-info\">\r\n          缓存时间: {new Date().toLocaleString()}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"offline-questions-list\">\r\n        {filteredQuestions.map((question, index) => (\r\n          <div\r\n            key={question.id || index}\r\n            className=\"offline-question-card\"\r\n            onClick={() => handleQuestionClick(question)}\r\n          >\r\n            <div className=\"question-card-header\">\r\n              <h4 className=\"question-title\">{question.title}</h4>\r\n              <span \r\n                className=\"difficulty-badge\"\r\n                style={{ \r\n                  backgroundColor: getDifficultyColor(question.difficulty) \r\n                }}\r\n              >\r\n                {getDifficultyText(question.difficulty)}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className=\"question-card-body\">\r\n              <p className=\"question-preview\">\r\n                {getAnswerPreview(question)}\r\n              </p>\r\n              \r\n              <div className=\"question-meta\">\r\n                <span className=\"category-tag\">\r\n                  {question.category?.name || '未分类'}\r\n                </span>\r\n                <span className=\"offline-tag\">离线</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"question-card-footer\">\r\n              <span className=\"question-date\">\r\n                创建: {new Date(question.createdAt).toLocaleDateString()}\r\n              </span>\r\n              <button className=\"view-detail-btn\">\r\n                查看详情 →\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getAnswerPreview = (question) => {\r\n  const answer = question.oralAnswer || question.detailedAnswer || '';\r\n  const preview = answer.substring(0, 120).replace(/[#*`]/g, '');\r\n  return preview + (answer.length > 120 ? '...' : '');\r\n};\r\n\r\nexport default OfflineQuestionsPage;","// App.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport HomePage from './pages/HomePage';\r\nimport InitPage from './components/InitPage';\r\nimport CategoryDetailPage from './pages/CategoryDetailPage';\r\nimport TestPage from './pages/TestPage';\r\nimport Navigation from './components/Navigation';\r\nimport AuthModal from './components/AuthModal';\r\nimport UserSettingsModal from './components/UserSettingsModal';\r\nimport ReviewPage from './pages/ReviewPage';\r\nimport './App.css';\r\nimport PWAInstallPrompt from './components/PWAInstallPrompt';\r\nimport OfflineQuestionsPage from './pages/OfflineQuestionsPage';\r\n\r\n\r\nconsole.log('Dialogflow Config:', {\r\n  projectId: process.env.REACT_APP_DIALOGFLOW_PROJECT_ID,\r\n  clientEmail: process.env.REACT_APP_DIALOGFLOW_CLIENT_EMAIL,\r\n  hasPrivateKey: !!process.env.REACT_APP_DIALOGFLOW_PRIVATE_KEY\r\n});\r\n\r\n// 在组件外部创建 QueryClient 实例\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      refetchOnWindowFocus: false,\r\n      retry: 1,\r\n      staleTime: 5 * 60 * 1000, // 5分钟\r\n      gcTime: 10 * 60 * 1000, // 缓存时间10分钟\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const [isAuthModalOpen, setIsAuthModalOpen] = useState(false);\r\n  const [authModalTab, setAuthModalTab] = useState('login');\r\n  const [isUserSettingsOpen, setIsUserSettingsOpen] = useState(false);\r\n  const [userSettingsTab, setUserSettingsTab] = useState('profile');\r\n\r\n  // 监听自定义事件\r\n  useEffect(() => {\r\n    const handleShowAuthModal = (event) => {\r\n      const tab = event.detail?.tab || 'login';\r\n      setAuthModalTab(tab);\r\n      setIsAuthModalOpen(true);\r\n    };\r\n\r\n    const handleShowUserSettings = (event) => {\r\n      const tab = event.detail?.tab || 'profile';\r\n      setUserSettingsTab(tab);\r\n      setIsUserSettingsOpen(true);\r\n    };\r\n\r\n    window.addEventListener('showAuthModal', handleShowAuthModal);\r\n    window.addEventListener('showUserSettings', handleShowUserSettings);\r\n\r\n    return () => {\r\n      window.removeEventListener('showAuthModal', handleShowAuthModal);\r\n      window.removeEventListener('showUserSettings', handleShowUserSettings);\r\n    };\r\n  }, []);\r\n\r\n  const handleShowAuthModal = (tab = 'login') => {\r\n    setAuthModalTab(tab);\r\n    setIsAuthModalOpen(true);\r\n  };\r\n\r\n  // 添加认证成功回调\r\n  const handleAuthSuccess = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <Router>\r\n        <Navigation onShowAuthModal={handleShowAuthModal} />\r\n        \r\n        <Routes>\r\n          <Route path=\"/\" element={<HomePage />} />\r\n          <Route path=\"/init\" element={<InitPage />} />\r\n          <Route path=\"/category/:categoryId\" element={<CategoryDetailPage />} />\r\n          <Route path=\"/test\" element={<TestPage />} />\r\n          <Route path=\"/review\" element={<ReviewPage />} />\r\n          <Route path=\"/offline/questions\" element={<OfflineQuestionsPage />} />\r\n<Route path=\"/offline/questions/:questionId\" element={<OfflineQuestionsPage />} />\r\n<Route path=\"/offline/category/:categoryName\" element={<OfflineQuestionsPage />} />\r\n<Route path=\"/offline/category/:categoryName/question/:questionId\" element={<OfflineQuestionsPage />} />\r\n        </Routes>\r\n\r\n        <AuthModal \r\n          isOpen={isAuthModalOpen}\r\n          onClose={() => setIsAuthModalOpen(false)}\r\n          defaultTab={authModalTab}\r\n          onAuthSuccess={handleAuthSuccess}\r\n        />\r\n\r\n        <UserSettingsModal \r\n          isOpen={isUserSettingsOpen}\r\n          onClose={() => setIsUserSettingsOpen(false)}\r\n        />\r\n                <PWAInstallPrompt />\r\n\r\n      </Router>\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import 'core-js/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// 注册 Service Worker\r\nif ('serviceWorker' in navigator) {\r\n  window.addEventListener('load', async () => {\r\n    try {\r\n      // 先检查 sw.js 文件是否存在\r\n      const response = await fetch('/sw.js');\r\n      if (!response.ok) {\r\n        throw new Error(`sw.js not found: ${response.status}`);\r\n      }\r\n      \r\n      const contentType = response.headers.get('content-type');\r\n      if (!contentType || !contentType.includes('javascript')) {\r\n        throw new Error(`Invalid MIME type: ${contentType}`);\r\n      }\r\n      \r\n      // 文件存在且类型正确，进行注册\r\n      const registration = await navigator.serviceWorker.register('/sw.js');\r\n      console.log('SW registered successfully: ', registration);\r\n    } catch (error) {\r\n      console.log('SW registration failed: ', error);\r\n      console.log('Error details:', error.message);\r\n    }\r\n  });\r\n}"],"names":["PRIVATE_KEY","process","replace","detectIntent","async","text","sessionId","trim","Error","accessToken","jwt","now","Math","floor","Date","payload","iss","scope","aud","exp","iat","signatureInput","btoa","JSON","stringify","alg","typ","privateKey","crypto","subtle","importKey","str2ab","atob","name","hash","signature","sign","TextEncoder","encode","String","fromCharCode","Uint8Array","generateJWT","response","fetch","method","headers","body","ok","status","json","access_token","error","console","getAccessToken","sessionPath","request","queryInput","languageCode","API_URL","errorDetails","statusText","data","queryResult","fulfillmentText","actions","extractActions","quickReplies","intent","displayName","push","type","target","label","str","buf","ArrayBuffer","length","bufView","i","charCodeAt","Chatbox","onNavigate","categories","questions","currentUser","isOpen","setIsOpen","useState","messages","setMessages","inputText","setInputText","isTyping","setIsTyping","messagesEndRef","useRef","useEffect","sendWelcomeMessage","userId","DialogflowService","id","welcomeMessage","isBot","timestamp","fallbackMessage","getUsername","current","scrollIntoView","behavior","handleSendMessage","userMessage","prev","botResponse","processMessage","botMessage","_jsxs","_Fragment","children","className","onClick","title","_jsx","clearConversation","map","message","split","line","toLocaleTimeString","hour","minute","reply","index","setTimeout","action","confirmMessage","searchMessage","log","handleFunctionAction","handleActionClick","ref","value","onChange","e","onKeyPress","key","shiftKey","preventDefault","placeholder","rows","disabled","offlineService","constructor","this","isOnline","setupOnlineListeners","window","addEventListener","dispatchEvent","navigator","onLine","isOnlineMode","shouldUseOfflineData","simulateNetworkRequest","Promise","resolve","reject","eventName","CustomEvent","detail","callback","removeEventListener","initAV","AV","appId","appKey","serverURL","QueryOptions","SORT_BY_NAME","SORT_BY_QUESTION_COUNT","SORT_BY_UPDATED_AT","cacheConfig","ttl","categoryDetails","Map","categoryDetailTtl","questionCounts","questionCountTtl","OFFLINE_CATEGORIES_KEY","isCacheValid","getOfflineCategories","cached","localStorage","getItem","parse","total","page","pageSize","saveCategoriesToOffline","setItem","getCategoriesQuestionCounts","counts","forEach","cat","categoryIds","categoryId","uncachedCategoryIds","get","count","countPromises","categoryPointer","createWithoutData","questionQuery","equalTo","warn","countResults","all","set","batchError","categoryPointers","containedIn","select","find","question","category","fallbackError","getAllCategories","query","include","descending","result","description","questionCount","undefined","createdAt","updatedAt","createdBy","includes","getCategories","options","isDefaultQuery","sortBy","SORT_BY_CREATED_AT","skip","limit","categoriesWithCount","createCategory","extend","categoryData","acl","setReadAccess","setWriteAccess","setPublicReadAccess","setACL","save","clear","cacheService","isSupported","checkSupport","cacheLimit","cacheVersion","cacheExpiry","CACHE_KEYS","SW_CACHE","LOCAL_STORAGE","FALLBACK","META","cacheState","swAvailable","localStorageAvailable","lastSync","strategy","init","checkSWCacheSupport","checkLocalStorageSupport","determineCacheStrategy","sw","ls","testCache","caches","open","put","Request","Response","delete","testKey","removeItem","setCacheLimit","updateCacheMetadata","getCacheLimit","cacheQuestions","cacheData","slice","version","min","cachePromises","cacheToServiceWorker","cacheToLocalStorage","allSettled","cache","cacheRequest","cacheResponse","fallbackData","getCachedQuestions","getEmptyCacheData","getFromServiceWorker","getFromLocalStorage","isCacheExpired","clearCache","match","fallback","getCacheStatus","getDefaultCacheStatus","isExpired","metadata","getCacheMetadata","supported","hasCache","lsAvailable","lastUpdated","dataInfo","clearPromises","catch","Object","values","getCacheConfig","maxLimit","minLimit","defaultLimit","expiryDays","resetToDefault","testCachePerformance","testData","Array","from","_","answer","startTime","performance","retrievedData","endTime","success","duration","耗时","toFixed","策略","数据量","service","DifficultyOptions","ProficiencyOptions","getCategoryId","objectId","createCategoryPointer","batchUpdateQueue","batchUpdateTimer","scheduleBatchUpdate","change","clearTimeout","updates","categoryUpdates","updatePromises","entries","totalChange","categoryQuery","freshCategory","currentCount","newCount","max","batchUpdateCategoryCounts","formatQuestionResponse","detailedAnswer","oralAnswer","code","url","tags","difficulty","proficiency","appearanceLevel","lastReviewedAt","delay","ms","checkUserAuth","checkOfflineMode","operation","createQuestion","questionData","updateCategoryCountImmediately","deleteQuestion","questionId","first","destroy","getAllQuestions","allQuestions","hasMore","batchResults","题目总数","批次","最新题目","q","updateQuestion","updateData","oldCategory","keys","newCategoryId","oldCategoryId","updatedQuestion","OfflineIndicator","setIsOnline","cacheStatus","setCacheStatus","handleOnline","handleOffline","interval","setInterval","clearInterval","CacheManagementTab","onCacheUpdate","navigate","useNavigate","syncing","setSyncing","cacheSettings","setCacheSettings","autoCache","cacheStrategy","tempCacheLimit","setTempCacheLimit","showSettings","setShowSettings","debouncedCacheLimit","useDebounce","debouncedValue","setDebouncedValue","handler","throttledCacheLimit","useThrottle","throttledValue","setThrottledValue","lastRan","handleManualCache","useCallback","newStatus","alert","handleClearCache","handleSliderChange","CacheSettingsModal","htmlFor","step","parseInt","onInput","progress","style","setProperty","ReviewReminderSection","reviewQuestions","setReviewQuestions","reviewThreshold","setReviewThreshold","showReviewSettings","setShowReviewSettings","onQuestionClick","onUpdateQuestionTime","selectedUrgency","setSelectedUrgency","searchTerm","setSearchTerm","updatingQuestions","setUpdatingQuestions","Set","setCurrentUser","formatTimeAgo","date","diffMs","diffDays","diffWeeks","diffMonths","getUrgencyLevel","lastReviewed","daysAgo","getUrgencyText","urgency","getUrgencyDaysDescription","handleQuestionClick","categoryUrl","history","pushState","PopStateEvent","location","href","filteredQuestions","filter","matchesSearch","toLowerCase","questionsByUrgency","high","medium","low","getProgressPercentage","totalQuestions","reviewedQuestions","round","width","days","backgroundColor","urgencyColor","getUrgencyColor","isUpdating","has","substring","tag","tagIndex","stopPropagation","add","newList","errorMessage","newSet","handleReviewNow","handlePostpone","QuestionItem","React","getDifficultyColor","color","getDifficultyText","CalendarTooltip","dayData","position","onClose","isVisible","tooltipRef","queryClient","useQueryClient","cachedQuestions","setCachedQuestions","itemHeights","setItemHeights","questionsData","isLoading","useQuery","queryKey","toISOString","join","queryFn","missingQuestionIds","getQueryData","questionIds","batches","results","batch","getQuestionsBatch","setQueryData","enabled","staleTime","cacheTime","retry","retryDelay","parentRef","virtualizer","useVirtualizer","getScrollElement","estimateSize","overscan","handleClickOutside","event","contains","document","handleEscape","virtualQuestions","getVirtualItems","left","x","innerWidth","top","y","transform","getDate","toLocaleDateString","weekday","year","month","day","height","viewBox","fill","d","overflow","getTotalSize","virtualRow","size","start","Documents","selectedDoc","setSelectedDoc","currentQuoteIndex","setCurrentQuoteIndex","techQuotes","author","prevIndex","documents","icon","doc","filteredDocs","handleCloseModal","prevQuote","nextQuote","categoryDocs","handleDocClick","handleVisitSite","CommunityService","getPosts","sortOrder","keyword","authorId","titleQuery","contentQuery","or","createPost","postData","post","content","isPublic","getPostById","increment","getComments","postId","ascending","addComment","parentId","comment","parent","toggleLike","Like","existingLike","postObj","liked","like","getPopularTags","posts","tagCount","sort","a","b","CreatePostModal","onSuccess","formData","setFormData","submitting","setSubmitting","errors","setErrors","charCount","setCharCount","suggestedTags","setSuggestedTags","textareaRef","maxLengths","popularTags","scrollHeight","matchedTags","handleInputChange","field","onSubmit","validateForm","newErrors","tagsArray","newPost","submit","getTitleCharCountColor","ratio","maxLength","getContentCharCountColor","currentTags","t","newTags","handleTagSuggestionClick","checked","SearchBar","onSearch","setKeyword","isFocused","setIsFocused","showSuggestions","setShowSuggestions","searchInputRef","timeoutId","handleSuggestionClick","suggestion","handleSearch","onFocus","handleFocus","onBlur","handleBlur","onKeyDown","blur","handleClear","focus","TagCloud","onTagClick","maxTags","setTags","loading","setLoading","selectedTag","setSelectedTag","defaultTags","loadPopularTags","tagsWithColors","tagData","getTagColor","colors","handleClearFilter","maxCount","totalPosts","reduce","sum","getTagSize","sizes","isSelected","handleTagClick","CommunityStats","stats","setStats","totalComments","totalLikes","activeUsers","todayPosts","trendingTags","setLastUpdated","loadStats","today","setHours","greaterThanOrEqualTo","weekAgo","setDate","distinct","postQuery","formatNumber","num","toString","formatTime","diffMins","diffHours","CommentItem","onReply","onUpdate","likes","setLikes","isLiked","setIsLiked","showActions","setShowActions","editing","setEditing","editContent","setEditContent","saving","setSaving","isAuthor","handleReplyClick","onMouseEnter","onMouseLeave","src","alt","handleEdit","confirm","handleCancelEdit","dangerouslySetInnerHTML","__html","CommentSection","comments","setComments","newComment","setNewComment","setSortBy","replyingTo","setReplyingTo","loadComments","sortedComments","handleSubmitComment","showSuccessMessage","handleReply","getCommentCountText","cancelReply","ctrlKey","metaKey","PostCard","showComments","setShowComments","views","setViews","borderColor","handleToggleComments","CommunityPage","activeTab","setActiveTab","setPosts","allPosts","setAllPosts","showCreateModal","setShowCreateModal","searchKeyword","setSearchKeyword","pagination","setPagination","loadPosts","filtered","reset","currentPage","postsData","newAllPosts","getSearchStats","matchCount","handleLoadMore","QueryClient","defaultOptions","queries","HomePage","setCategories","setQuestions","setError","syncMessage","setSyncMessage","selectedMonth","setSelectedMonth","showAddCategory","setShowAddCategory","newCategoryName","setNewCategoryName","newCategoryDescription","setNewCategoryDescription","addingCategory","setAddingCategory","showDeleteConfirm","setShowDeleteConfirm","categoryToDelete","setCategoryToDelete","deletingCategory","setDeletingCategory","hoveredDay","setHoveredDay","tooltipPosition","setTooltipPosition","tooltipVisible","setTooltipVisible","calendarRef","offlineQuestions","setOfflineQuestions","showOfflineMode","setShowOfflineMode","swStatus","setSwStatus","activated","preCacheQuestions","showCacheSettings","setShowCacheSettings","loadOfflineData","user","initializeData","handleCacheUpdated","handleSwActivated","timer","handleManualRefresh","handleQuestionCreated","handleAddCategory","newCategory","handleDeleteClick","handleConfirmDelete","deletedQuestions","destroyAll","clearCategoryCacheById","deleteCategory","handleCancelDelete","handleUpdateQuestionTime","currentTime","errorStack","stack","handleGlobalError","calculateReviewQuestions","thresholdMs","needReview","categoriesData","分类数据","题目数据","模式","err","cacheError","filteredCategories","useMemo","categoryStats","totalCategories","categoriesWithQuestions","totalQuestionsFromCategories","分类总数","基于分类的题目总数","基于所有题目的题目总数","差异","abs","有题目的分类数","对象","各分类详情","分类名称","服务层题目数","前端计算题目数","是否匹配","getDayQuestions","dateStr","getDayColor","getMonthlyCalendarData","monthStart","getFullYear","getMonth","monthEnd","dateCounts","questionDate","calendarData","currentDate","dayQuestions","isToday","handleDayMouseEnter","calendarRect","getBoundingClientRect","dayRect","currentTarget","handleDayMouseLeave","querySelector","handleTooltipClose","navigateMonth","direction","newDate","setMonth","getMonthStats","monthData","daysWithQuestions","maxDaily","getCategoryChartData","categoryMap","categoryName","fullName","percentage","getDifficultyData","difficultyMap","getActiveDays","toDateString","handleCategoryClick","navigateToOfflineCategory","getProgressWidth","c","defaultColors","chartData","difficultyData","activeDays","monthStats","monthName","renderOfflineCategories","offlineCategories","reload","charAt","QueryClientProvider","client","renderContent","autoFocus","actualQuestionCount","displayCount","ResponsiveContainer","PieChart","Pie","cx","cy","labelLine","outerRadius","dataKey","entry","Cell","Tooltip","formatter","Legend","BarChart","CartesianGrid","strokeDasharray","XAxis","YAxis","Bar","scrollTo","tab","CommunityClasses","PostStatusOptions","NotionFieldMapping","createCommunityClasses","Post","createPostClass","Comment","createCommentClass","createLikeClass","Follow","createFollowClass","exists","testPost","setPublicWriteAccess","testComment","testLike","testFollow","generateCommunitySampleData","createSamplePosts","createSampleComments","createSampleLikes","samplePosts","isPinned","random","saved","sampleComments","commentQuery","clearCommunityData","deletedCount","follows","likeQuery","followQuery","syncProblemsFromNotion","REACT_APP_NOTION_TOKEN","REACT_APP_NOTION_DATABASE_ID","run","cloudError","syncWithClientVersion","synced","mode","parseNotionPage","properties","getNotionPropertyValue","completionTime","isArray","notionPageId","notionUrl","lastEditedTime","last_edited_time","isActive","fieldNames","expectedType","fieldName","property","rich_text","multi_select","item","number","saveNotionProblemsToLeanCloud","Question","savedCount","problemData","problems","findOrCreateCategory","updateAllCategoryCounts","Category","checkNotionConnection","connected","generateSampleData","clearAllData","createCategories","createQuestions","updateCategoryCounts","categoriesCount","questionsCount","categoryIndex","deletedCategories","checkDataStatus","categoryCount","hasData","defineNotionCloudFunctions","define","Client","require","notion","auth","NOTION_INTEGRATION_TOKEN","databases","database_id","NOTION_DATABASE_ID","sorts","syncedCount","fetched","database","retrieve","plain_text","InitPage","setMessage","dataStatus","setDataStatus","notionStatus","setNotionStatus","syncResult","setSyncResult","communityStatus","setCommunityStatus","handleCheckStatus","handleCheckCommunityStatus","postCount","commentCount","likeCount","followCount","rel","problem","failedTables","QuestionForm","onSave","onCancel","defaultCategoryId","onCategoryChange","images","newTag","setNewTag","loadingCategories","setLoadingCategories","activeAnswerTab","setActiveAnswerTab","uploadingImages","setUploadingImages","fileInputRef","detailedAnswerRef","oralAnswerRef","isEditing","loadCategories","userCategories","总数","用户分类","当前用户","分类详情","handleFiles","files","answerType","imageFiles","file","uploadImage","uploadingId","avFile","savedFile","imageInfo","insertImageMarkdown","markdown","currentText","newText","handleAddTag","renderAnswerTab","hint","img","isUploading","onDragOver","handleDragOver","textarea","classList","onDragLeave","handleDragLeave","remove","onDrop","handleDrop","dataTransfer","setAttribute","click","triggerFileInput","image","removeImage","imageId","string","URL","isValidUrl","categoryChanged","handleRemoveTag","tagToRemove","display","accept","multiple","getAttribute","handleFileSelect","QuestionDetailCard","onDelete","isExpandedView","onUpdateField","onEdit","showQuestionForm","setShowQuestionForm","editingQuestion","setEditingQuestion","setIsEditing","showFullAnswer","setShowFullAnswer","deleteLoading","setDeleteLoading","editLoading","setEditLoading","localAppearanceLevel","setLocalAppearanceLevel","updatingAppearance","setUpdatingAppearance","showReviewConfirm","setShowReviewConfirm","reviewDays","setReviewDays","confirmingReview","setConfirmingReview","showRemoveReview","setShowRemoveReview","removeDays","setRemoveDays","removingReview","setRemovingReview","getAppearanceLevelColor","level","formatText","lines","elements","inCodeBlock","codeBlockContent","codeLanguage","startsWith","imageMatch","altText","imageUrl","processedLine","listItem","orderedListMatch","parseMarkdown","handleDelete","handleSave","handleCancel","getProficiencyText","新值","newLevel","当前prop值","当前本地状态值","handleAppearanceLevelChange","background","toggleAnswer","formatCode","nextReviewDate","right","bottom","justifyContent","alignItems","zIndex","padding","QuestionAccordion","isExpanded","onToggle","viewMode","isDragging","isDragOver","onDragStart","onDragEnd","canDrag","getDifficultyBorderColor","getDifficultyBackgroundColor","getProficiencyColor","getProficiencyIcon","getAnswerPreview","answerText","draggable","borderLeft","border","CategoryDetailPage","useParams","setCategory","allCategories","setAllCategories","expandedQuestions","setExpandedQuestions","setViewMode","draggingQuestion","setDraggingQuestion","dragOverQuestion","setDragOverQuestion","loadMoreTriggerRef","containerRef","handleScrollToQuestion","questionElement","block","boxShadow","toggleQuestion","loadCategoryInfo","loadAllCategories","formattedQuestions","getCategoryWithQuestions","fetchNextPage","hasNextPage","isFetchingNextPage","refetch","useInfiniteQuery","pageParam","addAscending","addDescending","getQuestionsByCategory","dataLength","nextPage","getNextPageParam","lastPage","allPages","initialPageParam","pages","flatMap","acc","some","sortedQuestions","sorted","localeCompare","difficultyOrder","handleScroll","container","scrollTop","clientHeight","distanceFromBottom","shouldLoad","debouncedScroll","debounce","func","timeout","args","later","observer","IntersectionObserver","isIntersecting","threshold","root","rootMargin","observe","disconnect","deleteQuestionMutation","useMutation","mutationFn","invalidateQueries","onError","updateQuestionMutation","handleAddQuestion","handleEditQuestion","handleDeleteQuestion","questionToDelete","mutate","handleUpdateQuestionField","mutateAsync","handleBack","handleDragEnd","opacity","handleRetry","gap","borderRadius","fontSize","fontWeight","cursor","transition","textDecoration","fontFamily","expandAllQuestions","allQuestionIds","collapseAllQuestions","marginTop","handleManualLoadMore","marginLeft","marginBottom","virtualItem","measureElement","handleDragStart","effectAllowed","setData","dropEffect","targetQuestionId","fromIndex","findIndex","toIndex","newQuestions","movedQuestion","splice","textAlign","fontStyle","handleQuestionCategoryChange","UserService","username","password","email","setUsername","setPassword","setEmail","signUp","logIn","getCurrentUser","UserTestPanel","setTestData","register","nickname","login","checkCurrentUser","updateTestData","section","logOut","required","DataMigrationService","setupAdminUser","getEmail","migrateCategoriesToCurrentUser","doesNotExist","migratedCount","migrated","migrateQuestionsToCurrentUser","performFullMigration","adminUser","categoryResult","questionResult","checkMigrationStatus","orphanCategories","orphanQuestions","migrationNeeded","migrateQuestionCreatedBy","performQuestionMigrationOnly","DataMigrationPanel","migrationStatus","setMigrationStatus","migrationResult","setMigrationResult","TestPage","Navigation","onShowAuthModal","showUserMenu","setShowUserMenu","userMenuRef","handleAvatarUpdate","freshUser","isAuthorizedEmail","UserAvatar","avatar","fallbackText","toUpperCase","avatarUrl","getAvatarUrl","getTime","onLoad","nextSibling","objectFit","objectPosition","Link","to","handleUserMenuToggle","AuthModal","defaultTab","onAuthSuccess","loginUsername","loginPassword","registerUsername","registerEmail","registerPassword","registerConfirmPassword","isWechatLoading","setIsWechatLoading","UserSettingsModal","avatarFile","setAvatarFile","avatarPreview","setAvatarPreview","studyStats","setStudyStats","todayReviewed","profileForm","setProfileForm","bio","passwordForm","setPasswordForm","currentPassword","newPassword","confirmPassword","preferencesForm","setPreferencesForm","theme","language","notifications","emailUpdates","securityForm","setSecurityForm","emailVerified","loadUserData","loadStudyStats","categoriesQuery","questionsQuery","showMessage","formType","reader","FileReader","onload","readAsDataURL","fileData","base64Data","onerror","fileName","mimeType","avatarUrlWithCacheBust","updatedUser","fetchError","requestEmailVerify","updatePassword","minLength","requestPasswordReset","exportData","exportTime","dataStr","dataBlob","Blob","createObjectURL","link","createElement","download","appendChild","removeChild","revokeObjectURL","ReviewPage","PWAInstallPrompt","deferredPrompt","setDeferredPrompt","showPrompt","setShowPrompt","handleBeforeInstallPrompt","maxWidth","prompt","outcome","userChoice","handleDismiss","OfflineQuestionDetailCard","onBack","onNavigateToQuestion","currentQuestion","setCurrentQuestion","currentIndex","setCurrentIndex","loadOfflineQuestions","targetQuestion","targetIndex","goToPrevious","newIndex","goToNext","OfflineQuestionsPage","setFilteredQuestions","handleBackToList","newQuestionId","back","toLocaleString","projectId","clientEmail","hasPrivateKey","refetchOnWindowFocus","gcTime","isAuthModalOpen","setIsAuthModalOpen","authModalTab","setAuthModalTab","isUserSettingsOpen","setIsUserSettingsOpen","userSettingsTab","setUserSettingsTab","handleShowAuthModal","handleShowUserSettings","Router","Routes","Route","path","element","handleAuthSuccess","ReactDOM","getElementById","render","App","contentType","registration","serviceWorker"],"sourceRoot":""}